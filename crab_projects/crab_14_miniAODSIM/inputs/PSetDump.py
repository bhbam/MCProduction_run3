import FWCore.ParameterSet.Config as cms

process = cms.Process("PAT")

process.source = cms.Source("PoolSource",
    fileNames = cms.untracked.vstring('file:root://cmseos.fnal.gov//store/group/lpcml/rchudasa/MCGenerationRun3/HToAATo4Tau_hadronic_tauDecay_M3p7_Run3_2023/3p7_AODSIM_newBigProd/250113_144409/0000/step3_AODSIM_2.root'),
    secondaryFileNames = cms.untracked.vstring()
)
process.AODEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(31457280),
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*'
     ) )
)

process.AODSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(31457280),
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackMCMatch_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*'
     ) ),
    overrideInputFileSplitLevels = cms.untracked.bool(True)
)

process.AnomalousCellParameters = cms.PSet(
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999)
)

process.BeamSpotAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_offlineBeamSpot_*_*')
)

process.BeamSpotFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_offlineBeamSpot_*_*')
)

process.BeamSpotRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_offlineBeamSpot_*_*')
)

process.CommonEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_logErrorHarvester_*_*')
)

process.CondDB = cms.PSet(
    DBParameters = cms.PSet(
        authenticationPath = cms.untracked.string(''),
        authenticationSystem = cms.untracked.int32(0),
        connectionTimeout = cms.untracked.int32(0),
        messageLevel = cms.untracked.int32(0),
        security = cms.untracked.string('')
    ),
    connect = cms.string('')
)

process.CondDBTauConnection = cms.PSet(
    DBParameters = cms.PSet(
        authenticationPath = cms.untracked.string(''),
        authenticationSystem = cms.untracked.int32(0),
        connectionTimeout = cms.untracked.int32(0),
        messageLevel = cms.untracked.int32(0),
        security = cms.untracked.string('')
    ),
    connect = cms.string('frontier://FrontierProd/CMS_CONDITIONS')
)

process.DATAMIXEREventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep CSCDetIdCSCALCTDigiMuonDigiCollection_muonCSCDigis_MuonCSCALCTDigi_*',
        'keep CSCDetIdCSCCLCTDigiMuonDigiCollection_muonCSCDigis_MuonCSCCLCTDigi_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_muonCSCDigis_MuonCSCComparatorDigi_*',
        'keep CSCDetIdCSCCorrelatedLCTDigiMuonDigiCollection_csctfDigis_*_*',
        'keep CSCDetIdCSCCorrelatedLCTDigiMuonDigiCollection_muonCSCDigis_MuonCSCCorrelatedLCTDigi_*',
        'keep CSCDetIdCSCRPCDigiMuonDigiCollection_muonCSCDigis_MuonCSCRPCDigi_*',
        'keep CSCDetIdCSCStripDigiMuonDigiCollection_muonCSCDigis_MuonCSCStripDigi_*',
        'keep CSCDetIdCSCWireDigiMuonDigiCollection_muonCSCDigis_MuonCSCWireDigi_*',
        'keep DTLayerIdDTDigiMuonDigiCollection_muonDTDigis_*_*',
        'keep PixelDigiedmDetSetVector_siPixelDigis_*_*',
        'keep SiStripDigiedmDetSetVector_siStripDigis_*_*',
        'keep RPCDetIdRPCDigiMuonDigiCollection_muonRPCDigis_*_*',
        'keep HBHEDataFramesSorted_hcalDigis_*_*',
        'keep HFDataFramesSorted_hcalDigis_*_*',
        'keep HODataFramesSorted_hcalDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_*_*',
        'keep QIE11DataFrameHcalDataFrameContainer_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep CastorDataFramesSorted_castorDigis_*_*',
        'keep EBDigiCollection_ecalDigis_*_*',
        'keep EEDigiCollection_ecalDigis_*_*',
        'keep ESDigiCollection_ecalPreshowerDigis_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.DQMEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_MEtoEDMConverter_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.DigiToRawFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*'
    )
)

process.EmptyCutBased_wp = cms.PSet(
    Pt010_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt010_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt010_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt010_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt010_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt010_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt1020_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt1020_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt1020_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt1020_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt1020_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt1020_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt2030_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt2030_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt2030_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt2030_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt2030_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt2030_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt3040_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt3040_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt3040_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt3040_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt3040_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt3040_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt4050_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt4050_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt4050_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt4050_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt4050_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt4050_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0)
)

process.EvtScalersAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*'
    )
)

process.EvtScalersRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*'
    )
)

process.FASTPUEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_fastSimProducer_*_*',
        'keep *_MuonSimHits_*_*',
        'drop *_fastSimProducer_VertexTypes_*',
        'keep *_generalTracksBeforeMixing_*_*',
        'drop *_generalTracksBeforeMixing_MVAValues_*',
        'drop *_generalTracksBeforeMixing_QualityMasks_*',
        'keep edmHepMCProduct_generatorSmeared_*_*'
    )
)

process.FEVTDEBUGEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep *_muonGEMDigis_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackingParticles_*_*',
        'keep *_prunedDigiSimLinks_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_simCscTriggerPrimitiveDigis_*_*',
        'keep *_simDtTriggerPrimitiveDigis_*_*',
        'keep *_simRpcTriggerDigis_*_*',
        'keep *_simRctDigis_*_*',
        'keep *_simCsctfDigis_*_*',
        'keep *_simCsctfTrackDigis_*_*',
        'keep *_simDttfDigis_*_*',
        'keep *_simGctDigis_*_*',
        'keep *_simCaloStage1Digis_*_*',
        'keep *_simCaloStage1FinalDigis_*_*',
        'keep *_simCaloStage2Layer1Digis_*_*',
        'keep *_simCaloStage2Digis_*_*',
        'keep *_simGmtDigis_*_*',
        'keep *_simBmtfDigis_*_*',
        'keep *_simKBmtfDigis_*_*',
        'keep *_simOmtfDigis_*_*',
        'keep *_simEmtfDigis_*_*',
        'keep *_simGmtStage2Digis_*_*',
        'keep *_simGtDigis_*_*',
        'keep *_simGtStage2Digis_*_*',
        'keep *_cscTriggerPrimitiveDigis_*_*',
        'keep *_dtTriggerPrimitiveDigis_*_*',
        'keep *_rpcTriggerDigis_*_*',
        'keep *_rctDigis_*_*',
        'keep *_csctfDigis_*_*',
        'keep *_csctfTrackDigis_*_*',
        'keep *_dttfDigis_*_*',
        'keep *_gctDigis_*_*',
        'keep *_gmtDigis_*_*',
        'keep *_gtDigis_*_*',
        'keep *_gtEvmDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'keep *_simEmtfShowers_*_*',
        'keep *_simGmtShowerDigis_*_*',
        'keep *_simMuonGEMPadDigis_*_*',
        'keep *_simMuonGEMPadDigiClusters_*_*',
        'drop *_trackingtruthprod_*_*',
        'drop *_electrontruth_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep *_simSiPixelDigis_*_*',
        'keep *_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_trackingParticleRecoTrackAsssociation_*_*',
        'keep *_assoc2secStepTk_*_*',
        'keep *_assoc2thStepTk_*_*',
        'keep *_assoc2GsfTracks_*_*',
        'keep *_assocOutInConversionTracks_*_*',
        'keep *_assocInOutConversionTracks_*_*',
        'keep *_TTClusterAssociatorFromPixelDigis_*_*',
        'keep *_TTStubAssociatorFromPixelDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonDTDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *_simMuonGEMDigis_*_*',
        'keep *_simEcalDigis_*_*',
        'keep *_simEcalPreshowerDigis_*_*',
        'keep *_simEcalTriggerPrimitiveDigis_*_*',
        'keep *_simEcalEBTriggerPrimitiveDigis_*_*',
        'keep *_simHcalDigis_*_*',
        'keep ZDCDataFramesSorted_simHcalUnsuppressedDigis_*_*',
        'drop ZDCDataFramesSorted_mix_simHcalUnsuppressedDigis*_*',
        'keep *_simHcalTriggerPrimitiveDigis_*_*',
        'keep *_mix_HcalSamples_*',
        'keep *_mixData_HcalSamples_*',
        'keep *_mix_HcalHits_*',
        'keep *_mixData_HcalHits_*',
        'keep *_DMHcalTriggerPrimitiveDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.FEVTDEBUGHLTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep *_muonGEMDigis_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackingParticles_*_*',
        'keep *_prunedDigiSimLinks_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_simCscTriggerPrimitiveDigis_*_*',
        'keep *_simDtTriggerPrimitiveDigis_*_*',
        'keep *_simRpcTriggerDigis_*_*',
        'keep *_simRctDigis_*_*',
        'keep *_simCsctfDigis_*_*',
        'keep *_simCsctfTrackDigis_*_*',
        'keep *_simDttfDigis_*_*',
        'keep *_simGctDigis_*_*',
        'keep *_simCaloStage1Digis_*_*',
        'keep *_simCaloStage1FinalDigis_*_*',
        'keep *_simCaloStage2Layer1Digis_*_*',
        'keep *_simCaloStage2Digis_*_*',
        'keep *_simGmtDigis_*_*',
        'keep *_simBmtfDigis_*_*',
        'keep *_simKBmtfDigis_*_*',
        'keep *_simOmtfDigis_*_*',
        'keep *_simEmtfDigis_*_*',
        'keep *_simGmtStage2Digis_*_*',
        'keep *_simGtDigis_*_*',
        'keep *_simGtStage2Digis_*_*',
        'keep *_cscTriggerPrimitiveDigis_*_*',
        'keep *_dtTriggerPrimitiveDigis_*_*',
        'keep *_rpcTriggerDigis_*_*',
        'keep *_rctDigis_*_*',
        'keep *_csctfDigis_*_*',
        'keep *_csctfTrackDigis_*_*',
        'keep *_dttfDigis_*_*',
        'keep *_gctDigis_*_*',
        'keep *_gmtDigis_*_*',
        'keep *_gtDigis_*_*',
        'keep *_gtEvmDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'keep *_simEmtfShowers_*_*',
        'keep *_simGmtShowerDigis_*_*',
        'keep *_simMuonGEMPadDigis_*_*',
        'keep *_simMuonGEMPadDigiClusters_*_*',
        'drop *_trackingtruthprod_*_*',
        'drop *_electrontruth_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep *_simSiPixelDigis_*_*',
        'keep *_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_trackingParticleRecoTrackAsssociation_*_*',
        'keep *_assoc2secStepTk_*_*',
        'keep *_assoc2thStepTk_*_*',
        'keep *_assoc2GsfTracks_*_*',
        'keep *_assocOutInConversionTracks_*_*',
        'keep *_assocInOutConversionTracks_*_*',
        'keep *_TTClusterAssociatorFromPixelDigis_*_*',
        'keep *_TTStubAssociatorFromPixelDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonDTDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *_simMuonGEMDigis_*_*',
        'keep *_simEcalDigis_*_*',
        'keep *_simEcalPreshowerDigis_*_*',
        'keep *_simEcalTriggerPrimitiveDigis_*_*',
        'keep *_simEcalEBTriggerPrimitiveDigis_*_*',
        'keep *_simHcalDigis_*_*',
        'keep ZDCDataFramesSorted_simHcalUnsuppressedDigis_*_*',
        'drop ZDCDataFramesSorted_mix_simHcalUnsuppressedDigis*_*',
        'keep *_simHcalTriggerPrimitiveDigis_*_*',
        'keep *_mix_HcalSamples_*',
        'keep *_mixData_HcalSamples_*',
        'keep *_mix_HcalHits_*',
        'keep *_mixData_HcalHits_*',
        'keep *_DMHcalTriggerPrimitiveDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlcaPixelClusterCounts_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltDeepBLifetimeTagInfosPF_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfosCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfos_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDeepSecondaryVertexTagInfosPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfElectrons_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltElectronsVertex_*_*',
        'keep *_hltFEDSelectorGEM_*_*',
        'keep *_hltFEDSelectorTCDS_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3Associator_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltGtStage2ObjectMap_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltImpactParameterTagInfos_*_*',
        'keep *_hltInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*',
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter2ForElectronsMerged_*_*',
        'keep *_hltIter2MergedForDisplaced_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonAndMuonFromL1Merged_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltMergedTracksForBTag_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFJetForPNetAK8_*_*',
        'keep *_hltPFMETNoMuProducer_*_*',
        'keep *_hltPFMETProducer_*_*',
        'keep *_hltPFMETTypeOne_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPPSCalibrationRaw_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTagsAK8_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTags_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelector8CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusterizerForRawPrime_*_*',
        'keep *_hltSiStripClusters2ApproxClusters_*_*',
        'keep *_hltSiStripClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_*_MergedTrackTruth_*',
        'keep *_*_StripDigiSimLink_*',
        'keep *_*_PixelDigiSimLink_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.FEVTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep *_muonGEMDigis_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.FEVTHLTALLEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep *_muonGEMDigis_*_*',
        'keep *_*_*_HLT'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.FEVTSIMEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep *_muonGEMDigis_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackingParticles_*_*',
        'keep *_prunedDigiSimLinks_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.GENEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep *_externalLHEProducer_LHEScriptOutput_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_randomEngineStateProducer_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.GENRAWEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackingParticles_*_*',
        'keep *_prunedDigiSimLinks_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep recoGenMETs_*_*_*',
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_logErrorHarvester_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.GeneratorInterfaceAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*'
    )
)

process.GeneratorInterfaceLHE = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep *_externalLHEProducer_LHEScriptOutput_*'
    )
)

process.GeneratorInterfaceRAW = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*'
    )
)

process.GeneratorInterfaceRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*'
    )
)

process.HFNose_noise_fC = cms.PSet(
    doseMap = cms.string(''),
    scaleByDose = cms.bool(False),
    scaleByDoseAlgo = cms.uint32(0),
    scaleByDoseFactor = cms.double(1),
    values = cms.vdouble(0.336430626, 0.336430626, 0.256328096)
)

process.HFRecalParameterBlock = cms.PSet(
    HFdepthOneParameterA = cms.vdouble(
        0.004123, 0.00602, 0.008201, 0.010489, 0.013379,
        0.016997, 0.021464, 0.027371, 0.034195, 0.044807,
        0.058939, 0.125497
    ),
    HFdepthOneParameterB = cms.vdouble(
        -4e-06, -2e-06, 0.0, 4e-06, 1.5e-05,
        2.6e-05, 6.3e-05, 8.4e-05, 0.00016, 0.000107,
        0.000425, 0.000209
    ),
    HFdepthTwoParameterA = cms.vdouble(
        0.002861, 0.004168, 0.0064, 0.008388, 0.011601,
        0.014425, 0.018633, 0.023232, 0.028274, 0.035447,
        0.051579, 0.086593
    ),
    HFdepthTwoParameterB = cms.vdouble(
        -2e-06, -0.0, -7e-06, -6e-06, -2e-06,
        1e-06, 1.9e-05, 3.1e-05, 6.7e-05, 1.2e-05,
        0.000157, -3e-06
    )
)

process.HGCAL_cceParams_toUse = cms.PSet(
    cceParamFine = cms.vdouble(3500000000000000.0, 10.31, -0.2635),
    cceParamThick = cms.vdouble(300000000000000.0, 10.16, -0.2823),
    cceParamThin = cms.vdouble(900000000000000.0, 8.99, -0.241)
)

process.HGCAL_chargeCollectionEfficiencies = cms.PSet(
    values = cms.vdouble(1.0, 1.0, 1.0)
)

process.HGCAL_ileakParam_toUse = cms.PSet(
    ileakParam = cms.vdouble(0.993, -42.668)
)

process.HGCAL_noise_fC = cms.PSet(
    doseMap = cms.string(''),
    scaleByDose = cms.bool(False),
    scaleByDoseAlgo = cms.uint32(0),
    scaleByDoseFactor = cms.double(1),
    values = cms.vdouble(0.336430626, 0.336430626, 0.256328096)
)

process.HGCAL_noise_heback = cms.PSet(
    doseMap = cms.string(''),
    noise_MIP = cms.double(0.01),
    referenceIdark = cms.double(-1),
    referenceXtalk = cms.double(-1),
    scaleByDose = cms.bool(False),
    scaleByDoseAlgo = cms.uint32(0),
    scaleByDoseFactor = cms.double(1),
    sipmMap = cms.string('')
)

process.HGCAL_noises = cms.PSet(
    values = cms.vdouble(2100.0, 2100.0, 1600.0)
)

process.HLTDEBUGEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_logErrorHarvester_*_*',
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlcaPixelClusterCounts_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltDeepBLifetimeTagInfosPF_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfosCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfos_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDeepSecondaryVertexTagInfosPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfElectrons_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltElectronsVertex_*_*',
        'keep *_hltFEDSelectorGEM_*_*',
        'keep *_hltFEDSelectorTCDS_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3Associator_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltGtStage2ObjectMap_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltImpactParameterTagInfos_*_*',
        'keep *_hltInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*',
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter2ForElectronsMerged_*_*',
        'keep *_hltIter2MergedForDisplaced_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonAndMuonFromL1Merged_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltMergedTracksForBTag_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFJetForPNetAK8_*_*',
        'keep *_hltPFMETNoMuProducer_*_*',
        'keep *_hltPFMETProducer_*_*',
        'keep *_hltPFMETTypeOne_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPPSCalibrationRaw_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTagsAK8_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTags_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelector8CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusterizerForRawPrime_*_*',
        'keep *_hltSiStripClusters2ApproxClusters_*_*',
        'keep *_hltSiStripClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.HLTDebugFEVT = cms.PSet(
    outputCommands = cms.vstring(
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlcaPixelClusterCounts_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltDeepBLifetimeTagInfosPF_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfosCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfos_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDeepSecondaryVertexTagInfosPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfElectrons_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltElectronsVertex_*_*',
        'keep *_hltFEDSelectorGEM_*_*',
        'keep *_hltFEDSelectorTCDS_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3Associator_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltGtStage2ObjectMap_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltImpactParameterTagInfos_*_*',
        'keep *_hltInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*',
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter2ForElectronsMerged_*_*',
        'keep *_hltIter2MergedForDisplaced_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonAndMuonFromL1Merged_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltMergedTracksForBTag_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFJetForPNetAK8_*_*',
        'keep *_hltPFMETNoMuProducer_*_*',
        'keep *_hltPFMETProducer_*_*',
        'keep *_hltPFMETTypeOne_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPPSCalibrationRaw_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTagsAK8_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTags_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelector8CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusterizerForRawPrime_*_*',
        'keep *_hltSiStripClusters2ApproxClusters_*_*',
        'keep *_hltSiStripClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    )
)

process.HLTDebugRAW = cms.PSet(
    outputCommands = cms.vstring(
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlcaPixelClusterCounts_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltDeepBLifetimeTagInfosPF_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfosCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfos_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDeepSecondaryVertexTagInfosPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfElectrons_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltElectronsVertex_*_*',
        'keep *_hltFEDSelectorGEM_*_*',
        'keep *_hltFEDSelectorTCDS_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3Associator_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltGtStage2ObjectMap_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltImpactParameterTagInfos_*_*',
        'keep *_hltInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*',
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter2ForElectronsMerged_*_*',
        'keep *_hltIter2MergedForDisplaced_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonAndMuonFromL1Merged_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltMergedTracksForBTag_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFJetForPNetAK8_*_*',
        'keep *_hltPFMETNoMuProducer_*_*',
        'keep *_hltPFMETProducer_*_*',
        'keep *_hltPFMETTypeOne_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPPSCalibrationRaw_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTagsAK8_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTags_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelector8CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusterizerForRawPrime_*_*',
        'keep *_hltSiStripClusters2ApproxClusters_*_*',
        'keep *_hltSiStripClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    )
)

process.HLTONLYEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'drop  FEDRawDataCollection_rawDataCollector_*_*',
        'drop  FEDRawDataCollection_source_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.HLTONLYSIMEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'drop  FEDRawDataCollection_rawDataCollector_*_*',
        'drop  FEDRawDataCollection_source_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.HLTScouting = cms.PSet(
    outputCommands = cms.vstring(
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    )
)

process.HLTriggerAOD = cms.PSet(
    outputCommands = cms.vstring(
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    )
)

process.HLTriggerRAW = cms.PSet(
    outputCommands = cms.vstring(
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    )
)

process.HLTriggerRECO = cms.PSet(
    outputCommands = cms.vstring(
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    )
)

process.IOMCRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_randomEngineStateProducer_*_*')
)

process.L1TriggerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*'
    )
)

process.L1TriggerFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_simCscTriggerPrimitiveDigis_*_*',
        'keep *_simDtTriggerPrimitiveDigis_*_*',
        'keep *_simRpcTriggerDigis_*_*',
        'keep *_simRctDigis_*_*',
        'keep *_simCsctfDigis_*_*',
        'keep *_simCsctfTrackDigis_*_*',
        'keep *_simDttfDigis_*_*',
        'keep *_simGctDigis_*_*',
        'keep *_simCaloStage1Digis_*_*',
        'keep *_simCaloStage1FinalDigis_*_*',
        'keep *_simCaloStage2Layer1Digis_*_*',
        'keep *_simCaloStage2Digis_*_*',
        'keep *_simGmtDigis_*_*',
        'keep *_simBmtfDigis_*_*',
        'keep *_simKBmtfDigis_*_*',
        'keep *_simOmtfDigis_*_*',
        'keep *_simEmtfDigis_*_*',
        'keep *_simGmtStage2Digis_*_*',
        'keep *_simGtDigis_*_*',
        'keep *_simGtStage2Digis_*_*',
        'keep *_cscTriggerPrimitiveDigis_*_*',
        'keep *_dtTriggerPrimitiveDigis_*_*',
        'keep *_rpcTriggerDigis_*_*',
        'keep *_rctDigis_*_*',
        'keep *_csctfDigis_*_*',
        'keep *_csctfTrackDigis_*_*',
        'keep *_dttfDigis_*_*',
        'keep *_gctDigis_*_*',
        'keep *_gmtDigis_*_*',
        'keep *_gtDigis_*_*',
        'keep *_gtEvmDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'keep *_simEmtfShowers_*_*',
        'keep *_simGmtShowerDigis_*_*',
        'keep *_simMuonGEMPadDigis_*_*',
        'keep *_simMuonGEMPadDigiClusters_*_*'
    )
)

process.L1TriggerRAW = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*'
    )
)

process.L1TriggerRAWDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*'
    )
)

process.L1TriggerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*'
    )
)

process.LHEEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep *_externalLHEProducer_LHEScriptOutput_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.METSignificanceParams = cms.PSet(
    dRMatch = cms.double(0.4),
    jetThreshold = cms.double(15),
    jeta = cms.vdouble(0.8, 1.3, 1.9, 2.5),
    jpar = cms.vdouble(1.39, 1.26, 1.21, 1.23, 1.28),
    pjpar = cms.vdouble(-0.2586, 0.6173)
)

process.METSignificance_params = cms.PSet(
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    EB_PhiResPar = cms.vdouble(0.00502),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    EE_PhiResPar = cms.vdouble(0.02511),
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    HB_PhiResPar = cms.vdouble(0.02511),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    HE_PhiResPar = cms.vdouble(0.02511),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    HF_PhiResPar = cms.vdouble(0.05022),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    HO_PhiResPar = cms.vdouble(0.02511),
    PF_EtResType1 = cms.vdouble(0.05, 0, 0),
    PF_EtResType2 = cms.vdouble(0.05, 0, 0),
    PF_EtResType3 = cms.vdouble(0.05, 0, 0),
    PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
    PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
    PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
    PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
    PF_PhiResType1 = cms.vdouble(0.002),
    PF_PhiResType2 = cms.vdouble(0.002),
    PF_PhiResType3 = cms.vdouble(0.002),
    PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
    PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
    PF_PhiResType6 = cms.vdouble(0.02511),
    PF_PhiResType7 = cms.vdouble(0.02511),
    jdphi0 = cms.vdouble(
        0.034, 0.034, 0.034, 0.034, 0.032,
        0.031, 0.028, 0.027, 0.027, 0.027
    ),
    jdphi1 = cms.vdouble(
        0.034, 0.035, 0.035, 0.035, 0.035,
        0.034, 0.031, 0.03, 0.029, 0.027
    ),
    jdphi2 = cms.vdouble(
        0.04, 0.04, 0.04, 0.04, 0.04,
        0.038, 0.036, 0.035, 0.034, 0.033
    ),
    jdphi3 = cms.vdouble(
        0.042, 0.043, 0.044, 0.043, 0.041,
        0.039, 0.039, 0.036, 0.034, 0.031
    ),
    jdphi4 = cms.vdouble(
        0.042, 0.042, 0.043, 0.042, 0.038,
        0.036, 0.036, 0.033, 0.031, 0.031
    ),
    jdphi5 = cms.vdouble(
        0.069, 0.069, 0.064, 0.058, 0.053,
        0.049, 0.049, 0.043, 0.039, 0.04
    ),
    jdphi6 = cms.vdouble(
        0.084, 0.08, 0.072, 0.065, 0.066,
        0.06, 0.051, 0.049, 0.045, 0.045
    ),
    jdphi7 = cms.vdouble(
        0.077, 0.072, 0.059, 0.05, 0.045,
        0.042, 0.039, 0.039, 0.037, 0.031
    ),
    jdphi8 = cms.vdouble(
        0.059, 0.057, 0.051, 0.044, 0.038,
        0.035, 0.037, 0.032, 0.028, 0.028
    ),
    jdphi9 = cms.vdouble(
        0.062, 0.059, 0.053, 0.047, 0.042,
        0.045, 0.036, 0.032, 0.034, 0.044
    ),
    jdpt0 = cms.vdouble(
        0.749, 0.829, 1.099, 1.355, 1.584,
        1.807, 2.035, 2.217, 2.378, 2.591
    ),
    jdpt1 = cms.vdouble(
        0.718, 0.813, 1.133, 1.384, 1.588,
        1.841, 2.115, 2.379, 2.508, 2.772
    ),
    jdpt2 = cms.vdouble(
        0.841, 0.937, 1.316, 1.605, 1.919,
        2.295, 2.562, 2.722, 2.943, 3.293
    ),
    jdpt3 = cms.vdouble(
        0.929, 1.04, 1.46, 1.74, 2.042,
        2.289, 2.639, 2.837, 2.946, 2.971
    ),
    jdpt4 = cms.vdouble(
        0.85, 0.961, 1.337, 1.593, 1.854,
        2.005, 2.209, 2.533, 2.812, 3.047
    ),
    jdpt5 = cms.vdouble(
        1.049, 1.149, 1.607, 1.869, 2.012,
        2.219, 2.289, 2.412, 2.695, 2.865
    ),
    jdpt6 = cms.vdouble(
        1.213, 1.298, 1.716, 2.015, 2.191,
        2.612, 2.863, 2.879, 2.925, 2.902
    ),
    jdpt7 = cms.vdouble(
        1.094, 1.139, 1.436, 1.672, 1.831,
        2.05, 2.267, 2.549, 2.785, 2.86
    ),
    jdpt8 = cms.vdouble(
        0.889, 0.939, 1.166, 1.365, 1.553,
        1.805, 2.06, 2.22, 2.268, 2.247
    ),
    jdpt9 = cms.vdouble(
        0.843, 0.885, 1.245, 1.665, 1.944,
        1.981, 1.972, 2.875, 3.923, 7.51
    ),
    ptresolthreshold = cms.double(10.0),
    resolutionsAlgo = cms.string('AK5PF'),
    resolutionsEra = cms.string('Spring10')
)

process.MEtoEDMConverterAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.MEtoEDMConverterFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_MEtoEDMConverter_*_*')
)

process.MEtoEDMConverterRECO = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.MINIAODEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(-900),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_slimmedPhotons_*_*',
        'keep *_slimmedOOTPhotons_*_*',
        'keep *_slimmedElectrons_*_*',
        'keep *_slimmedMuons_*_*',
        'keep recoTrackExtras_slimmedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep *_slimmedTaus_*_*',
        'keep *_slimmedTausBoosted_*_*',
        'keep *_slimmedCaloJets_*_*',
        'keep *_slimmedJPTJets_*_*',
        'keep *_slimmedJets_*_*',
        'keep recoBaseTagInfosOwned_slimmedJets_*_*',
        'keep *_slimmedJetsAK8_*_*',
        'drop recoBaseTagInfosOwned_slimmedJetsAK8_*_*',
        'keep *_slimmedJetsPuppi_*_*',
        'keep *_slimmedMETs_*_*',
        'keep *_slimmedMETsNoHF_*_*',
        'keep *_slimmedMETsPuppi_*_*',
        'keep *_slimmedSecondaryVertices_*_*',
        'keep *_slimmedLambdaVertices_*_*',
        'keep *_slimmedKshortVertices_*_*',
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*',
        'keep recoPhotonCores_reducedEgamma_*_*',
        'keep recoGsfElectronCores_reducedEgamma_*_*',
        'keep recoConversions_reducedEgamma_*_*',
        'keep recoSuperClusters_reducedEgamma_*_*',
        'keep recoCaloClusters_reducedEgamma_*_*',
        'keep EcalRecHitsSorted_reducedEgamma_*_*',
        'keep recoGsfTracks_reducedEgamma_*_*',
        'keep HBHERecHitsSorted_reducedEgamma_*_*',
        'keep *_slimmedHcalRecHits_*_*',
        'drop *_*_caloTowers_*',
        'drop *_*_pfCandidates_*',
        'drop *_*_genJets_*',
        'keep *_offlineBeamSpot_*_*',
        'keep *_offlineSlimmedPrimaryVertices_*_*',
        'keep *_offlineSlimmedPrimaryVerticesWithBS_*_*',
        'keep patPackedCandidates_packedPFCandidates_*_*',
        'keep *_isolatedTracks_*_*',
        'keep *_oniaPhotonCandidates_*_*',
        'keep *_bunchSpacingProducer_*_*',
        'keep double_fixedGridRhoAll__*',
        'keep double_fixedGridRhoFastjetAll__*',
        'keep double_fixedGridRhoFastjetAllTmp__*',
        'keep double_fixedGridRhoFastjetAllCalo__*',
        'keep double_fixedGridRhoFastjetCentral_*_*',
        'keep double_fixedGridRhoFastjetCentralCalo__*',
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*',
        'keep double_fixedGridRhoFastjetCentralNeutral__*',
        'keep *_slimmedPatTrigger_*_*',
        'keep patPackedTriggerPrescales_patTrigger__*',
        'keep patPackedTriggerPrescales_patTrigger_l1max_*',
        'keep patPackedTriggerPrescales_patTrigger_l1min_*',
        'keep *_l1extraParticles_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep GlobalExtBlkBXVector_simGtExtUnprefireable_*_*',
        'keep *_gtStage2Digis__*',
        'keep *_gmtStage2Digis_Muon_*',
        'keep *_caloStage2Digis_Jet_*',
        'keep *_caloStage2Digis_Tau_*',
        'keep *_caloStage2Digis_EGamma_*',
        'keep *_caloStage2Digis_EtSum_*',
        'keep *_TriggerResults_*_HLT',
        'keep *_TriggerResults_*_*',
        'keep patPackedCandidates_lostTracks_*_*',
        'keep HcalNoiseSummary_hcalnoise__*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTracks_displacedGlobalMuons__*',
        'keep recoTracks_displacedTracks__*',
        'keep *_prefiringweight_*_*',
        'keep *_slimmedLowPtElectrons_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep *_slimmedDisplacedMuons_*_*',
        'keep recoTrackExtras_slimmedDisplacedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'drop *_packedPFCandidates_hcalDepthEnergyFractions_*'
    )
)

process.MINIAODSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(-900),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_slimmedPhotons_*_*',
        'keep *_slimmedOOTPhotons_*_*',
        'keep *_slimmedElectrons_*_*',
        'keep *_slimmedMuons_*_*',
        'keep recoTrackExtras_slimmedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep *_slimmedTaus_*_*',
        'keep *_slimmedTausBoosted_*_*',
        'keep *_slimmedCaloJets_*_*',
        'keep *_slimmedJPTJets_*_*',
        'keep *_slimmedJets_*_*',
        'keep recoBaseTagInfosOwned_slimmedJets_*_*',
        'keep *_slimmedJetsAK8_*_*',
        'drop recoBaseTagInfosOwned_slimmedJetsAK8_*_*',
        'keep *_slimmedJetsPuppi_*_*',
        'keep *_slimmedMETs_*_*',
        'keep *_slimmedMETsNoHF_*_*',
        'keep *_slimmedMETsPuppi_*_*',
        'keep *_slimmedSecondaryVertices_*_*',
        'keep *_slimmedLambdaVertices_*_*',
        'keep *_slimmedKshortVertices_*_*',
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*',
        'keep recoPhotonCores_reducedEgamma_*_*',
        'keep recoGsfElectronCores_reducedEgamma_*_*',
        'keep recoConversions_reducedEgamma_*_*',
        'keep recoSuperClusters_reducedEgamma_*_*',
        'keep recoCaloClusters_reducedEgamma_*_*',
        'keep EcalRecHitsSorted_reducedEgamma_*_*',
        'keep recoGsfTracks_reducedEgamma_*_*',
        'keep HBHERecHitsSorted_reducedEgamma_*_*',
        'keep *_slimmedHcalRecHits_*_*',
        'drop *_*_caloTowers_*',
        'drop *_*_pfCandidates_*',
        'drop *_*_genJets_*',
        'keep *_offlineBeamSpot_*_*',
        'keep *_offlineSlimmedPrimaryVertices_*_*',
        'keep *_offlineSlimmedPrimaryVerticesWithBS_*_*',
        'keep patPackedCandidates_packedPFCandidates_*_*',
        'keep *_isolatedTracks_*_*',
        'keep *_oniaPhotonCandidates_*_*',
        'keep *_bunchSpacingProducer_*_*',
        'keep double_fixedGridRhoAll__*',
        'keep double_fixedGridRhoFastjetAll__*',
        'keep double_fixedGridRhoFastjetAllTmp__*',
        'keep double_fixedGridRhoFastjetAllCalo__*',
        'keep double_fixedGridRhoFastjetCentral_*_*',
        'keep double_fixedGridRhoFastjetCentralCalo__*',
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*',
        'keep double_fixedGridRhoFastjetCentralNeutral__*',
        'keep *_slimmedPatTrigger_*_*',
        'keep patPackedTriggerPrescales_patTrigger__*',
        'keep patPackedTriggerPrescales_patTrigger_l1max_*',
        'keep patPackedTriggerPrescales_patTrigger_l1min_*',
        'keep *_l1extraParticles_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep GlobalExtBlkBXVector_simGtExtUnprefireable_*_*',
        'keep *_gtStage2Digis__*',
        'keep *_gmtStage2Digis_Muon_*',
        'keep *_caloStage2Digis_Jet_*',
        'keep *_caloStage2Digis_Tau_*',
        'keep *_caloStage2Digis_EGamma_*',
        'keep *_caloStage2Digis_EtSum_*',
        'keep *_TriggerResults_*_HLT',
        'keep *_TriggerResults_*_*',
        'keep patPackedCandidates_lostTracks_*_*',
        'keep HcalNoiseSummary_hcalnoise__*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTracks_displacedGlobalMuons__*',
        'keep recoTracks_displacedTracks__*',
        'keep *_prefiringweight_*_*',
        'keep *_slimmedLowPtElectrons_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep *_slimmedDisplacedMuons_*_*',
        'keep recoTrackExtras_slimmedDisplacedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'drop *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'keep patPackedGenParticles_packedGenParticles_*_*',
        'keep recoGenParticles_prunedGenParticles_*_*',
        'keep *_packedPFCandidateToGenAssociation_*_*',
        'keep *_lostTracksToGenAssociation_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_*_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep recoGenParticles_genPUProtons_*_*',
        'keep *_slimmedGenJetsFlavourInfos_*_*',
        'keep *_slimmedGenJets__*',
        'keep *_slimmedGenJetsAK8__*',
        'keep *_slimmedGenJetsAK8SoftDropSubJets__*',
        'keep *_genMetTrue_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep GenRunInfoProduct_*_*_*',
        'keep *_genParticles_xyz0_*',
        'keep *_genParticles_t0_*',
        'keep PileupSummaryInfos_slimmedAddPileupInfo_*_*',
        'keep L1GtTriggerMenuLite_l1GtTriggerMenuLite__*'
    )
)

process.MINIGENEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(15728640),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep patPackedGenParticles_packedGenParticles_*_*',
        'keep recoGenParticles_prunedGenParticles_*_*',
        'keep *_packedPFCandidateToGenAssociation_*_*',
        'keep *_lostTracksToGenAssociation_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_*_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep recoGenParticles_genPUProtons_*_*',
        'keep *_slimmedGenJetsFlavourInfos_*_*',
        'keep *_slimmedGenJets__*',
        'keep *_slimmedGenJetsAK8__*',
        'keep *_slimmedGenJetsAK8SoftDropSubJets__*',
        'keep *_genMetTrue_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep GenRunInfoProduct_*_*_*',
        'keep *_genParticles_xyz0_*',
        'keep *_genParticles_t0_*'
    )
)

process.MIXINGMODULEEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_cfWriter_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.MicroEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_slimmedPhotons_*_*',
        'keep *_slimmedOOTPhotons_*_*',
        'keep *_slimmedElectrons_*_*',
        'keep *_slimmedMuons_*_*',
        'keep recoTrackExtras_slimmedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep *_slimmedTaus_*_*',
        'keep *_slimmedTausBoosted_*_*',
        'keep *_slimmedCaloJets_*_*',
        'keep *_slimmedJPTJets_*_*',
        'keep *_slimmedJets_*_*',
        'keep recoBaseTagInfosOwned_slimmedJets_*_*',
        'keep *_slimmedJetsAK8_*_*',
        'drop recoBaseTagInfosOwned_slimmedJetsAK8_*_*',
        'keep *_slimmedJetsPuppi_*_*',
        'keep *_slimmedMETs_*_*',
        'keep *_slimmedMETsNoHF_*_*',
        'keep *_slimmedMETsPuppi_*_*',
        'keep *_slimmedSecondaryVertices_*_*',
        'keep *_slimmedLambdaVertices_*_*',
        'keep *_slimmedKshortVertices_*_*',
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*',
        'keep recoPhotonCores_reducedEgamma_*_*',
        'keep recoGsfElectronCores_reducedEgamma_*_*',
        'keep recoConversions_reducedEgamma_*_*',
        'keep recoSuperClusters_reducedEgamma_*_*',
        'keep recoCaloClusters_reducedEgamma_*_*',
        'keep EcalRecHitsSorted_reducedEgamma_*_*',
        'keep recoGsfTracks_reducedEgamma_*_*',
        'keep HBHERecHitsSorted_reducedEgamma_*_*',
        'keep *_slimmedHcalRecHits_*_*',
        'drop *_*_caloTowers_*',
        'drop *_*_pfCandidates_*',
        'drop *_*_genJets_*',
        'keep *_offlineBeamSpot_*_*',
        'keep *_offlineSlimmedPrimaryVertices_*_*',
        'keep *_offlineSlimmedPrimaryVerticesWithBS_*_*',
        'keep patPackedCandidates_packedPFCandidates_*_*',
        'keep *_isolatedTracks_*_*',
        'keep *_oniaPhotonCandidates_*_*',
        'keep *_bunchSpacingProducer_*_*',
        'keep double_fixedGridRhoAll__*',
        'keep double_fixedGridRhoFastjetAll__*',
        'keep double_fixedGridRhoFastjetAllTmp__*',
        'keep double_fixedGridRhoFastjetAllCalo__*',
        'keep double_fixedGridRhoFastjetCentral_*_*',
        'keep double_fixedGridRhoFastjetCentralCalo__*',
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*',
        'keep double_fixedGridRhoFastjetCentralNeutral__*',
        'keep *_slimmedPatTrigger_*_*',
        'keep patPackedTriggerPrescales_patTrigger__*',
        'keep patPackedTriggerPrescales_patTrigger_l1max_*',
        'keep patPackedTriggerPrescales_patTrigger_l1min_*',
        'keep *_l1extraParticles_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep GlobalExtBlkBXVector_simGtExtUnprefireable_*_*',
        'keep *_gtStage2Digis__*',
        'keep *_gmtStage2Digis_Muon_*',
        'keep *_caloStage2Digis_Jet_*',
        'keep *_caloStage2Digis_Tau_*',
        'keep *_caloStage2Digis_EGamma_*',
        'keep *_caloStage2Digis_EtSum_*',
        'keep *_TriggerResults_*_HLT',
        'keep *_TriggerResults_*_*',
        'keep patPackedCandidates_lostTracks_*_*',
        'keep HcalNoiseSummary_hcalnoise__*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTracks_displacedGlobalMuons__*',
        'keep recoTracks_displacedTracks__*',
        'keep *_prefiringweight_*_*',
        'keep *_slimmedLowPtElectrons_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep *_slimmedDisplacedMuons_*_*',
        'keep recoTrackExtras_slimmedDisplacedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'drop *_packedPFCandidates_hcalDepthEnergyFractions_*'
    )
)

process.MicroEventContentGEN = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep patPackedGenParticles_packedGenParticles_*_*',
        'keep recoGenParticles_prunedGenParticles_*_*',
        'keep *_packedPFCandidateToGenAssociation_*_*',
        'keep *_lostTracksToGenAssociation_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_*_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep recoGenParticles_genPUProtons_*_*',
        'keep *_slimmedGenJetsFlavourInfos_*_*',
        'keep *_slimmedGenJets__*',
        'keep *_slimmedGenJetsAK8__*',
        'keep *_slimmedGenJetsAK8SoftDropSubJets__*',
        'keep *_genMetTrue_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep GenRunInfoProduct_*_*_*',
        'keep *_genParticles_xyz0_*',
        'keep *_genParticles_t0_*'
    )
)

process.MicroEventContentMC = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_slimmedPhotons_*_*',
        'keep *_slimmedOOTPhotons_*_*',
        'keep *_slimmedElectrons_*_*',
        'keep *_slimmedMuons_*_*',
        'keep recoTrackExtras_slimmedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep *_slimmedTaus_*_*',
        'keep *_slimmedTausBoosted_*_*',
        'keep *_slimmedCaloJets_*_*',
        'keep *_slimmedJPTJets_*_*',
        'keep *_slimmedJets_*_*',
        'keep recoBaseTagInfosOwned_slimmedJets_*_*',
        'keep *_slimmedJetsAK8_*_*',
        'drop recoBaseTagInfosOwned_slimmedJetsAK8_*_*',
        'keep *_slimmedJetsPuppi_*_*',
        'keep *_slimmedMETs_*_*',
        'keep *_slimmedMETsNoHF_*_*',
        'keep *_slimmedMETsPuppi_*_*',
        'keep *_slimmedSecondaryVertices_*_*',
        'keep *_slimmedLambdaVertices_*_*',
        'keep *_slimmedKshortVertices_*_*',
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*',
        'keep recoPhotonCores_reducedEgamma_*_*',
        'keep recoGsfElectronCores_reducedEgamma_*_*',
        'keep recoConversions_reducedEgamma_*_*',
        'keep recoSuperClusters_reducedEgamma_*_*',
        'keep recoCaloClusters_reducedEgamma_*_*',
        'keep EcalRecHitsSorted_reducedEgamma_*_*',
        'keep recoGsfTracks_reducedEgamma_*_*',
        'keep HBHERecHitsSorted_reducedEgamma_*_*',
        'keep *_slimmedHcalRecHits_*_*',
        'drop *_*_caloTowers_*',
        'drop *_*_pfCandidates_*',
        'drop *_*_genJets_*',
        'keep *_offlineBeamSpot_*_*',
        'keep *_offlineSlimmedPrimaryVertices_*_*',
        'keep *_offlineSlimmedPrimaryVerticesWithBS_*_*',
        'keep patPackedCandidates_packedPFCandidates_*_*',
        'keep *_isolatedTracks_*_*',
        'keep *_oniaPhotonCandidates_*_*',
        'keep *_bunchSpacingProducer_*_*',
        'keep double_fixedGridRhoAll__*',
        'keep double_fixedGridRhoFastjetAll__*',
        'keep double_fixedGridRhoFastjetAllTmp__*',
        'keep double_fixedGridRhoFastjetAllCalo__*',
        'keep double_fixedGridRhoFastjetCentral_*_*',
        'keep double_fixedGridRhoFastjetCentralCalo__*',
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*',
        'keep double_fixedGridRhoFastjetCentralNeutral__*',
        'keep *_slimmedPatTrigger_*_*',
        'keep patPackedTriggerPrescales_patTrigger__*',
        'keep patPackedTriggerPrescales_patTrigger_l1max_*',
        'keep patPackedTriggerPrescales_patTrigger_l1min_*',
        'keep *_l1extraParticles_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep GlobalExtBlkBXVector_simGtExtUnprefireable_*_*',
        'keep *_gtStage2Digis__*',
        'keep *_gmtStage2Digis_Muon_*',
        'keep *_caloStage2Digis_Jet_*',
        'keep *_caloStage2Digis_Tau_*',
        'keep *_caloStage2Digis_EGamma_*',
        'keep *_caloStage2Digis_EtSum_*',
        'keep *_TriggerResults_*_HLT',
        'keep *_TriggerResults_*_*',
        'keep patPackedCandidates_lostTracks_*_*',
        'keep HcalNoiseSummary_hcalnoise__*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTracks_displacedGlobalMuons__*',
        'keep recoTracks_displacedTracks__*',
        'keep *_prefiringweight_*_*',
        'keep *_slimmedLowPtElectrons_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep *_slimmedDisplacedMuons_*_*',
        'keep recoTrackExtras_slimmedDisplacedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'drop *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'keep patPackedGenParticles_packedGenParticles_*_*',
        'keep recoGenParticles_prunedGenParticles_*_*',
        'keep *_packedPFCandidateToGenAssociation_*_*',
        'keep *_lostTracksToGenAssociation_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_*_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep recoGenParticles_genPUProtons_*_*',
        'keep *_slimmedGenJetsFlavourInfos_*_*',
        'keep *_slimmedGenJets__*',
        'keep *_slimmedGenJetsAK8__*',
        'keep *_slimmedGenJetsAK8SoftDropSubJets__*',
        'keep *_genMetTrue_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep GenRunInfoProduct_*_*_*',
        'keep *_genParticles_xyz0_*',
        'keep *_genParticles_t0_*',
        'keep PileupSummaryInfos_slimmedAddPileupInfo_*_*',
        'keep L1GtTriggerMenuLite_l1GtTriggerMenuLite__*'
    )
)

process.NANOAODEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(9),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep nanoaodFlatTable_*Table_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep String_*_genModel_*',
        'keep nanoaodMergeableCounterTable_*Table_*_*',
        'keep nanoaodUniqueString_nanoMetadata_*_*'
    )
)

process.NANOAODGENEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(9),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep nanoaodFlatTable_*Table_*_*',
        'keep String_*_genModel_*',
        'keep nanoaodMergeableCounterTable_*Table_*_*',
        'keep nanoaodUniqueString_nanoMetadata_*_*'
    )
)

process.NANOAODSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(9),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep nanoaodFlatTable_*Table_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep String_*_genModel_*',
        'keep nanoaodMergeableCounterTable_*Table_*_*',
        'keep nanoaodUniqueString_nanoMetadata_*_*'
    )
)

process.NanoAODEDMEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep nanoaodFlatTable_*Table_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep String_*_genModel_*',
        'keep nanoaodMergeableCounterTable_*Table_*_*',
        'keep nanoaodUniqueString_nanoMetadata_*_*'
    )
)

process.OnlineMetaDataContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*'
    )
)

process.PFJetParameters = cms.PSet(
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(5.0),
    Rho_EtaMax = cms.double(4.4),
    applyWeight = cms.bool(False),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetPtMin = cms.double(5.0),
    jetType = cms.string('PFJet'),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("particleFlow"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)

process.PFRecoTauPFJetInputs = cms.PSet(
    inputJetCollection = cms.InputTag("ak4PFJets"),
    isolationConeSize = cms.double(0.5),
    jetConeSize = cms.double(0.5),
    maxJetAbsEta = cms.double(2.7),
    minJetPt = cms.double(14.0)
)

process.PFTauQualityCuts = cms.PSet(
    isolationQualityCuts = cms.PSet(
        maxDeltaZ = cms.double(0.2),
        maxDeltaZToLeadTrack = cms.double(-1.0),
        maxTrackChi2 = cms.double(100.0),
        maxTransverseImpactParameter = cms.double(0.03),
        minGammaEt = cms.double(1.5),
        minTrackHits = cms.uint32(8),
        minTrackPixelHits = cms.uint32(0),
        minTrackPt = cms.double(1.0),
        minTrackVertexWeight = cms.double(-1.0)
    ),
    leadingTrkOrPFCandOption = cms.string('leadPFCand'),
    primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
    pvFindingAlgo = cms.string('closestInDeltaZ'),
    recoverLeadingTrk = cms.bool(False),
    signalQualityCuts = cms.PSet(
        maxDeltaZ = cms.double(0.4),
        maxDeltaZToLeadTrack = cms.double(-1.0),
        maxTrackChi2 = cms.double(100.0),
        maxTransverseImpactParameter = cms.double(0.1),
        minGammaEt = cms.double(1.0),
        minNeutralHadronEt = cms.double(30.0),
        minTrackHits = cms.uint32(3),
        minTrackPixelHits = cms.uint32(0),
        minTrackPt = cms.double(0.5),
        minTrackVertexWeight = cms.double(-1.0)
    ),
    vertexTrackFiltering = cms.bool(False),
    vxAssocQualityCuts = cms.PSet(
        maxTrackChi2 = cms.double(100.0),
        maxTransverseImpactParameter = cms.double(0.1),
        minGammaEt = cms.double(1.0),
        minTrackHits = cms.uint32(3),
        minTrackPixelHits = cms.uint32(0),
        minTrackPt = cms.double(0.5),
        minTrackVertexWeight = cms.double(-1.0)
    )
)

process.PREMIXEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep *_simSiPixelDigis_*_*',
        'keep *_simSiStripDigis_ZeroSuppressed_*',
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*',
        'keep *_mix_AffectedAPVList_*',
        'keep EBDigiCollection_simEcalDigis_*_*',
        'keep EEDigiCollection_simEcalDigis_*_*',
        'keep ESDigiCollection_simEcalUnsuppressedDigis_*_*',
        'keep *_simHcalDigis_*_*',
        'keep *_mix_g4SimHitsMuonDTHits_*',
        'keep *_mix_g4SimHitsMuonCSCHits_*',
        'keep *_mix_g4SimHitsMuonRPCHits_*',
        'keep *_mix_g4SimHitsMuonGEMHits_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.PREMIXRAWEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackingParticles_*_*',
        'keep *_prunedDigiSimLinks_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'drop CrossingFramePlaybackInfoNew_mix_*_*',
        'keep *_*_MergedTrackTruth_*',
        'keep *_*_StripDigiSimLink_*',
        'keep *_*_PixelDigiSimLink_*',
        'keep *_*_MuonCSCStripDigiSimLinks_*',
        'keep *_*_MuonCSCWireDigiSimLinks_*',
        'keep *_*_RPCDigiSimLink_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_*_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWAODEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(31457280),
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*'
     ) )
)

process.RAWAODSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(20971520),
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackMCMatch_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep SimVertexs_g4SimHits_*_*'
     ) )
)

process.RAWDEBUGEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackingParticles_*_*',
        'keep *_prunedDigiSimLinks_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*',
        'drop *_trackingtruthprod_*_*',
        'drop *_electrontruth_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWDEBUGHLTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackingParticles_*_*',
        'keep *_prunedDigiSimLinks_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*',
        'drop *_trackingtruthprod_*_*',
        'drop *_electrontruth_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlcaPixelClusterCounts_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltDeepBLifetimeTagInfosPF_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfosCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfos_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDeepSecondaryVertexTagInfosPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfElectrons_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltElectronsVertex_*_*',
        'keep *_hltFEDSelectorGEM_*_*',
        'keep *_hltFEDSelectorTCDS_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3Associator_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltGtStage2ObjectMap_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltImpactParameterTagInfos_*_*',
        'keep *_hltInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*',
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter2ForElectronsMerged_*_*',
        'keep *_hltIter2MergedForDisplaced_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonAndMuonFromL1Merged_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltMergedTracksForBTag_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFJetForPNetAK8_*_*',
        'keep *_hltPFMETNoMuProducer_*_*',
        'keep *_hltPFMETProducer_*_*',
        'keep *_hltPFMETTypeOne_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPPSCalibrationRaw_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTagsAK8_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTags_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelector8CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusterizerForRawPrime_*_*',
        'keep *_hltSiStripClusters2ApproxClusters_*_*',
        'keep *_hltSiStripClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWMINIAODEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(20971520),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_slimmedPhotons_*_*',
        'keep *_slimmedOOTPhotons_*_*',
        'keep *_slimmedElectrons_*_*',
        'keep *_slimmedMuons_*_*',
        'keep recoTrackExtras_slimmedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep *_slimmedTaus_*_*',
        'keep *_slimmedTausBoosted_*_*',
        'keep *_slimmedCaloJets_*_*',
        'keep *_slimmedJPTJets_*_*',
        'keep *_slimmedJets_*_*',
        'keep recoBaseTagInfosOwned_slimmedJets_*_*',
        'keep *_slimmedJetsAK8_*_*',
        'drop recoBaseTagInfosOwned_slimmedJetsAK8_*_*',
        'keep *_slimmedJetsPuppi_*_*',
        'keep *_slimmedMETs_*_*',
        'keep *_slimmedMETsNoHF_*_*',
        'keep *_slimmedMETsPuppi_*_*',
        'keep *_slimmedSecondaryVertices_*_*',
        'keep *_slimmedLambdaVertices_*_*',
        'keep *_slimmedKshortVertices_*_*',
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*',
        'keep recoPhotonCores_reducedEgamma_*_*',
        'keep recoGsfElectronCores_reducedEgamma_*_*',
        'keep recoConversions_reducedEgamma_*_*',
        'keep recoSuperClusters_reducedEgamma_*_*',
        'keep recoCaloClusters_reducedEgamma_*_*',
        'keep EcalRecHitsSorted_reducedEgamma_*_*',
        'keep recoGsfTracks_reducedEgamma_*_*',
        'keep HBHERecHitsSorted_reducedEgamma_*_*',
        'keep *_slimmedHcalRecHits_*_*',
        'drop *_*_caloTowers_*',
        'drop *_*_pfCandidates_*',
        'drop *_*_genJets_*',
        'keep *_offlineBeamSpot_*_*',
        'keep *_offlineSlimmedPrimaryVertices_*_*',
        'keep *_offlineSlimmedPrimaryVerticesWithBS_*_*',
        'keep patPackedCandidates_packedPFCandidates_*_*',
        'keep *_isolatedTracks_*_*',
        'keep *_oniaPhotonCandidates_*_*',
        'keep *_bunchSpacingProducer_*_*',
        'keep double_fixedGridRhoAll__*',
        'keep double_fixedGridRhoFastjetAll__*',
        'keep double_fixedGridRhoFastjetAllTmp__*',
        'keep double_fixedGridRhoFastjetAllCalo__*',
        'keep double_fixedGridRhoFastjetCentral_*_*',
        'keep double_fixedGridRhoFastjetCentralCalo__*',
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*',
        'keep double_fixedGridRhoFastjetCentralNeutral__*',
        'keep *_slimmedPatTrigger_*_*',
        'keep patPackedTriggerPrescales_patTrigger__*',
        'keep patPackedTriggerPrescales_patTrigger_l1max_*',
        'keep patPackedTriggerPrescales_patTrigger_l1min_*',
        'keep *_l1extraParticles_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep GlobalExtBlkBXVector_simGtExtUnprefireable_*_*',
        'keep *_gtStage2Digis__*',
        'keep *_gmtStage2Digis_Muon_*',
        'keep *_caloStage2Digis_Jet_*',
        'keep *_caloStage2Digis_Tau_*',
        'keep *_caloStage2Digis_EGamma_*',
        'keep *_caloStage2Digis_EtSum_*',
        'keep *_TriggerResults_*_HLT',
        'keep *_TriggerResults_*_*',
        'keep patPackedCandidates_lostTracks_*_*',
        'keep HcalNoiseSummary_hcalnoise__*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTracks_displacedGlobalMuons__*',
        'keep recoTracks_displacedTracks__*',
        'keep *_prefiringweight_*_*',
        'keep *_slimmedLowPtElectrons_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep *_slimmedDisplacedMuons_*_*',
        'keep recoTrackExtras_slimmedDisplacedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'drop *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*'
    )
)

process.RAWMINIAODSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(20971520),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *',
        'keep *_slimmedPhotons_*_*',
        'keep *_slimmedOOTPhotons_*_*',
        'keep *_slimmedElectrons_*_*',
        'keep *_slimmedMuons_*_*',
        'keep recoTrackExtras_slimmedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep *_slimmedTaus_*_*',
        'keep *_slimmedTausBoosted_*_*',
        'keep *_slimmedCaloJets_*_*',
        'keep *_slimmedJPTJets_*_*',
        'keep *_slimmedJets_*_*',
        'keep recoBaseTagInfosOwned_slimmedJets_*_*',
        'keep *_slimmedJetsAK8_*_*',
        'drop recoBaseTagInfosOwned_slimmedJetsAK8_*_*',
        'keep *_slimmedJetsPuppi_*_*',
        'keep *_slimmedMETs_*_*',
        'keep *_slimmedMETsNoHF_*_*',
        'keep *_slimmedMETsPuppi_*_*',
        'keep *_slimmedSecondaryVertices_*_*',
        'keep *_slimmedLambdaVertices_*_*',
        'keep *_slimmedKshortVertices_*_*',
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*',
        'keep recoPhotonCores_reducedEgamma_*_*',
        'keep recoGsfElectronCores_reducedEgamma_*_*',
        'keep recoConversions_reducedEgamma_*_*',
        'keep recoSuperClusters_reducedEgamma_*_*',
        'keep recoCaloClusters_reducedEgamma_*_*',
        'keep EcalRecHitsSorted_reducedEgamma_*_*',
        'keep recoGsfTracks_reducedEgamma_*_*',
        'keep HBHERecHitsSorted_reducedEgamma_*_*',
        'keep *_slimmedHcalRecHits_*_*',
        'drop *_*_caloTowers_*',
        'drop *_*_pfCandidates_*',
        'drop *_*_genJets_*',
        'keep *_offlineBeamSpot_*_*',
        'keep *_offlineSlimmedPrimaryVertices_*_*',
        'keep *_offlineSlimmedPrimaryVerticesWithBS_*_*',
        'keep patPackedCandidates_packedPFCandidates_*_*',
        'keep *_isolatedTracks_*_*',
        'keep *_oniaPhotonCandidates_*_*',
        'keep *_bunchSpacingProducer_*_*',
        'keep double_fixedGridRhoAll__*',
        'keep double_fixedGridRhoFastjetAll__*',
        'keep double_fixedGridRhoFastjetAllTmp__*',
        'keep double_fixedGridRhoFastjetAllCalo__*',
        'keep double_fixedGridRhoFastjetCentral_*_*',
        'keep double_fixedGridRhoFastjetCentralCalo__*',
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*',
        'keep double_fixedGridRhoFastjetCentralNeutral__*',
        'keep *_slimmedPatTrigger_*_*',
        'keep patPackedTriggerPrescales_patTrigger__*',
        'keep patPackedTriggerPrescales_patTrigger_l1max_*',
        'keep patPackedTriggerPrescales_patTrigger_l1min_*',
        'keep *_l1extraParticles_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep GlobalExtBlkBXVector_simGtExtUnprefireable_*_*',
        'keep *_gtStage2Digis__*',
        'keep *_gmtStage2Digis_Muon_*',
        'keep *_caloStage2Digis_Jet_*',
        'keep *_caloStage2Digis_Tau_*',
        'keep *_caloStage2Digis_EGamma_*',
        'keep *_caloStage2Digis_EtSum_*',
        'keep *_TriggerResults_*_HLT',
        'keep *_TriggerResults_*_*',
        'keep patPackedCandidates_lostTracks_*_*',
        'keep HcalNoiseSummary_hcalnoise__*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTracks_displacedGlobalMuons__*',
        'keep recoTracks_displacedTracks__*',
        'keep *_prefiringweight_*_*',
        'keep *_slimmedLowPtElectrons_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep *_slimmedDisplacedMuons_*_*',
        'keep recoTrackExtras_slimmedDisplacedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'drop *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep *_slimmedPhotons_*_*',
        'keep *_slimmedOOTPhotons_*_*',
        'keep *_slimmedElectrons_*_*',
        'keep *_slimmedMuons_*_*',
        'keep recoTrackExtras_slimmedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep *_slimmedTaus_*_*',
        'keep *_slimmedTausBoosted_*_*',
        'keep *_slimmedCaloJets_*_*',
        'keep *_slimmedJPTJets_*_*',
        'keep *_slimmedJets_*_*',
        'keep recoBaseTagInfosOwned_slimmedJets_*_*',
        'keep *_slimmedJetsAK8_*_*',
        'drop recoBaseTagInfosOwned_slimmedJetsAK8_*_*',
        'keep *_slimmedJetsPuppi_*_*',
        'keep *_slimmedMETs_*_*',
        'keep *_slimmedMETsNoHF_*_*',
        'keep *_slimmedMETsPuppi_*_*',
        'keep *_slimmedSecondaryVertices_*_*',
        'keep *_slimmedLambdaVertices_*_*',
        'keep *_slimmedKshortVertices_*_*',
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*',
        'keep recoPhotonCores_reducedEgamma_*_*',
        'keep recoGsfElectronCores_reducedEgamma_*_*',
        'keep recoConversions_reducedEgamma_*_*',
        'keep recoSuperClusters_reducedEgamma_*_*',
        'keep recoCaloClusters_reducedEgamma_*_*',
        'keep EcalRecHitsSorted_reducedEgamma_*_*',
        'keep recoGsfTracks_reducedEgamma_*_*',
        'keep HBHERecHitsSorted_reducedEgamma_*_*',
        'keep *_slimmedHcalRecHits_*_*',
        'drop *_*_caloTowers_*',
        'drop *_*_pfCandidates_*',
        'drop *_*_genJets_*',
        'keep *_offlineBeamSpot_*_*',
        'keep *_offlineSlimmedPrimaryVertices_*_*',
        'keep *_offlineSlimmedPrimaryVerticesWithBS_*_*',
        'keep patPackedCandidates_packedPFCandidates_*_*',
        'keep *_isolatedTracks_*_*',
        'keep *_oniaPhotonCandidates_*_*',
        'keep *_bunchSpacingProducer_*_*',
        'keep double_fixedGridRhoAll__*',
        'keep double_fixedGridRhoFastjetAll__*',
        'keep double_fixedGridRhoFastjetAllTmp__*',
        'keep double_fixedGridRhoFastjetAllCalo__*',
        'keep double_fixedGridRhoFastjetCentral_*_*',
        'keep double_fixedGridRhoFastjetCentralCalo__*',
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*',
        'keep double_fixedGridRhoFastjetCentralNeutral__*',
        'keep *_slimmedPatTrigger_*_*',
        'keep patPackedTriggerPrescales_patTrigger__*',
        'keep patPackedTriggerPrescales_patTrigger_l1max_*',
        'keep patPackedTriggerPrescales_patTrigger_l1min_*',
        'keep *_l1extraParticles_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep GlobalExtBlkBXVector_simGtExtUnprefireable_*_*',
        'keep *_gtStage2Digis__*',
        'keep *_gmtStage2Digis_Muon_*',
        'keep *_caloStage2Digis_Jet_*',
        'keep *_caloStage2Digis_Tau_*',
        'keep *_caloStage2Digis_EGamma_*',
        'keep *_caloStage2Digis_EtSum_*',
        'keep *_TriggerResults_*_HLT',
        'keep *_TriggerResults_*_*',
        'keep patPackedCandidates_lostTracks_*_*',
        'keep HcalNoiseSummary_hcalnoise__*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTracks_displacedGlobalMuons__*',
        'keep recoTracks_displacedTracks__*',
        'keep *_prefiringweight_*_*',
        'keep *_slimmedLowPtElectrons_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep *_slimmedDisplacedMuons_*_*',
        'keep recoTrackExtras_slimmedDisplacedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'drop *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'keep patPackedGenParticles_packedGenParticles_*_*',
        'keep recoGenParticles_prunedGenParticles_*_*',
        'keep *_packedPFCandidateToGenAssociation_*_*',
        'keep *_lostTracksToGenAssociation_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_*_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep recoGenParticles_genPUProtons_*_*',
        'keep *_slimmedGenJetsFlavourInfos_*_*',
        'keep *_slimmedGenJets__*',
        'keep *_slimmedGenJetsAK8__*',
        'keep *_slimmedGenJetsAK8SoftDropSubJets__*',
        'keep *_genMetTrue_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep GenRunInfoProduct_*_*_*',
        'keep *_genParticles_xyz0_*',
        'keep *_genParticles_t0_*',
        'keep PileupSummaryInfos_slimmedAddPileupInfo_*_*',
        'keep L1GtTriggerMenuLite_l1GtTriggerMenuLite__*',
        'keep SimVertexs_g4SimHits_*_*'
    )
)

process.RAWRECODEBUGHLTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'drop *',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlcaPixelClusterCounts_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltDeepBLifetimeTagInfosPF_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfosCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfos_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDeepSecondaryVertexTagInfosPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfElectrons_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltElectronsVertex_*_*',
        'keep *_hltFEDSelectorGEM_*_*',
        'keep *_hltFEDSelectorTCDS_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3Associator_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltGtStage2ObjectMap_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltImpactParameterTagInfos_*_*',
        'keep *_hltInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*',
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter2ForElectronsMerged_*_*',
        'keep *_hltIter2MergedForDisplaced_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonAndMuonFromL1Merged_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltMergedTracksForBTag_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFJetForPNetAK8_*_*',
        'keep *_hltPFMETNoMuProducer_*_*',
        'keep *_hltPFMETProducer_*_*',
        'keep *_hltPFMETTypeOne_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPPSCalibrationRaw_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTagsAK8_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTags_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelector8CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusterizerForRawPrime_*_*',
        'keep *_hltSiStripClusters2ApproxClusters_*_*',
        'keep *_hltSiStripClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'drop *_trackingtruthprod_*_*',
        'drop *_electrontruth_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWRECOEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWRECOSIMHLTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlcaPixelClusterCounts_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltDeepBLifetimeTagInfosPF_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfosCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfos_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDeepSecondaryVertexTagInfosPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfElectrons_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltElectronsVertex_*_*',
        'keep *_hltFEDSelectorGEM_*_*',
        'keep *_hltFEDSelectorTCDS_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3Associator_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltGtStage2ObjectMap_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltImpactParameterTagInfos_*_*',
        'keep *_hltInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*',
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter2ForElectronsMerged_*_*',
        'keep *_hltIter2MergedForDisplaced_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonAndMuonFromL1Merged_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltMergedTracksForBTag_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFJetForPNetAK8_*_*',
        'keep *_hltPFMETNoMuProducer_*_*',
        'keep *_hltPFMETProducer_*_*',
        'keep *_hltPFMETTypeOne_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPPSCalibrationRaw_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTagsAK8_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTags_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelector8CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusterizerForRawPrime_*_*',
        'keep *_hltSiStripClusters2ApproxClusters_*_*',
        'keep *_hltSiStripClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(1),
    eventAutoFlushCompressedSize = cms.untracked.int32(20971520),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackingParticles_*_*',
        'keep *_prunedDigiSimLinks_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep *_logErrorHarvester_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWSIMHLTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackingParticles_*_*',
        'keep *_prunedDigiSimLinks_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep *_logErrorHarvester_*_*',
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlcaPixelClusterCounts_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltDeepBLifetimeTagInfosPF_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfosCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfos_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDeepSecondaryVertexTagInfosPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfElectrons_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltElectronsVertex_*_*',
        'keep *_hltFEDSelectorGEM_*_*',
        'keep *_hltFEDSelectorTCDS_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3Associator_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltGtStage2ObjectMap_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltImpactParameterTagInfos_*_*',
        'keep *_hltInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*',
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter2ForElectronsMerged_*_*',
        'keep *_hltIter2MergedForDisplaced_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonAndMuonFromL1Merged_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltMergedTracksForBTag_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFJetForPNetAK8_*_*',
        'keep *_hltPFMETNoMuProducer_*_*',
        'keep *_hltPFMETProducer_*_*',
        'keep *_hltPFMETTypeOne_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPPSCalibrationRaw_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTagsAK8_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTags_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelector8CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusterizerForRawPrime_*_*',
        'keep *_hltSiStripClusters2ApproxClusters_*_*',
        'keep *_hltSiStripClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.RECODEBUGEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'drop *_trackingtruthprod_*_*',
        'drop *_electrontruth_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RECOEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RECOSIMEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.REDIGIEventContent = cms.PSet(
    inputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'drop *_randomEngineStateProducer_*_*'
    )
)

process.REGENEventContent = cms.PSet(
    inputCommands = cms.untracked.vstring(
        'keep *',
        'drop *_genParticles_*_*',
        'drop *_genParticlesForJets_*_*',
        'drop *_kt4GenJets_*_*',
        'drop *_kt6GenJets_*_*',
        'drop *_iterativeCone5GenJets_*_*',
        'drop *_ak4GenJets_*_*',
        'drop *_ak7GenJets_*_*',
        'drop *_ak8GenJets_*_*',
        'drop *_ak4GenJetsNoNu_*_*',
        'drop *_ak8GenJetsNoNu_*_*',
        'drop *_genCandidatesForMET_*_*',
        'drop *_genParticlesForMETAllVisible_*_*',
        'drop *_genMetCalo_*_*',
        'drop *_genMetCaloAndNonPrompt_*_*',
        'drop *_genMetTrue_*_*',
        'drop *_genMetIC5GenJs_*_*'
    )
)

process.REPACKRAWEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop FEDRawDataCollection_*_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*',
        'keep FEDRawDataCollection_rawDataReducedFormat_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'drop FEDRawDataCollection_source_*_*',
        'drop FEDRawDataCollection_rawDataCollector_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.REPACKRAWSIMEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop FEDRawDataCollection_*_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*',
        'keep FEDRawDataCollection_rawDataReducedFormat_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackingParticles_*_*',
        'keep *_prunedDigiSimLinks_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep *_logErrorHarvester_*_*',
        'drop FEDRawDataCollection_source_*_*',
        'drop FEDRawDataCollection_rawDataCollector_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.RESIMEventContent = cms.PSet(
    inputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_randomEngineStateProducer_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*'
    )
)

process.RecoBTagAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*'
    )
)

process.RecoBTagFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*'
    )
)

process.RecoBTagRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*'
    )
)

process.RecoBTauAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoBTauFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoBTauRECO = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoCTPPSAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*'
    )
)

process.RecoCTPPSFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*'
    )
)

process.RecoCTPPSRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*'
    )
)

process.RecoEcalAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*'
    )
)

process.RecoEcalFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_reducedEcalRecHitsEB_*_*',
        'keep *_reducedEcalRecHitsEE_*_*',
        'keep *_reducedEcalRecHitsES_*_*',
        'keep *_interestingEcalDetId*_*_*',
        'keep *_ecalWeightUncalibRecHit_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5*_*_*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*'
    )
)

process.RecoEcalRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*'
    )
)

process.RecoEgammaAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*'
    )
)

process.RecoEgammaFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_gsfElectronCores_*_*',
        'keep *_gsfElectrons_*_*',
        'keep *_uncleanedOnlyGsfElectronCores_*_*',
        'keep *_uncleanedOnlyGsfElectrons_*_*',
        'keep *_eidRobustLoose_*_*',
        'keep *_eidRobustTight_*_*',
        'keep *_eidRobustHighEnergy_*_*',
        'keep *_eidLoose_*_*',
        'keep *_eidTight_*_*',
        'keep *_egmGedGsfElectronPFPileUpIsolation_*_*',
        'keep *_egmGedGsfElectronPFNoPileUpIsolation_*_*',
        'keep *_egmGsfElectronIDs_*_*',
        'keep *_egmPhotonIDs_*_*',
        'keep *_conversions_*_*',
        'drop *_conversions_uncleanedConversions_*',
        'keep *_mustacheConversions_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep *_photonCore_*_*',
        'keep *_photons_*_*',
        'keep *_mustachePhotonCore_*_*',
        'keep *_mustachePhotons_*_*',
        'keep *_ootPhotonCore_*_*',
        'keep *_ootPhotons_*_*',
        'keep *_allConversions_*_*',
        'keep *_allConversionsOldEG_*_*',
        'keep *_ckfOutInTracksFromConversions_*_*',
        'keep *_ckfInOutTracksFromConversions_*_*',
        'keep *_uncleanedOnlyAllConversions_*_*',
        'keep *_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep *_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*'
    )
)

process.RecoEgammaRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*'
    )
)

process.RecoGenJetsAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*'
    )
)

process.RecoGenJetsFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*'
    )
)

process.RecoGenJetsRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*'
    )
)

process.RecoGenMETAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGenMETs_*_*_*')
)

process.RecoGenMETFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGenMETs_*_*_*')
)

process.RecoGenMETRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGenMETs_*_*_*')
)

process.RecoHcalNoiseAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep HcalNoiseSummary_hcalnoise_*_*')
)

process.RecoHcalNoiseFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*'
    )
)

process.RecoHcalNoiseRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*'
    )
)

process.RecoJetsAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*'
    )
)

process.RecoJetsFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoCaloJets_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoTrackJets_*_*_*',
        'keep recoJPTJets_*_*_*',
        'keep recoBasicJets_*_*_*',
        'keep *_kt4JetTracksAssociatorAtVertex_*_*',
        'keep *_kt4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_kt4JetExtender_*_*',
        'keep *_ak7JetTracksAssociatorAtVertex*_*_*',
        'keep *_ak7JetTracksAssociatorAtCaloFace*_*_*',
        'keep *_ak7JetExtender_*_*',
        'keep *_kt4CaloJets_*_*',
        'keep *_kt6CaloJets_*_*',
        'keep *_ak5CaloJets_*_*',
        'keep *_ak7CaloJets_*_*',
        'keep *_kt4PFJets_*_*',
        'keep *_kt6PFJets_*_*',
        'keep *_ak5PFJets_*_*',
        'keep *_ak7PFJets_*_*',
        'keep *_kt4TrackJets_*_*',
        'keep *_ca*Mass_*_*',
        'keep *_ak*Mass_*_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*'
    )
)

process.RecoJetsRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*'
    )
)

process.RecoLocalCaloAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*'
    )
)

process.RecoLocalCaloFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep HBHERecHitsSorted_hbheprerecoMB_*_*',
        'keep ZDCDataFramesSorted_*Digis_*_*',
        'keep ZDCRecHitsSorted_*_*_*',
        'keep HcalUnpackerReport_*_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_ecalMultiFitUncalibRecHit_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*'
    )
)

process.RecoLocalCaloRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*'
    )
)

process.RecoLocalFastTimeAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoLocalFastTimeFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_mtdUncalibratedRecHits_*_*',
        'keep *_mtdTrackingRecHits_*_*',
        'keep *_mtdRecHits_*_*',
        'keep *_mtdClusters_*_*'
    )
)

process.RecoLocalFastTimeRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_mtdRecHits_*_*',
        'keep *_mtdClusters_*_*'
    )
)

process.RecoLocalMuonAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*'
    )
)

process.RecoLocalMuonFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*'
    )
)

process.RecoLocalMuonRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*'
    )
)

process.RecoLocalTrackerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep ClusterSummary_clusterSummaryProducer_*_*')
)

process.RecoLocalTrackerFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_clusterSummaryProducer_*_*',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*'
    )
)

process.RecoLocalTrackerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*'
    )
)

process.RecoMETAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*'
    )
)

process.RecoMETFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *HaloData_*_*_*',
        'keep *BeamHaloSummary_BeamHaloSummary_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*'
    )
)

process.RecoMETRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*'
    )
)

process.RecoMTDAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep intedmValueMap_trackExtenderWithMTD_*_*',
        'keep floatedmValueMap_trackExtenderWithMTD_*_*',
        'keep *_mtdTrackQualityMVA_*_*'
    )
)

process.RecoMTDFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoTrack*_trackExtenderWithMTD_*_*',
        'keep TrackingRecHitsOwned_trackExtenderWithMTD_*_*',
        'keep intedmValueMap_trackExtenderWithMTD_*_*',
        'keep floatedmValueMap_trackExtenderWithMTD_*_*',
        'keep *_mtdTrackQualityMVA_*_*'
    )
)

process.RecoMTDRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoTrack*_trackExtenderWithMTD_*_*',
        'keep TrackingRecHitsOwned_trackExtenderWithMTD_*_*',
        'keep intedmValueMap_trackExtenderWithMTD_*_*',
        'keep floatedmValueMap_trackExtenderWithMTD_*_*',
        'keep *_mtdTrackQualityMVA_*_*'
    )
)

process.RecoMuonAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*'
    )
)

process.RecoMuonFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*'
    )
)

process.RecoMuonIsolationAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoMuonIsolationFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*'
    )
)

process.RecoMuonIsolationParamGlobal = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_muParamGlobalIsoDepositGsTk_*_*',
        'keep *_muParamGlobalIsoDepositCalEcal_*_*',
        'keep *_muParamGlobalIsoDepositCalHcal_*_*',
        'keep *_muParamGlobalIsoDepositCtfTk_*_*',
        'keep *_muParamGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muParamGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muParamGlobalIsoDepositJets_*_*'
    )
)

process.RecoMuonIsolationRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*'
    )
)

process.RecoMuonRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*'
    )
)

process.RecoParticleFlowAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*'
    )
)

process.RecoParticleFlowFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*'
    )
)

process.RecoParticleFlowRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*'
    )
)

process.RecoPixelVertexingFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*'
    )
)

process.RecoPixelVertexingRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*'
    )
)

process.RecoTauTagAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*'
    )
)

process.RecoTauTagFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ak4PFJetsRecoTauPiZeros_*_*',
        'keep *_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauDiscrimination*_*_*',
        'keep *_hpsPFTau*PtSum_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*'
    )
)

process.RecoTauTagRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*'
    )
)

process.RecoTrackerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*'
    )
)

process.RecoTrackerFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*'
    )
)

process.RecoTrackerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*'
    )
)

process.RecoVertexAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*'
    )
)

process.RecoVertexFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*'
    )
)

process.RecoVertexRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*'
    )
)

process.SiPixelSimBlock = cms.PSet(
    AdcFullScLateCR = cms.int32(255),
    AdcFullScale = cms.int32(255),
    AddNoise = cms.bool(True),
    AddNoisyPixels = cms.bool(True),
    AddPixelInefficiency = cms.bool(True),
    AddThresholdSmearing = cms.bool(True),
    Alpha2Order = cms.bool(True),
    BPix_SignalResponse_p0 = cms.double(0.00171),
    BPix_SignalResponse_p1 = cms.double(0.711),
    BPix_SignalResponse_p2 = cms.double(203.0),
    BPix_SignalResponse_p3 = cms.double(148.0),
    ChargeVCALSmearing = cms.bool(True),
    DeadModules_DB = cms.bool(True),
    DoPixelAging = cms.bool(False),
    ElectronPerAdc = cms.double(135.0),
    ElectronsPerVcal = cms.double(47),
    ElectronsPerVcal_L1 = cms.double(50),
    ElectronsPerVcal_L1_Offset = cms.double(-670),
    ElectronsPerVcal_Offset = cms.double(-60),
    FPix_SignalResponse_p0 = cms.double(0.00171),
    FPix_SignalResponse_p1 = cms.double(0.711),
    FPix_SignalResponse_p2 = cms.double(203.0),
    FPix_SignalResponse_p3 = cms.double(148.0),
    GainSmearing = cms.double(0.0),
    KillBadFEDChannels = cms.bool(True),
    LorentzAngle_DB = cms.bool(True),
    MissCalInLateCR = cms.bool(True),
    MissCalibrate = cms.bool(True),
    NoiseInElectrons = cms.double(175.0),
    NumPixelBarrel = cms.int32(4),
    NumPixelEndcap = cms.int32(3),
    OffsetSmearing = cms.double(0.0),
    PixGeometryType = cms.string('idealForDigi'),
    PrintClusters = cms.bool(False),
    PrintTemplates = cms.bool(False),
    ReadoutNoiseInElec = cms.double(350.0),
    RoutList = cms.vstring(
        'TrackerHitsPixelBarrelLowTof',
        'TrackerHitsPixelBarrelHighTof',
        'TrackerHitsPixelEndcapLowTof',
        'TrackerHitsPixelEndcapHighTof'
    ),
    SiPixelQualityLabel = cms.string('forDigitizer'),
    TanLorentzAnglePerTesla_BPix = cms.double(0.106),
    TanLorentzAnglePerTesla_FPix = cms.double(0.106),
    ThresholdInElectrons_BPix = cms.double(1600.0),
    ThresholdInElectrons_BPix_L1 = cms.double(2000.0),
    ThresholdInElectrons_BPix_L2 = cms.double(1600.0),
    ThresholdInElectrons_FPix = cms.double(1600.0),
    ThresholdSmearing_BPix = cms.double(245.0),
    ThresholdSmearing_BPix_L1 = cms.double(245.0),
    ThresholdSmearing_BPix_L2 = cms.double(245.0),
    ThresholdSmearing_FPix = cms.double(210.0),
    TofLowerCut = cms.double(-12.5),
    TofUpperCut = cms.double(12.5),
    UseReweighting = cms.bool(True),
    applyLateReweighting = cms.bool(False),
    deltaProductionCut = cms.double(0.03),
    killModules = cms.bool(True),
    store_SimHitEntryExitPoints = cms.bool(False),
    useDB = cms.bool(False)
)

process.SiStripSimBlock = cms.PSet(
    APVProbabilityFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVProbaList.txt'),
    APVSaturationFromHIP = cms.bool(False),
    APVSaturationProbScaling = cms.double(1.0),
    APVShapeDecoFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVShapeDeco_320.txt'),
    APVShapePeakFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVShapePeak_default.txt'),
    APVpeakmode = cms.bool(False),
    AppliedVoltage = cms.double(300.0),
    BaselineShift = cms.bool(True),
    ChargeDistributionRMS = cms.double(6.5e-10),
    ChargeMobility = cms.double(310.0),
    CommonModeNoise = cms.bool(True),
    CosmicDelayShift = cms.untracked.double(0.0),
    CouplingConstantDecIB1 = cms.vdouble(0.7748, 0.0962, 0.0165),
    CouplingConstantDecIB2 = cms.vdouble(0.83, 0.0756, 0.0094),
    CouplingConstantDecOB1 = cms.vdouble(0.6871, 0.1222, 0.0342),
    CouplingConstantDecOB2 = cms.vdouble(0.725, 0.1102, 0.0273),
    CouplingConstantDecW1a = cms.vdouble(0.786, 0.093, 0.014),
    CouplingConstantDecW1b = cms.vdouble(0.822, 0.08, 0.009),
    CouplingConstantDecW2a = cms.vdouble(0.7962, 0.0914, 0.0104),
    CouplingConstantDecW2b = cms.vdouble(0.888, 0.05, 0.006),
    CouplingConstantDecW3a = cms.vdouble(0.8164, 0.09, 0.0018),
    CouplingConstantDecW3b = cms.vdouble(0.848, 0.06, 0.016),
    CouplingConstantDecW4 = cms.vdouble(0.876, 0.06, 0.002),
    CouplingConstantDecW5 = cms.vdouble(0.7565, 0.0913, 0.0304),
    CouplingConstantDecW6 = cms.vdouble(0.758, 0.093, 0.026),
    CouplingConstantDecW7 = cms.vdouble(0.7828, 0.0862, 0.0224),
    CouplingConstantPeakIB1 = cms.vdouble(0.9006, 0.0497),
    CouplingConstantPeakIB2 = cms.vdouble(0.9342, 0.0328),
    CouplingConstantPeakOB1 = cms.vdouble(0.8542, 0.0729),
    CouplingConstantPeakOB2 = cms.vdouble(0.8719, 0.064),
    CouplingConstantPeakW1a = cms.vdouble(0.996, 0.002),
    CouplingConstantPeakW1b = cms.vdouble(0.976, 0.012),
    CouplingConstantPeakW2a = cms.vdouble(1.0, 0.0),
    CouplingConstantPeakW2b = cms.vdouble(0.998, 0.001),
    CouplingConstantPeakW3a = cms.vdouble(0.996, 0.002),
    CouplingConstantPeakW3b = cms.vdouble(0.992, 0.004),
    CouplingConstantPeakW4 = cms.vdouble(0.992, 0.004),
    CouplingConstantPeakW5 = cms.vdouble(0.968, 0.016),
    CouplingConstantPeakW6 = cms.vdouble(0.972, 0.014),
    CouplingConstantPeakW7 = cms.vdouble(0.964, 0.018),
    CouplingConstantRunIIDecIB1 = cms.vdouble(0.8361, 0.0703, 0.0117),
    CouplingConstantRunIIDecIB2 = cms.vdouble(0.8616, 0.0588, 0.0104),
    CouplingConstantRunIIDecOB1 = cms.vdouble(0.7461, 0.0996, 0.0273),
    CouplingConstantRunIIDecOB2 = cms.vdouble(0.7925, 0.0834, 0.0203),
    CouplingConstantRunIIDecW1a = cms.vdouble(0.8571, 0.0608, 0.0106),
    CouplingConstantRunIIDecW1b = cms.vdouble(0.8827, 0.0518, 0.0068),
    CouplingConstantRunIIDecW2a = cms.vdouble(0.8861, 0.049, 0.008),
    CouplingConstantRunIIDecW2b = cms.vdouble(0.8943, 0.0483, 0.0046),
    CouplingConstantRunIIDecW3a = cms.vdouble(0.8984, 0.0494, 0.0014),
    CouplingConstantRunIIDecW3b = cms.vdouble(0.8611, 0.0573, 0.0121),
    CouplingConstantRunIIDecW4 = cms.vdouble(0.8881, 0.0544, 0.0015),
    CouplingConstantRunIIDecW5 = cms.vdouble(0.7997, 0.077, 0.0231),
    CouplingConstantRunIIDecW6 = cms.vdouble(0.8067, 0.0769, 0.0198),
    CouplingConstantRunIIDecW7 = cms.vdouble(0.7883, 0.0888, 0.0171),
    CouplingConstantsRunIIDecB = cms.bool(True),
    CouplingConstantsRunIIDecW = cms.bool(True),
    DeltaProductionCut = cms.double(0.120425),
    DepletionVoltage = cms.double(170.0),
    DigiModeList = cms.PSet(
        PRDigi = cms.string('ProcessedRaw'),
        SCDigi = cms.string('ScopeMode'),
        VRDigi = cms.string('VirginRaw'),
        ZSDigi = cms.string('ZeroSuppressed')
    ),
    FedAlgorithm = cms.int32(4),
    FedAlgorithm_PM = cms.int32(4),
    Gain = cms.string(''),
    GeometryType = cms.string('idealForDigi'),
    GevPerElectron = cms.double(3.61e-09),
    Inefficiency = cms.double(0.0),
    LandauFluctuations = cms.bool(True),
    LorentzAngle = cms.string(''),
    Noise = cms.bool(True),
    NoiseSigmaThreshold = cms.double(2.0),
    PedestalsOffset = cms.double(128),
    PreMixingMode = cms.bool(False),
    ROUList = cms.vstring(
        'TrackerHitsTIBLowTof',
        'TrackerHitsTIBHighTof',
        'TrackerHitsTIDLowTof',
        'TrackerHitsTIDHighTof',
        'TrackerHitsTOBLowTof',
        'TrackerHitsTOBHighTof',
        'TrackerHitsTECLowTof',
        'TrackerHitsTECHighTof'
    ),
    RealPedestals = cms.bool(True),
    SingleStripNoise = cms.bool(True),
    TOFCutForDeconvolution = cms.double(50.0),
    TOFCutForPeak = cms.double(100.0),
    Temperature = cms.double(273.0),
    TrackerConfigurationFromDB = cms.bool(False),
    ZeroSuppression = cms.bool(True),
    apv_mVPerQ = cms.double(5.5),
    apv_maxResponse = cms.double(729),
    apv_rate = cms.double(66.2),
    apvfCPerElectron = cms.double(0.0001602),
    chargeDivisionsPerStrip = cms.int32(10),
    cmnRMStec = cms.double(2.44),
    cmnRMStib = cms.double(5.92),
    cmnRMStid = cms.double(3.08),
    cmnRMStob = cms.double(1.08),
    electronPerAdcDec = cms.double(247.0),
    electronPerAdcPeak = cms.double(262.0),
    fracOfEventsToSimAPV = cms.double(0.0),
    includeAPVSimulation = cms.bool(False),
    noDiffusion = cms.bool(False)
)

process.SimCalorimetryAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimCalorimetryFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_simEcalDigis_*_*',
        'keep *_simEcalPreshowerDigis_*_*',
        'keep *_simEcalTriggerPrimitiveDigis_*_*',
        'keep *_simEcalEBTriggerPrimitiveDigis_*_*',
        'keep *_simHcalDigis_*_*',
        'keep ZDCDataFramesSorted_simHcalUnsuppressedDigis_*_*',
        'drop ZDCDataFramesSorted_mix_simHcalUnsuppressedDigis*_*',
        'keep *_simHcalTriggerPrimitiveDigis_*_*',
        'keep *_mix_HcalSamples_*',
        'keep *_mixData_HcalSamples_*',
        'keep *_mix_HcalHits_*',
        'keep *_mixData_HcalHits_*',
        'keep *_DMHcalTriggerPrimitiveDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*'
    )
)

process.SimCalorimetryPREMIX = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep EBDigiCollection_simEcalDigis_*_*',
        'keep EEDigiCollection_simEcalDigis_*_*',
        'keep ESDigiCollection_simEcalUnsuppressedDigis_*_*',
        'keep *_simHcalDigis_*_*'
    )
)

process.SimCalorimetryRAW = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*'
    )
)

process.SimCalorimetryRECO = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimFastTimingAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimFastTimingFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimFastTimingPREMIX = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimFastTimingRAW = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimFastTimingRECO = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimG4CoreAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimG4CoreHLTAODSIM = cms.PSet(
    outputCommands = cms.untracked.vstring('keep SimVertexs_g4SimHits_*_*')
)

process.SimG4CoreRAW = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*'
    )
)

process.SimG4CoreRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*'
    )
)

process.SimGeneralAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*'
    )
)

process.SimGeneralFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *_trackingtruthprod_*_*',
        'drop *_electrontruth_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*'
    )
)

process.SimGeneralPREMIX = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimGeneralRAW = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*'
    )
)

process.SimGeneralRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*'
    )
)

process.SimMuonAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_muonSimClassifier_*_*')
)

process.SimMuonFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonDTDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *_simMuonGEMDigis_*_*'
    )
)

process.SimMuonPREMIX = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_mix_g4SimHitsMuonDTHits_*',
        'keep *_mix_g4SimHitsMuonCSCHits_*',
        'keep *_mix_g4SimHitsMuonRPCHits_*',
        'keep *_mix_g4SimHitsMuonGEMHits_*'
    )
)

process.SimMuonRAW = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*'
    )
)

process.SimMuonRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*'
    )
)

process.SimTrackerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackMCMatch_*_*'
    )
)

process.SimTrackerDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*'
    )
)

process.SimTrackerFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_simSiPixelDigis_*_*',
        'keep *_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_trackingParticleRecoTrackAsssociation_*_*',
        'keep *_assoc2secStepTk_*_*',
        'keep *_assoc2thStepTk_*_*',
        'keep *_assoc2GsfTracks_*_*',
        'keep *_assocOutInConversionTracks_*_*',
        'keep *_assocInOutConversionTracks_*_*',
        'keep *_TTClusterAssociatorFromPixelDigis_*_*',
        'keep *_TTStubAssociatorFromPixelDigis_*_*'
    )
)

process.SimTrackerPREMIX = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_simSiPixelDigis_*_*',
        'keep *_simSiStripDigis_ZeroSuppressed_*',
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*',
        'keep *_mix_AffectedAPVList_*'
    )
)

process.SimTrackerRAW = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackingParticles_*_*',
        'keep *_prunedDigiSimLinks_*_*'
    )
)

process.SimTrackerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackMCMatch_*_*'
    )
)

process.TICL_AOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.TICL_FEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ticlSimTracksters_*_*',
        'keep *_ticlSimTrackstersFromCP_*_*',
        'keep *_ticlTrackstersCLUE3DHigh_*_*',
        'keep *_ticlTrackstersMerge_*_*',
        'keep *_ticlTrackstersHFNoseTrkEM_*_*',
        'keep *_ticlTrackstersHFNoseEM_*_*',
        'keep *_ticlTrackstersHFNoseTrk_*_*',
        'keep *_ticlTrackstersHFNoseMIP_*_*',
        'keep *_ticlTrackstersHFNoseHAD_*_*',
        'keep *_ticlTrackstersHFNoseMerge_*_*',
        'keep *_pfTICL_*_*'
    )
)

process.TICL_RECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ticlTrackstersCLUE3DHigh_*_*',
        'keep *_ticlTrackstersMerge_*_*',
        'keep *_ticlTrackstersHFNoseTrkEM_*_*',
        'keep *_ticlTrackstersHFNoseEM_*_*',
        'keep *_ticlTrackstersHFNoseTrk_*_*',
        'keep *_ticlTrackstersHFNoseMIP_*_*',
        'keep *_ticlTrackstersHFNoseHAD_*_*',
        'keep *_ticlTrackstersHFNoseMerge_*_*',
        'keep *_pfTICL_*_*'
    )
)

process.TcdsEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_tcdsDigis_*_*')
)

process.TrackAssociatorParameterBlock = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
        accountForTrajectoryChangeCalo = cms.bool(False),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        dRHcal = cms.double(9999.0),
        dRHcalPreselection = cms.double(0.2),
        dRMuon = cms.double(9999.0),
        dRMuonPreselection = cms.double(0.2),
        dRPreshowerPreselection = cms.double(0.2),
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        propagateAllDirections = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        truthMatch = cms.bool(False),
        useCalo = cms.bool(False),
        useEcal = cms.bool(True),
        useGEM = cms.bool(False),
        useHO = cms.bool(True),
        useHcal = cms.bool(True),
        useME0 = cms.bool(False),
        useMuon = cms.bool(True),
        usePreshower = cms.bool(False)
    )
)

process.TrackingToolsAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*'
    )
)

process.TrackingToolsFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_electronGsfTracks_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*'
    )
)

process.TrackingToolsRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*'
    )
)

process.apd_sim_parameters = cms.PSet(
    apdAddToBarrel = cms.bool(False),
    apdDigiTag = cms.string('APD'),
    apdDoPEStats = cms.bool(True),
    apdNonlParms = cms.vdouble(
        1.48, -3.75, 1.81, 1.26, 2.0,
        45, 1.0
    ),
    apdSeparateDigi = cms.bool(True),
    apdShapeTau = cms.double(40.5),
    apdShapeTstart = cms.double(74.5),
    apdSimToPEHigh = cms.double(88200000.0),
    apdSimToPELow = cms.double(2450000.0),
    apdTimeOffWidth = cms.double(0.8),
    apdTimeOffset = cms.double(-13.5)
)

process.caloParticles = cms.PSet(
    HepMCProductLabel = cms.InputTag("generatorSmeared"),
    MaxPseudoRapidity = cms.double(5.0),
    MinEnergy = cms.double(0.5),
    accumulatorType = cms.string('CaloTruthAccumulator'),
    allowDifferentSimHitProcesses = cms.bool(False),
    doHGCAL = cms.bool(True),
    genParticleCollection = cms.InputTag("genParticles"),
    maximumPreviousBunchCrossing = cms.uint32(0),
    maximumSubsequentBunchCrossing = cms.uint32(0),
    premixStage1 = cms.bool(False),
    simHitCollections = cms.PSet(
        hgc = cms.VInputTag(cms.InputTag("g4SimHits","HGCHitsEE"), cms.InputTag("g4SimHits","HGCHitsHEfront"), cms.InputTag("g4SimHits","HGCHitsHEback"))
    ),
    simTrackCollection = cms.InputTag("g4SimHits"),
    simVertexCollection = cms.InputTag("g4SimHits")
)

process.castorDigitizer = cms.PSet(
    accumulatorType = cms.string('CastorDigiProducer'),
    castor = cms.PSet(
        binOfMaximum = cms.int32(5),
        doPhotoStatistics = cms.bool(True),
        photoelectronsToAnalog = cms.double(4.1718),
        readoutFrameSize = cms.int32(6),
        samplingFactor = cms.double(0.062577),
        simHitToPhotoelectrons = cms.double(1000.0),
        syncPhase = cms.bool(True),
        timePhase = cms.double(-4.0)
    ),
    doNoise = cms.bool(True),
    doTimeSlew = cms.bool(True),
    hitsProducer = cms.InputTag("g4SimHits","CastorFI"),
    makeDigiSimLinks = cms.untracked.bool(False)
)

process.combinedSecondaryVertexCommon = cms.PSet(
    SoftLeptonFlip = cms.bool(False),
    charmCut = cms.double(1.5),
    correctVertexMass = cms.bool(True),
    minimumTrackWeight = cms.double(0.5),
    pseudoMultiplicityMin = cms.uint32(2),
    pseudoVertexV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.05)
    ),
    trackFlip = cms.bool(False),
    trackMultiplicityMin = cms.uint32(2),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    trackPseudoSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(2.0),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip2dSig'),
    useTrackWeights = cms.bool(True),
    vertexFlip = cms.bool(False)
)

process.configurationMetadata = cms.untracked.PSet(
    annotation = cms.untracked.string('--python_filename nevts:100'),
    name = cms.untracked.string('Applications'),
    version = cms.untracked.string('$Revision: 1.19 $')
)

process.cutbased = cms.PSet(
    JetIdParams = cms.PSet(
        Pt010_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt010_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt010_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt010_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt010_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt010_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt1020_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt1020_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt1020_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt1020_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt1020_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt1020_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt2030_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt2030_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt2030_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt2030_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt2030_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt2030_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt3040_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt3040_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt3040_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt3040_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt3040_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt3040_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt4050_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt4050_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt4050_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt4050_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt4050_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt4050_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0)
    ),
    cutBased = cms.bool(True),
    impactParTkThreshold = cms.double(1.0),
    label = cms.string('cutbased')
)

process.decayMode_1Prong0Pi0 = cms.PSet(
    applyBendCorrection = cms.PSet(
        eta = cms.bool(True),
        mass = cms.bool(True),
        phi = cms.bool(True)
    ),
    assumeStripMass = cms.double(-1.0),
    maxMass = cms.string('1.'),
    maxPi0Mass = cms.double(1000000000.0),
    minMass = cms.double(-1000.0),
    minPi0Mass = cms.double(-1000.0),
    nCharged = cms.uint32(1),
    nChargedPFCandsMin = cms.uint32(1),
    nPiZeros = cms.uint32(0),
    nTracksMin = cms.uint32(1)
)

process.decayMode_1Prong1Pi0 = cms.PSet(
    applyBendCorrection = cms.PSet(
        eta = cms.bool(True),
        mass = cms.bool(True),
        phi = cms.bool(True)
    ),
    assumeStripMass = cms.double(0.1349),
    maxMass = cms.string('max(1.3, min(1.3*sqrt(pt/100.), 4.2))'),
    maxPi0Mass = cms.double(1000000000.0),
    minMass = cms.double(0.3),
    minPi0Mass = cms.double(-1000.0),
    nCharged = cms.uint32(1),
    nChargedPFCandsMin = cms.uint32(1),
    nPiZeros = cms.uint32(1),
    nTracksMin = cms.uint32(1)
)

process.decayMode_1Prong2Pi0 = cms.PSet(
    applyBendCorrection = cms.PSet(
        eta = cms.bool(True),
        mass = cms.bool(True),
        phi = cms.bool(True)
    ),
    assumeStripMass = cms.double(0.0),
    maxMass = cms.string('max(1.2, min(1.2*sqrt(pt/100.), 4.0))'),
    maxPi0Mass = cms.double(0.2),
    minMass = cms.double(0.4),
    minPi0Mass = cms.double(0.05),
    nCharged = cms.uint32(1),
    nChargedPFCandsMin = cms.uint32(1),
    nPiZeros = cms.uint32(2),
    nTracksMin = cms.uint32(1)
)

process.decayMode_2Prong0Pi0 = cms.PSet(
    applyBendCorrection = cms.PSet(
        eta = cms.bool(False),
        mass = cms.bool(False),
        phi = cms.bool(False)
    ),
    assumeStripMass = cms.double(-1.0),
    maxMass = cms.string('1.2'),
    maxPi0Mass = cms.double(1000000000.0),
    minMass = cms.double(0.0),
    minPi0Mass = cms.double(-1000.0),
    nCharged = cms.uint32(2),
    nChargedPFCandsMin = cms.uint32(1),
    nPiZeros = cms.uint32(0),
    nTracksMin = cms.uint32(2)
)

process.decayMode_2Prong1Pi0 = cms.PSet(
    applyBendCorrection = cms.PSet(
        eta = cms.bool(False),
        mass = cms.bool(False),
        phi = cms.bool(False)
    ),
    assumeStripMass = cms.double(-1.0),
    maxMass = cms.string('max(1.2, min(1.2*sqrt(pt/100.), 4.0))'),
    maxPi0Mass = cms.double(1000000000.0),
    minMass = cms.double(0.0),
    minPi0Mass = cms.double(-1000.0),
    nCharged = cms.uint32(2),
    nChargedPFCandsMin = cms.uint32(1),
    nPiZeros = cms.uint32(1),
    nTracksMin = cms.uint32(2)
)

process.decayMode_3Prong0Pi0 = cms.PSet(
    applyBendCorrection = cms.PSet(
        eta = cms.bool(False),
        mass = cms.bool(False),
        phi = cms.bool(False)
    ),
    assumeStripMass = cms.double(-1.0),
    maxMass = cms.string('1.5'),
    maxPi0Mass = cms.double(1000000000.0),
    minMass = cms.double(0.8),
    minPi0Mass = cms.double(-1000.0),
    nCharged = cms.uint32(3),
    nChargedPFCandsMin = cms.uint32(1),
    nPiZeros = cms.uint32(0),
    nTracksMin = cms.uint32(2)
)

process.decayMode_3Prong1Pi0 = cms.PSet(
    applyBendCorrection = cms.PSet(
        eta = cms.bool(False),
        mass = cms.bool(False),
        phi = cms.bool(False)
    ),
    assumeStripMass = cms.double(-1.0),
    maxMass = cms.string('1.6'),
    maxPi0Mass = cms.double(1000000000.0),
    minMass = cms.double(0.9),
    minPi0Mass = cms.double(-1000.0),
    nCharged = cms.uint32(3),
    nChargedPFCandsMin = cms.uint32(1),
    nPiZeros = cms.uint32(1),
    nTracksMin = cms.uint32(2)
)

process.ecalDigitizer = cms.PSet(
    ConstantTerm = cms.double(0.003),
    EBCorrNoiseMatrixG01 = cms.vdouble(
        1.0, 0.73354, 0.64442, 0.58851, 0.55425,
        0.53082, 0.51916, 0.51097, 0.50732, 0.50409
    ),
    EBCorrNoiseMatrixG06 = cms.vdouble(
        1.0, 0.70946, 0.58021, 0.49846, 0.45006,
        0.41366, 0.39699, 0.38478, 0.37847, 0.37055
    ),
    EBCorrNoiseMatrixG12 = cms.vdouble(
        1.0, 0.71073, 0.55721, 0.46089, 0.40449,
        0.35931, 0.33924, 0.32439, 0.31581, 0.30481
    ),
    EBdigiCollection = cms.string(''),
    EBs25notContainment = cms.double(0.9675),
    EECorrNoiseMatrixG01 = cms.vdouble(
        1.0, 0.72698, 0.62048, 0.55691, 0.51848,
        0.49147, 0.47813, 0.47007, 0.46621, 0.46265
    ),
    EECorrNoiseMatrixG06 = cms.vdouble(
        1.0, 0.71217, 0.47464, 0.34056, 0.26282,
        0.20287, 0.17734, 0.16256, 0.15618, 0.14443
    ),
    EECorrNoiseMatrixG12 = cms.vdouble(
        1.0, 0.71373, 0.44825, 0.30152, 0.21609,
        0.14786, 0.11772, 0.10165, 0.09465, 0.08098
    ),
    EEdigiCollection = cms.string(''),
    EEs25notContainment = cms.double(0.968),
    ESdigiCollection = cms.string(''),
    EcalPreMixStage1 = cms.bool(False),
    EcalPreMixStage2 = cms.bool(False),
    UseLCcorrection = cms.untracked.bool(True),
    accumulatorType = cms.string('EcalDigiProducer'),
    apdAddToBarrel = cms.bool(False),
    apdDigiTag = cms.string('APD'),
    apdDoPEStats = cms.bool(True),
    apdNonlParms = cms.vdouble(
        1.48, -3.75, 1.81, 1.26, 2.0,
        45, 1.0
    ),
    apdSeparateDigi = cms.bool(True),
    apdShapeTau = cms.double(40.5),
    apdShapeTstart = cms.double(74.5),
    apdSimToPEHigh = cms.double(88200000.0),
    apdSimToPELow = cms.double(2450000.0),
    apdTimeOffWidth = cms.double(0.8),
    apdTimeOffset = cms.double(-13.5),
    applyConstantTerm = cms.bool(True),
    binOfMaximum = cms.int32(6),
    cosmicsPhase = cms.bool(False),
    cosmicsShift = cms.double(0.0),
    doEB = cms.bool(True),
    doEE = cms.bool(True),
    doENoise = cms.bool(True),
    doES = cms.bool(True),
    doESNoise = cms.bool(True),
    doFast = cms.bool(True),
    doPhotostatistics = cms.bool(True),
    hitsProducer = cms.string('g4SimHits'),
    makeDigiSimLinks = cms.untracked.bool(False),
    photoelectronsToAnalogBarrel = cms.double(0.000444444),
    photoelectronsToAnalogEndcap = cms.double(0.000555555),
    samplingFactor = cms.double(1.0),
    simHitToPhotoelectronsBarrel = cms.double(2250.0),
    simHitToPhotoelectronsEndcap = cms.double(1800.0),
    syncPhase = cms.bool(True),
    timeDependent = cms.bool(False),
    timePhase = cms.double(0.0)
)

process.ecalLocalRecoAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.ecalLocalRecoFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ecalMultiFitUncalibRecHit_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*'
    )
)

process.ecalLocalRecoRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*'
    )
)

process.ecalTimeDigitizer = cms.PSet(
    EBtimeDigiCollection = cms.string('EBTimeDigi'),
    EEtimeDigiCollection = cms.string('EETimeDigi'),
    accumulatorType = cms.string('EcalTimeDigiProducer'),
    hitsProducerEB = cms.InputTag("g4SimHits","EcalHitsEB"),
    hitsProducerEE = cms.InputTag("g4SimHits","EcalHitsEE"),
    timeLayerBarrel = cms.int32(7),
    timeLayerEndcap = cms.int32(3)
)

process.ecal_cosmics_sim = cms.PSet(
    cosmicsPhase = cms.bool(False),
    cosmicsShift = cms.double(0.0)
)

process.ecal_digi_parameters = cms.PSet(
    EBCorrNoiseMatrixG01 = cms.vdouble(
        1.0, 0.73354, 0.64442, 0.58851, 0.55425,
        0.53082, 0.51916, 0.51097, 0.50732, 0.50409
    ),
    EBCorrNoiseMatrixG06 = cms.vdouble(
        1.0, 0.70946, 0.58021, 0.49846, 0.45006,
        0.41366, 0.39699, 0.38478, 0.37847, 0.37055
    ),
    EBCorrNoiseMatrixG12 = cms.vdouble(
        1.0, 0.71073, 0.55721, 0.46089, 0.40449,
        0.35931, 0.33924, 0.32439, 0.31581, 0.30481
    ),
    EBdigiCollection = cms.string(''),
    EECorrNoiseMatrixG01 = cms.vdouble(
        1.0, 0.72698, 0.62048, 0.55691, 0.51848,
        0.49147, 0.47813, 0.47007, 0.46621, 0.46265
    ),
    EECorrNoiseMatrixG06 = cms.vdouble(
        1.0, 0.71217, 0.47464, 0.34056, 0.26282,
        0.20287, 0.17734, 0.16256, 0.15618, 0.14443
    ),
    EECorrNoiseMatrixG12 = cms.vdouble(
        1.0, 0.71373, 0.44825, 0.30152, 0.21609,
        0.14786, 0.11772, 0.10165, 0.09465, 0.08098
    ),
    EEdigiCollection = cms.string(''),
    ESdigiCollection = cms.string(''),
    EcalPreMixStage1 = cms.bool(False),
    EcalPreMixStage2 = cms.bool(False),
    UseLCcorrection = cms.untracked.bool(True)
)

process.ecal_electronics_sim = cms.PSet(
    ConstantTerm = cms.double(0.003),
    applyConstantTerm = cms.bool(True),
    doENoise = cms.bool(True)
)

process.ecal_notCont_sim = cms.PSet(
    EBs25notContainment = cms.double(0.9675),
    EEs25notContainment = cms.double(0.968)
)

process.ecal_sim_parameter_map = cms.PSet(
    binOfMaximum = cms.int32(6),
    doPhotostatistics = cms.bool(True),
    photoelectronsToAnalogBarrel = cms.double(0.000444444),
    photoelectronsToAnalogEndcap = cms.double(0.000555555),
    samplingFactor = cms.double(1.0),
    simHitToPhotoelectronsBarrel = cms.double(2250.0),
    simHitToPhotoelectronsEndcap = cms.double(1800.0),
    syncPhase = cms.bool(True),
    timeDependent = cms.bool(False),
    timePhase = cms.double(0.0)
)

process.ecal_sim_parameter_map_ph2 = cms.PSet(
    binOfMaximum = cms.int32(6),
    doPhotostatistics = cms.bool(True),
    photoelectronsToAnalogBarrel = cms.double(0.000444444),
    samplingFactor = cms.double(1.0),
    simHitToPhotoelectronsBarrel = cms.double(2250.0),
    syncPhase = cms.bool(True),
    timePhase = cms.double(0.0)
)

process.egamma8XObjectUpdateModifier = cms.PSet(
    ecalRecHitsEB = cms.InputTag("reducedEgamma","reducedEBRecHits"),
    ecalRecHitsEE = cms.InputTag("reducedEgamma","reducedEERecHits"),
    modifierName = cms.string('EG8XObjectUpdateModifier')
)

process.egamma9X105XUpdateModifier = cms.PSet(
    allowGsfTrackForConvs = cms.bool(False),
    beamspot = cms.InputTag("offlineBeamSpot"),
    conversions = cms.InputTag("reducedEgamma","reducedConversions"),
    ecalRecHitsEB = cms.InputTag("reducedEgamma","reducedEBRecHits"),
    ecalRecHitsEE = cms.InputTag("reducedEgamma","reducedEERecHits"),
    eleCollVMsAreKeyedTo = cms.InputTag("slimmedElectrons","","@skipCurrentProcess"),
    eleTrkIso = cms.InputTag("heepIDVarValueMaps","eleTrkPtIso"),
    eleTrkIso04 = cms.InputTag("heepIDVarValueMaps","eleTrkPtIso04"),
    modifierName = cms.string('EG9X105XObjectUpdateModifier'),
    phoChargedHadIso = cms.InputTag("photonIDValueMapProducer","phoChargedIsolation"),
    phoChargedHadPFPVIso = cms.InputTag("egmPhotonIsolation","h+-DR030-"),
    phoChargedHadWorstVtxConeVetoIso = cms.InputTag("photonIDValueMapProducer","phoWorstChargedIsolationConeVeto"),
    phoChargedHadWorstVtxIso = cms.InputTag("photonIDValueMapProducer","phoWorstChargedIsolation"),
    phoCollVMsAreKeyedTo = cms.InputTag("slimmedPhotons","","@skipCurrentProcess"),
    phoNeutralHadIso = cms.InputTag("photonIDValueMapProducer","phoNeutralHadronIsolation"),
    phoPhotonIso = cms.InputTag("photonIDValueMapProducer","phoPhotonIsolation"),
    updateChargedHadPFPVIso = cms.bool(True)
)

process.egammaHBHERecHit = cms.PSet(
    hbheRecHits = cms.InputTag("hbhereco"),
    maxHcalRecHitSeverity = cms.int32(9),
    recHitEThresholdHB = cms.vdouble(0.4, 0.3, 0.3, 0.3),
    recHitEThresholdHE = cms.vdouble(
        0.1, 0.2, 0.2, 0.2, 0.2,
        0.2, 0.2
    )
)

process.es_electronics_sim = cms.PSet(
    doESNoise = cms.bool(True),
    doFast = cms.bool(True)
)

process.full_102x_chs = cms.PSet(
    JetIdParams = cms.PSet(
        Pt010_Loose = cms.vdouble(-0.97, -0.68, -0.53, -0.47),
        Pt010_Medium = cms.vdouble(0.18, -0.55, -0.42, -0.36),
        Pt010_Tight = cms.vdouble(0.69, -0.35, -0.26, -0.21),
        Pt1020_Loose = cms.vdouble(-0.97, -0.68, -0.53, -0.47),
        Pt1020_Medium = cms.vdouble(0.18, -0.55, -0.42, -0.36),
        Pt1020_Tight = cms.vdouble(0.69, -0.35, -0.26, -0.21),
        Pt2030_Loose = cms.vdouble(-0.97, -0.68, -0.53, -0.47),
        Pt2030_Medium = cms.vdouble(0.18, -0.55, -0.42, -0.36),
        Pt2030_Tight = cms.vdouble(0.69, -0.35, -0.26, -0.21),
        Pt3040_Loose = cms.vdouble(-0.89, -0.52, -0.38, -0.3),
        Pt3040_Medium = cms.vdouble(0.61, -0.35, -0.23, -0.17),
        Pt3040_Tight = cms.vdouble(0.86, -0.1, -0.05, -0.01),
        Pt4050_Loose = cms.vdouble(-0.89, -0.52, -0.38, -0.3),
        Pt4050_Medium = cms.vdouble(0.61, -0.35, -0.23, -0.17),
        Pt4050_Tight = cms.vdouble(0.86, -0.1, -0.05, -0.01)
    ),
    cutBased = cms.bool(False),
    etaBinnedWeights = cms.bool(True),
    impactParTkThreshold = cms.double(1.0),
    label = cms.string('full'),
    nEtaBins = cms.int32(4),
    tmvaMethod = cms.string('JetIDMVAHighPt'),
    tmvaSpectators = cms.vstring(
        'jetPt',
        'jetEta'
    ),
    trainings = cms.VPSet(
        cms.PSet(
            jEtaMax = cms.double(2.5),
            jEtaMin = cms.double(0.0),
            tmvaVariables = cms.vstring(
                'nvtx',
                'beta',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'jetRchg',
                'nParticles',
                'nCharged',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_102X_Eta0p0To2p5_chs_BDT.weights.xml.gz')
        ),
        cms.PSet(
            jEtaMax = cms.double(2.75),
            jEtaMin = cms.double(2.5),
            tmvaVariables = cms.vstring(
                'nvtx',
                'beta',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'jetRchg',
                'nParticles',
                'nCharged',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_102X_Eta2p5To2p75_chs_BDT.weights.xml.gz')
        ),
        cms.PSet(
            jEtaMax = cms.double(3.0),
            jEtaMin = cms.double(2.75),
            tmvaVariables = cms.vstring(
                'nvtx',
                'beta',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'jetRchg',
                'nParticles',
                'nCharged',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_102X_Eta2p75To3p0_chs_BDT.weights.xml.gz')
        ),
        cms.PSet(
            jEtaMax = cms.double(5.0),
            jEtaMin = cms.double(3.0),
            tmvaVariables = cms.vstring(
                'nvtx',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'nParticles',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_102X_Eta3p0To5p0_chs_BDT.weights.xml.gz')
        )
    ),
    version = cms.int32(-1)
)

process.full_102x_chs_wp = cms.PSet(
    Pt010_Loose = cms.vdouble(-0.97, -0.68, -0.53, -0.47),
    Pt010_Medium = cms.vdouble(0.18, -0.55, -0.42, -0.36),
    Pt010_Tight = cms.vdouble(0.69, -0.35, -0.26, -0.21),
    Pt1020_Loose = cms.vdouble(-0.97, -0.68, -0.53, -0.47),
    Pt1020_Medium = cms.vdouble(0.18, -0.55, -0.42, -0.36),
    Pt1020_Tight = cms.vdouble(0.69, -0.35, -0.26, -0.21),
    Pt2030_Loose = cms.vdouble(-0.97, -0.68, -0.53, -0.47),
    Pt2030_Medium = cms.vdouble(0.18, -0.55, -0.42, -0.36),
    Pt2030_Tight = cms.vdouble(0.69, -0.35, -0.26, -0.21),
    Pt3040_Loose = cms.vdouble(-0.89, -0.52, -0.38, -0.3),
    Pt3040_Medium = cms.vdouble(0.61, -0.35, -0.23, -0.17),
    Pt3040_Tight = cms.vdouble(0.86, -0.1, -0.05, -0.01),
    Pt4050_Loose = cms.vdouble(-0.89, -0.52, -0.38, -0.3),
    Pt4050_Medium = cms.vdouble(0.61, -0.35, -0.23, -0.17),
    Pt4050_Tight = cms.vdouble(0.86, -0.1, -0.05, -0.01)
)

process.full_106x_UL16APV_chs = cms.PSet(
    JetIdParams = cms.PSet(
        Pt010_Loose = cms.vdouble(-0.95, -0.7, -0.52, -0.49),
        Pt010_Medium = cms.vdouble(0.2, -0.56, -0.43, -0.38),
        Pt010_Tight = cms.vdouble(0.71, -0.32, -0.3, -0.22),
        Pt1020_Loose = cms.vdouble(-0.95, -0.7, -0.52, -0.49),
        Pt1020_Medium = cms.vdouble(0.2, -0.56, -0.43, -0.38),
        Pt1020_Tight = cms.vdouble(0.71, -0.32, -0.3, -0.22),
        Pt2030_Loose = cms.vdouble(-0.9, -0.57, -0.43, -0.42),
        Pt2030_Medium = cms.vdouble(0.62, -0.39, -0.32, -0.29),
        Pt2030_Tight = cms.vdouble(0.87, -0.08, -0.16, -0.12),
        Pt3040_Loose = cms.vdouble(-0.71, -0.36, -0.29, -0.23),
        Pt3040_Medium = cms.vdouble(0.86, -0.1, -0.15, -0.08),
        Pt3040_Tight = cms.vdouble(0.94, 0.24, 0.05, 0.1),
        Pt4050_Loose = cms.vdouble(-0.42, -0.09, -0.14, -0.02),
        Pt4050_Medium = cms.vdouble(0.93, 0.19, 0.04, 0.12),
        Pt4050_Tight = cms.vdouble(0.97, 0.48, 0.26, 0.29)
    ),
    cutBased = cms.bool(False),
    etaBinnedWeights = cms.bool(True),
    impactParTkThreshold = cms.double(1.0),
    label = cms.string('full'),
    nEtaBins = cms.int32(4),
    tmvaMethod = cms.string('JetIDMVAHighPt'),
    tmvaSpectators = cms.vstring(
        'jetPt',
        'jetEta'
    ),
    trainings = cms.VPSet(
        cms.PSet(
            jEtaMax = cms.double(2.5),
            jEtaMin = cms.double(0.0),
            tmvaVariables = cms.vstring(
                'nvtx',
                'beta',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'jetRchg',
                'nParticles',
                'nCharged',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL16APV_Eta0p0To2p5_chs_BDT.weights.xml.gz')
        ),
        cms.PSet(
            jEtaMax = cms.double(2.75),
            jEtaMin = cms.double(2.5),
            tmvaVariables = cms.vstring(
                'nvtx',
                'beta',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'jetRchg',
                'nParticles',
                'nCharged',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL16APV_Eta2p5To2p75_chs_BDT.weights.xml.gz')
        ),
        cms.PSet(
            jEtaMax = cms.double(3.0),
            jEtaMin = cms.double(2.75),
            tmvaVariables = cms.vstring(
                'nvtx',
                'beta',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'jetRchg',
                'nParticles',
                'nCharged',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL16APV_Eta2p75To3p0_chs_BDT.weights.xml.gz')
        ),
        cms.PSet(
            jEtaMax = cms.double(5.0),
            jEtaMin = cms.double(3.0),
            tmvaVariables = cms.vstring(
                'nvtx',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'nParticles',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL16APV_Eta3p0To5p0_chs_BDT.weights.xml.gz')
        )
    ),
    version = cms.int32(-1)
)

process.full_106x_UL16APV_chs_wp = cms.PSet(
    Pt010_Loose = cms.vdouble(-0.95, -0.7, -0.52, -0.49),
    Pt010_Medium = cms.vdouble(0.2, -0.56, -0.43, -0.38),
    Pt010_Tight = cms.vdouble(0.71, -0.32, -0.3, -0.22),
    Pt1020_Loose = cms.vdouble(-0.95, -0.7, -0.52, -0.49),
    Pt1020_Medium = cms.vdouble(0.2, -0.56, -0.43, -0.38),
    Pt1020_Tight = cms.vdouble(0.71, -0.32, -0.3, -0.22),
    Pt2030_Loose = cms.vdouble(-0.9, -0.57, -0.43, -0.42),
    Pt2030_Medium = cms.vdouble(0.62, -0.39, -0.32, -0.29),
    Pt2030_Tight = cms.vdouble(0.87, -0.08, -0.16, -0.12),
    Pt3040_Loose = cms.vdouble(-0.71, -0.36, -0.29, -0.23),
    Pt3040_Medium = cms.vdouble(0.86, -0.1, -0.15, -0.08),
    Pt3040_Tight = cms.vdouble(0.94, 0.24, 0.05, 0.1),
    Pt4050_Loose = cms.vdouble(-0.42, -0.09, -0.14, -0.02),
    Pt4050_Medium = cms.vdouble(0.93, 0.19, 0.04, 0.12),
    Pt4050_Tight = cms.vdouble(0.97, 0.48, 0.26, 0.29)
)

process.full_106x_UL16_chs = cms.PSet(
    JetIdParams = cms.PSet(
        Pt010_Loose = cms.vdouble(-0.95, -0.7, -0.52, -0.49),
        Pt010_Medium = cms.vdouble(0.2, -0.56, -0.43, -0.38),
        Pt010_Tight = cms.vdouble(0.71, -0.32, -0.3, -0.22),
        Pt1020_Loose = cms.vdouble(-0.95, -0.7, -0.52, -0.49),
        Pt1020_Medium = cms.vdouble(0.2, -0.56, -0.43, -0.38),
        Pt1020_Tight = cms.vdouble(0.71, -0.32, -0.3, -0.22),
        Pt2030_Loose = cms.vdouble(-0.9, -0.57, -0.43, -0.42),
        Pt2030_Medium = cms.vdouble(0.62, -0.39, -0.32, -0.29),
        Pt2030_Tight = cms.vdouble(0.87, -0.08, -0.16, -0.12),
        Pt3040_Loose = cms.vdouble(-0.71, -0.36, -0.29, -0.23),
        Pt3040_Medium = cms.vdouble(0.86, -0.1, -0.15, -0.08),
        Pt3040_Tight = cms.vdouble(0.94, 0.24, 0.05, 0.1),
        Pt4050_Loose = cms.vdouble(-0.42, -0.09, -0.14, -0.02),
        Pt4050_Medium = cms.vdouble(0.93, 0.19, 0.04, 0.12),
        Pt4050_Tight = cms.vdouble(0.97, 0.48, 0.26, 0.29)
    ),
    cutBased = cms.bool(False),
    etaBinnedWeights = cms.bool(True),
    impactParTkThreshold = cms.double(1.0),
    label = cms.string('full'),
    nEtaBins = cms.int32(4),
    tmvaMethod = cms.string('JetIDMVAHighPt'),
    tmvaSpectators = cms.vstring(
        'jetPt',
        'jetEta'
    ),
    trainings = cms.VPSet(
        cms.PSet(
            jEtaMax = cms.double(2.5),
            jEtaMin = cms.double(0.0),
            tmvaVariables = cms.vstring(
                'nvtx',
                'beta',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'jetRchg',
                'nParticles',
                'nCharged',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL16_Eta0p0To2p5_chs_BDT.weights.xml.gz')
        ),
        cms.PSet(
            jEtaMax = cms.double(2.75),
            jEtaMin = cms.double(2.5),
            tmvaVariables = cms.vstring(
                'nvtx',
                'beta',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'jetRchg',
                'nParticles',
                'nCharged',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL16_Eta2p5To2p75_chs_BDT.weights.xml.gz')
        ),
        cms.PSet(
            jEtaMax = cms.double(3.0),
            jEtaMin = cms.double(2.75),
            tmvaVariables = cms.vstring(
                'nvtx',
                'beta',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'jetRchg',
                'nParticles',
                'nCharged',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL16_Eta2p75To3p0_chs_BDT.weights.xml.gz')
        ),
        cms.PSet(
            jEtaMax = cms.double(5.0),
            jEtaMin = cms.double(3.0),
            tmvaVariables = cms.vstring(
                'nvtx',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'nParticles',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL16_Eta3p0To5p0_chs_BDT.weights.xml.gz')
        )
    ),
    version = cms.int32(-1)
)

process.full_106x_UL16_chs_wp = cms.PSet(
    Pt010_Loose = cms.vdouble(-0.95, -0.7, -0.52, -0.49),
    Pt010_Medium = cms.vdouble(0.2, -0.56, -0.43, -0.38),
    Pt010_Tight = cms.vdouble(0.71, -0.32, -0.3, -0.22),
    Pt1020_Loose = cms.vdouble(-0.95, -0.7, -0.52, -0.49),
    Pt1020_Medium = cms.vdouble(0.2, -0.56, -0.43, -0.38),
    Pt1020_Tight = cms.vdouble(0.71, -0.32, -0.3, -0.22),
    Pt2030_Loose = cms.vdouble(-0.9, -0.57, -0.43, -0.42),
    Pt2030_Medium = cms.vdouble(0.62, -0.39, -0.32, -0.29),
    Pt2030_Tight = cms.vdouble(0.87, -0.08, -0.16, -0.12),
    Pt3040_Loose = cms.vdouble(-0.71, -0.36, -0.29, -0.23),
    Pt3040_Medium = cms.vdouble(0.86, -0.1, -0.15, -0.08),
    Pt3040_Tight = cms.vdouble(0.94, 0.24, 0.05, 0.1),
    Pt4050_Loose = cms.vdouble(-0.42, -0.09, -0.14, -0.02),
    Pt4050_Medium = cms.vdouble(0.93, 0.19, 0.04, 0.12),
    Pt4050_Tight = cms.vdouble(0.97, 0.48, 0.26, 0.29)
)

process.full_106x_UL17_chs = cms.PSet(
    JetIdParams = cms.PSet(
        Pt010_Loose = cms.vdouble(-0.95, -0.72, -0.68, -0.47),
        Pt010_Medium = cms.vdouble(0.26, -0.33, -0.54, -0.37),
        Pt010_Tight = cms.vdouble(0.77, 0.38, -0.31, -0.21),
        Pt1020_Loose = cms.vdouble(-0.95, -0.72, -0.68, -0.47),
        Pt1020_Medium = cms.vdouble(0.26, -0.33, -0.54, -0.37),
        Pt1020_Tight = cms.vdouble(0.77, 0.38, -0.31, -0.21),
        Pt2030_Loose = cms.vdouble(-0.88, -0.55, -0.6, -0.43),
        Pt2030_Medium = cms.vdouble(0.68, -0.04, -0.43, -0.3),
        Pt2030_Tight = cms.vdouble(0.9, 0.6, -0.12, -0.13),
        Pt3040_Loose = cms.vdouble(-0.63, -0.18, -0.43, -0.24),
        Pt3040_Medium = cms.vdouble(0.9, 0.36, -0.16, -0.09),
        Pt3040_Tight = cms.vdouble(0.96, 0.82, 0.2, 0.09),
        Pt4050_Loose = cms.vdouble(-0.19, 0.22, -0.13, -0.03),
        Pt4050_Medium = cms.vdouble(0.96, 0.61, 0.14, 0.12),
        Pt4050_Tight = cms.vdouble(0.98, 0.92, 0.47, 0.29)
    ),
    cutBased = cms.bool(False),
    etaBinnedWeights = cms.bool(True),
    impactParTkThreshold = cms.double(1.0),
    label = cms.string('full'),
    nEtaBins = cms.int32(4),
    tmvaMethod = cms.string('JetIDMVAHighPt'),
    tmvaSpectators = cms.vstring(
        'jetPt',
        'jetEta'
    ),
    trainings = cms.VPSet(
        cms.PSet(
            jEtaMax = cms.double(2.5),
            jEtaMin = cms.double(0.0),
            tmvaVariables = cms.vstring(
                'nvtx',
                'beta',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'jetRchg',
                'nParticles',
                'nCharged',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL17_Eta0p0To2p5_chs_BDT.weights.xml.gz')
        ),
        cms.PSet(
            jEtaMax = cms.double(2.75),
            jEtaMin = cms.double(2.5),
            tmvaVariables = cms.vstring(
                'nvtx',
                'beta',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'jetRchg',
                'nParticles',
                'nCharged',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL17_Eta2p5To2p75_chs_BDT.weights.xml.gz')
        ),
        cms.PSet(
            jEtaMax = cms.double(3.0),
            jEtaMin = cms.double(2.75),
            tmvaVariables = cms.vstring(
                'nvtx',
                'beta',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'jetRchg',
                'nParticles',
                'nCharged',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL17_Eta2p75To3p0_chs_BDT.weights.xml.gz')
        ),
        cms.PSet(
            jEtaMax = cms.double(5.0),
            jEtaMin = cms.double(3.0),
            tmvaVariables = cms.vstring(
                'nvtx',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'nParticles',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL17_Eta3p0To5p0_chs_BDT.weights.xml.gz')
        )
    ),
    version = cms.int32(-1)
)

process.full_106x_UL17_chs_wp = cms.PSet(
    Pt010_Loose = cms.vdouble(-0.95, -0.72, -0.68, -0.47),
    Pt010_Medium = cms.vdouble(0.26, -0.33, -0.54, -0.37),
    Pt010_Tight = cms.vdouble(0.77, 0.38, -0.31, -0.21),
    Pt1020_Loose = cms.vdouble(-0.95, -0.72, -0.68, -0.47),
    Pt1020_Medium = cms.vdouble(0.26, -0.33, -0.54, -0.37),
    Pt1020_Tight = cms.vdouble(0.77, 0.38, -0.31, -0.21),
    Pt2030_Loose = cms.vdouble(-0.88, -0.55, -0.6, -0.43),
    Pt2030_Medium = cms.vdouble(0.68, -0.04, -0.43, -0.3),
    Pt2030_Tight = cms.vdouble(0.9, 0.6, -0.12, -0.13),
    Pt3040_Loose = cms.vdouble(-0.63, -0.18, -0.43, -0.24),
    Pt3040_Medium = cms.vdouble(0.9, 0.36, -0.16, -0.09),
    Pt3040_Tight = cms.vdouble(0.96, 0.82, 0.2, 0.09),
    Pt4050_Loose = cms.vdouble(-0.19, 0.22, -0.13, -0.03),
    Pt4050_Medium = cms.vdouble(0.96, 0.61, 0.14, 0.12),
    Pt4050_Tight = cms.vdouble(0.98, 0.92, 0.47, 0.29)
)

process.full_106x_UL18_chs = cms.PSet(
    JetIdParams = cms.PSet(
        Pt010_Loose = cms.vdouble(-0.95, -0.72, -0.68, -0.47),
        Pt010_Medium = cms.vdouble(0.26, -0.33, -0.54, -0.37),
        Pt010_Tight = cms.vdouble(0.77, 0.38, -0.31, -0.21),
        Pt1020_Loose = cms.vdouble(-0.95, -0.72, -0.68, -0.47),
        Pt1020_Medium = cms.vdouble(0.26, -0.33, -0.54, -0.37),
        Pt1020_Tight = cms.vdouble(0.77, 0.38, -0.31, -0.21),
        Pt2030_Loose = cms.vdouble(-0.88, -0.55, -0.6, -0.43),
        Pt2030_Medium = cms.vdouble(0.68, -0.04, -0.43, -0.3),
        Pt2030_Tight = cms.vdouble(0.9, 0.6, -0.12, -0.13),
        Pt3040_Loose = cms.vdouble(-0.63, -0.18, -0.43, -0.24),
        Pt3040_Medium = cms.vdouble(0.9, 0.36, -0.16, -0.09),
        Pt3040_Tight = cms.vdouble(0.96, 0.82, 0.2, 0.09),
        Pt4050_Loose = cms.vdouble(-0.19, 0.22, -0.13, -0.03),
        Pt4050_Medium = cms.vdouble(0.96, 0.61, 0.14, 0.12),
        Pt4050_Tight = cms.vdouble(0.98, 0.92, 0.47, 0.29)
    ),
    cutBased = cms.bool(False),
    etaBinnedWeights = cms.bool(True),
    impactParTkThreshold = cms.double(1.0),
    label = cms.string('full'),
    nEtaBins = cms.int32(4),
    tmvaMethod = cms.string('JetIDMVAHighPt'),
    tmvaSpectators = cms.vstring(
        'jetPt',
        'jetEta'
    ),
    trainings = cms.VPSet(
        cms.PSet(
            jEtaMax = cms.double(2.5),
            jEtaMin = cms.double(0.0),
            tmvaVariables = cms.vstring(
                'nvtx',
                'beta',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'jetRchg',
                'nParticles',
                'nCharged',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL18_Eta0p0To2p5_chs_BDT.weights.xml.gz')
        ),
        cms.PSet(
            jEtaMax = cms.double(2.75),
            jEtaMin = cms.double(2.5),
            tmvaVariables = cms.vstring(
                'nvtx',
                'beta',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'jetRchg',
                'nParticles',
                'nCharged',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL18_Eta2p5To2p75_chs_BDT.weights.xml.gz')
        ),
        cms.PSet(
            jEtaMax = cms.double(3.0),
            jEtaMin = cms.double(2.75),
            tmvaVariables = cms.vstring(
                'nvtx',
                'beta',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'jetRchg',
                'nParticles',
                'nCharged',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL18_Eta2p75To3p0_chs_BDT.weights.xml.gz')
        ),
        cms.PSet(
            jEtaMax = cms.double(5.0),
            jEtaMin = cms.double(3.0),
            tmvaVariables = cms.vstring(
                'nvtx',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'nParticles',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL18_Eta3p0To5p0_chs_BDT.weights.xml.gz')
        )
    ),
    version = cms.int32(-1)
)

process.full_106x_UL18_chs_wp = cms.PSet(
    Pt010_Loose = cms.vdouble(-0.95, -0.72, -0.68, -0.47),
    Pt010_Medium = cms.vdouble(0.26, -0.33, -0.54, -0.37),
    Pt010_Tight = cms.vdouble(0.77, 0.38, -0.31, -0.21),
    Pt1020_Loose = cms.vdouble(-0.95, -0.72, -0.68, -0.47),
    Pt1020_Medium = cms.vdouble(0.26, -0.33, -0.54, -0.37),
    Pt1020_Tight = cms.vdouble(0.77, 0.38, -0.31, -0.21),
    Pt2030_Loose = cms.vdouble(-0.88, -0.55, -0.6, -0.43),
    Pt2030_Medium = cms.vdouble(0.68, -0.04, -0.43, -0.3),
    Pt2030_Tight = cms.vdouble(0.9, 0.6, -0.12, -0.13),
    Pt3040_Loose = cms.vdouble(-0.63, -0.18, -0.43, -0.24),
    Pt3040_Medium = cms.vdouble(0.9, 0.36, -0.16, -0.09),
    Pt3040_Tight = cms.vdouble(0.96, 0.82, 0.2, 0.09),
    Pt4050_Loose = cms.vdouble(-0.19, 0.22, -0.13, -0.03),
    Pt4050_Medium = cms.vdouble(0.96, 0.61, 0.14, 0.12),
    Pt4050_Tight = cms.vdouble(0.98, 0.92, 0.47, 0.29)
)

process.full_81x_chs = cms.PSet(
    JetIdParams = cms.PSet(
        Pt010_Loose = cms.vdouble(-0.97, -0.68, -0.53, -0.47),
        Pt010_Medium = cms.vdouble(0.18, -0.55, -0.42, -0.36),
        Pt010_Tight = cms.vdouble(0.69, -0.35, -0.26, -0.21),
        Pt1020_Loose = cms.vdouble(-0.97, -0.68, -0.53, -0.47),
        Pt1020_Medium = cms.vdouble(0.18, -0.55, -0.42, -0.36),
        Pt1020_Tight = cms.vdouble(0.69, -0.35, -0.26, -0.21),
        Pt2030_Loose = cms.vdouble(-0.97, -0.68, -0.53, -0.47),
        Pt2030_Medium = cms.vdouble(0.18, -0.55, -0.42, -0.36),
        Pt2030_Tight = cms.vdouble(0.69, -0.35, -0.26, -0.21),
        Pt3040_Loose = cms.vdouble(-0.89, -0.52, -0.38, -0.3),
        Pt3040_Medium = cms.vdouble(0.61, -0.35, -0.23, -0.17),
        Pt3040_Tight = cms.vdouble(0.86, -0.1, -0.05, -0.01),
        Pt4050_Loose = cms.vdouble(-0.89, -0.52, -0.38, -0.3),
        Pt4050_Medium = cms.vdouble(0.61, -0.35, -0.23, -0.17),
        Pt4050_Tight = cms.vdouble(0.86, -0.1, -0.05, -0.01)
    ),
    cutBased = cms.bool(False),
    etaBinnedWeights = cms.bool(True),
    impactParTkThreshold = cms.double(1.0),
    label = cms.string('full'),
    nEtaBins = cms.int32(4),
    tmvaMethod = cms.string('JetIDMVAHighPt'),
    tmvaSpectators = cms.vstring(
        'jetPt',
        'jetEta'
    ),
    trainings = cms.VPSet(
        cms.PSet(
            jEtaMax = cms.double(2.5),
            jEtaMin = cms.double(0.0),
            tmvaVariables = cms.vstring(
                'nvtx',
                'dR2Mean',
                'nParticles',
                'nCharged',
                'majW',
                'minW',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'ptD',
                'beta',
                'pull',
                'jetR',
                'jetRchg'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_80XvarFix_Eta0to2p5_BDT.weights.xml.gz')
        ),
        cms.PSet(
            jEtaMax = cms.double(2.75),
            jEtaMin = cms.double(2.5),
            tmvaVariables = cms.vstring(
                'nvtx',
                'dR2Mean',
                'nParticles',
                'nCharged',
                'majW',
                'minW',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'ptD',
                'beta',
                'pull',
                'jetR',
                'jetRchg'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_80XvarFix_Eta2p5to2p75_BDT.weights.xml.gz')
        ),
        cms.PSet(
            jEtaMax = cms.double(3.0),
            jEtaMin = cms.double(2.75),
            tmvaVariables = cms.vstring(
                'nvtx',
                'dR2Mean',
                'nParticles',
                'nCharged',
                'majW',
                'minW',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'ptD',
                'beta',
                'pull',
                'jetR',
                'jetRchg'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_80XvarFix_Eta2p75to3_BDT.weights.xml.gz')
        ),
        cms.PSet(
            jEtaMax = cms.double(5.0),
            jEtaMin = cms.double(3.0),
            tmvaVariables = cms.vstring(
                'nvtx',
                'dR2Mean',
                'nParticles',
                'majW',
                'minW',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'ptD',
                'pull',
                'jetR'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_80XvarFix_Eta3to5_BDT.weights.xml.gz')
        )
    ),
    version = cms.int32(-1)
)

process.full_81x_chs_wp = cms.PSet(
    Pt010_Loose = cms.vdouble(-0.97, -0.68, -0.53, -0.47),
    Pt010_Medium = cms.vdouble(0.18, -0.55, -0.42, -0.36),
    Pt010_Tight = cms.vdouble(0.69, -0.35, -0.26, -0.21),
    Pt1020_Loose = cms.vdouble(-0.97, -0.68, -0.53, -0.47),
    Pt1020_Medium = cms.vdouble(0.18, -0.55, -0.42, -0.36),
    Pt1020_Tight = cms.vdouble(0.69, -0.35, -0.26, -0.21),
    Pt2030_Loose = cms.vdouble(-0.97, -0.68, -0.53, -0.47),
    Pt2030_Medium = cms.vdouble(0.18, -0.55, -0.42, -0.36),
    Pt2030_Tight = cms.vdouble(0.69, -0.35, -0.26, -0.21),
    Pt3040_Loose = cms.vdouble(-0.89, -0.52, -0.38, -0.3),
    Pt3040_Medium = cms.vdouble(0.61, -0.35, -0.23, -0.17),
    Pt3040_Tight = cms.vdouble(0.86, -0.1, -0.05, -0.01),
    Pt4050_Loose = cms.vdouble(-0.89, -0.52, -0.38, -0.3),
    Pt4050_Medium = cms.vdouble(0.61, -0.35, -0.23, -0.17),
    Pt4050_Tight = cms.vdouble(0.86, -0.1, -0.05, -0.01)
)

process.full_94x_chs = cms.PSet(
    JetIdParams = cms.PSet(
        Pt010_Loose = cms.vdouble(-0.97, -0.68, -0.53, -0.47),
        Pt010_Medium = cms.vdouble(0.18, -0.55, -0.42, -0.36),
        Pt010_Tight = cms.vdouble(0.69, -0.35, -0.26, -0.21),
        Pt1020_Loose = cms.vdouble(-0.97, -0.68, -0.53, -0.47),
        Pt1020_Medium = cms.vdouble(0.18, -0.55, -0.42, -0.36),
        Pt1020_Tight = cms.vdouble(0.69, -0.35, -0.26, -0.21),
        Pt2030_Loose = cms.vdouble(-0.97, -0.68, -0.53, -0.47),
        Pt2030_Medium = cms.vdouble(0.18, -0.55, -0.42, -0.36),
        Pt2030_Tight = cms.vdouble(0.69, -0.35, -0.26, -0.21),
        Pt3040_Loose = cms.vdouble(-0.89, -0.52, -0.38, -0.3),
        Pt3040_Medium = cms.vdouble(0.61, -0.35, -0.23, -0.17),
        Pt3040_Tight = cms.vdouble(0.86, -0.1, -0.05, -0.01),
        Pt4050_Loose = cms.vdouble(-0.89, -0.52, -0.38, -0.3),
        Pt4050_Medium = cms.vdouble(0.61, -0.35, -0.23, -0.17),
        Pt4050_Tight = cms.vdouble(0.86, -0.1, -0.05, -0.01)
    ),
    cutBased = cms.bool(False),
    etaBinnedWeights = cms.bool(True),
    impactParTkThreshold = cms.double(1.0),
    label = cms.string('full'),
    nEtaBins = cms.int32(4),
    tmvaMethod = cms.string('JetIDMVAHighPt'),
    tmvaSpectators = cms.vstring(
        'jetPt',
        'jetEta'
    ),
    trainings = cms.VPSet(
        cms.PSet(
            jEtaMax = cms.double(2.5),
            jEtaMin = cms.double(0.0),
            tmvaVariables = cms.vstring(
                'nvtx',
                'beta',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'jetRchg',
                'nParticles',
                'nCharged',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_94X_Eta0p0To2p5_chs_BDT.weights.xml.gz')
        ),
        cms.PSet(
            jEtaMax = cms.double(2.75),
            jEtaMin = cms.double(2.5),
            tmvaVariables = cms.vstring(
                'nvtx',
                'beta',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'jetRchg',
                'nParticles',
                'nCharged',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_94X_Eta2p5To2p75_chs_BDT.weights.xml.gz')
        ),
        cms.PSet(
            jEtaMax = cms.double(3.0),
            jEtaMin = cms.double(2.75),
            tmvaVariables = cms.vstring(
                'nvtx',
                'beta',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'jetRchg',
                'nParticles',
                'nCharged',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_94X_Eta2p75To3p0_chs_BDT.weights.xml.gz')
        ),
        cms.PSet(
            jEtaMax = cms.double(5.0),
            jEtaMin = cms.double(3.0),
            tmvaVariables = cms.vstring(
                'nvtx',
                'dR2Mean',
                'frac01',
                'frac02',
                'frac03',
                'frac04',
                'majW',
                'minW',
                'jetR',
                'nParticles',
                'ptD',
                'pull'
            ),
            tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_94X_Eta3p0To5p0_chs_BDT.weights.xml.gz')
        )
    ),
    version = cms.int32(-1)
)

process.full_94x_chs_wp = cms.PSet(
    Pt010_Loose = cms.vdouble(-0.97, -0.68, -0.53, -0.47),
    Pt010_Medium = cms.vdouble(0.18, -0.55, -0.42, -0.36),
    Pt010_Tight = cms.vdouble(0.69, -0.35, -0.26, -0.21),
    Pt1020_Loose = cms.vdouble(-0.97, -0.68, -0.53, -0.47),
    Pt1020_Medium = cms.vdouble(0.18, -0.55, -0.42, -0.36),
    Pt1020_Tight = cms.vdouble(0.69, -0.35, -0.26, -0.21),
    Pt2030_Loose = cms.vdouble(-0.97, -0.68, -0.53, -0.47),
    Pt2030_Medium = cms.vdouble(0.18, -0.55, -0.42, -0.36),
    Pt2030_Tight = cms.vdouble(0.69, -0.35, -0.26, -0.21),
    Pt3040_Loose = cms.vdouble(-0.89, -0.52, -0.38, -0.3),
    Pt3040_Medium = cms.vdouble(0.61, -0.35, -0.23, -0.17),
    Pt3040_Tight = cms.vdouble(0.86, -0.1, -0.05, -0.01),
    Pt4050_Loose = cms.vdouble(-0.89, -0.52, -0.38, -0.3),
    Pt4050_Medium = cms.vdouble(0.61, -0.35, -0.23, -0.17),
    Pt4050_Tight = cms.vdouble(0.86, -0.1, -0.05, -0.01)
)

process.ghostTrackCommon = cms.PSet(
    charmCut = cms.double(1.5),
    minimumTrackWeight = cms.double(0.5),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip2dSig')
)

process.gsfElectron8XObjectUpdateModifier = cms.PSet(
    ecalRecHitsEB = cms.InputTag("reducedEcalRecHitsEB"),
    ecalRecHitsEE = cms.InputTag("reducedEcalRecHitsEE"),
    modifierName = cms.string('EG8XObjectUpdateModifier')
)

process.gsfElectron9X105XUpdateModifier = cms.PSet(
    allowGsfTrackForConvs = cms.bool(False),
    beamspot = cms.InputTag("offlineBeamSpot"),
    conversions = cms.InputTag("allConversions"),
    ecalRecHitsEB = cms.InputTag("reducedEcalRecHitsEB"),
    ecalRecHitsEE = cms.InputTag("reducedEcalRecHitsEE"),
    eleCollVMsAreKeyedTo = cms.InputTag("gedGsfElectrons"),
    eleTrkIso = cms.InputTag("heepIDVarValueMapsAOD","eleTrkPtIso"),
    eleTrkIso04 = cms.InputTag("heepIDVarValueMapsAOD","eleTrkPtIso04"),
    modifierName = cms.string('EG9X105XObjectUpdateModifier'),
    phoChargedHadIso = cms.InputTag("photonIDValueMapProducer","phoChargedIsolation"),
    phoChargedHadPFPVIso = cms.InputTag("egmPhotonIsolation","h+-DR030-"),
    phoChargedHadWorstVtxConeVetoIso = cms.InputTag("photonIDValueMapProducer","phoWorstChargedIsolationConeVeto"),
    phoChargedHadWorstVtxIso = cms.InputTag("photonIDValueMapProducer","phoWorstChargedIsolation"),
    phoCollVMsAreKeyedTo = cms.InputTag("slimmedPhotons","","@skipCurrentProcess"),
    phoNeutralHadIso = cms.InputTag("photonIDValueMapProducer","phoNeutralHadronIsolation"),
    phoPhotonIso = cms.InputTag("photonIDValueMapProducer","phoPhotonIsolation"),
    updateChargedHadPFPVIso = cms.bool(True)
)

process.hcalDigitizer = cms.PSet(
    DelivLuminosity = cms.double(0),
    HBDarkening = cms.bool(False),
    HEDarkening = cms.bool(False),
    HFDarkening = cms.bool(False),
    HFRecalParameterBlock = cms.PSet(
        HFdepthOneParameterA = cms.vdouble(
            0.004123, 0.00602, 0.008201, 0.010489, 0.013379,
            0.016997, 0.021464, 0.027371, 0.034195, 0.044807,
            0.058939, 0.125497
        ),
        HFdepthOneParameterB = cms.vdouble(
            -4e-06, -2e-06, 0.0, 4e-06, 1.5e-05,
            2.6e-05, 6.3e-05, 8.4e-05, 0.00016, 0.000107,
            0.000425, 0.000209
        ),
        HFdepthTwoParameterA = cms.vdouble(
            0.002861, 0.004168, 0.0064, 0.008388, 0.011601,
            0.014425, 0.018633, 0.023232, 0.028274, 0.035447,
            0.051579, 0.086593
        ),
        HFdepthTwoParameterB = cms.vdouble(
            -2e-06, -0.0, -7e-06, -6e-06, -2e-06,
            1e-06, 1.9e-05, 3.1e-05, 6.7e-05, 1.2e-05,
            0.000157, -3e-06
        )
    ),
    HcalPreMixStage1 = cms.bool(False),
    HcalPreMixStage2 = cms.bool(False),
    TestNumbering = cms.bool(True),
    accumulatorType = cms.string('HcalDigiProducer'),
    debugCaloSamples = cms.bool(False),
    doEmpty = cms.bool(True),
    doHFWindow = cms.bool(False),
    doIonFeedback = cms.bool(True),
    doNeutralDensityFilter = cms.bool(True),
    doNoise = cms.bool(True),
    doThermalNoise = cms.bool(True),
    doTimeSlew = cms.bool(True),
    hb = cms.PSet(
        binOfMaximum = cms.int32(6),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(True),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(
            125.44, 125.54, 125.32, 125.13, 124.46,
            125.01, 125.22, 125.48, 124.45, 125.9,
            125.83, 127.01, 126.82, 129.73, 131.83,
            143.52
        ),
        simHitToPhotoelectrons = cms.double(2000.0),
        sipmTau = cms.double(10.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(18.7),
        timePhase = cms.double(6.0),
        timeSmearing = cms.bool(True)
    ),
    he = cms.PSet(
        binOfMaximum = cms.int32(6),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(True),
        firstRing = cms.int32(16),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(
            210.55, 197.93, 186.12, 189.64, 189.63,
            190.28, 189.61, 189.6, 190.12, 191.22,
            190.9, 193.06, 188.42, 188.42
        ),
        simHitToPhotoelectrons = cms.double(2000.0),
        sipmTau = cms.double(10.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(18.7),
        timePhase = cms.double(6.0),
        timeSmearing = cms.bool(True)
    ),
    hf1 = cms.PSet(
        binOfMaximum = cms.int32(2),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        photoelectronsToAnalog = cms.double(2.79),
        readoutFrameSize = cms.int32(3),
        samplingFactor = cms.double(0.37),
        simHitToPhotoelectrons = cms.double(6.0),
        sipmTau = cms.double(0.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(3.0),
        timePhase = cms.double(9.0)
    ),
    hf2 = cms.PSet(
        binOfMaximum = cms.int32(2),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        photoelectronsToAnalog = cms.double(1.843),
        readoutFrameSize = cms.int32(3),
        samplingFactor = cms.double(0.37),
        simHitToPhotoelectrons = cms.double(6.0),
        sipmTau = cms.double(0.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(3.0),
        timePhase = cms.double(8.0)
    ),
    hitsProducer = cms.string('g4SimHits'),
    ho = cms.PSet(
        binOfMaximum = cms.int32(5),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(
            231.0, 231.0, 231.0, 231.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0
        ),
        siPMCode = cms.int32(1),
        simHitToPhotoelectrons = cms.double(4000.0),
        sipmTau = cms.double(5.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(-999.0),
        timePhase = cms.double(5.0),
        timeSmearing = cms.bool(False)
    ),
    hoHamamatsu = cms.PSet(
        binOfMaximum = cms.int32(5),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(
            231.0, 231.0, 231.0, 231.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0
        ),
        siPMCode = cms.int32(2),
        simHitToPhotoelectrons = cms.double(4000.0),
        sipmTau = cms.double(5.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(-999.0),
        timePhase = cms.double(5.0),
        timeSmearing = cms.bool(False)
    ),
    hoZecotek = cms.PSet(
        binOfMaximum = cms.int32(5),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(
            231.0, 231.0, 231.0, 231.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0
        ),
        siPMCode = cms.int32(2),
        simHitToPhotoelectrons = cms.double(4000.0),
        sipmTau = cms.double(5.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(-999.0),
        timePhase = cms.double(5.0),
        timeSmearing = cms.bool(False)
    ),
    ignoreGeantTime = cms.bool(False),
    injectTestHits = cms.bool(False),
    injectTestHitsCells = cms.vint32(),
    injectTestHitsEnergy = cms.vdouble(),
    injectTestHitsTime = cms.vdouble(),
    killHE = cms.bool(False),
    makeDigiSimLinks = cms.untracked.bool(False),
    minFCToDelay = cms.double(5.0),
    zdc = cms.PSet(
        binOfMaximum = cms.int32(5),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        photoelectronsToAnalog = cms.double(1.843),
        readoutFrameSize = cms.int32(10),
        samplingFactor = cms.double(1.0),
        simHitToPhotoelectrons = cms.double(6.0),
        sipmTau = cms.double(0.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(-999.0),
        timePhase = cms.double(-4.0)
    )
)

process.hcalSimBlock = cms.PSet(
    DelivLuminosity = cms.double(0),
    HBDarkening = cms.bool(False),
    HEDarkening = cms.bool(False),
    HFDarkening = cms.bool(False),
    HFRecalParameterBlock = cms.PSet(
        HFdepthOneParameterA = cms.vdouble(
            0.004123, 0.00602, 0.008201, 0.010489, 0.013379,
            0.016997, 0.021464, 0.027371, 0.034195, 0.044807,
            0.058939, 0.125497
        ),
        HFdepthOneParameterB = cms.vdouble(
            -4e-06, -2e-06, 0.0, 4e-06, 1.5e-05,
            2.6e-05, 6.3e-05, 8.4e-05, 0.00016, 0.000107,
            0.000425, 0.000209
        ),
        HFdepthTwoParameterA = cms.vdouble(
            0.002861, 0.004168, 0.0064, 0.008388, 0.011601,
            0.014425, 0.018633, 0.023232, 0.028274, 0.035447,
            0.051579, 0.086593
        ),
        HFdepthTwoParameterB = cms.vdouble(
            -2e-06, -0.0, -7e-06, -6e-06, -2e-06,
            1e-06, 1.9e-05, 3.1e-05, 6.7e-05, 1.2e-05,
            0.000157, -3e-06
        )
    ),
    HcalPreMixStage1 = cms.bool(False),
    HcalPreMixStage2 = cms.bool(False),
    TestNumbering = cms.bool(True),
    debugCaloSamples = cms.bool(False),
    doEmpty = cms.bool(True),
    doHFWindow = cms.bool(False),
    doIonFeedback = cms.bool(True),
    doNeutralDensityFilter = cms.bool(True),
    doNoise = cms.bool(True),
    doThermalNoise = cms.bool(True),
    doTimeSlew = cms.bool(True),
    hb = cms.PSet(
        binOfMaximum = cms.int32(6),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(True),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(
            125.44, 125.54, 125.32, 125.13, 124.46,
            125.01, 125.22, 125.48, 124.45, 125.9,
            125.83, 127.01, 126.82, 129.73, 131.83,
            143.52
        ),
        simHitToPhotoelectrons = cms.double(2000.0),
        sipmTau = cms.double(10.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(18.7),
        timePhase = cms.double(6.0),
        timeSmearing = cms.bool(True)
    ),
    he = cms.PSet(
        binOfMaximum = cms.int32(6),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(True),
        firstRing = cms.int32(16),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(
            210.55, 197.93, 186.12, 189.64, 189.63,
            190.28, 189.61, 189.6, 190.12, 191.22,
            190.9, 193.06, 188.42, 188.42
        ),
        simHitToPhotoelectrons = cms.double(2000.0),
        sipmTau = cms.double(10.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(18.7),
        timePhase = cms.double(6.0),
        timeSmearing = cms.bool(True)
    ),
    hf1 = cms.PSet(
        binOfMaximum = cms.int32(2),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        photoelectronsToAnalog = cms.double(2.79),
        readoutFrameSize = cms.int32(3),
        samplingFactor = cms.double(0.37),
        simHitToPhotoelectrons = cms.double(6.0),
        sipmTau = cms.double(0.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(3.0),
        timePhase = cms.double(9.0)
    ),
    hf2 = cms.PSet(
        binOfMaximum = cms.int32(2),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        photoelectronsToAnalog = cms.double(1.843),
        readoutFrameSize = cms.int32(3),
        samplingFactor = cms.double(0.37),
        simHitToPhotoelectrons = cms.double(6.0),
        sipmTau = cms.double(0.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(3.0),
        timePhase = cms.double(8.0)
    ),
    hitsProducer = cms.string('g4SimHits'),
    ho = cms.PSet(
        binOfMaximum = cms.int32(5),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(
            231.0, 231.0, 231.0, 231.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0
        ),
        siPMCode = cms.int32(1),
        simHitToPhotoelectrons = cms.double(4000.0),
        sipmTau = cms.double(5.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(-999.0),
        timePhase = cms.double(5.0),
        timeSmearing = cms.bool(False)
    ),
    hoHamamatsu = cms.PSet(
        binOfMaximum = cms.int32(5),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(
            231.0, 231.0, 231.0, 231.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0
        ),
        siPMCode = cms.int32(2),
        simHitToPhotoelectrons = cms.double(4000.0),
        sipmTau = cms.double(5.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(-999.0),
        timePhase = cms.double(5.0),
        timeSmearing = cms.bool(False)
    ),
    hoZecotek = cms.PSet(
        binOfMaximum = cms.int32(5),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(
            231.0, 231.0, 231.0, 231.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0
        ),
        siPMCode = cms.int32(2),
        simHitToPhotoelectrons = cms.double(4000.0),
        sipmTau = cms.double(5.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(-999.0),
        timePhase = cms.double(5.0),
        timeSmearing = cms.bool(False)
    ),
    ignoreGeantTime = cms.bool(False),
    injectTestHits = cms.bool(False),
    injectTestHitsCells = cms.vint32(),
    injectTestHitsEnergy = cms.vdouble(),
    injectTestHitsTime = cms.vdouble(),
    killHE = cms.bool(False),
    minFCToDelay = cms.double(5.0),
    zdc = cms.PSet(
        binOfMaximum = cms.int32(5),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        photoelectronsToAnalog = cms.double(1.843),
        readoutFrameSize = cms.int32(10),
        samplingFactor = cms.double(1.0),
        simHitToPhotoelectrons = cms.double(6.0),
        sipmTau = cms.double(0.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(-999.0),
        timePhase = cms.double(-4.0)
    )
)

process.hfnoseDigitizer = cms.PSet(
    NoiseGeneration_Method = cms.bool(True),
    accumulatorType = cms.string('HGCDigiProducer'),
    bxTime = cms.double(25),
    digiCfg = cms.PSet(
        cceParams = cms.PSet(
            refToPSet_ = cms.string('HGCAL_cceParams_toUse')
        ),
        chargeCollectionEfficiencies = cms.PSet(
            refToPSet_ = cms.string('HGCAL_chargeCollectionEfficiencies')
        ),
        doTimeSamples = cms.bool(False),
        feCfg = cms.PSet(
            adcNbits = cms.uint32(10),
            adcPulse = cms.vdouble(
                0.0, 0.017, 0.817, 0.163, 0.003,
                0.0
            ),
            adcSaturation_fC = cms.double(100),
            adcThreshold_fC = cms.double(0.672),
            fwVersion = cms.uint32(2),
            jitterConstant_ns = cms.vdouble(0.02, 0.02, 0.02),
            jitterNoise_ns = cms.vdouble(5.0, 5.0, 5.0),
            pulseAvgT = cms.vdouble(
                0.0, 23.42298, 13.16733, 6.41062, 5.03946,
                4.532
            ),
            targetMIPvalue_ADC = cms.uint32(10),
            tdcChargeDrainParameterisation = cms.vdouble(
                -919.13, 365.36, -14.1, 0.2, -21.85,
                49.39, 22.21, 0.8, -0.28, 27.14,
                43.95, 3.89048
            ),
            tdcForToAOnset_fC = cms.vdouble(12.0, 12.0, 12.0),
            tdcNbits = cms.uint32(12),
            tdcOnset_fC = cms.double(60),
            tdcResolutionInPs = cms.double(0.001),
            tdcSaturation_fC = cms.double(10000),
            toaLSB_ns = cms.double(0.0244),
            toaMode = cms.uint32(1)
        ),
        ileakParam = cms.PSet(
            refToPSet_ = cms.string('HGCAL_ileakParam_toUse')
        ),
        keV2fC = cms.double(0.044259),
        noise_fC = cms.PSet(
            refToPSet_ = cms.string('HFNose_noise_fC')
        ),
        thresholdFollowsMIP = cms.bool(True)
    ),
    digiCollection = cms.string('HFNoseDigis'),
    digitizationType = cms.uint32(0),
    digitizer = cms.string('HFNoseDigitizer'),
    eVPerEleHolePair = cms.double(3.62),
    hitCollection = cms.string('HFNoseHits'),
    hitsProducer = cms.string('g4SimHits'),
    makeDigiSimLinks = cms.bool(False),
    maxSimHitsAccTime = cms.uint32(100),
    premixStage1 = cms.bool(False),
    premixStage1MaxCharge = cms.double(1000000.0),
    premixStage1MinCharge = cms.double(0),
    tofDelay = cms.double(-33),
    useAllChannels = cms.bool(True),
    verbosity = cms.untracked.uint32(0)
)

process.hgceeDigitizer = cms.PSet(
    NoiseGeneration_Method = cms.bool(True),
    accumulatorType = cms.string('HGCDigiProducer'),
    bxTime = cms.double(25),
    digiCfg = cms.PSet(
        cceParams = cms.PSet(
            refToPSet_ = cms.string('HGCAL_cceParams_toUse')
        ),
        chargeCollectionEfficiencies = cms.PSet(
            refToPSet_ = cms.string('HGCAL_chargeCollectionEfficiencies')
        ),
        doTimeSamples = cms.bool(False),
        feCfg = cms.PSet(
            adcNbits = cms.uint32(10),
            adcPulse = cms.vdouble(
                0.0, 0.017, 0.817, 0.163, 0.003,
                0.0
            ),
            adcSaturation_fC = cms.double(100),
            adcThreshold_fC = cms.double(0.672),
            fwVersion = cms.uint32(2),
            jitterConstant_ns = cms.vdouble(0.02, 0.02, 0.02),
            jitterNoise_ns = cms.vdouble(5.0, 5.0, 5.0),
            pulseAvgT = cms.vdouble(
                0.0, 23.42298, 13.16733, 6.41062, 5.03946,
                4.532
            ),
            targetMIPvalue_ADC = cms.uint32(10),
            tdcChargeDrainParameterisation = cms.vdouble(
                -919.13, 365.36, -14.1, 0.2, -21.85,
                49.39, 22.21, 0.8, -0.28, 27.14,
                43.95, 3.89048
            ),
            tdcForToAOnset_fC = cms.vdouble(12.0, 12.0, 12.0),
            tdcNbits = cms.uint32(12),
            tdcOnset_fC = cms.double(60),
            tdcResolutionInPs = cms.double(0.001),
            tdcSaturation_fC = cms.double(10000),
            toaLSB_ns = cms.double(0.0244),
            toaMode = cms.uint32(1)
        ),
        ileakParam = cms.PSet(
            refToPSet_ = cms.string('HGCAL_ileakParam_toUse')
        ),
        keV2fC = cms.double(0.044259),
        noise_fC = cms.PSet(
            refToPSet_ = cms.string('HGCAL_noise_fC')
        ),
        thresholdFollowsMIP = cms.bool(True)
    ),
    digiCollection = cms.string('HGCDigisEE'),
    digitizationType = cms.uint32(0),
    digitizer = cms.string('HGCEEDigitizer'),
    eVPerEleHolePair = cms.double(3.62),
    hitCollection = cms.string('HGCHitsEE'),
    hitsProducer = cms.string('g4SimHits'),
    makeDigiSimLinks = cms.bool(False),
    maxSimHitsAccTime = cms.uint32(100),
    premixStage1 = cms.bool(False),
    premixStage1MaxCharge = cms.double(1000000.0),
    premixStage1MinCharge = cms.double(0),
    tofDelay = cms.double(-9),
    useAllChannels = cms.bool(True),
    verbosity = cms.untracked.uint32(0)
)

process.hgchebackDigitizer = cms.PSet(
    NoiseGeneration_Method = cms.bool(True),
    accumulatorType = cms.string('HGCDigiProducer'),
    bxTime = cms.double(25),
    digiCfg = cms.PSet(
        algo = cms.uint32(2),
        doTimeSamples = cms.bool(False),
        feCfg = cms.PSet(
            adcNbits = cms.uint32(10),
            adcPulse = cms.vdouble(
                0.0, 0.017, 0.817, 0.163, 0.003,
                0.0
            ),
            adcSaturation_fC = cms.double(68.75),
            adcThreshold_fC = cms.double(0.5),
            fwVersion = cms.uint32(2),
            jitterConstant_ns = cms.vdouble(0.02, 0.02, 0.02),
            jitterNoise_ns = cms.vdouble(5.0, 5.0, 5.0),
            pulseAvgT = cms.vdouble(
                0.0, 23.42298, 13.16733, 6.41062, 5.03946,
                4.532
            ),
            targetMIPvalue_ADC = cms.uint32(15),
            tdcChargeDrainParameterisation = cms.vdouble(
                -919.13, 365.36, -14.1, 0.2, -21.85,
                49.39, 22.21, 0.8, -0.28, 27.14,
                43.95, 3.89048
            ),
            tdcForToAOnset_fC = cms.vdouble(12.0, 12.0, 12.0),
            tdcNbits = cms.uint32(12),
            tdcOnset_fC = cms.double(55),
            tdcResolutionInPs = cms.double(0.001),
            tdcSaturation_fC = cms.double(1000),
            toaLSB_ns = cms.double(0.0244),
            toaMode = cms.uint32(1)
        ),
        keV2MIP = cms.double(0.0014814814814814814),
        nPEperMIP = cms.double(21.0),
        nTotalPE = cms.double(7500),
        noise = cms.PSet(
            refToPSet_ = cms.string('HGCAL_noise_heback')
        ),
        sdPixels = cms.double(1e-06),
        thresholdFollowsMIP = cms.bool(True)
    ),
    digiCollection = cms.string('HGCDigisHEback'),
    digitizationType = cms.uint32(1),
    digitizer = cms.string('HGCHEbackDigitizer'),
    hitCollection = cms.string('HGCHitsHEback'),
    hitsProducer = cms.string('g4SimHits'),
    makeDigiSimLinks = cms.bool(False),
    maxSimHitsAccTime = cms.uint32(100),
    premixStage1 = cms.bool(False),
    premixStage1MaxCharge = cms.double(1000000.0),
    premixStage1MinCharge = cms.double(0),
    tofDelay = cms.double(-14),
    useAllChannels = cms.bool(True),
    verbosity = cms.untracked.uint32(0)
)

process.hgchefrontDigitizer = cms.PSet(
    NoiseGeneration_Method = cms.bool(True),
    accumulatorType = cms.string('HGCDigiProducer'),
    bxTime = cms.double(25),
    digiCfg = cms.PSet(
        cceParams = cms.PSet(
            refToPSet_ = cms.string('HGCAL_cceParams_toUse')
        ),
        chargeCollectionEfficiencies = cms.PSet(
            refToPSet_ = cms.string('HGCAL_chargeCollectionEfficiencies')
        ),
        doTimeSamples = cms.bool(False),
        feCfg = cms.PSet(
            adcNbits = cms.uint32(10),
            adcPulse = cms.vdouble(
                0.0, 0.017, 0.817, 0.163, 0.003,
                0.0
            ),
            adcSaturation_fC = cms.double(100),
            adcThreshold_fC = cms.double(0.672),
            fwVersion = cms.uint32(2),
            jitterConstant_ns = cms.vdouble(0.02, 0.02, 0.02),
            jitterNoise_ns = cms.vdouble(5.0, 5.0, 5.0),
            pulseAvgT = cms.vdouble(
                0.0, 23.42298, 13.16733, 6.41062, 5.03946,
                4.532
            ),
            targetMIPvalue_ADC = cms.uint32(10),
            tdcChargeDrainParameterisation = cms.vdouble(
                -919.13, 365.36, -14.1, 0.2, -21.85,
                49.39, 22.21, 0.8, -0.28, 27.14,
                43.95, 3.89048
            ),
            tdcForToAOnset_fC = cms.vdouble(12.0, 12.0, 12.0),
            tdcNbits = cms.uint32(12),
            tdcOnset_fC = cms.double(60),
            tdcResolutionInPs = cms.double(0.001),
            tdcSaturation_fC = cms.double(10000),
            toaLSB_ns = cms.double(0.0244),
            toaMode = cms.uint32(1)
        ),
        ileakParam = cms.PSet(
            refToPSet_ = cms.string('HGCAL_ileakParam_toUse')
        ),
        keV2fC = cms.double(0.044259),
        noise_fC = cms.PSet(
            refToPSet_ = cms.string('HGCAL_noise_fC')
        ),
        thresholdFollowsMIP = cms.bool(True)
    ),
    digiCollection = cms.string('HGCDigisHEfront'),
    digitizationType = cms.uint32(0),
    digitizer = cms.string('HGCHEfrontDigitizer'),
    hitCollection = cms.string('HGCHitsHEfront'),
    hitsProducer = cms.string('g4SimHits'),
    makeDigiSimLinks = cms.bool(False),
    maxSimHitsAccTime = cms.uint32(100),
    premixStage1 = cms.bool(False),
    premixStage1MaxCharge = cms.double(1000000.0),
    premixStage1MinCharge = cms.double(0),
    tofDelay = cms.double(-11),
    useAllChannels = cms.bool(True),
    verbosity = cms.untracked.uint32(0)
)

process.interestingEgammaIsoHCALSel = cms.PSet(
    maxDIEta = cms.int32(5),
    maxDIPhi = cms.int32(5),
    minEnergyHB = cms.double(0.1),
    minEnergyHEDefault = cms.double(0.2),
    minEnergyHEDepth1 = cms.double(0.1)
)

process.isolationSumsCalculator = cms.PSet(
    ComponentName = cms.string('isolationSumsCalculator'),
    EcalRecHitEtaSliceA_Barrel = cms.double(2.5),
    EcalRecHitEtaSliceA_Endcap = cms.double(2.5),
    EcalRecHitEtaSliceB_Barrel = cms.double(2.5),
    EcalRecHitEtaSliceB_Endcap = cms.double(2.5),
    EcalRecHitInnerRadiusA_Barrel = cms.double(3.5),
    EcalRecHitInnerRadiusA_Endcap = cms.double(3.5),
    EcalRecHitInnerRadiusB_Barrel = cms.double(3.5),
    EcalRecHitInnerRadiusB_Endcap = cms.double(3.5),
    EcalRecHitOuterRadiusA_Barrel = cms.double(0.4),
    EcalRecHitOuterRadiusA_Endcap = cms.double(0.4),
    EcalRecHitOuterRadiusB_Barrel = cms.double(0.3),
    EcalRecHitOuterRadiusB_Endcap = cms.double(0.3),
    EcalRecHitThreshEA_Barrel = cms.double(0.095),
    EcalRecHitThreshEA_Endcap = cms.double(0.0),
    EcalRecHitThreshEB_Barrel = cms.double(0.095),
    EcalRecHitThreshEB_Endcap = cms.double(0.0),
    EcalRecHitThreshEtA_Barrel = cms.double(0.0),
    EcalRecHitThreshEtA_Endcap = cms.double(0.11),
    EcalRecHitThreshEtB_Barrel = cms.double(0.0),
    EcalRecHitThreshEtB_Endcap = cms.double(0.11),
    HBHERecHitCollection = cms.InputTag("hbhereco"),
    HcalRecHitInnerRadiusA_Barrel = cms.vdouble(
        0.15, 0.15, 0.15, 0.15, 0.15,
        0.15, 0.15
    ),
    HcalRecHitInnerRadiusA_Endcap = cms.vdouble(
        0.15, 0.15, 0.15, 0.15, 0.15,
        0.15, 0.15
    ),
    HcalRecHitInnerRadiusB_Barrel = cms.vdouble(
        0.15, 0.15, 0.15, 0.15, 0.15,
        0.15, 0.15
    ),
    HcalRecHitInnerRadiusB_Endcap = cms.vdouble(
        0.15, 0.15, 0.15, 0.15, 0.15,
        0.15, 0.15
    ),
    HcalRecHitOuterRadiusA_Barrel = cms.vdouble(
        0.4, 0.4, 0.4, 0.4, 0.4,
        0.4, 0.4
    ),
    HcalRecHitOuterRadiusA_Endcap = cms.vdouble(
        0.4, 0.4, 0.4, 0.4, 0.4,
        0.4, 0.4
    ),
    HcalRecHitOuterRadiusB_Barrel = cms.vdouble(
        0.3, 0.3, 0.3, 0.3, 0.3,
        0.3, 0.3
    ),
    HcalRecHitOuterRadiusB_Endcap = cms.vdouble(
        0.3, 0.3, 0.3, 0.3, 0.3,
        0.3, 0.3
    ),
    TrackConeInnerRadiusA_Barrel = cms.double(0.04),
    TrackConeInnerRadiusA_Endcap = cms.double(0.04),
    TrackConeInnerRadiusB_Barrel = cms.double(0.04),
    TrackConeInnerRadiusB_Endcap = cms.double(0.04),
    TrackConeOuterRadiusA_Barrel = cms.double(0.4),
    TrackConeOuterRadiusA_Endcap = cms.double(0.4),
    TrackConeOuterRadiusB_Barrel = cms.double(0.3),
    TrackConeOuterRadiusB_Endcap = cms.double(0.3),
    barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    beamSpotProducer = cms.InputTag("offlineBeamSpot"),
    endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    isolationtrackEtaSliceA_Barrel = cms.double(0.015),
    isolationtrackEtaSliceA_Endcap = cms.double(0.015),
    isolationtrackEtaSliceB_Barrel = cms.double(0.015),
    isolationtrackEtaSliceB_Endcap = cms.double(0.015),
    isolationtrackThresholdA_Barrel = cms.double(0.0),
    isolationtrackThresholdA_Endcap = cms.double(0.0),
    isolationtrackThresholdB_Barrel = cms.double(0.0),
    isolationtrackThresholdB_Endcap = cms.double(0.0),
    longImpactParameterA_Barrel = cms.double(0.2),
    longImpactParameterA_Endcap = cms.double(0.2),
    longImpactParameterB_Barrel = cms.double(0.2),
    longImpactParameterB_Endcap = cms.double(0.2),
    maxHcalRecHitSeverity = cms.int32(9),
    moduleEtaBoundary = cms.vdouble(
        0.0, 0.02, 0.43, 0.46, 0.78,
        0.81, 1.13, 1.15, 1.45, 1.58
    ),
    modulePhiBoundary = cms.double(0.0087),
    recHitEThresholdHB = cms.vdouble(0.4, 0.3, 0.3, 0.3),
    recHitEThresholdHE = cms.vdouble(
        0.1, 0.2, 0.2, 0.2, 0.2,
        0.2, 0.2
    ),
    trackProducer = cms.InputTag("generalTracks"),
    transImpactParameterA_Barrel = cms.double(0.1),
    transImpactParameterA_Endcap = cms.double(0.1),
    transImpactParameterB_Barrel = cms.double(0.1),
    transImpactParameterB_Endcap = cms.double(0.1),
    useNumCrystals = cms.bool(True),
    vetoClustered = cms.bool(False)
)

process.j2tParametersCALO = cms.PSet(
    coneSize = cms.double(0.4),
    extrapolations = cms.InputTag("trackExtrapolator"),
    trackQuality = cms.string('goodIterative'),
    tracks = cms.InputTag("generalTracks")
)

process.j2tParametersVX = cms.PSet(
    coneSize = cms.double(0.4),
    pvSrc = cms.InputTag("offlinePrimaryVertices"),
    tracks = cms.InputTag("generalTracks"),
    useAssigned = cms.bool(False)
)

process.leadTrackFinding = cms.PSet(
    Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding"),
    cut = cms.double(0.5)
)

process.maxEvents = cms.untracked.PSet(
    input = cms.untracked.int32(10),
    output = cms.optional.untracked.allowed(cms.int32,cms.PSet)
)

process.maxLuminosityBlocks = cms.untracked.PSet(
    input = cms.untracked.int32(-1)
)

process.mtdDigitizer = cms.PSet(
    accumulatorType = cms.string('MTDDigiProducer'),
    barrelDigitizer = cms.PSet(
        DeviceSimulation = cms.PSet(
            LightCollectionEff = cms.double(0.25),
            LightCollectionSlopeL = cms.double(0.075),
            LightCollectionSlopeR = cms.double(0.075),
            LightYield = cms.double(40000.0),
            PhotonDetectionEff = cms.double(0.2),
            bxTime = cms.double(25)
        ),
        ElectronicsSimulation = cms.PSet(
            ChannelTimeOffset = cms.double(0.0),
            CorrelationCoefficient = cms.double(1.0),
            DarkCountRate = cms.double(10.0),
            EnergyThreshold = cms.double(4.0),
            Npe_to_V = cms.double(0.0064),
            Npe_to_pC = cms.double(0.016),
            ReferencePulseNpe = cms.double(100.0),
            ScintillatorDecayTime = cms.double(40.0),
            ScintillatorRiseTime = cms.double(1.1),
            SigmaClock = cms.double(0.015),
            SigmaElectronicNoise = cms.double(1.0),
            SinglePhotonTimeResolution = cms.double(0.06),
            SmearTimeForOOTtails = cms.bool(True),
            TestBeamMIPTimeRes = cms.double(4.293),
            TimeThreshold1 = cms.double(20.0),
            TimeThreshold2 = cms.double(50.0),
            adcNbits = cms.uint32(10),
            adcSaturation_MIP = cms.double(600.0),
            adcThreshold_MIP = cms.double(0.064),
            bxTime = cms.double(25),
            smearChannelTimeOffset = cms.double(0.0),
            tdcNbits = cms.uint32(10),
            toaLSB_ns = cms.double(0.02)
        ),
        digiCollectionTag = cms.string('FTLBarrel'),
        digitizerName = cms.string('BTLDigitizer'),
        inputSimHits = cms.InputTag("g4SimHits","FastTimerHitsBarrel"),
        maxSimHitsAccTime = cms.uint32(100),
        premixStage1 = cms.bool(False),
        premixStage1MaxCharge = cms.double(1000000.0),
        premixStage1MinCharge = cms.double(0.0001)
    ),
    endcapDigitizer = cms.PSet(
        DeviceSimulation = cms.PSet(
            bxTime = cms.double(25),
            meVPerMIP = cms.double(0.085),
            tofDelay = cms.double(1)
        ),
        ElectronicsSimulation = cms.PSet(
            FluenceVsRadius = cms.string('1.937*TMath::Power(x,-1.706)'),
            IntegratedLuminosity = cms.double(1000.0),
            LGADGainVsFluence = cms.string('TMath::Min(15.,30.-x)'),
            TimeResolution2 = cms.string('0.0225/x'),
            adcNbits = cms.uint32(8),
            adcSaturation_MIP = cms.double(25),
            adcThreshold_MIP = cms.double(0.025),
            bxTime = cms.double(25),
            tdcNbits = cms.uint32(11),
            toaLSB_ns = cms.double(0.013)
        ),
        digiCollectionTag = cms.string('FTLEndcap'),
        digitizerName = cms.string('ETLDigitizer'),
        inputSimHits = cms.InputTag("g4SimHits","FastTimerHitsEndcap"),
        maxSimHitsAccTime = cms.uint32(100),
        premixStage1 = cms.bool(False),
        premixStage1MaxCharge = cms.double(1000000.0),
        premixStage1MinCharge = cms.double(0.0001)
    ),
    makeDigiSimLinks = cms.bool(False),
    verbosity = cms.untracked.uint32(0)
)

process.mvaEleID_Fall17_iso_V1_producer_config = cms.PSet(
    categoryCuts = cms.vstring(
        'pt < 10. && abs(superCluster.eta) < 0.800',
        'pt < 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
        'pt < 10. && abs(superCluster.eta) >= 1.479',
        'pt >= 10. && abs(superCluster.eta) < 0.800',
        'pt >= 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
        'pt >= 10. && abs(superCluster.eta) >= 1.479'
    ),
    mvaName = cms.string('ElectronMVAEstimatorRun2'),
    mvaTag = cms.string('Fall17IsoV1'),
    nCategories = cms.int32(6),
    variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Fall17V1Variables.txt'),
    weightFileNames = cms.vstring(
        'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB1_5_2017_puinfo_iso_BDT.weights.root',
        'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB2_5_2017_puinfo_iso_BDT.weights.root',
        'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EE_5_2017_puinfo_iso_BDT.weights.root',
        'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB1_10_2017_puinfo_iso_BDT.weights.root',
        'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB2_10_2017_puinfo_iso_BDT.weights.root',
        'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EE_10_2017_puinfo_iso_BDT.weights.root'
    )
)

process.mvaEleID_Fall17_iso_V2_producer_config = cms.PSet(
    categoryCuts = cms.vstring(
        'pt < 10. && abs(superCluster.eta) < 0.800',
        'pt < 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
        'pt < 10. && abs(superCluster.eta) >= 1.479',
        'pt >= 10. && abs(superCluster.eta) < 0.800',
        'pt >= 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
        'pt >= 10. && abs(superCluster.eta) >= 1.479'
    ),
    mvaName = cms.string('ElectronMVAEstimatorRun2'),
    mvaTag = cms.string('Fall17IsoV2'),
    nCategories = cms.int32(6),
    variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Variables.txt'),
    weightFileNames = cms.vstring(
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17IsoV2/EB1_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17IsoV2/EB2_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17IsoV2/EE_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17IsoV2/EB1_10.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17IsoV2/EB2_10.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17IsoV2/EE_10.weights.root'
    )
)

process.mvaEleID_Fall17_noIso_V1_producer_config = cms.PSet(
    categoryCuts = cms.vstring(
        'pt < 10. && abs(superCluster.eta) < 0.800',
        'pt < 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
        'pt < 10. && abs(superCluster.eta) >= 1.479',
        'pt >= 10. && abs(superCluster.eta) < 0.800',
        'pt >= 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
        'pt >= 10. && abs(superCluster.eta) >= 1.479'
    ),
    mvaName = cms.string('ElectronMVAEstimatorRun2'),
    mvaTag = cms.string('Fall17NoIsoV1'),
    nCategories = cms.int32(6),
    variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Fall17V1Variables.txt'),
    weightFileNames = cms.vstring(
        'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB1_5_2017_puinfo_BDT.weights.root',
        'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB2_5_2017_puinfo_BDT.weights.root',
        'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EE_5_2017_puinfo_BDT.weights.root',
        'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB1_10_2017_puinfo_BDT.weights.root',
        'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB2_10_2017_puinfo_BDT.weights.root',
        'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EE_10_2017_puinfo_BDT.weights.root'
    )
)

process.mvaEleID_Fall17_noIso_V2_producer_config = cms.PSet(
    categoryCuts = cms.vstring(
        'pt < 10. && abs(superCluster.eta) < 0.800',
        'pt < 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
        'pt < 10. && abs(superCluster.eta) >= 1.479',
        'pt >= 10. && abs(superCluster.eta) < 0.800',
        'pt >= 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
        'pt >= 10. && abs(superCluster.eta) >= 1.479'
    ),
    mvaName = cms.string('ElectronMVAEstimatorRun2'),
    mvaTag = cms.string('Fall17NoIsoV2'),
    nCategories = cms.int32(6),
    variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Variables.txt'),
    weightFileNames = cms.vstring(
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17NoIsoV2/EB1_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17NoIsoV2/EB2_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17NoIsoV2/EE_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17NoIsoV2/EB1_10.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17NoIsoV2/EB2_10.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17NoIsoV2/EE_10.weights.root'
    )
)

process.mvaEleID_RunIIIWinter22_iso_V1_producer_config = cms.PSet(
    categoryCuts = cms.vstring(
        'pt < 10. && abs(superCluster.eta) < 0.800',
        'pt < 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
        'pt < 10. && abs(superCluster.eta) >= 1.479',
        'pt >= 10. && abs(superCluster.eta) < 0.800',
        'pt >= 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
        'pt >= 10. && abs(superCluster.eta) >= 1.479'
    ),
    mvaName = cms.string('ElectronMVAEstimatorRun2'),
    mvaTag = cms.string('RunIIIWinter22IsoV1'),
    nCategories = cms.int32(6),
    variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronIDVariablesRun3.txt'),
    weightFileNames = cms.vstring(
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22IsoV1/EB1_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22IsoV1/EB2_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22IsoV1/EE_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22IsoV1/EB1_10.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22IsoV1/EB2_10.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22IsoV1/EE_10.weights.root'
    )
)

process.mvaEleID_RunIIIWinter22_noIso_V1_producer_config = cms.PSet(
    categoryCuts = cms.vstring(
        'pt < 10. && abs(superCluster.eta) < 0.800',
        'pt < 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
        'pt < 10. && abs(superCluster.eta) >= 1.479',
        'pt >= 10. && abs(superCluster.eta) < 0.800',
        'pt >= 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
        'pt >= 10. && abs(superCluster.eta) >= 1.479'
    ),
    mvaName = cms.string('ElectronMVAEstimatorRun2'),
    mvaTag = cms.string('RunIIIWinter22NoIsoV1'),
    nCategories = cms.int32(6),
    variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronIDVariablesRun3.txt'),
    weightFileNames = cms.vstring(
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22NoIsoV1/EB1_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22NoIsoV1/EB2_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22NoIsoV1/EE_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22NoIsoV1/EB1_10.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22NoIsoV1/EB2_10.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22NoIsoV1/EE_10.weights.root'
    )
)

process.mvaEleID_Spring16_GeneralPurpose_V1_producer_config = cms.PSet(
    categoryCuts = cms.vstring(
        'abs(superCluster.eta) < 0.800',
        'abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
        'abs(superCluster.eta) >= 1.479'
    ),
    mvaName = cms.string('ElectronMVAEstimatorRun2'),
    mvaTag = cms.string('Spring16GeneralPurposeV1'),
    nCategories = cms.int32(3),
    variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Variables.txt'),
    weightFileNames = cms.vstring(
        'RecoEgamma/ElectronIdentification/data/Spring16_GeneralPurpose_V1/electronID_mva_Spring16_GeneralPurpose_V1_EB1_10.weights.root',
        'RecoEgamma/ElectronIdentification/data/Spring16_GeneralPurpose_V1/electronID_mva_Spring16_GeneralPurpose_V1_EB2_10.weights.root',
        'RecoEgamma/ElectronIdentification/data/Spring16_GeneralPurpose_V1/electronID_mva_Spring16_GeneralPurpose_V1_EE_10.weights.root'
    )
)

process.mvaEleID_Spring16_HZZ_V1_producer_config = cms.PSet(
    categoryCuts = cms.vstring(
        'pt < 10. && abs(superCluster.eta) < 0.800',
        'pt < 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
        'pt < 10. && abs(superCluster.eta) >= 1.479',
        'pt >= 10. && abs(superCluster.eta) < 0.800',
        'pt >= 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
        'pt >= 10. && abs(superCluster.eta) >= 1.479'
    ),
    mvaName = cms.string('ElectronMVAEstimatorRun2'),
    mvaTag = cms.string('Spring16HZZV1'),
    nCategories = cms.int32(6),
    variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Variables.txt'),
    weightFileNames = cms.vstring(
        'RecoEgamma/ElectronIdentification/data/Spring16_HZZ_V1/electronID_mva_Spring16_HZZ_V1_EB1_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/Spring16_HZZ_V1/electronID_mva_Spring16_HZZ_V1_EB2_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/Spring16_HZZ_V1/electronID_mva_Spring16_HZZ_V1_EE_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/Spring16_HZZ_V1/electronID_mva_Spring16_HZZ_V1_EB1_10.weights.root',
        'RecoEgamma/ElectronIdentification/data/Spring16_HZZ_V1/electronID_mva_Spring16_HZZ_V1_EB2_10.weights.root',
        'RecoEgamma/ElectronIdentification/data/Spring16_HZZ_V1/electronID_mva_Spring16_HZZ_V1_EE_10.weights.root'
    )
)

process.mvaEleID_Summer16UL_ID_ISO_producer_config = cms.PSet(
    categoryCuts = cms.vstring(
        'pt < 10. & abs(superCluster.eta) < 0.800',
        'pt < 10. & abs(superCluster.eta) >= 0.800 & abs(superCluster.eta) < 1.479',
        'pt < 10. & abs(superCluster.eta) >= 1.479',
        'pt >= 10. & abs(superCluster.eta) < 0.800',
        'pt >= 10. & abs(superCluster.eta) >= 0.800 & abs(superCluster.eta) < 1.479',
        'pt >= 10. & abs(superCluster.eta) >= 1.479'
    ),
    mvaName = cms.string('ElectronMVAEstimatorRun2'),
    mvaTag = cms.string('Summer16ULIdIso'),
    nCategories = cms.int32(6),
    variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Variables.txt'),
    weightFileNames = cms.vstring(
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_16UL_ID_ISO/EB1_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_16UL_ID_ISO/EB2_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_16UL_ID_ISO/EE_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_16UL_ID_ISO/EB1_10.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_16UL_ID_ISO/EB2_10.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_16UL_ID_ISO/EE_10.weights.root'
    )
)

process.mvaEleID_Summer17UL_ID_ISO_producer_config = cms.PSet(
    categoryCuts = cms.vstring(
        'pt < 10. & abs(superCluster.eta) < 0.800',
        'pt < 10. & abs(superCluster.eta) >= 0.800 & abs(superCluster.eta) < 1.479',
        'pt < 10. & abs(superCluster.eta) >= 1.479',
        'pt >= 10. & abs(superCluster.eta) < 0.800',
        'pt >= 10. & abs(superCluster.eta) >= 0.800 & abs(superCluster.eta) < 1.479',
        'pt >= 10. & abs(superCluster.eta) >= 1.479'
    ),
    mvaName = cms.string('ElectronMVAEstimatorRun2'),
    mvaTag = cms.string('Summer17ULIdIso'),
    nCategories = cms.int32(6),
    variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Variables.txt'),
    weightFileNames = cms.vstring(
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_17UL_ID_ISO/EB1_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_17UL_ID_ISO/EB2_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_17UL_ID_ISO/EE_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_17UL_ID_ISO/EB1_10.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_17UL_ID_ISO/EB2_10.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_17UL_ID_ISO/EE_10.weights.root'
    )
)

process.mvaEleID_Summer18UL_ID_ISO_producer_config = cms.PSet(
    categoryCuts = cms.vstring(
        'pt < 10. & abs(superCluster.eta) < 0.800',
        'pt < 10. & abs(superCluster.eta) >= 0.800 & abs(superCluster.eta) < 1.479',
        'pt < 10. & abs(superCluster.eta) >= 1.479',
        'pt >= 10. & abs(superCluster.eta) < 0.800',
        'pt >= 10. & abs(superCluster.eta) >= 0.800 & abs(superCluster.eta) < 1.479',
        'pt >= 10. & abs(superCluster.eta) >= 1.479'
    ),
    mvaName = cms.string('ElectronMVAEstimatorRun2'),
    mvaTag = cms.string('Summer18ULIdIso'),
    nCategories = cms.int32(6),
    variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Variables.txt'),
    weightFileNames = cms.vstring(
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_18UL_ID_ISO/EB1_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_18UL_ID_ISO/EB2_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_18UL_ID_ISO/EE_5.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_18UL_ID_ISO/EB1_10.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_18UL_ID_ISO/EB2_10.weights.root',
        'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_18UL_ID_ISO/EE_10.weights.root'
    )
)

process.mvaPhoID_PhaseIISummer20_v0_producer_config = cms.PSet(
    categoryCuts = cms.vstring(
        'abs(superCluster.eta) <  1.479',
        'abs(superCluster.eta) >= 1.479'
    ),
    mvaName = cms.string('PhotonMVAEstimator'),
    mvaTag = cms.string('PhaseIISummer20v0'),
    nCategories = cms.int32(2),
    variableDefinition = cms.string('RecoEgamma/PhotonIdentification/data/PhotonMVAEstimatorRun2VariablesFall17V1p1.txt'),
    weightFileNames = cms.vstring(
        'RecoEgamma/PhotonIdentification/data/MVA/PhaseII/PhotonID_MVA_barrel_Egamma_PhaseII_weight.xml.gz',
        'RecoEgamma/PhotonIdentification/data/MVA/PhaseII/PhotonID_MVA_barrel_Egamma_PhaseII_weight.xml.gz'
    )
)

process.mvaPhoID_PhaseIISummer20_v0_wp80 = cms.PSet(
    cutFlow = cms.VPSet(cms.PSet(
        cutName = cms.string('PhoMVACut'),
        isIgnored = cms.bool(False),
        mvaCategoriesMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorPhaseIISummer20v0Categories"),
        mvaCuts = cms.vdouble(0.875003, 0.875003),
        mvaValueMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorPhaseIISummer20v0Values"),
        needsAdditionalProducts = cms.bool(True)
    )),
    idName = cms.string('mvaPhoID-PhaseIISummer20-v0-wp80'),
    isPOGApproved = cms.bool(False)
)

process.mvaPhoID_PhaseIISummer20_v0_wp90 = cms.PSet(
    cutFlow = cms.VPSet(cms.PSet(
        cutName = cms.string('PhoMVACut'),
        isIgnored = cms.bool(False),
        mvaCategoriesMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorPhaseIISummer20v0Categories"),
        mvaCuts = cms.vdouble(0.737502, 0.737502),
        mvaValueMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorPhaseIISummer20v0Values"),
        needsAdditionalProducts = cms.bool(True)
    )),
    idName = cms.string('mvaPhoID-PhaseIISummer20-v0-wp90'),
    isPOGApproved = cms.bool(False)
)

process.mvaPhoID_RunIIFall17_v1p1_producer_config = cms.PSet(
    categoryCuts = cms.vstring(
        'abs(superCluster.eta) <  1.479',
        'abs(superCluster.eta) >= 1.479'
    ),
    mvaName = cms.string('PhotonMVAEstimator'),
    mvaTag = cms.string('RunIIFall17v1p1'),
    nCategories = cms.int32(2),
    variableDefinition = cms.string('RecoEgamma/PhotonIdentification/data/PhotonMVAEstimatorRun2VariablesFall17V1p1.txt'),
    weightFileNames = cms.vstring(
        'RecoEgamma/PhotonIdentification/data/MVA/Fall17/EB_V1.weights.root',
        'RecoEgamma/PhotonIdentification/data/MVA/Fall17/EE_V1.weights.root'
    )
)

process.mvaPhoID_RunIIFall17_v1p1_wp80 = cms.PSet(
    cutFlow = cms.VPSet(cms.PSet(
        cutName = cms.string('PhoMVACut'),
        isIgnored = cms.bool(False),
        mvaCategoriesMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v1p1Categories"),
        mvaCuts = cms.vdouble(0.67, 0.54),
        mvaValueMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v1p1Values"),
        needsAdditionalProducts = cms.bool(True)
    )),
    idName = cms.string('mvaPhoID-RunIIFall17-v1p1-wp80'),
    isPOGApproved = cms.untracked.bool(True)
)

process.mvaPhoID_RunIIFall17_v1p1_wp90 = cms.PSet(
    cutFlow = cms.VPSet(cms.PSet(
        cutName = cms.string('PhoMVACut'),
        isIgnored = cms.bool(False),
        mvaCategoriesMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v1p1Categories"),
        mvaCuts = cms.vdouble(0.27, 0.14),
        mvaValueMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v1p1Values"),
        needsAdditionalProducts = cms.bool(True)
    )),
    idName = cms.string('mvaPhoID-RunIIFall17-v1p1-wp90'),
    isPOGApproved = cms.untracked.bool(True)
)

process.mvaPhoID_RunIIFall17_v2_producer_config = cms.PSet(
    categoryCuts = cms.vstring(
        'abs(superCluster.eta) <  1.479',
        'abs(superCluster.eta) >= 1.479'
    ),
    mvaName = cms.string('PhotonMVAEstimator'),
    mvaTag = cms.string('RunIIFall17v2'),
    nCategories = cms.int32(2),
    variableDefinition = cms.string('RecoEgamma/PhotonIdentification/data/PhotonMVAEstimatorRun2VariablesFall17V1p1.txt'),
    weightFileNames = cms.vstring(
        'RecoEgamma/PhotonIdentification/data/MVA/Fall17/EB_V2.weights.root',
        'RecoEgamma/PhotonIdentification/data/MVA/Fall17/EE_V2.weights.root'
    )
)

process.mvaPhoID_RunIIFall17_v2_wp80 = cms.PSet(
    cutFlow = cms.VPSet(cms.PSet(
        cutName = cms.string('PhoMVACut'),
        isIgnored = cms.bool(False),
        mvaCategoriesMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v2Categories"),
        mvaCuts = cms.vdouble(0.42, 0.14),
        mvaValueMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v2Values"),
        needsAdditionalProducts = cms.bool(True)
    )),
    idName = cms.string('mvaPhoID-RunIIFall17-v2-wp80'),
    isPOGApproved = cms.bool(True)
)

process.mvaPhoID_RunIIFall17_v2_wp90 = cms.PSet(
    cutFlow = cms.VPSet(cms.PSet(
        cutName = cms.string('PhoMVACut'),
        isIgnored = cms.bool(False),
        mvaCategoriesMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v2Categories"),
        mvaCuts = cms.vdouble(-0.02, -0.26),
        mvaValueMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v2Values"),
        needsAdditionalProducts = cms.bool(True)
    )),
    idName = cms.string('mvaPhoID-RunIIFall17-v2-wp90'),
    isPOGApproved = cms.bool(True)
)

process.mvaPhoID_RunIIIWinter22_v1_producer_config = cms.PSet(
    categoryCuts = cms.vstring(
        'abs(superCluster.eta) <  1.479',
        'abs(superCluster.eta) >= 1.479'
    ),
    mvaName = cms.string('PhotonMVAEstimator'),
    mvaTag = cms.string('RunIIIWinter22v1'),
    nCategories = cms.int32(2),
    variableDefinition = cms.string('RecoEgamma/PhotonIdentification/data/PhotonMVAEstimatorRun3VariablesWinter22V1.txt'),
    weightFileNames = cms.vstring(
        'RecoEgamma/PhotonIdentification/data/MVA/RunIII_Winter22/PhoMVA_ID_EB_V1.weights.root',
        'RecoEgamma/PhotonIdentification/data/MVA/RunIII_Winter22/PhoMVA_ID_EE_V1.weights.root'
    )
)

process.mvaPhoID_RunIIIWinter22_v1_wp80 = cms.PSet(
    cutFlow = cms.VPSet(cms.PSet(
        cutName = cms.string('PhoMVACut'),
        isIgnored = cms.bool(False),
        mvaCategoriesMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIIWinter22v1Categories"),
        mvaCuts = cms.vdouble(0.420473, 0.203451),
        mvaValueMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIIWinter22v1Values"),
        needsAdditionalProducts = cms.bool(True)
    )),
    idName = cms.string('mvaPhoID-RunIIIWinter22-v1-wp80'),
    isPOGApproved = cms.bool(True)
)

process.mvaPhoID_RunIIIWinter22_v1_wp90 = cms.PSet(
    cutFlow = cms.VPSet(cms.PSet(
        cutName = cms.string('PhoMVACut'),
        isIgnored = cms.bool(False),
        mvaCategoriesMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIIWinter22v1Categories"),
        mvaCuts = cms.vdouble(0.0439603, -0.249526),
        mvaValueMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIIWinter22v1Values"),
        needsAdditionalProducts = cms.bool(True)
    )),
    idName = cms.string('mvaPhoID-RunIIIWinter22-v1-wp90'),
    isPOGApproved = cms.bool(True)
)

process.mvaPhoID_Spring16_nonTrig_V1_producer_config = cms.PSet(
    categoryCuts = cms.vstring(
        'abs(superCluster.eta) <  1.479',
        'abs(superCluster.eta) >= 1.479'
    ),
    effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Spring16/effAreaPhotons_cone03_pfPhotons_90percentBased_3bins.txt'),
    mvaName = cms.string('PhotonMVAEstimator'),
    mvaTag = cms.string('Run2Spring16NonTrigV1'),
    nCategories = cms.int32(2),
    phoIsoCutoff = cms.double(2.5),
    phoIsoPtScalingCoeff = cms.vdouble(0.0053, 0.0034),
    variableDefinition = cms.string('RecoEgamma/PhotonIdentification/data/PhotonMVAEstimatorRun2VariablesSpring16.txt'),
    weightFileNames = cms.vstring(
        'RecoEgamma/PhotonIdentification/data/MVA/Spring16/EB_V1.weights.xml.gz',
        'RecoEgamma/PhotonIdentification/data/MVA/Spring16/EE_V1.weights.xml.gz'
    )
)

process.nanoDQMIO_perLSoutput = cms.PSet(
    MEsToSave = cms.untracked.vstring(
        'Hcal/DigiTask/Occupancy/depth/depth1',
        'Hcal/DigiTask/Occupancy/depth/depth2',
        'Hcal/DigiTask/Occupancy/depth/depth3',
        'Hcal/DigiTask/Occupancy/depth/depth4',
        'Hcal/DigiTask/Occupancy/depth/depth5',
        'Hcal/DigiTask/Occupancy/depth/depth6',
        'Hcal/DigiTask/Occupancy/depth/depth7',
        'Hcal/DigiTask/Occupancy/depth/depthHO',
        'Hcal/DigiTask/OccupancyCut/depth/depth1',
        'Hcal/DigiTask/OccupancyCut/depth/depth2',
        'Hcal/DigiTask/OccupancyCut/depth/depth3',
        'Hcal/DigiTask/OccupancyCut/depth/depth4',
        'Hcal/DigiTask/OccupancyCut/depth/depth5',
        'Hcal/DigiTask/OccupancyCut/depth/depth6',
        'Hcal/DigiTask/OccupancyCut/depth/depth7',
        'Hcal/DigiTask/OccupancyCut/depth/depthHO',
        'EcalBarrel/EBOccupancyTask/EBOT digi occupancy',
        'EcalEndcap/EEOccupancyTask/EEOT digi occupancy EE -',
        'EcalEndcap/EEOccupancyTask/EEOT digi occupancy EE +',
        'EcalBarrel/EBOccupancyTask/EBOT DCC entries',
        'EcalEndcap/EEOccupancyTask/EEOT DCC entries',
        'Ecal/EventInfo/processedEvents',
        'PixelPhase1/Tracks/charge_PXBarrel',
        'PixelPhase1/Tracks/charge_PXForward',
        'PixelPhase1/Tracks/PXBarrel/charge_PXLayer_1',
        'PixelPhase1/Tracks/PXBarrel/charge_PXLayer_2',
        'PixelPhase1/Tracks/PXBarrel/charge_PXLayer_3',
        'PixelPhase1/Tracks/PXBarrel/charge_PXLayer_4',
        'PixelPhase1/Tracks/PXForward/charge_PXDisk_+1',
        'PixelPhase1/Tracks/PXForward/charge_PXDisk_+2',
        'PixelPhase1/Tracks/PXForward/charge_PXDisk_+3',
        'PixelPhase1/Tracks/PXForward/charge_PXDisk_-1',
        'PixelPhase1/Tracks/PXForward/charge_PXDisk_-2',
        'PixelPhase1/Tracks/PXForward/charge_PXDisk_-3',
        'PixelPhase1/Tracks/PXBarrel/size_PXLayer_1',
        'PixelPhase1/Tracks/PXBarrel/size_PXLayer_2',
        'PixelPhase1/Tracks/PXBarrel/size_PXLayer_3',
        'PixelPhase1/Tracks/PXBarrel/size_PXLayer_4',
        'PixelPhase1/Tracks/PXForward/size_PXDisk_+1',
        'PixelPhase1/Tracks/PXForward/size_PXDisk_+2',
        'PixelPhase1/Tracks/PXForward/size_PXDisk_+3',
        'PixelPhase1/Tracks/PXForward/size_PXDisk_-1',
        'PixelPhase1/Tracks/PXForward/size_PXDisk_-2',
        'PixelPhase1/Tracks/PXForward/size_PXDisk_-3',
        'HLT/Vertexing/hltPixelVertices/hltPixelVertices/goodvtxNbr',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/mon_eta',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/mon_hits',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/mon_phi',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/mon_pt',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/mon_unMatched_eta',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/mon_unMatched_hits',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/mon_unMatched_phi',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/mon_unMatched_pt',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/ref_eta',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/ref_hits',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/ref_matched_eta',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/ref_matched_hits',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/ref_matched_phi',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/ref_matched_pt',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/ref_phi',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/ref_pt',
        'HLT/Tracking/pixelTracks/GeneralProperties/Chi2Prob_GenTk',
        'HLT/Tracking/pixelTracks/GeneralProperties/Chi2oNDFVsEta_ImpactPoint_GenTk',
        'HLT/Tracking/pixelTracks/GeneralProperties/DeltaZToPVZoom_GenTk',
        'HLT/Tracking/pixelTracks/GeneralProperties/DistanceOfClosestApproachToPVVsPhi_GenTk',
        'HLT/Tracking/pixelTracks/GeneralProperties/DistanceOfClosestApproachToPVZoom_GenTk',
        'HLT/Tracking/pixelTracks/GeneralProperties/NumberOfTracks_GenTk',
        'HLT/Tracking/tracks/GeneralProperties/Chi2Prob_GenTk',
        'HLT/Tracking/tracks/GeneralProperties/Chi2oNDFVsEta_ImpactPoint_GenTk',
        'HLT/Tracking/tracks/GeneralProperties/DeltaZToPVZoom_GenTk',
        'HLT/Tracking/tracks/GeneralProperties/DistanceOfClosestApproachToPVVsPhi_GenTk',
        'HLT/Tracking/tracks/GeneralProperties/DistanceOfClosestApproachToPVZoom_GenTk',
        'HLT/Tracking/tracks/GeneralProperties/NumberOfTracks_GenTk',
        'HLT/Tracking/tracks/LUMIanalysis/NumberEventsVsLUMI',
        'HLT/Tracking/tracks/PUmonitoring/NumberEventsVsGoodPVtx',
        'PixelPhase1/Tracks/num_clusters_ontrack_PXBarrel',
        'PixelPhase1/Tracks/num_clusters_ontrack_PXForward',
        'PixelPhase1/Tracks/clusterposition_zphi_ontrack',
        'PixelPhase1/Tracks/PXBarrel/clusterposition_zphi_ontrack_PXLayer_1',
        'PixelPhase1/Tracks/PXBarrel/clusterposition_zphi_ontrack_PXLayer_2',
        'PixelPhase1/Tracks/PXBarrel/clusterposition_zphi_ontrack_PXLayer_3',
        'PixelPhase1/Tracks/PXBarrel/clusterposition_zphi_ontrack_PXLayer_4',
        'PixelPhase1/Tracks/PXForward/clusterposition_xy_ontrack_PXDisk_+1',
        'PixelPhase1/Tracks/PXForward/clusterposition_xy_ontrack_PXDisk_+2',
        'PixelPhase1/Tracks/PXForward/clusterposition_xy_ontrack_PXDisk_+3',
        'PixelPhase1/Tracks/PXForward/clusterposition_xy_ontrack_PXDisk_-1',
        'PixelPhase1/Tracks/PXForward/clusterposition_xy_ontrack_PXDisk_-2',
        'PixelPhase1/Tracks/PXForward/clusterposition_xy_ontrack_PXDisk_-3',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_1/NormalizedHitResiduals_TEC__wheel__1',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_2/NormalizedHitResiduals_TEC__wheel__2',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_3/NormalizedHitResiduals_TEC__wheel__3',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_4/NormalizedHitResiduals_TEC__wheel__4',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_5/NormalizedHitResiduals_TEC__wheel__5',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_6/NormalizedHitResiduals_TEC__wheel__6',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_7/NormalizedHitResiduals_TEC__wheel__7',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_8/NormalizedHitResiduals_TEC__wheel__8',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_9/NormalizedHitResiduals_TEC__wheel__9',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_1/NormalizedHitResiduals_TEC__wheel__1',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_2/NormalizedHitResiduals_TEC__wheel__2',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_3/NormalizedHitResiduals_TEC__wheel__3',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_4/NormalizedHitResiduals_TEC__wheel__4',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_5/NormalizedHitResiduals_TEC__wheel__5',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_6/NormalizedHitResiduals_TEC__wheel__6',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_7/NormalizedHitResiduals_TEC__wheel__7',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_8/NormalizedHitResiduals_TEC__wheel__8',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_9/NormalizedHitResiduals_TEC__wheel__9',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_1/Summary_ClusterStoNCorr__OnTrack__TEC__PLUS__wheel__1',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_2/Summary_ClusterStoNCorr__OnTrack__TEC__PLUS__wheel__2',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_3/Summary_ClusterStoNCorr__OnTrack__TEC__PLUS__wheel__3',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_4/Summary_ClusterStoNCorr__OnTrack__TEC__PLUS__wheel__4',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_5/Summary_ClusterStoNCorr__OnTrack__TEC__PLUS__wheel__5',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_6/Summary_ClusterStoNCorr__OnTrack__TEC__PLUS__wheel__6',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_7/Summary_ClusterStoNCorr__OnTrack__TEC__PLUS__wheel__7',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_8/Summary_ClusterStoNCorr__OnTrack__TEC__PLUS__wheel__8',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_9/Summary_ClusterStoNCorr__OnTrack__TEC__PLUS__wheel__9',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_1/Summary_ClusterStoNCorr__OnTrack__TEC__MINUS__wheel__1',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_2/Summary_ClusterStoNCorr__OnTrack__TEC__MINUS__wheel__2',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_3/Summary_ClusterStoNCorr__OnTrack__TEC__MINUS__wheel__3',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_4/Summary_ClusterStoNCorr__OnTrack__TEC__MINUS__wheel__4',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_5/Summary_ClusterStoNCorr__OnTrack__TEC__MINUS__wheel__5',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_6/Summary_ClusterStoNCorr__OnTrack__TEC__MINUS__wheel__6',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_7/Summary_ClusterStoNCorr__OnTrack__TEC__MINUS__wheel__7',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_8/Summary_ClusterStoNCorr__OnTrack__TEC__MINUS__wheel__8',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_9/Summary_ClusterStoNCorr__OnTrack__TEC__MINUS__wheel__9',
        'SiStrip/MechanicalView/TIB/layer_1/NormalizedHitResiduals_TIB__Layer__1',
        'SiStrip/MechanicalView/TIB/layer_2/NormalizedHitResiduals_TIB__Layer__2',
        'SiStrip/MechanicalView/TIB/layer_3/NormalizedHitResiduals_TIB__Layer__3',
        'SiStrip/MechanicalView/TIB/layer_4/NormalizedHitResiduals_TIB__Layer__4',
        'SiStrip/MechanicalView/TIB/layer_1/Summary_ClusterStoNCorr__OnTrack__TIB__layer__1',
        'SiStrip/MechanicalView/TIB/layer_2/Summary_ClusterStoNCorr__OnTrack__TIB__layer__2',
        'SiStrip/MechanicalView/TIB/layer_3/Summary_ClusterStoNCorr__OnTrack__TIB__layer__3',
        'SiStrip/MechanicalView/TIB/layer_4/Summary_ClusterStoNCorr__OnTrack__TIB__layer__4',
        'SiStrip/MechanicalView/TID/PLUS/wheel_1/NormalizedHitResiduals_TID__wheel__1',
        'SiStrip/MechanicalView/TID/PLUS/wheel_2/NormalizedHitResiduals_TID__wheel__2',
        'SiStrip/MechanicalView/TID/PLUS/wheel_3/NormalizedHitResiduals_TID__wheel__3',
        'SiStrip/MechanicalView/TID/MINUS/wheel_1/NormalizedHitResiduals_TID__wheel__1',
        'SiStrip/MechanicalView/TID/MINUS/wheel_2/NormalizedHitResiduals_TID__wheel__2',
        'SiStrip/MechanicalView/TID/MINUS/wheel_3/NormalizedHitResiduals_TID__wheel__3',
        'SiStrip/MechanicalView/TID/PLUS/wheel_1/Summary_ClusterStoNCorr__OnTrack__TID__PLUS__wheel__1',
        'SiStrip/MechanicalView/TID/PLUS/wheel_2/Summary_ClusterStoNCorr__OnTrack__TID__PLUS__wheel__2',
        'SiStrip/MechanicalView/TID/PLUS/wheel_3/Summary_ClusterStoNCorr__OnTrack__TID__PLUS__wheel__3',
        'SiStrip/MechanicalView/TID/MINUS/wheel_1/Summary_ClusterStoNCorr__OnTrack__TID__MINUS__wheel__1',
        'SiStrip/MechanicalView/TID/MINUS/wheel_2/Summary_ClusterStoNCorr__OnTrack__TID__MINUS__wheel__2',
        'SiStrip/MechanicalView/TID/MINUS/wheel_3/Summary_ClusterStoNCorr__OnTrack__TID__MINUS__wheel__3',
        'SiStrip/MechanicalView/TOB/layer_1/NormalizedHitResiduals_TOB__Layer__1',
        'SiStrip/MechanicalView/TOB/layer_2/NormalizedHitResiduals_TOB__Layer__2',
        'SiStrip/MechanicalView/TOB/layer_3/NormalizedHitResiduals_TOB__Layer__3',
        'SiStrip/MechanicalView/TOB/layer_4/NormalizedHitResiduals_TOB__Layer__4',
        'SiStrip/MechanicalView/TOB/layer_5/NormalizedHitResiduals_TOB__Layer__5',
        'SiStrip/MechanicalView/TOB/layer_6/NormalizedHitResiduals_TOB__Layer__6',
        'SiStrip/MechanicalView/TOB/layer_1/Summary_ClusterStoNCorr__OnTrack__TOB__layer__1',
        'SiStrip/MechanicalView/TOB/layer_2/Summary_ClusterStoNCorr__OnTrack__TOB__layer__2',
        'SiStrip/MechanicalView/TOB/layer_3/Summary_ClusterStoNCorr__OnTrack__TOB__layer__3',
        'SiStrip/MechanicalView/TOB/layer_4/Summary_ClusterStoNCorr__OnTrack__TOB__layer__4',
        'SiStrip/MechanicalView/TOB/layer_5/Summary_ClusterStoNCorr__OnTrack__TOB__layer__5',
        'SiStrip/MechanicalView/TOB/layer_6/Summary_ClusterStoNCorr__OnTrack__TOB__layer__6',
        'SiStrip/MechanicalView/MainDiagonal Position',
        'SiStrip/MechanicalView/NumberOfClustersInPixel',
        'SiStrip/MechanicalView/NumberOfClustersInStrip',
        'Tracking/TrackParameters/generalTracks/LSanalysis/Chi2oNDF_lumiFlag_GenTk',
        'Tracking/TrackParameters/generalTracks/LSanalysis/NumberOfRecHitsPerTrack_lumiFlag_GenTk',
        'Tracking/TrackParameters/generalTracks/LSanalysis/NumberOfTracks_lumiFlag_GenTk',
        'Tracking/TrackParameters/highPurityTracks/pt_1/GeneralProperties/SIPDxyToPV_GenTk',
        'Tracking/TrackParameters/highPurityTracks/pt_1/GeneralProperties/SIPDzToPV_GenTk',
        'Tracking/TrackParameters/highPurityTracks/pt_1/GeneralProperties/SIP3DToPV_GenTk',
        'Tracking/TrackParameters/generalTracks/HitProperties/NumberOfMissingOuterRecHitsPerTrack_GenTk',
        'Tracking/TrackParameters/generalTracks/HitProperties/NumberMORecHitsPerTrackVsPt_GenTk',
        'OfflinePV/offlinePrimaryVertices/tagVtxProb',
        'OfflinePV/offlinePrimaryVertices/tagType',
        'OfflinePV/Resolution/PV/pull_x',
        'OfflinePV/Resolution/PV/pull_y',
        'OfflinePV/Resolution/PV/pull_z',
        'JetMET/Jet/Cleanedak4PFJetsCHS/CHFrac_highPt_Barrel',
        'JetMET/Jet/Cleanedak4PFJetsCHS/CHFrac_highPt_EndCap',
        'JetMET/Jet/Cleanedak4PFJetsCHS/CHFrac_mediumPt_Barrel',
        'JetMET/Jet/Cleanedak4PFJetsCHS/CHFrac_mediumPt_EndCap',
        'JetMET/Jet/Cleanedak4PFJetsCHS/CHFrac_lowPt_Barrel',
        'JetMET/Jet/Cleanedak4PFJetsCHS/CHFrac_lowPt_EndCap',
        'JetMET/Jet/Cleanedak4PFJetsCHS/ChMultiplicity_highPt_Barrel',
        'JetMET/Jet/Cleanedak4PFJetsCHS/ChMultiplicity_highPt_EndCap',
        'JetMET/Jet/Cleanedak4PFJetsCHS/ChMultiplicity_mediumPt_Barrel',
        'JetMET/Jet/Cleanedak4PFJetsCHS/ChMultiplicity_mediumPt_EndCap',
        'JetMET/Jet/Cleanedak4PFJetsCHS/ChMultiplicity_lowPt_Barrel',
        'JetMET/Jet/Cleanedak4PFJetsCHS/ChMultiplicity_lowPt_EndCap',
        'JetMET/Jet/Cleanedak4PFJetsCHS/Constituents',
        'JetMET/Jet/Cleanedak4PFJetsCHS/Eta',
        'JetMET/Jet/Cleanedak4PFJetsCHS/Eta_uncor',
        'JetMET/Jet/Cleanedak4PFJetsCHS/JetEnergyCorr',
        'JetMET/Jet/Cleanedak4PFJetsCHS/NJets',
        'JetMET/Jet/Cleanedak4PFJetsCHS/Phi',
        'JetMET/Jet/Cleanedak4PFJetsCHS/Phi_Barrel',
        'JetMET/Jet/Cleanedak4PFJetsCHS/Phi_EndCap',
        'JetMET/Jet/Cleanedak4PFJetsCHS/Pt',
        'JetMET/MET/pfMETT1/Cleaned/METSig',
        'JetMET/vertices'
    )
)

process.noPrediscriminants = cms.PSet(
    BooleanOperator = cms.string('and')
)

process.options = cms.untracked.PSet(
    FailPath = cms.untracked.vstring(),
    IgnoreCompletely = cms.untracked.vstring(),
    Rethrow = cms.untracked.vstring(),
    SkipEvent = cms.untracked.vstring(),
    accelerators = cms.untracked.vstring('*'),
    allowUnscheduled = cms.obsolete.untracked.bool,
    canDeleteEarly = cms.untracked.vstring(
        'recoIsoDepositedmValueMap_elPFIsoDepositChargedAllPAT__PAT',
        'recoIsoDepositedmValueMap_elPFIsoDepositChargedPAT__PAT',
        'recoIsoDepositedmValueMap_elPFIsoDepositGammaPAT__PAT',
        'recoIsoDepositedmValueMap_elPFIsoDepositNeutralPAT__PAT',
        'recoIsoDepositedmValueMap_elPFIsoDepositPUPAT__PAT',
        'recoIsoDepositedmValueMap_muPFIsoDepositChargedAllPAT__PAT',
        'recoIsoDepositedmValueMap_muPFIsoDepositChargedPAT__PAT',
        'recoIsoDepositedmValueMap_muPFIsoDepositGammaPAT__PAT',
        'recoIsoDepositedmValueMap_muPFIsoDepositNeutralPAT__PAT',
        'recoIsoDepositedmValueMap_muPFIsoDepositPUPAT__PAT',
        'recoIsoDepositedmValueMap_phPFIsoDepositChargedAllPAT__PAT',
        'recoIsoDepositedmValueMap_phPFIsoDepositChargedPAT__PAT',
        'recoIsoDepositedmValueMap_phPFIsoDepositGammaPAT__PAT',
        'recoIsoDepositedmValueMap_phPFIsoDepositNeutralPAT__PAT',
        'recoIsoDepositedmValueMap_phPFIsoDepositPUPAT__PAT'
    ),
    deleteNonConsumedUnscheduledModules = cms.untracked.bool(True),
    dumpOptions = cms.untracked.bool(False),
    emptyRunLumiMode = cms.obsolete.untracked.string,
    eventSetup = cms.untracked.PSet(
        forceNumberOfConcurrentIOVs = cms.untracked.PSet(
            allowAnyLabel_=cms.required.untracked.uint32
        ),
        numberOfConcurrentIOVs = cms.untracked.uint32(0)
    ),
    fileMode = cms.untracked.string('FULLMERGE'),
    forceEventSetupCacheClearOnNewRun = cms.untracked.bool(False),
    holdsReferencesToDeleteEarly = cms.untracked.VPSet(),
    makeTriggerResults = cms.obsolete.untracked.bool,
    modulesToIgnoreForDeleteEarly = cms.untracked.vstring(),
    numberOfConcurrentLuminosityBlocks = cms.untracked.uint32(0),
    numberOfConcurrentRuns = cms.untracked.uint32(1),
    numberOfStreams = cms.untracked.uint32(0),
    numberOfThreads = cms.untracked.uint32(4),
    printDependencies = cms.untracked.bool(False),
    sizeOfStackForThreadsInKB = cms.optional.untracked.uint32,
    throwIfIllegalParameter = cms.untracked.bool(True),
    wantSummary = cms.untracked.bool(False)
)

process.pileupVtxDigitizer = cms.PSet(
    accumulatorType = cms.string('PileupVertexAccumulator'),
    hitsProducer = cms.string('generator'),
    makeDigiSimLinks = cms.untracked.bool(False),
    saveVtxTimes = cms.bool(False),
    vtxFallbackTag = cms.InputTag("generator"),
    vtxTag = cms.InputTag("generatorSmeared")
)

process.pixelDigitizer = cms.PSet(
    AdcFullScLateCR = cms.int32(255),
    AdcFullScale = cms.int32(255),
    AddNoise = cms.bool(True),
    AddNoisyPixels = cms.bool(True),
    AddPixelInefficiency = cms.bool(True),
    AddThresholdSmearing = cms.bool(True),
    Alpha2Order = cms.bool(True),
    BPix_SignalResponse_p0 = cms.double(0.00171),
    BPix_SignalResponse_p1 = cms.double(0.711),
    BPix_SignalResponse_p2 = cms.double(203.0),
    BPix_SignalResponse_p3 = cms.double(148.0),
    ChargeVCALSmearing = cms.bool(True),
    DeadModules_DB = cms.bool(True),
    DoPixelAging = cms.bool(False),
    ElectronPerAdc = cms.double(135.0),
    ElectronsPerVcal = cms.double(47),
    ElectronsPerVcal_L1 = cms.double(50),
    ElectronsPerVcal_L1_Offset = cms.double(-670),
    ElectronsPerVcal_Offset = cms.double(-60),
    FPix_SignalResponse_p0 = cms.double(0.00171),
    FPix_SignalResponse_p1 = cms.double(0.711),
    FPix_SignalResponse_p2 = cms.double(203.0),
    FPix_SignalResponse_p3 = cms.double(148.0),
    GainSmearing = cms.double(0.0),
    KillBadFEDChannels = cms.bool(True),
    LorentzAngle_DB = cms.bool(True),
    MissCalInLateCR = cms.bool(True),
    MissCalibrate = cms.bool(True),
    NoiseInElectrons = cms.double(175.0),
    NumPixelBarrel = cms.int32(4),
    NumPixelEndcap = cms.int32(3),
    OffsetSmearing = cms.double(0.0),
    PixGeometryType = cms.string('idealForDigi'),
    PrintClusters = cms.bool(False),
    PrintTemplates = cms.bool(False),
    ReadoutNoiseInElec = cms.double(350.0),
    RoutList = cms.vstring(
        'TrackerHitsPixelBarrelLowTof',
        'TrackerHitsPixelBarrelHighTof',
        'TrackerHitsPixelEndcapLowTof',
        'TrackerHitsPixelEndcapHighTof'
    ),
    SiPixelQualityLabel = cms.string('forDigitizer'),
    TanLorentzAnglePerTesla_BPix = cms.double(0.106),
    TanLorentzAnglePerTesla_FPix = cms.double(0.106),
    ThresholdInElectrons_BPix = cms.double(1600.0),
    ThresholdInElectrons_BPix_L1 = cms.double(2000.0),
    ThresholdInElectrons_BPix_L2 = cms.double(1600.0),
    ThresholdInElectrons_FPix = cms.double(1600.0),
    ThresholdSmearing_BPix = cms.double(245.0),
    ThresholdSmearing_BPix_L1 = cms.double(245.0),
    ThresholdSmearing_BPix_L2 = cms.double(245.0),
    ThresholdSmearing_FPix = cms.double(210.0),
    TofLowerCut = cms.double(-12.5),
    TofUpperCut = cms.double(12.5),
    UseReweighting = cms.bool(True),
    accumulatorType = cms.string('SiPixelDigitizer'),
    applyLateReweighting = cms.bool(False),
    deltaProductionCut = cms.double(0.03),
    hitsProducer = cms.string('g4SimHits'),
    killModules = cms.bool(True),
    makeDigiSimLinks = cms.untracked.bool(True),
    store_SimHitEntryExitPoints = cms.bool(False),
    useDB = cms.bool(False)
)

process.pset = cms.PSet(
    IDname = cms.string('ByTightCombinedIsolationDBSumPtCorr3HitsdR03'),
    maximumAbsoluteValues = cms.vdouble(0.8, 1000000000.0),
    maximumRelativeValues = cms.vdouble(-1.0, 0.1),
    referenceRawIDNames = cms.vstring(
        'ByRawCombinedIsolationDBSumPtCorr3HitsdR03',
        'PhotonPtSumOutsideSignalConedR03'
    )
)

process.recoTrackAccumulator = cms.PSet(
    accumulatorType = cms.string('RecoTrackAccumulator'),
    makeDigiSimLinks = cms.untracked.bool(False),
    outputLabel = cms.string('generalTracks'),
    pileUpTracks = cms.InputTag("generalTracksBeforeMixing"),
    signalTracks = cms.InputTag("generalTracksBeforeMixing")
)

process.requireDecayMode = cms.PSet(
    BooleanOperator = cms.string('and'),
    decayMode = cms.PSet(
        Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMs"),
        cut = cms.double(0.5)
    )
)

process.requireLeadPion = cms.PSet(
    BooleanOperator = cms.string('and'),
    leadPion = cms.PSet(
        Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding"),
        cut = cms.double(0.5)
    )
)

process.requireLeadTrack = cms.PSet(
    BooleanOperator = cms.string('and'),
    leadTrack = cms.PSet(
        Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding"),
        cut = cms.double(0.5)
    )
)

process.softPFElectronCommon = cms.PSet(
    gbrForestLabel = cms.string('btag_SoftPFElectron_BDT'),
    useAdaBoost = cms.bool(False),
    useCondDB = cms.bool(False),
    useGBRForest = cms.bool(True),
    weightFile = cms.FileInPath('RecoBTag/SoftLepton/data/SoftPFElectron_BDT.weights.xml.gz')
)

process.softPFMuonCommon = cms.PSet(
    gbrForestLabel = cms.string('btag_SoftPFMuon_BDT'),
    useAdaBoost = cms.bool(True),
    useCondDB = cms.bool(False),
    useGBRForest = cms.bool(True),
    weightFile = cms.FileInPath('RecoBTag/SoftLepton/data/SoftPFMuon_BDT.weights.xml.gz')
)

process.stripDigitizer = cms.PSet(
    APVProbabilityFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVProbaList.txt'),
    APVSaturationFromHIP = cms.bool(False),
    APVSaturationProbScaling = cms.double(1.0),
    APVShapeDecoFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVShapeDeco_320.txt'),
    APVShapePeakFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVShapePeak_default.txt'),
    APVpeakmode = cms.bool(False),
    AppliedVoltage = cms.double(300.0),
    BaselineShift = cms.bool(True),
    ChargeDistributionRMS = cms.double(6.5e-10),
    ChargeMobility = cms.double(310.0),
    CommonModeNoise = cms.bool(True),
    CosmicDelayShift = cms.untracked.double(0.0),
    CouplingConstantDecIB1 = cms.vdouble(0.7748, 0.0962, 0.0165),
    CouplingConstantDecIB2 = cms.vdouble(0.83, 0.0756, 0.0094),
    CouplingConstantDecOB1 = cms.vdouble(0.6871, 0.1222, 0.0342),
    CouplingConstantDecOB2 = cms.vdouble(0.725, 0.1102, 0.0273),
    CouplingConstantDecW1a = cms.vdouble(0.786, 0.093, 0.014),
    CouplingConstantDecW1b = cms.vdouble(0.822, 0.08, 0.009),
    CouplingConstantDecW2a = cms.vdouble(0.7962, 0.0914, 0.0104),
    CouplingConstantDecW2b = cms.vdouble(0.888, 0.05, 0.006),
    CouplingConstantDecW3a = cms.vdouble(0.8164, 0.09, 0.0018),
    CouplingConstantDecW3b = cms.vdouble(0.848, 0.06, 0.016),
    CouplingConstantDecW4 = cms.vdouble(0.876, 0.06, 0.002),
    CouplingConstantDecW5 = cms.vdouble(0.7565, 0.0913, 0.0304),
    CouplingConstantDecW6 = cms.vdouble(0.758, 0.093, 0.026),
    CouplingConstantDecW7 = cms.vdouble(0.7828, 0.0862, 0.0224),
    CouplingConstantPeakIB1 = cms.vdouble(0.9006, 0.0497),
    CouplingConstantPeakIB2 = cms.vdouble(0.9342, 0.0328),
    CouplingConstantPeakOB1 = cms.vdouble(0.8542, 0.0729),
    CouplingConstantPeakOB2 = cms.vdouble(0.8719, 0.064),
    CouplingConstantPeakW1a = cms.vdouble(0.996, 0.002),
    CouplingConstantPeakW1b = cms.vdouble(0.976, 0.012),
    CouplingConstantPeakW2a = cms.vdouble(1.0, 0.0),
    CouplingConstantPeakW2b = cms.vdouble(0.998, 0.001),
    CouplingConstantPeakW3a = cms.vdouble(0.996, 0.002),
    CouplingConstantPeakW3b = cms.vdouble(0.992, 0.004),
    CouplingConstantPeakW4 = cms.vdouble(0.992, 0.004),
    CouplingConstantPeakW5 = cms.vdouble(0.968, 0.016),
    CouplingConstantPeakW6 = cms.vdouble(0.972, 0.014),
    CouplingConstantPeakW7 = cms.vdouble(0.964, 0.018),
    CouplingConstantRunIIDecIB1 = cms.vdouble(0.8361, 0.0703, 0.0117),
    CouplingConstantRunIIDecIB2 = cms.vdouble(0.8616, 0.0588, 0.0104),
    CouplingConstantRunIIDecOB1 = cms.vdouble(0.7461, 0.0996, 0.0273),
    CouplingConstantRunIIDecOB2 = cms.vdouble(0.7925, 0.0834, 0.0203),
    CouplingConstantRunIIDecW1a = cms.vdouble(0.8571, 0.0608, 0.0106),
    CouplingConstantRunIIDecW1b = cms.vdouble(0.8827, 0.0518, 0.0068),
    CouplingConstantRunIIDecW2a = cms.vdouble(0.8861, 0.049, 0.008),
    CouplingConstantRunIIDecW2b = cms.vdouble(0.8943, 0.0483, 0.0046),
    CouplingConstantRunIIDecW3a = cms.vdouble(0.8984, 0.0494, 0.0014),
    CouplingConstantRunIIDecW3b = cms.vdouble(0.8611, 0.0573, 0.0121),
    CouplingConstantRunIIDecW4 = cms.vdouble(0.8881, 0.0544, 0.0015),
    CouplingConstantRunIIDecW5 = cms.vdouble(0.7997, 0.077, 0.0231),
    CouplingConstantRunIIDecW6 = cms.vdouble(0.8067, 0.0769, 0.0198),
    CouplingConstantRunIIDecW7 = cms.vdouble(0.7883, 0.0888, 0.0171),
    CouplingConstantsRunIIDecB = cms.bool(True),
    CouplingConstantsRunIIDecW = cms.bool(True),
    DeltaProductionCut = cms.double(0.120425),
    DepletionVoltage = cms.double(170.0),
    DigiModeList = cms.PSet(
        PRDigi = cms.string('ProcessedRaw'),
        SCDigi = cms.string('ScopeMode'),
        VRDigi = cms.string('VirginRaw'),
        ZSDigi = cms.string('ZeroSuppressed')
    ),
    FedAlgorithm = cms.int32(4),
    FedAlgorithm_PM = cms.int32(4),
    Gain = cms.string(''),
    GeometryType = cms.string('idealForDigi'),
    GevPerElectron = cms.double(3.61e-09),
    Inefficiency = cms.double(0.0),
    LandauFluctuations = cms.bool(True),
    LorentzAngle = cms.string(''),
    Noise = cms.bool(True),
    NoiseSigmaThreshold = cms.double(2.0),
    PedestalsOffset = cms.double(128),
    PreMixingMode = cms.bool(False),
    ROUList = cms.vstring(
        'TrackerHitsTIBLowTof',
        'TrackerHitsTIBHighTof',
        'TrackerHitsTIDLowTof',
        'TrackerHitsTIDHighTof',
        'TrackerHitsTOBLowTof',
        'TrackerHitsTOBHighTof',
        'TrackerHitsTECLowTof',
        'TrackerHitsTECHighTof'
    ),
    RealPedestals = cms.bool(True),
    SingleStripNoise = cms.bool(True),
    TOFCutForDeconvolution = cms.double(50.0),
    TOFCutForPeak = cms.double(100.0),
    Temperature = cms.double(273.0),
    TrackerConfigurationFromDB = cms.bool(False),
    ZeroSuppression = cms.bool(True),
    accumulatorType = cms.string('SiStripDigitizer'),
    apv_mVPerQ = cms.double(5.5),
    apv_maxResponse = cms.double(729),
    apv_rate = cms.double(66.2),
    apvfCPerElectron = cms.double(0.0001602),
    chargeDivisionsPerStrip = cms.int32(10),
    cmnRMStec = cms.double(2.44),
    cmnRMStib = cms.double(5.92),
    cmnRMStid = cms.double(3.08),
    cmnRMStob = cms.double(1.08),
    electronPerAdcDec = cms.double(247.0),
    electronPerAdcPeak = cms.double(262.0),
    fracOfEventsToSimAPV = cms.double(0.0),
    hitsProducer = cms.string('g4SimHits'),
    includeAPVSimulation = cms.bool(False),
    makeDigiSimLinks = cms.untracked.bool(True),
    noDiffusion = cms.bool(False)
)

process.tautagInfoModifer = cms.PSet(
    name = cms.string('TTIworkaround'),
    pfTauTagInfoSrc = cms.InputTag("pfRecoTauTagInfoProducer"),
    plugin = cms.string('RecoTauTagInfoWorkaroundModifer')
)

process.theDigitizers = cms.PSet(
    ecal = cms.PSet(
        ConstantTerm = cms.double(0.003),
        EBCorrNoiseMatrixG01 = cms.vdouble(
            1.0, 0.73354, 0.64442, 0.58851, 0.55425,
            0.53082, 0.51916, 0.51097, 0.50732, 0.50409
        ),
        EBCorrNoiseMatrixG06 = cms.vdouble(
            1.0, 0.70946, 0.58021, 0.49846, 0.45006,
            0.41366, 0.39699, 0.38478, 0.37847, 0.37055
        ),
        EBCorrNoiseMatrixG12 = cms.vdouble(
            1.0, 0.71073, 0.55721, 0.46089, 0.40449,
            0.35931, 0.33924, 0.32439, 0.31581, 0.30481
        ),
        EBdigiCollection = cms.string(''),
        EBs25notContainment = cms.double(0.9675),
        EECorrNoiseMatrixG01 = cms.vdouble(
            1.0, 0.72698, 0.62048, 0.55691, 0.51848,
            0.49147, 0.47813, 0.47007, 0.46621, 0.46265
        ),
        EECorrNoiseMatrixG06 = cms.vdouble(
            1.0, 0.71217, 0.47464, 0.34056, 0.26282,
            0.20287, 0.17734, 0.16256, 0.15618, 0.14443
        ),
        EECorrNoiseMatrixG12 = cms.vdouble(
            1.0, 0.71373, 0.44825, 0.30152, 0.21609,
            0.14786, 0.11772, 0.10165, 0.09465, 0.08098
        ),
        EEdigiCollection = cms.string(''),
        EEs25notContainment = cms.double(0.968),
        ESdigiCollection = cms.string(''),
        EcalPreMixStage1 = cms.bool(False),
        EcalPreMixStage2 = cms.bool(False),
        UseLCcorrection = cms.untracked.bool(True),
        accumulatorType = cms.string('EcalDigiProducer'),
        apdAddToBarrel = cms.bool(False),
        apdDigiTag = cms.string('APD'),
        apdDoPEStats = cms.bool(True),
        apdNonlParms = cms.vdouble(
            1.48, -3.75, 1.81, 1.26, 2.0,
            45, 1.0
        ),
        apdSeparateDigi = cms.bool(True),
        apdShapeTau = cms.double(40.5),
        apdShapeTstart = cms.double(74.5),
        apdSimToPEHigh = cms.double(88200000.0),
        apdSimToPELow = cms.double(2450000.0),
        apdTimeOffWidth = cms.double(0.8),
        apdTimeOffset = cms.double(-13.5),
        applyConstantTerm = cms.bool(True),
        binOfMaximum = cms.int32(6),
        cosmicsPhase = cms.bool(False),
        cosmicsShift = cms.double(0.0),
        doEB = cms.bool(True),
        doEE = cms.bool(True),
        doENoise = cms.bool(True),
        doES = cms.bool(True),
        doESNoise = cms.bool(True),
        doFast = cms.bool(True),
        doPhotostatistics = cms.bool(True),
        hitsProducer = cms.string('g4SimHits'),
        makeDigiSimLinks = cms.untracked.bool(False),
        photoelectronsToAnalogBarrel = cms.double(0.000444444),
        photoelectronsToAnalogEndcap = cms.double(0.000555555),
        samplingFactor = cms.double(1.0),
        simHitToPhotoelectronsBarrel = cms.double(2250.0),
        simHitToPhotoelectronsEndcap = cms.double(1800.0),
        syncPhase = cms.bool(True),
        timeDependent = cms.bool(False),
        timePhase = cms.double(0.0)
    ),
    hcal = cms.PSet(
        DelivLuminosity = cms.double(0),
        HBDarkening = cms.bool(False),
        HEDarkening = cms.bool(False),
        HFDarkening = cms.bool(False),
        HFRecalParameterBlock = cms.PSet(
            HFdepthOneParameterA = cms.vdouble(
                0.004123, 0.00602, 0.008201, 0.010489, 0.013379,
                0.016997, 0.021464, 0.027371, 0.034195, 0.044807,
                0.058939, 0.125497
            ),
            HFdepthOneParameterB = cms.vdouble(
                -4e-06, -2e-06, 0.0, 4e-06, 1.5e-05,
                2.6e-05, 6.3e-05, 8.4e-05, 0.00016, 0.000107,
                0.000425, 0.000209
            ),
            HFdepthTwoParameterA = cms.vdouble(
                0.002861, 0.004168, 0.0064, 0.008388, 0.011601,
                0.014425, 0.018633, 0.023232, 0.028274, 0.035447,
                0.051579, 0.086593
            ),
            HFdepthTwoParameterB = cms.vdouble(
                -2e-06, -0.0, -7e-06, -6e-06, -2e-06,
                1e-06, 1.9e-05, 3.1e-05, 6.7e-05, 1.2e-05,
                0.000157, -3e-06
            )
        ),
        HcalPreMixStage1 = cms.bool(False),
        HcalPreMixStage2 = cms.bool(False),
        TestNumbering = cms.bool(True),
        accumulatorType = cms.string('HcalDigiProducer'),
        debugCaloSamples = cms.bool(False),
        doEmpty = cms.bool(True),
        doHFWindow = cms.bool(False),
        doIonFeedback = cms.bool(True),
        doNeutralDensityFilter = cms.bool(True),
        doNoise = cms.bool(True),
        doThermalNoise = cms.bool(True),
        doTimeSlew = cms.bool(True),
        hb = cms.PSet(
            binOfMaximum = cms.int32(6),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(True),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(
                125.44, 125.54, 125.32, 125.13, 124.46,
                125.01, 125.22, 125.48, 124.45, 125.9,
                125.83, 127.01, 126.82, 129.73, 131.83,
                143.52
            ),
            simHitToPhotoelectrons = cms.double(2000.0),
            sipmTau = cms.double(10.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(18.7),
            timePhase = cms.double(6.0),
            timeSmearing = cms.bool(True)
        ),
        he = cms.PSet(
            binOfMaximum = cms.int32(6),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(True),
            firstRing = cms.int32(16),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(
                210.55, 197.93, 186.12, 189.64, 189.63,
                190.28, 189.61, 189.6, 190.12, 191.22,
                190.9, 193.06, 188.42, 188.42
            ),
            simHitToPhotoelectrons = cms.double(2000.0),
            sipmTau = cms.double(10.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(18.7),
            timePhase = cms.double(6.0),
            timeSmearing = cms.bool(True)
        ),
        hf1 = cms.PSet(
            binOfMaximum = cms.int32(2),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            photoelectronsToAnalog = cms.double(2.79),
            readoutFrameSize = cms.int32(3),
            samplingFactor = cms.double(0.37),
            simHitToPhotoelectrons = cms.double(6.0),
            sipmTau = cms.double(0.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(3.0),
            timePhase = cms.double(9.0)
        ),
        hf2 = cms.PSet(
            binOfMaximum = cms.int32(2),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            photoelectronsToAnalog = cms.double(1.843),
            readoutFrameSize = cms.int32(3),
            samplingFactor = cms.double(0.37),
            simHitToPhotoelectrons = cms.double(6.0),
            sipmTau = cms.double(0.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(3.0),
            timePhase = cms.double(8.0)
        ),
        hitsProducer = cms.string('g4SimHits'),
        ho = cms.PSet(
            binOfMaximum = cms.int32(5),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(
                231.0, 231.0, 231.0, 231.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0
            ),
            siPMCode = cms.int32(1),
            simHitToPhotoelectrons = cms.double(4000.0),
            sipmTau = cms.double(5.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(-999.0),
            timePhase = cms.double(5.0),
            timeSmearing = cms.bool(False)
        ),
        hoHamamatsu = cms.PSet(
            binOfMaximum = cms.int32(5),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(
                231.0, 231.0, 231.0, 231.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0
            ),
            siPMCode = cms.int32(2),
            simHitToPhotoelectrons = cms.double(4000.0),
            sipmTau = cms.double(5.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(-999.0),
            timePhase = cms.double(5.0),
            timeSmearing = cms.bool(False)
        ),
        hoZecotek = cms.PSet(
            binOfMaximum = cms.int32(5),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(
                231.0, 231.0, 231.0, 231.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0
            ),
            siPMCode = cms.int32(2),
            simHitToPhotoelectrons = cms.double(4000.0),
            sipmTau = cms.double(5.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(-999.0),
            timePhase = cms.double(5.0),
            timeSmearing = cms.bool(False)
        ),
        ignoreGeantTime = cms.bool(False),
        injectTestHits = cms.bool(False),
        injectTestHitsCells = cms.vint32(),
        injectTestHitsEnergy = cms.vdouble(),
        injectTestHitsTime = cms.vdouble(),
        killHE = cms.bool(False),
        makeDigiSimLinks = cms.untracked.bool(False),
        minFCToDelay = cms.double(5.0),
        zdc = cms.PSet(
            binOfMaximum = cms.int32(5),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            photoelectronsToAnalog = cms.double(1.843),
            readoutFrameSize = cms.int32(10),
            samplingFactor = cms.double(1.0),
            simHitToPhotoelectrons = cms.double(6.0),
            sipmTau = cms.double(0.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(-999.0),
            timePhase = cms.double(-4.0)
        )
    ),
    mergedtruth = cms.PSet(
        HepMCProductLabel = cms.InputTag("generatorSmeared"),
        accumulatorType = cms.string('TrackingTruthAccumulator'),
        allowDifferentSimHitProcesses = cms.bool(False),
        alwaysAddAncestors = cms.bool(True),
        createInitialVertexCollection = cms.bool(False),
        createMergedBremsstrahlung = cms.bool(True),
        createUnmergedCollection = cms.bool(True),
        genParticleCollection = cms.InputTag("genParticles"),
        ignoreTracksOutsideVolume = cms.bool(False),
        maximumPreviousBunchCrossing = cms.uint32(9999),
        maximumSubsequentBunchCrossing = cms.uint32(9999),
        removeDeadModules = cms.bool(False),
        select = cms.PSet(
            chargedOnlyTP = cms.bool(True),
            intimeOnlyTP = cms.bool(False),
            lipTP = cms.double(1000),
            maxRapidityTP = cms.double(5.0),
            minHitTP = cms.int32(0),
            minRapidityTP = cms.double(-5.0),
            pdgIdTP = cms.vint32(),
            ptMaxTP = cms.double(1e+100),
            ptMinTP = cms.double(0.1),
            signalOnlyTP = cms.bool(True),
            stableOnlyTP = cms.bool(False),
            tipTP = cms.double(1000)
        ),
        simHitCollections = cms.PSet(
            muon = cms.VInputTag(cms.InputTag("g4SimHits","MuonDTHits"), cms.InputTag("g4SimHits","MuonCSCHits"), cms.InputTag("g4SimHits","MuonRPCHits"), cms.InputTag("g4SimHits","MuonGEMHits")),
            pixel = cms.VInputTag(cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof")),
            tracker = cms.VInputTag(
                cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"), cms.InputTag("g4SimHits","TrackerHitsTOBLowTof"),
                cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTECLowTof"), cms.InputTag("g4SimHits","TrackerHitsTECHighTof")
            )
        ),
        simTrackCollection = cms.InputTag("g4SimHits"),
        simVertexCollection = cms.InputTag("g4SimHits"),
        vertexDistanceCut = cms.double(0.003),
        volumeRadius = cms.double(120.0),
        volumeZ = cms.double(300.0)
    ),
    pixel = cms.PSet(
        AdcFullScLateCR = cms.int32(255),
        AdcFullScale = cms.int32(255),
        AddNoise = cms.bool(True),
        AddNoisyPixels = cms.bool(True),
        AddPixelInefficiency = cms.bool(True),
        AddThresholdSmearing = cms.bool(True),
        Alpha2Order = cms.bool(True),
        BPix_SignalResponse_p0 = cms.double(0.00171),
        BPix_SignalResponse_p1 = cms.double(0.711),
        BPix_SignalResponse_p2 = cms.double(203.0),
        BPix_SignalResponse_p3 = cms.double(148.0),
        ChargeVCALSmearing = cms.bool(True),
        DeadModules_DB = cms.bool(True),
        DoPixelAging = cms.bool(False),
        ElectronPerAdc = cms.double(135.0),
        ElectronsPerVcal = cms.double(47),
        ElectronsPerVcal_L1 = cms.double(50),
        ElectronsPerVcal_L1_Offset = cms.double(-670),
        ElectronsPerVcal_Offset = cms.double(-60),
        FPix_SignalResponse_p0 = cms.double(0.00171),
        FPix_SignalResponse_p1 = cms.double(0.711),
        FPix_SignalResponse_p2 = cms.double(203.0),
        FPix_SignalResponse_p3 = cms.double(148.0),
        GainSmearing = cms.double(0.0),
        KillBadFEDChannels = cms.bool(True),
        LorentzAngle_DB = cms.bool(True),
        MissCalInLateCR = cms.bool(True),
        MissCalibrate = cms.bool(True),
        NoiseInElectrons = cms.double(175.0),
        NumPixelBarrel = cms.int32(4),
        NumPixelEndcap = cms.int32(3),
        OffsetSmearing = cms.double(0.0),
        PixGeometryType = cms.string('idealForDigi'),
        PrintClusters = cms.bool(False),
        PrintTemplates = cms.bool(False),
        ReadoutNoiseInElec = cms.double(350.0),
        RoutList = cms.vstring(
            'TrackerHitsPixelBarrelLowTof',
            'TrackerHitsPixelBarrelHighTof',
            'TrackerHitsPixelEndcapLowTof',
            'TrackerHitsPixelEndcapHighTof'
        ),
        SiPixelQualityLabel = cms.string('forDigitizer'),
        TanLorentzAnglePerTesla_BPix = cms.double(0.106),
        TanLorentzAnglePerTesla_FPix = cms.double(0.106),
        ThresholdInElectrons_BPix = cms.double(1600.0),
        ThresholdInElectrons_BPix_L1 = cms.double(2000.0),
        ThresholdInElectrons_BPix_L2 = cms.double(1600.0),
        ThresholdInElectrons_FPix = cms.double(1600.0),
        ThresholdSmearing_BPix = cms.double(245.0),
        ThresholdSmearing_BPix_L1 = cms.double(245.0),
        ThresholdSmearing_BPix_L2 = cms.double(245.0),
        ThresholdSmearing_FPix = cms.double(210.0),
        TofLowerCut = cms.double(-12.5),
        TofUpperCut = cms.double(12.5),
        UseReweighting = cms.bool(True),
        accumulatorType = cms.string('SiPixelDigitizer'),
        applyLateReweighting = cms.bool(False),
        deltaProductionCut = cms.double(0.03),
        hitsProducer = cms.string('g4SimHits'),
        killModules = cms.bool(True),
        makeDigiSimLinks = cms.untracked.bool(True),
        store_SimHitEntryExitPoints = cms.bool(False),
        useDB = cms.bool(False)
    ),
    puVtx = cms.PSet(
        accumulatorType = cms.string('PileupVertexAccumulator'),
        hitsProducer = cms.string('generator'),
        makeDigiSimLinks = cms.untracked.bool(False),
        saveVtxTimes = cms.bool(False),
        vtxFallbackTag = cms.InputTag("generator"),
        vtxTag = cms.InputTag("generatorSmeared")
    ),
    strip = cms.PSet(
        APVProbabilityFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVProbaList.txt'),
        APVSaturationFromHIP = cms.bool(False),
        APVSaturationProbScaling = cms.double(1.0),
        APVShapeDecoFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVShapeDeco_320.txt'),
        APVShapePeakFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVShapePeak_default.txt'),
        APVpeakmode = cms.bool(False),
        AppliedVoltage = cms.double(300.0),
        BaselineShift = cms.bool(True),
        ChargeDistributionRMS = cms.double(6.5e-10),
        ChargeMobility = cms.double(310.0),
        CommonModeNoise = cms.bool(True),
        CosmicDelayShift = cms.untracked.double(0.0),
        CouplingConstantDecIB1 = cms.vdouble(0.7748, 0.0962, 0.0165),
        CouplingConstantDecIB2 = cms.vdouble(0.83, 0.0756, 0.0094),
        CouplingConstantDecOB1 = cms.vdouble(0.6871, 0.1222, 0.0342),
        CouplingConstantDecOB2 = cms.vdouble(0.725, 0.1102, 0.0273),
        CouplingConstantDecW1a = cms.vdouble(0.786, 0.093, 0.014),
        CouplingConstantDecW1b = cms.vdouble(0.822, 0.08, 0.009),
        CouplingConstantDecW2a = cms.vdouble(0.7962, 0.0914, 0.0104),
        CouplingConstantDecW2b = cms.vdouble(0.888, 0.05, 0.006),
        CouplingConstantDecW3a = cms.vdouble(0.8164, 0.09, 0.0018),
        CouplingConstantDecW3b = cms.vdouble(0.848, 0.06, 0.016),
        CouplingConstantDecW4 = cms.vdouble(0.876, 0.06, 0.002),
        CouplingConstantDecW5 = cms.vdouble(0.7565, 0.0913, 0.0304),
        CouplingConstantDecW6 = cms.vdouble(0.758, 0.093, 0.026),
        CouplingConstantDecW7 = cms.vdouble(0.7828, 0.0862, 0.0224),
        CouplingConstantPeakIB1 = cms.vdouble(0.9006, 0.0497),
        CouplingConstantPeakIB2 = cms.vdouble(0.9342, 0.0328),
        CouplingConstantPeakOB1 = cms.vdouble(0.8542, 0.0729),
        CouplingConstantPeakOB2 = cms.vdouble(0.8719, 0.064),
        CouplingConstantPeakW1a = cms.vdouble(0.996, 0.002),
        CouplingConstantPeakW1b = cms.vdouble(0.976, 0.012),
        CouplingConstantPeakW2a = cms.vdouble(1.0, 0.0),
        CouplingConstantPeakW2b = cms.vdouble(0.998, 0.001),
        CouplingConstantPeakW3a = cms.vdouble(0.996, 0.002),
        CouplingConstantPeakW3b = cms.vdouble(0.992, 0.004),
        CouplingConstantPeakW4 = cms.vdouble(0.992, 0.004),
        CouplingConstantPeakW5 = cms.vdouble(0.968, 0.016),
        CouplingConstantPeakW6 = cms.vdouble(0.972, 0.014),
        CouplingConstantPeakW7 = cms.vdouble(0.964, 0.018),
        CouplingConstantRunIIDecIB1 = cms.vdouble(0.8361, 0.0703, 0.0117),
        CouplingConstantRunIIDecIB2 = cms.vdouble(0.8616, 0.0588, 0.0104),
        CouplingConstantRunIIDecOB1 = cms.vdouble(0.7461, 0.0996, 0.0273),
        CouplingConstantRunIIDecOB2 = cms.vdouble(0.7925, 0.0834, 0.0203),
        CouplingConstantRunIIDecW1a = cms.vdouble(0.8571, 0.0608, 0.0106),
        CouplingConstantRunIIDecW1b = cms.vdouble(0.8827, 0.0518, 0.0068),
        CouplingConstantRunIIDecW2a = cms.vdouble(0.8861, 0.049, 0.008),
        CouplingConstantRunIIDecW2b = cms.vdouble(0.8943, 0.0483, 0.0046),
        CouplingConstantRunIIDecW3a = cms.vdouble(0.8984, 0.0494, 0.0014),
        CouplingConstantRunIIDecW3b = cms.vdouble(0.8611, 0.0573, 0.0121),
        CouplingConstantRunIIDecW4 = cms.vdouble(0.8881, 0.0544, 0.0015),
        CouplingConstantRunIIDecW5 = cms.vdouble(0.7997, 0.077, 0.0231),
        CouplingConstantRunIIDecW6 = cms.vdouble(0.8067, 0.0769, 0.0198),
        CouplingConstantRunIIDecW7 = cms.vdouble(0.7883, 0.0888, 0.0171),
        CouplingConstantsRunIIDecB = cms.bool(True),
        CouplingConstantsRunIIDecW = cms.bool(True),
        DeltaProductionCut = cms.double(0.120425),
        DepletionVoltage = cms.double(170.0),
        DigiModeList = cms.PSet(
            PRDigi = cms.string('ProcessedRaw'),
            SCDigi = cms.string('ScopeMode'),
            VRDigi = cms.string('VirginRaw'),
            ZSDigi = cms.string('ZeroSuppressed')
        ),
        FedAlgorithm = cms.int32(4),
        FedAlgorithm_PM = cms.int32(4),
        Gain = cms.string(''),
        GeometryType = cms.string('idealForDigi'),
        GevPerElectron = cms.double(3.61e-09),
        Inefficiency = cms.double(0.0),
        LandauFluctuations = cms.bool(True),
        LorentzAngle = cms.string(''),
        Noise = cms.bool(True),
        NoiseSigmaThreshold = cms.double(2.0),
        PedestalsOffset = cms.double(128),
        PreMixingMode = cms.bool(False),
        ROUList = cms.vstring(
            'TrackerHitsTIBLowTof',
            'TrackerHitsTIBHighTof',
            'TrackerHitsTIDLowTof',
            'TrackerHitsTIDHighTof',
            'TrackerHitsTOBLowTof',
            'TrackerHitsTOBHighTof',
            'TrackerHitsTECLowTof',
            'TrackerHitsTECHighTof'
        ),
        RealPedestals = cms.bool(True),
        SingleStripNoise = cms.bool(True),
        TOFCutForDeconvolution = cms.double(50.0),
        TOFCutForPeak = cms.double(100.0),
        Temperature = cms.double(273.0),
        TrackerConfigurationFromDB = cms.bool(False),
        ZeroSuppression = cms.bool(True),
        accumulatorType = cms.string('SiStripDigitizer'),
        apv_mVPerQ = cms.double(5.5),
        apv_maxResponse = cms.double(729),
        apv_rate = cms.double(66.2),
        apvfCPerElectron = cms.double(0.0001602),
        chargeDivisionsPerStrip = cms.int32(10),
        cmnRMStec = cms.double(2.44),
        cmnRMStib = cms.double(5.92),
        cmnRMStid = cms.double(3.08),
        cmnRMStob = cms.double(1.08),
        electronPerAdcDec = cms.double(247.0),
        electronPerAdcPeak = cms.double(262.0),
        fracOfEventsToSimAPV = cms.double(0.0),
        hitsProducer = cms.string('g4SimHits'),
        includeAPVSimulation = cms.bool(False),
        makeDigiSimLinks = cms.untracked.bool(True),
        noDiffusion = cms.bool(False)
    )
)

process.theDigitizersValid = cms.PSet(
    ecal = cms.PSet(
        ConstantTerm = cms.double(0.003),
        EBCorrNoiseMatrixG01 = cms.vdouble(
            1.0, 0.73354, 0.64442, 0.58851, 0.55425,
            0.53082, 0.51916, 0.51097, 0.50732, 0.50409
        ),
        EBCorrNoiseMatrixG06 = cms.vdouble(
            1.0, 0.70946, 0.58021, 0.49846, 0.45006,
            0.41366, 0.39699, 0.38478, 0.37847, 0.37055
        ),
        EBCorrNoiseMatrixG12 = cms.vdouble(
            1.0, 0.71073, 0.55721, 0.46089, 0.40449,
            0.35931, 0.33924, 0.32439, 0.31581, 0.30481
        ),
        EBdigiCollection = cms.string(''),
        EBs25notContainment = cms.double(0.9675),
        EECorrNoiseMatrixG01 = cms.vdouble(
            1.0, 0.72698, 0.62048, 0.55691, 0.51848,
            0.49147, 0.47813, 0.47007, 0.46621, 0.46265
        ),
        EECorrNoiseMatrixG06 = cms.vdouble(
            1.0, 0.71217, 0.47464, 0.34056, 0.26282,
            0.20287, 0.17734, 0.16256, 0.15618, 0.14443
        ),
        EECorrNoiseMatrixG12 = cms.vdouble(
            1.0, 0.71373, 0.44825, 0.30152, 0.21609,
            0.14786, 0.11772, 0.10165, 0.09465, 0.08098
        ),
        EEdigiCollection = cms.string(''),
        EEs25notContainment = cms.double(0.968),
        ESdigiCollection = cms.string(''),
        EcalPreMixStage1 = cms.bool(False),
        EcalPreMixStage2 = cms.bool(False),
        UseLCcorrection = cms.untracked.bool(True),
        accumulatorType = cms.string('EcalDigiProducer'),
        apdAddToBarrel = cms.bool(False),
        apdDigiTag = cms.string('APD'),
        apdDoPEStats = cms.bool(True),
        apdNonlParms = cms.vdouble(
            1.48, -3.75, 1.81, 1.26, 2.0,
            45, 1.0
        ),
        apdSeparateDigi = cms.bool(True),
        apdShapeTau = cms.double(40.5),
        apdShapeTstart = cms.double(74.5),
        apdSimToPEHigh = cms.double(88200000.0),
        apdSimToPELow = cms.double(2450000.0),
        apdTimeOffWidth = cms.double(0.8),
        apdTimeOffset = cms.double(-13.5),
        applyConstantTerm = cms.bool(True),
        binOfMaximum = cms.int32(6),
        cosmicsPhase = cms.bool(False),
        cosmicsShift = cms.double(0.0),
        doEB = cms.bool(True),
        doEE = cms.bool(True),
        doENoise = cms.bool(True),
        doES = cms.bool(True),
        doESNoise = cms.bool(True),
        doFast = cms.bool(True),
        doPhotostatistics = cms.bool(True),
        hitsProducer = cms.string('g4SimHits'),
        makeDigiSimLinks = cms.untracked.bool(False),
        photoelectronsToAnalogBarrel = cms.double(0.000444444),
        photoelectronsToAnalogEndcap = cms.double(0.000555555),
        samplingFactor = cms.double(1.0),
        simHitToPhotoelectronsBarrel = cms.double(2250.0),
        simHitToPhotoelectronsEndcap = cms.double(1800.0),
        syncPhase = cms.bool(True),
        timeDependent = cms.bool(False),
        timePhase = cms.double(0.0)
    ),
    hcal = cms.PSet(
        DelivLuminosity = cms.double(0),
        HBDarkening = cms.bool(False),
        HEDarkening = cms.bool(False),
        HFDarkening = cms.bool(False),
        HFRecalParameterBlock = cms.PSet(
            HFdepthOneParameterA = cms.vdouble(
                0.004123, 0.00602, 0.008201, 0.010489, 0.013379,
                0.016997, 0.021464, 0.027371, 0.034195, 0.044807,
                0.058939, 0.125497
            ),
            HFdepthOneParameterB = cms.vdouble(
                -4e-06, -2e-06, 0.0, 4e-06, 1.5e-05,
                2.6e-05, 6.3e-05, 8.4e-05, 0.00016, 0.000107,
                0.000425, 0.000209
            ),
            HFdepthTwoParameterA = cms.vdouble(
                0.002861, 0.004168, 0.0064, 0.008388, 0.011601,
                0.014425, 0.018633, 0.023232, 0.028274, 0.035447,
                0.051579, 0.086593
            ),
            HFdepthTwoParameterB = cms.vdouble(
                -2e-06, -0.0, -7e-06, -6e-06, -2e-06,
                1e-06, 1.9e-05, 3.1e-05, 6.7e-05, 1.2e-05,
                0.000157, -3e-06
            )
        ),
        HcalPreMixStage1 = cms.bool(False),
        HcalPreMixStage2 = cms.bool(False),
        TestNumbering = cms.bool(True),
        accumulatorType = cms.string('HcalDigiProducer'),
        debugCaloSamples = cms.bool(False),
        doEmpty = cms.bool(True),
        doHFWindow = cms.bool(False),
        doIonFeedback = cms.bool(True),
        doNeutralDensityFilter = cms.bool(True),
        doNoise = cms.bool(True),
        doThermalNoise = cms.bool(True),
        doTimeSlew = cms.bool(True),
        hb = cms.PSet(
            binOfMaximum = cms.int32(6),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(True),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(
                125.44, 125.54, 125.32, 125.13, 124.46,
                125.01, 125.22, 125.48, 124.45, 125.9,
                125.83, 127.01, 126.82, 129.73, 131.83,
                143.52
            ),
            simHitToPhotoelectrons = cms.double(2000.0),
            sipmTau = cms.double(10.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(18.7),
            timePhase = cms.double(6.0),
            timeSmearing = cms.bool(True)
        ),
        he = cms.PSet(
            binOfMaximum = cms.int32(6),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(True),
            firstRing = cms.int32(16),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(
                210.55, 197.93, 186.12, 189.64, 189.63,
                190.28, 189.61, 189.6, 190.12, 191.22,
                190.9, 193.06, 188.42, 188.42
            ),
            simHitToPhotoelectrons = cms.double(2000.0),
            sipmTau = cms.double(10.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(18.7),
            timePhase = cms.double(6.0),
            timeSmearing = cms.bool(True)
        ),
        hf1 = cms.PSet(
            binOfMaximum = cms.int32(2),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            photoelectronsToAnalog = cms.double(2.79),
            readoutFrameSize = cms.int32(3),
            samplingFactor = cms.double(0.37),
            simHitToPhotoelectrons = cms.double(6.0),
            sipmTau = cms.double(0.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(3.0),
            timePhase = cms.double(9.0)
        ),
        hf2 = cms.PSet(
            binOfMaximum = cms.int32(2),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            photoelectronsToAnalog = cms.double(1.843),
            readoutFrameSize = cms.int32(3),
            samplingFactor = cms.double(0.37),
            simHitToPhotoelectrons = cms.double(6.0),
            sipmTau = cms.double(0.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(3.0),
            timePhase = cms.double(8.0)
        ),
        hitsProducer = cms.string('g4SimHits'),
        ho = cms.PSet(
            binOfMaximum = cms.int32(5),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(
                231.0, 231.0, 231.0, 231.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0
            ),
            siPMCode = cms.int32(1),
            simHitToPhotoelectrons = cms.double(4000.0),
            sipmTau = cms.double(5.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(-999.0),
            timePhase = cms.double(5.0),
            timeSmearing = cms.bool(False)
        ),
        hoHamamatsu = cms.PSet(
            binOfMaximum = cms.int32(5),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(
                231.0, 231.0, 231.0, 231.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0
            ),
            siPMCode = cms.int32(2),
            simHitToPhotoelectrons = cms.double(4000.0),
            sipmTau = cms.double(5.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(-999.0),
            timePhase = cms.double(5.0),
            timeSmearing = cms.bool(False)
        ),
        hoZecotek = cms.PSet(
            binOfMaximum = cms.int32(5),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(
                231.0, 231.0, 231.0, 231.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0
            ),
            siPMCode = cms.int32(2),
            simHitToPhotoelectrons = cms.double(4000.0),
            sipmTau = cms.double(5.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(-999.0),
            timePhase = cms.double(5.0),
            timeSmearing = cms.bool(False)
        ),
        ignoreGeantTime = cms.bool(False),
        injectTestHits = cms.bool(False),
        injectTestHitsCells = cms.vint32(),
        injectTestHitsEnergy = cms.vdouble(),
        injectTestHitsTime = cms.vdouble(),
        killHE = cms.bool(False),
        makeDigiSimLinks = cms.untracked.bool(False),
        minFCToDelay = cms.double(5.0),
        zdc = cms.PSet(
            binOfMaximum = cms.int32(5),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            photoelectronsToAnalog = cms.double(1.843),
            readoutFrameSize = cms.int32(10),
            samplingFactor = cms.double(1.0),
            simHitToPhotoelectrons = cms.double(6.0),
            sipmTau = cms.double(0.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(-999.0),
            timePhase = cms.double(-4.0)
        )
    ),
    mergedtruth = cms.PSet(
        HepMCProductLabel = cms.InputTag("generatorSmeared"),
        accumulatorType = cms.string('TrackingTruthAccumulator'),
        allowDifferentSimHitProcesses = cms.bool(False),
        alwaysAddAncestors = cms.bool(True),
        createInitialVertexCollection = cms.bool(False),
        createMergedBremsstrahlung = cms.bool(True),
        createUnmergedCollection = cms.bool(True),
        genParticleCollection = cms.InputTag("genParticles"),
        ignoreTracksOutsideVolume = cms.bool(False),
        maximumPreviousBunchCrossing = cms.uint32(9999),
        maximumSubsequentBunchCrossing = cms.uint32(9999),
        removeDeadModules = cms.bool(False),
        select = cms.PSet(
            chargedOnlyTP = cms.bool(True),
            intimeOnlyTP = cms.bool(False),
            lipTP = cms.double(1000),
            maxRapidityTP = cms.double(5.0),
            minHitTP = cms.int32(0),
            minRapidityTP = cms.double(-5.0),
            pdgIdTP = cms.vint32(),
            ptMaxTP = cms.double(1e+100),
            ptMinTP = cms.double(0.1),
            signalOnlyTP = cms.bool(False),
            stableOnlyTP = cms.bool(False),
            tipTP = cms.double(1000)
        ),
        simHitCollections = cms.PSet(
            muon = cms.VInputTag(cms.InputTag("g4SimHits","MuonDTHits"), cms.InputTag("g4SimHits","MuonCSCHits"), cms.InputTag("g4SimHits","MuonRPCHits"), cms.InputTag("g4SimHits","MuonGEMHits")),
            pixel = cms.VInputTag(cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof")),
            tracker = cms.VInputTag(
                cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"), cms.InputTag("g4SimHits","TrackerHitsTOBLowTof"),
                cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTECLowTof"), cms.InputTag("g4SimHits","TrackerHitsTECHighTof")
            )
        ),
        simTrackCollection = cms.InputTag("g4SimHits"),
        simVertexCollection = cms.InputTag("g4SimHits"),
        vertexDistanceCut = cms.double(0.003),
        volumeRadius = cms.double(120.0),
        volumeZ = cms.double(300.0)
    ),
    pixel = cms.PSet(
        AdcFullScLateCR = cms.int32(255),
        AdcFullScale = cms.int32(255),
        AddNoise = cms.bool(True),
        AddNoisyPixels = cms.bool(True),
        AddPixelInefficiency = cms.bool(True),
        AddThresholdSmearing = cms.bool(True),
        Alpha2Order = cms.bool(True),
        BPix_SignalResponse_p0 = cms.double(0.00171),
        BPix_SignalResponse_p1 = cms.double(0.711),
        BPix_SignalResponse_p2 = cms.double(203.0),
        BPix_SignalResponse_p3 = cms.double(148.0),
        ChargeVCALSmearing = cms.bool(True),
        DeadModules_DB = cms.bool(True),
        DoPixelAging = cms.bool(False),
        ElectronPerAdc = cms.double(135.0),
        ElectronsPerVcal = cms.double(47),
        ElectronsPerVcal_L1 = cms.double(50),
        ElectronsPerVcal_L1_Offset = cms.double(-670),
        ElectronsPerVcal_Offset = cms.double(-60),
        FPix_SignalResponse_p0 = cms.double(0.00171),
        FPix_SignalResponse_p1 = cms.double(0.711),
        FPix_SignalResponse_p2 = cms.double(203.0),
        FPix_SignalResponse_p3 = cms.double(148.0),
        GainSmearing = cms.double(0.0),
        KillBadFEDChannels = cms.bool(True),
        LorentzAngle_DB = cms.bool(True),
        MissCalInLateCR = cms.bool(True),
        MissCalibrate = cms.bool(True),
        NoiseInElectrons = cms.double(175.0),
        NumPixelBarrel = cms.int32(4),
        NumPixelEndcap = cms.int32(3),
        OffsetSmearing = cms.double(0.0),
        PixGeometryType = cms.string('idealForDigi'),
        PrintClusters = cms.bool(False),
        PrintTemplates = cms.bool(False),
        ReadoutNoiseInElec = cms.double(350.0),
        RoutList = cms.vstring(
            'TrackerHitsPixelBarrelLowTof',
            'TrackerHitsPixelBarrelHighTof',
            'TrackerHitsPixelEndcapLowTof',
            'TrackerHitsPixelEndcapHighTof'
        ),
        SiPixelQualityLabel = cms.string('forDigitizer'),
        TanLorentzAnglePerTesla_BPix = cms.double(0.106),
        TanLorentzAnglePerTesla_FPix = cms.double(0.106),
        ThresholdInElectrons_BPix = cms.double(1600.0),
        ThresholdInElectrons_BPix_L1 = cms.double(2000.0),
        ThresholdInElectrons_BPix_L2 = cms.double(1600.0),
        ThresholdInElectrons_FPix = cms.double(1600.0),
        ThresholdSmearing_BPix = cms.double(245.0),
        ThresholdSmearing_BPix_L1 = cms.double(245.0),
        ThresholdSmearing_BPix_L2 = cms.double(245.0),
        ThresholdSmearing_FPix = cms.double(210.0),
        TofLowerCut = cms.double(-12.5),
        TofUpperCut = cms.double(12.5),
        UseReweighting = cms.bool(True),
        accumulatorType = cms.string('SiPixelDigitizer'),
        applyLateReweighting = cms.bool(False),
        deltaProductionCut = cms.double(0.03),
        hitsProducer = cms.string('g4SimHits'),
        killModules = cms.bool(True),
        makeDigiSimLinks = cms.untracked.bool(True),
        store_SimHitEntryExitPoints = cms.bool(False),
        useDB = cms.bool(False)
    ),
    puVtx = cms.PSet(
        accumulatorType = cms.string('PileupVertexAccumulator'),
        hitsProducer = cms.string('generator'),
        makeDigiSimLinks = cms.untracked.bool(False),
        saveVtxTimes = cms.bool(False),
        vtxFallbackTag = cms.InputTag("generator"),
        vtxTag = cms.InputTag("generatorSmeared")
    ),
    strip = cms.PSet(
        APVProbabilityFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVProbaList.txt'),
        APVSaturationFromHIP = cms.bool(False),
        APVSaturationProbScaling = cms.double(1.0),
        APVShapeDecoFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVShapeDeco_320.txt'),
        APVShapePeakFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVShapePeak_default.txt'),
        APVpeakmode = cms.bool(False),
        AppliedVoltage = cms.double(300.0),
        BaselineShift = cms.bool(True),
        ChargeDistributionRMS = cms.double(6.5e-10),
        ChargeMobility = cms.double(310.0),
        CommonModeNoise = cms.bool(True),
        CosmicDelayShift = cms.untracked.double(0.0),
        CouplingConstantDecIB1 = cms.vdouble(0.7748, 0.0962, 0.0165),
        CouplingConstantDecIB2 = cms.vdouble(0.83, 0.0756, 0.0094),
        CouplingConstantDecOB1 = cms.vdouble(0.6871, 0.1222, 0.0342),
        CouplingConstantDecOB2 = cms.vdouble(0.725, 0.1102, 0.0273),
        CouplingConstantDecW1a = cms.vdouble(0.786, 0.093, 0.014),
        CouplingConstantDecW1b = cms.vdouble(0.822, 0.08, 0.009),
        CouplingConstantDecW2a = cms.vdouble(0.7962, 0.0914, 0.0104),
        CouplingConstantDecW2b = cms.vdouble(0.888, 0.05, 0.006),
        CouplingConstantDecW3a = cms.vdouble(0.8164, 0.09, 0.0018),
        CouplingConstantDecW3b = cms.vdouble(0.848, 0.06, 0.016),
        CouplingConstantDecW4 = cms.vdouble(0.876, 0.06, 0.002),
        CouplingConstantDecW5 = cms.vdouble(0.7565, 0.0913, 0.0304),
        CouplingConstantDecW6 = cms.vdouble(0.758, 0.093, 0.026),
        CouplingConstantDecW7 = cms.vdouble(0.7828, 0.0862, 0.0224),
        CouplingConstantPeakIB1 = cms.vdouble(0.9006, 0.0497),
        CouplingConstantPeakIB2 = cms.vdouble(0.9342, 0.0328),
        CouplingConstantPeakOB1 = cms.vdouble(0.8542, 0.0729),
        CouplingConstantPeakOB2 = cms.vdouble(0.8719, 0.064),
        CouplingConstantPeakW1a = cms.vdouble(0.996, 0.002),
        CouplingConstantPeakW1b = cms.vdouble(0.976, 0.012),
        CouplingConstantPeakW2a = cms.vdouble(1.0, 0.0),
        CouplingConstantPeakW2b = cms.vdouble(0.998, 0.001),
        CouplingConstantPeakW3a = cms.vdouble(0.996, 0.002),
        CouplingConstantPeakW3b = cms.vdouble(0.992, 0.004),
        CouplingConstantPeakW4 = cms.vdouble(0.992, 0.004),
        CouplingConstantPeakW5 = cms.vdouble(0.968, 0.016),
        CouplingConstantPeakW6 = cms.vdouble(0.972, 0.014),
        CouplingConstantPeakW7 = cms.vdouble(0.964, 0.018),
        CouplingConstantRunIIDecIB1 = cms.vdouble(0.8361, 0.0703, 0.0117),
        CouplingConstantRunIIDecIB2 = cms.vdouble(0.8616, 0.0588, 0.0104),
        CouplingConstantRunIIDecOB1 = cms.vdouble(0.7461, 0.0996, 0.0273),
        CouplingConstantRunIIDecOB2 = cms.vdouble(0.7925, 0.0834, 0.0203),
        CouplingConstantRunIIDecW1a = cms.vdouble(0.8571, 0.0608, 0.0106),
        CouplingConstantRunIIDecW1b = cms.vdouble(0.8827, 0.0518, 0.0068),
        CouplingConstantRunIIDecW2a = cms.vdouble(0.8861, 0.049, 0.008),
        CouplingConstantRunIIDecW2b = cms.vdouble(0.8943, 0.0483, 0.0046),
        CouplingConstantRunIIDecW3a = cms.vdouble(0.8984, 0.0494, 0.0014),
        CouplingConstantRunIIDecW3b = cms.vdouble(0.8611, 0.0573, 0.0121),
        CouplingConstantRunIIDecW4 = cms.vdouble(0.8881, 0.0544, 0.0015),
        CouplingConstantRunIIDecW5 = cms.vdouble(0.7997, 0.077, 0.0231),
        CouplingConstantRunIIDecW6 = cms.vdouble(0.8067, 0.0769, 0.0198),
        CouplingConstantRunIIDecW7 = cms.vdouble(0.7883, 0.0888, 0.0171),
        CouplingConstantsRunIIDecB = cms.bool(True),
        CouplingConstantsRunIIDecW = cms.bool(True),
        DeltaProductionCut = cms.double(0.120425),
        DepletionVoltage = cms.double(170.0),
        DigiModeList = cms.PSet(
            PRDigi = cms.string('ProcessedRaw'),
            SCDigi = cms.string('ScopeMode'),
            VRDigi = cms.string('VirginRaw'),
            ZSDigi = cms.string('ZeroSuppressed')
        ),
        FedAlgorithm = cms.int32(4),
        FedAlgorithm_PM = cms.int32(4),
        Gain = cms.string(''),
        GeometryType = cms.string('idealForDigi'),
        GevPerElectron = cms.double(3.61e-09),
        Inefficiency = cms.double(0.0),
        LandauFluctuations = cms.bool(True),
        LorentzAngle = cms.string(''),
        Noise = cms.bool(True),
        NoiseSigmaThreshold = cms.double(2.0),
        PedestalsOffset = cms.double(128),
        PreMixingMode = cms.bool(False),
        ROUList = cms.vstring(
            'TrackerHitsTIBLowTof',
            'TrackerHitsTIBHighTof',
            'TrackerHitsTIDLowTof',
            'TrackerHitsTIDHighTof',
            'TrackerHitsTOBLowTof',
            'TrackerHitsTOBHighTof',
            'TrackerHitsTECLowTof',
            'TrackerHitsTECHighTof'
        ),
        RealPedestals = cms.bool(True),
        SingleStripNoise = cms.bool(True),
        TOFCutForDeconvolution = cms.double(50.0),
        TOFCutForPeak = cms.double(100.0),
        Temperature = cms.double(273.0),
        TrackerConfigurationFromDB = cms.bool(False),
        ZeroSuppression = cms.bool(True),
        accumulatorType = cms.string('SiStripDigitizer'),
        apv_mVPerQ = cms.double(5.5),
        apv_maxResponse = cms.double(729),
        apv_rate = cms.double(66.2),
        apvfCPerElectron = cms.double(0.0001602),
        chargeDivisionsPerStrip = cms.int32(10),
        cmnRMStec = cms.double(2.44),
        cmnRMStib = cms.double(5.92),
        cmnRMStid = cms.double(3.08),
        cmnRMStob = cms.double(1.08),
        electronPerAdcDec = cms.double(247.0),
        electronPerAdcPeak = cms.double(262.0),
        fracOfEventsToSimAPV = cms.double(0.0),
        hitsProducer = cms.string('g4SimHits'),
        includeAPVSimulation = cms.bool(False),
        makeDigiSimLinks = cms.untracked.bool(True),
        noDiffusion = cms.bool(False)
    )
)

process.theMixObjects = cms.PSet(
    mixCH = cms.PSet(
        crossingFrames = cms.untracked.vstring(),
        input = cms.VInputTag(
            cms.InputTag("g4SimHits","CastorFI"), cms.InputTag("g4SimHits","EcalHitsEB"), cms.InputTag("g4SimHits","EcalHitsEE"), cms.InputTag("g4SimHits","EcalHitsES"), cms.InputTag("g4SimHits","HcalHits"),
            cms.InputTag("g4SimHits","ZDCHITS")
        ),
        subdets = cms.vstring(
            'CastorFI',
            'EcalHitsEB',
            'EcalHitsEE',
            'EcalHitsES',
            'HcalHits',
            'ZDCHITS'
        ),
        type = cms.string('PCaloHit')
    ),
    mixHepMC = cms.PSet(
        input = cms.VInputTag(cms.InputTag("generatorSmeared"), cms.InputTag("generator")),
        makeCrossingFrame = cms.untracked.bool(True),
        type = cms.string('HepMCProduct')
    ),
    mixSH = cms.PSet(
        crossingFrames = cms.untracked.vstring(
            'MuonCSCHits',
            'MuonDTHits',
            'MuonRPCHits',
            'MuonGEMHits',
            'TotemHitsRP',
            'CTPPSPixelHits'
        ),
        input = cms.VInputTag(
            cms.InputTag("g4SimHits","MuonCSCHits"), cms.InputTag("g4SimHits","MuonDTHits"), cms.InputTag("g4SimHits","MuonRPCHits"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"),
            cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"), cms.InputTag("g4SimHits","TrackerHitsTECHighTof"), cms.InputTag("g4SimHits","TrackerHitsTECLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"),
            cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"), cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"), cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTOBLowTof"),
            cms.InputTag("g4SimHits","MuonGEMHits"), cms.InputTag("g4SimHits","TotemHitsRP"), cms.InputTag("g4SimHits","CTPPSPixelHits")
        ),
        pcrossingFrames = cms.untracked.vstring(),
        subdets = cms.vstring(
            'MuonCSCHits',
            'MuonDTHits',
            'MuonRPCHits',
            'TrackerHitsPixelBarrelHighTof',
            'TrackerHitsPixelBarrelLowTof',
            'TrackerHitsPixelEndcapHighTof',
            'TrackerHitsPixelEndcapLowTof',
            'TrackerHitsTECHighTof',
            'TrackerHitsTECLowTof',
            'TrackerHitsTIBHighTof',
            'TrackerHitsTIBLowTof',
            'TrackerHitsTIDHighTof',
            'TrackerHitsTIDLowTof',
            'TrackerHitsTOBHighTof',
            'TrackerHitsTOBLowTof',
            'MuonGEMHits',
            'TotemHitsRP',
            'CTPPSPixelHits'
        ),
        type = cms.string('PSimHit')
    ),
    mixTracks = cms.PSet(
        input = cms.VInputTag(cms.InputTag("g4SimHits")),
        makeCrossingFrame = cms.untracked.bool(False),
        type = cms.string('SimTrack')
    ),
    mixVertices = cms.PSet(
        input = cms.VInputTag(cms.InputTag("g4SimHits")),
        makeCrossingFrame = cms.untracked.bool(False),
        type = cms.string('SimVertex')
    )
)

process.tkAssocParamBlock = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EBRecHitCollectionLabel = cms.InputTag("reducedEcalRecHitsEB"),
        EERecHitCollectionLabel = cms.InputTag("reducedEcalRecHitsEE"),
        GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
        HBHERecHitCollectionLabel = cms.InputTag("reducedHcalRecHits","hbhereco"),
        HORecHitCollectionLabel = cms.InputTag("reducedHcalRecHits","horeco"),
        ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
        accountForTrajectoryChangeCalo = cms.bool(False),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        dRHcal = cms.double(9999.0),
        dRHcalPreselection = cms.double(0.2),
        dRMuon = cms.double(9999.0),
        dRMuonPreselection = cms.double(0.2),
        dRPreshowerPreselection = cms.double(0.2),
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        propagateAllDirections = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        truthMatch = cms.bool(False),
        useCalo = cms.bool(False),
        useEcal = cms.bool(True),
        useGEM = cms.bool(False),
        useHO = cms.bool(False),
        useHcal = cms.bool(True),
        useME0 = cms.bool(False),
        useMuon = cms.bool(False),
        usePreshower = cms.bool(False)
    )
)

process.trackPseudoSelectionBlock = cms.PSet(
    trackPseudoSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(2.0),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    )
)

process.trackSelectionBlock = cms.PSet(
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    )
)

process.trackingParticles = cms.PSet(
    HepMCProductLabel = cms.InputTag("generatorSmeared"),
    accumulatorType = cms.string('TrackingTruthAccumulator'),
    allowDifferentSimHitProcesses = cms.bool(False),
    alwaysAddAncestors = cms.bool(True),
    createInitialVertexCollection = cms.bool(False),
    createMergedBremsstrahlung = cms.bool(True),
    createUnmergedCollection = cms.bool(True),
    genParticleCollection = cms.InputTag("genParticles"),
    ignoreTracksOutsideVolume = cms.bool(False),
    maximumPreviousBunchCrossing = cms.uint32(9999),
    maximumSubsequentBunchCrossing = cms.uint32(9999),
    removeDeadModules = cms.bool(False),
    select = cms.PSet(
        chargedOnlyTP = cms.bool(True),
        intimeOnlyTP = cms.bool(False),
        lipTP = cms.double(1000),
        maxRapidityTP = cms.double(5.0),
        minHitTP = cms.int32(0),
        minRapidityTP = cms.double(-5.0),
        pdgIdTP = cms.vint32(),
        ptMaxTP = cms.double(1e+100),
        ptMinTP = cms.double(0.1),
        signalOnlyTP = cms.bool(False),
        stableOnlyTP = cms.bool(False),
        tipTP = cms.double(1000)
    ),
    simHitCollections = cms.PSet(
        muon = cms.VInputTag(cms.InputTag("g4SimHits","MuonDTHits"), cms.InputTag("g4SimHits","MuonCSCHits"), cms.InputTag("g4SimHits","MuonRPCHits"), cms.InputTag("g4SimHits","MuonGEMHits")),
        pixel = cms.VInputTag(cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof")),
        tracker = cms.VInputTag(
            cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"), cms.InputTag("g4SimHits","TrackerHitsTOBLowTof"),
            cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTECLowTof"), cms.InputTag("g4SimHits","TrackerHitsTECHighTof")
        )
    ),
    simTrackCollection = cms.InputTag("g4SimHits"),
    simVertexCollection = cms.InputTag("g4SimHits"),
    vertexDistanceCut = cms.double(0.003),
    volumeRadius = cms.double(120.0),
    volumeZ = cms.double(300.0)
)

process.trackingParticlesSelection = cms.PSet(
    chargedOnlyTP = cms.bool(True),
    intimeOnlyTP = cms.bool(False),
    lipTP = cms.double(1000),
    maxRapidityTP = cms.double(5.0),
    minHitTP = cms.int32(0),
    minRapidityTP = cms.double(-5.0),
    pdgIdTP = cms.vint32(),
    ptMaxTP = cms.double(1e+100),
    ptMinTP = cms.double(0.1),
    signalOnlyTP = cms.bool(False),
    stableOnlyTP = cms.bool(False),
    tipTP = cms.double(1000)
)

process.train = cms.PSet(
    jEtaMax = cms.double(5.0),
    jEtaMin = cms.double(3.0),
    tmvaVariables = cms.vstring(
        'nvtx',
        'dR2Mean',
        'frac01',
        'frac02',
        'frac03',
        'frac04',
        'majW',
        'minW',
        'jetR',
        'nParticles',
        'ptD',
        'pull'
    ),
    tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL16APV_Eta3p0To5p0_chs_BDT.weights.xml.gz')
)

process.variableJTAPars = cms.PSet(
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    max_pT = cms.double(500),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3),
    min_pT = cms.double(120),
    min_pT_dRcut = cms.double(0.5)
)

process.vertexCutsBlock = cms.PSet(
    vertexCuts = cms.PSet(
        distSig2dMax = cms.double(99999.9),
        distSig2dMin = cms.double(3.0),
        distSig3dMax = cms.double(99999.9),
        distSig3dMin = cms.double(-99999.9),
        distVal2dMax = cms.double(2.5),
        distVal2dMin = cms.double(0.01),
        distVal3dMax = cms.double(99999.9),
        distVal3dMin = cms.double(-99999.9),
        fracPV = cms.double(0.65),
        massMax = cms.double(6.5),
        maxDeltaRToJetAxis = cms.double(0.4),
        minimumTrackWeight = cms.double(0.5),
        multiplicityMin = cms.uint32(2),
        useTrackWeights = cms.bool(True),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        )
    )
)

process.vertexRecoBlock = cms.PSet(
    vertexReco = cms.PSet(
        finder = cms.string('avr'),
        minweight = cms.double(0.5),
        primcut = cms.double(1.8),
        seccut = cms.double(6.0),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001)
    )
)

process.vertexSelectionBlock = cms.PSet(
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    )
)

process.vertexTrackSelectionBlock = cms.PSet(
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(1),
        ptMin = cms.double(1.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    )
)

process.MiniAODOverrideBranchesSplitLevel = cms.untracked.VPSet(
    cms.untracked.PSet(
        branch = cms.untracked.string('patPackedCandidates_packedPFCandidates__*'),
        splitLevel = cms.untracked.int32(99)
    ),
    cms.untracked.PSet(
        branch = cms.untracked.string('recoGenParticles_prunedGenParticles__*'),
        splitLevel = cms.untracked.int32(99)
    ),
    cms.untracked.PSet(
        branch = cms.untracked.string('patTriggerObjectStandAlones_slimmedPatTrigger__*'),
        splitLevel = cms.untracked.int32(99)
    ),
    cms.untracked.PSet(
        branch = cms.untracked.string('patPackedGenParticles_packedGenParticles__*'),
        splitLevel = cms.untracked.int32(99)
    ),
    cms.untracked.PSet(
        branch = cms.untracked.string('patJets_slimmedJets__*'),
        splitLevel = cms.untracked.int32(99)
    ),
    cms.untracked.PSet(
        branch = cms.untracked.string('recoVertexs_offlineSlimmedPrimaryVertices__*'),
        splitLevel = cms.untracked.int32(99)
    ),
    cms.untracked.PSet(
        branch = cms.untracked.string('recoVertexs_offlineSlimmedPrimaryVerticesWithBS__*'),
        splitLevel = cms.untracked.int32(99)
    ),
    cms.untracked.PSet(
        branch = cms.untracked.string('recoCaloClusters_reducedEgamma_reducedESClusters_*'),
        splitLevel = cms.untracked.int32(99)
    ),
    cms.untracked.PSet(
        branch = cms.untracked.string('EcalRecHitsSorted_reducedEgamma_reducedEBRecHits_*'),
        splitLevel = cms.untracked.int32(99)
    ),
    cms.untracked.PSet(
        branch = cms.untracked.string('EcalRecHitsSorted_reducedEgamma_reducedEERecHits_*'),
        splitLevel = cms.untracked.int32(99)
    ),
    cms.untracked.PSet(
        branch = cms.untracked.string('recoGenJets_slimmedGenJets__*'),
        splitLevel = cms.untracked.int32(99)
    ),
    cms.untracked.PSet(
        branch = cms.untracked.string('patJets_slimmedJetsPuppi__*'),
        splitLevel = cms.untracked.int32(99)
    ),
    cms.untracked.PSet(
        branch = cms.untracked.string('EcalRecHitsSorted_reducedEgamma_reducedESRecHits_*'),
        splitLevel = cms.untracked.int32(99)
    )
)

process.c_vs_b_vars_vpset = cms.VPSet(
    cms.PSet(
        default = cms.double(-1),
        name = cms.string('vertexLeptonCategory'),
        taggingVarName = cms.string('vertexLeptonCategory')
    ),
    cms.PSet(
        default = cms.double(-100),
        idx = cms.int32(0),
        name = cms.string('trackSip2dSig_0'),
        taggingVarName = cms.string('trackSip2dSig')
    ),
    cms.PSet(
        default = cms.double(-100),
        idx = cms.int32(1),
        name = cms.string('trackSip2dSig_1'),
        taggingVarName = cms.string('trackSip2dSig')
    ),
    cms.PSet(
        default = cms.double(-100),
        idx = cms.int32(0),
        name = cms.string('trackSip3dSig_0'),
        taggingVarName = cms.string('trackSip3dSig')
    ),
    cms.PSet(
        default = cms.double(-100),
        idx = cms.int32(1),
        name = cms.string('trackSip3dSig_1'),
        taggingVarName = cms.string('trackSip3dSig')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(0),
        name = cms.string('trackPtRel_0'),
        taggingVarName = cms.string('trackPtRel')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(1),
        name = cms.string('trackPtRel_1'),
        taggingVarName = cms.string('trackPtRel')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(0),
        name = cms.string('trackPPar_0'),
        taggingVarName = cms.string('trackPPar')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(1),
        name = cms.string('trackPPar_1'),
        taggingVarName = cms.string('trackPPar')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(0),
        name = cms.string('trackEtaRel_0'),
        taggingVarName = cms.string('trackEtaRel')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(1),
        name = cms.string('trackEtaRel_1'),
        taggingVarName = cms.string('trackEtaRel')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(0),
        name = cms.string('trackDeltaR_0'),
        taggingVarName = cms.string('trackDeltaR')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(1),
        name = cms.string('trackDeltaR_1'),
        taggingVarName = cms.string('trackDeltaR')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(0),
        name = cms.string('trackPtRatio_0'),
        taggingVarName = cms.string('trackPtRatio')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(1),
        name = cms.string('trackPtRatio_1'),
        taggingVarName = cms.string('trackPtRatio')
    ),
    cms.PSet(
        default = cms.double(1.1),
        idx = cms.int32(0),
        name = cms.string('trackPParRatio_0'),
        taggingVarName = cms.string('trackPParRatio')
    ),
    cms.PSet(
        default = cms.double(1.1),
        idx = cms.int32(1),
        name = cms.string('trackPParRatio_1'),
        taggingVarName = cms.string('trackPParRatio')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(0),
        name = cms.string('trackJetDist_0'),
        taggingVarName = cms.string('trackJetDist')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(1),
        name = cms.string('trackJetDist_1'),
        taggingVarName = cms.string('trackJetDist')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(0),
        name = cms.string('trackDecayLenVal_0'),
        taggingVarName = cms.string('trackDecayLenVal')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(1),
        name = cms.string('trackDecayLenVal_1'),
        taggingVarName = cms.string('trackDecayLenVal')
    ),
    cms.PSet(
        default = cms.double(0),
        name = cms.string('jetNSecondaryVertices'),
        taggingVarName = cms.string('jetNSecondaryVertices')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        name = cms.string('jetNTracks'),
        taggingVarName = cms.string('jetNTracks')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        name = cms.string('trackSumJetEtRatio'),
        taggingVarName = cms.string('trackSumJetEtRatio')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        name = cms.string('trackSumJetDeltaR'),
        taggingVarName = cms.string('trackSumJetDeltaR')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(0),
        name = cms.string('vertexMass_0'),
        taggingVarName = cms.string('vertexMass')
    ),
    cms.PSet(
        default = cms.double(-10),
        idx = cms.int32(0),
        name = cms.string('vertexEnergyRatio_0'),
        taggingVarName = cms.string('vertexEnergyRatio')
    ),
    cms.PSet(
        default = cms.double(-999),
        idx = cms.int32(0),
        name = cms.string('trackSip2dSigAboveCharm_0'),
        taggingVarName = cms.string('trackSip2dSigAboveCharm')
    ),
    cms.PSet(
        default = cms.double(-999),
        idx = cms.int32(0),
        name = cms.string('trackSip3dSigAboveCharm_0'),
        taggingVarName = cms.string('trackSip3dSigAboveCharm')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(0),
        name = cms.string('flightDistance2dSig_0'),
        taggingVarName = cms.string('flightDistance2dSig')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(0),
        name = cms.string('flightDistance3dSig_0'),
        taggingVarName = cms.string('flightDistance3dSig')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(0),
        name = cms.string('vertexJetDeltaR_0'),
        taggingVarName = cms.string('vertexJetDeltaR')
    ),
    cms.PSet(
        default = cms.double(0),
        idx = cms.int32(0),
        name = cms.string('vertexNTracks_0'),
        taggingVarName = cms.string('vertexNTracks')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(0),
        name = cms.string('massVertexEnergyFraction_0'),
        taggingVarName = cms.string('massVertexEnergyFraction')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(0),
        name = cms.string('vertexBoostOverSqrtJetPt_0'),
        taggingVarName = cms.string('vertexBoostOverSqrtJetPt')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(0),
        name = cms.string('leptonPtRel_0'),
        taggingVarName = cms.string('leptonPtRel')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(1),
        name = cms.string('leptonPtRel_1'),
        taggingVarName = cms.string('leptonPtRel')
    ),
    cms.PSet(
        default = cms.double(-10000),
        idx = cms.int32(0),
        name = cms.string('leptonSip3d_0'),
        taggingVarName = cms.string('leptonSip3d')
    ),
    cms.PSet(
        default = cms.double(-10000),
        idx = cms.int32(1),
        name = cms.string('leptonSip3d_1'),
        taggingVarName = cms.string('leptonSip3d')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(0),
        name = cms.string('leptonDeltaR_0'),
        taggingVarName = cms.string('leptonDeltaR')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(1),
        name = cms.string('leptonDeltaR_1'),
        taggingVarName = cms.string('leptonDeltaR')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(0),
        name = cms.string('leptonRatioRel_0'),
        taggingVarName = cms.string('leptonRatioRel')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(1),
        name = cms.string('leptonRatioRel_1'),
        taggingVarName = cms.string('leptonRatioRel')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(0),
        name = cms.string('leptonEtaRel_0'),
        taggingVarName = cms.string('leptonEtaRel')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(1),
        name = cms.string('leptonEtaRel_1'),
        taggingVarName = cms.string('leptonEtaRel')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(0),
        name = cms.string('leptonRatio_0'),
        taggingVarName = cms.string('leptonRatio')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(1),
        name = cms.string('leptonRatio_1'),
        taggingVarName = cms.string('leptonRatio')
    )
)

process.c_vs_l_vars_vpset = cms.VPSet(
    cms.PSet(
        default = cms.double(-1),
        name = cms.string('vertexLeptonCategory'),
        taggingVarName = cms.string('vertexLeptonCategory')
    ),
    cms.PSet(
        default = cms.double(-100),
        idx = cms.int32(0),
        name = cms.string('trackSip2dSig_0'),
        taggingVarName = cms.string('trackSip2dSig')
    ),
    cms.PSet(
        default = cms.double(-100),
        idx = cms.int32(1),
        name = cms.string('trackSip2dSig_1'),
        taggingVarName = cms.string('trackSip2dSig')
    ),
    cms.PSet(
        default = cms.double(-100),
        idx = cms.int32(0),
        name = cms.string('trackSip3dSig_0'),
        taggingVarName = cms.string('trackSip3dSig')
    ),
    cms.PSet(
        default = cms.double(-100),
        idx = cms.int32(1),
        name = cms.string('trackSip3dSig_1'),
        taggingVarName = cms.string('trackSip3dSig')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(0),
        name = cms.string('trackPtRel_0'),
        taggingVarName = cms.string('trackPtRel')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(1),
        name = cms.string('trackPtRel_1'),
        taggingVarName = cms.string('trackPtRel')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(0),
        name = cms.string('trackPPar_0'),
        taggingVarName = cms.string('trackPPar')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(1),
        name = cms.string('trackPPar_1'),
        taggingVarName = cms.string('trackPPar')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(0),
        name = cms.string('trackEtaRel_0'),
        taggingVarName = cms.string('trackEtaRel')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(1),
        name = cms.string('trackEtaRel_1'),
        taggingVarName = cms.string('trackEtaRel')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(0),
        name = cms.string('trackDeltaR_0'),
        taggingVarName = cms.string('trackDeltaR')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(1),
        name = cms.string('trackDeltaR_1'),
        taggingVarName = cms.string('trackDeltaR')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(0),
        name = cms.string('trackPtRatio_0'),
        taggingVarName = cms.string('trackPtRatio')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(1),
        name = cms.string('trackPtRatio_1'),
        taggingVarName = cms.string('trackPtRatio')
    ),
    cms.PSet(
        default = cms.double(1.1),
        idx = cms.int32(0),
        name = cms.string('trackPParRatio_0'),
        taggingVarName = cms.string('trackPParRatio')
    ),
    cms.PSet(
        default = cms.double(1.1),
        idx = cms.int32(1),
        name = cms.string('trackPParRatio_1'),
        taggingVarName = cms.string('trackPParRatio')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(0),
        name = cms.string('trackJetDist_0'),
        taggingVarName = cms.string('trackJetDist')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(1),
        name = cms.string('trackJetDist_1'),
        taggingVarName = cms.string('trackJetDist')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(0),
        name = cms.string('trackDecayLenVal_0'),
        taggingVarName = cms.string('trackDecayLenVal')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(1),
        name = cms.string('trackDecayLenVal_1'),
        taggingVarName = cms.string('trackDecayLenVal')
    ),
    cms.PSet(
        default = cms.double(0),
        name = cms.string('jetNSecondaryVertices'),
        taggingVarName = cms.string('jetNSecondaryVertices')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        name = cms.string('jetNTracks'),
        taggingVarName = cms.string('jetNTracks')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        name = cms.string('trackSumJetEtRatio'),
        taggingVarName = cms.string('trackSumJetEtRatio')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        name = cms.string('trackSumJetDeltaR'),
        taggingVarName = cms.string('trackSumJetDeltaR')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(0),
        name = cms.string('vertexMass_0'),
        taggingVarName = cms.string('vertexMass')
    ),
    cms.PSet(
        default = cms.double(-10),
        idx = cms.int32(0),
        name = cms.string('vertexEnergyRatio_0'),
        taggingVarName = cms.string('vertexEnergyRatio')
    ),
    cms.PSet(
        default = cms.double(-999),
        idx = cms.int32(0),
        name = cms.string('trackSip2dSigAboveCharm_0'),
        taggingVarName = cms.string('trackSip2dSigAboveCharm')
    ),
    cms.PSet(
        default = cms.double(-999),
        idx = cms.int32(0),
        name = cms.string('trackSip3dSigAboveCharm_0'),
        taggingVarName = cms.string('trackSip3dSigAboveCharm')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(0),
        name = cms.string('flightDistance2dSig_0'),
        taggingVarName = cms.string('flightDistance2dSig')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(0),
        name = cms.string('flightDistance3dSig_0'),
        taggingVarName = cms.string('flightDistance3dSig')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(0),
        name = cms.string('vertexJetDeltaR_0'),
        taggingVarName = cms.string('vertexJetDeltaR')
    ),
    cms.PSet(
        default = cms.double(0),
        idx = cms.int32(0),
        name = cms.string('vertexNTracks_0'),
        taggingVarName = cms.string('vertexNTracks')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(0),
        name = cms.string('massVertexEnergyFraction_0'),
        taggingVarName = cms.string('massVertexEnergyFraction')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(0),
        name = cms.string('vertexBoostOverSqrtJetPt_0'),
        taggingVarName = cms.string('vertexBoostOverSqrtJetPt')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(0),
        name = cms.string('leptonPtRel_0'),
        taggingVarName = cms.string('leptonPtRel')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(1),
        name = cms.string('leptonPtRel_1'),
        taggingVarName = cms.string('leptonPtRel')
    ),
    cms.PSet(
        default = cms.double(-10000),
        idx = cms.int32(0),
        name = cms.string('leptonSip3d_0'),
        taggingVarName = cms.string('leptonSip3d')
    ),
    cms.PSet(
        default = cms.double(-10000),
        idx = cms.int32(1),
        name = cms.string('leptonSip3d_1'),
        taggingVarName = cms.string('leptonSip3d')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(0),
        name = cms.string('leptonDeltaR_0'),
        taggingVarName = cms.string('leptonDeltaR')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(1),
        name = cms.string('leptonDeltaR_1'),
        taggingVarName = cms.string('leptonDeltaR')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(0),
        name = cms.string('leptonRatioRel_0'),
        taggingVarName = cms.string('leptonRatioRel')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(1),
        name = cms.string('leptonRatioRel_1'),
        taggingVarName = cms.string('leptonRatioRel')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(0),
        name = cms.string('leptonEtaRel_0'),
        taggingVarName = cms.string('leptonEtaRel')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(1),
        name = cms.string('leptonEtaRel_1'),
        taggingVarName = cms.string('leptonEtaRel')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(0),
        name = cms.string('leptonRatio_0'),
        taggingVarName = cms.string('leptonRatio')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(1),
        name = cms.string('leptonRatio_1'),
        taggingVarName = cms.string('leptonRatio')
    )
)

process.heavyIonCSV_vpset = cms.VPSet(
    cms.PSet(
        default = cms.double(-100),
        idx = cms.int32(0),
        name = cms.string('TagVarCSV_trackSip3dSig_0'),
        taggingVarName = cms.string('trackSip3dSig')
    ),
    cms.PSet(
        default = cms.double(-100),
        idx = cms.int32(1),
        name = cms.string('TagVarCSV_trackSip3dSig_1'),
        taggingVarName = cms.string('trackSip3dSig')
    ),
    cms.PSet(
        default = cms.double(-100),
        idx = cms.int32(2),
        name = cms.string('TagVarCSV_trackSip3dSig_2'),
        taggingVarName = cms.string('trackSip3dSig')
    ),
    cms.PSet(
        default = cms.double(-100),
        idx = cms.int32(3),
        name = cms.string('TagVarCSV_trackSip3dSig_3'),
        taggingVarName = cms.string('trackSip3dSig')
    ),
    cms.PSet(
        default = cms.double(-999),
        name = cms.string('TagVarCSV_trackSip3dSigAboveCharm'),
        taggingVarName = cms.string('trackSip3dSigAboveCharm')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(0),
        name = cms.string('TagVarCSV_trackPtRel_0'),
        taggingVarName = cms.string('trackPtRel')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(1),
        name = cms.string('TagVarCSV_trackPtRel_1'),
        taggingVarName = cms.string('trackPtRel')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(2),
        name = cms.string('TagVarCSV_trackPtRel_2'),
        taggingVarName = cms.string('trackPtRel')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(3),
        name = cms.string('TagVarCSV_trackPtRel_3'),
        taggingVarName = cms.string('trackPtRel')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(0),
        name = cms.string('TagVarCSV_trackEtaRel_0'),
        taggingVarName = cms.string('trackEtaRel')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(1),
        name = cms.string('TagVarCSV_trackEtaRel_1'),
        taggingVarName = cms.string('trackEtaRel')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(2),
        name = cms.string('TagVarCSV_trackEtaRel_2'),
        taggingVarName = cms.string('trackEtaRel')
    ),
    cms.PSet(
        default = cms.double(-1),
        idx = cms.int32(3),
        name = cms.string('TagVarCSV_trackEtaRel_3'),
        taggingVarName = cms.string('trackEtaRel')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(0),
        name = cms.string('TagVarCSV_trackDeltaR_0'),
        taggingVarName = cms.string('trackDeltaR')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(1),
        name = cms.string('TagVarCSV_trackDeltaR_1'),
        taggingVarName = cms.string('trackDeltaR')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(2),
        name = cms.string('TagVarCSV_trackDeltaR_2'),
        taggingVarName = cms.string('trackDeltaR')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(3),
        name = cms.string('TagVarCSV_trackDeltaR_3'),
        taggingVarName = cms.string('trackDeltaR')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(0),
        name = cms.string('TagVarCSV_trackPtRatio_0'),
        taggingVarName = cms.string('trackPtRatio')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(1),
        name = cms.string('TagVarCSV_trackPtRatio_1'),
        taggingVarName = cms.string('trackPtRatio')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(2),
        name = cms.string('TagVarCSV_trackPtRatio_2'),
        taggingVarName = cms.string('trackPtRatio')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(3),
        name = cms.string('TagVarCSV_trackPtRatio_3'),
        taggingVarName = cms.string('trackPtRatio')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(0),
        name = cms.string('TagVarCSV_trackJetDist_0'),
        taggingVarName = cms.string('trackJetDist')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(1),
        name = cms.string('TagVarCSV_trackJetDist_1'),
        taggingVarName = cms.string('trackJetDist')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(2),
        name = cms.string('TagVarCSV_trackJetDist_2'),
        taggingVarName = cms.string('trackJetDist')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(3),
        name = cms.string('TagVarCSV_trackJetDist_3'),
        taggingVarName = cms.string('trackJetDist')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(0),
        name = cms.string('TagVarCSV_trackDecayLenVal_0'),
        taggingVarName = cms.string('trackDecayLenVal')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(1),
        name = cms.string('TagVarCSV_trackDecayLenVal_1'),
        taggingVarName = cms.string('trackDecayLenVal')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(2),
        name = cms.string('TagVarCSV_trackDecayLenVal_2'),
        taggingVarName = cms.string('trackDecayLenVal')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        idx = cms.int32(3),
        name = cms.string('TagVarCSV_trackDecayLenVal_3'),
        taggingVarName = cms.string('trackDecayLenVal')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        name = cms.string('TagVarCSV_trackSumJetEtRatio'),
        taggingVarName = cms.string('trackSumJetEtRatio')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        name = cms.string('TagVarCSV_trackSumJetDeltaR'),
        taggingVarName = cms.string('trackSumJetDeltaR')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        name = cms.string('TagVarCSV_vertexMass'),
        taggingVarName = cms.string('vertexMass')
    ),
    cms.PSet(
        default = cms.double(0),
        name = cms.string('TagVarCSV_vertexNTracks'),
        taggingVarName = cms.string('vertexNTracks')
    ),
    cms.PSet(
        default = cms.double(-10),
        name = cms.string('TagVarCSV_vertexEnergyRatio'),
        taggingVarName = cms.string('vertexEnergyRatio')
    ),
    cms.PSet(
        default = cms.double(-0.1),
        name = cms.string('TagVarCSV_vertexJetDeltaR'),
        taggingVarName = cms.string('vertexJetDeltaR')
    ),
    cms.PSet(
        default = cms.double(-1),
        name = cms.string('TagVarCSV_flightDistance2dSig'),
        taggingVarName = cms.string('flightDistance2dSig')
    ),
    cms.PSet(
        default = cms.double(0),
        name = cms.string('TagVarCSV_jetNSecondaryVertices'),
        taggingVarName = cms.string('jetNSecondaryVertices')
    ),
    cms.PSet(
        default = cms.double(0),
        name = cms.string('TagVarCSV_vertexCategory'),
        taggingVarName = cms.string('vertexCategory')
    )
)

process.mvaConfigsForEleProducer = cms.VPSet(
    cms.PSet(
        categoryCuts = cms.vstring(
            'pt < 10. && abs(superCluster.eta) < 0.800',
            'pt < 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
            'pt < 10. && abs(superCluster.eta) >= 1.479',
            'pt >= 10. && abs(superCluster.eta) < 0.800',
            'pt >= 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
            'pt >= 10. && abs(superCluster.eta) >= 1.479'
        ),
        mvaName = cms.string('ElectronMVAEstimatorRun2'),
        mvaTag = cms.string('Spring16HZZV1'),
        nCategories = cms.int32(6),
        variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Variables.txt'),
        weightFileNames = cms.vstring(
            'RecoEgamma/ElectronIdentification/data/Spring16_HZZ_V1/electronID_mva_Spring16_HZZ_V1_EB1_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/Spring16_HZZ_V1/electronID_mva_Spring16_HZZ_V1_EB2_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/Spring16_HZZ_V1/electronID_mva_Spring16_HZZ_V1_EE_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/Spring16_HZZ_V1/electronID_mva_Spring16_HZZ_V1_EB1_10.weights.root',
            'RecoEgamma/ElectronIdentification/data/Spring16_HZZ_V1/electronID_mva_Spring16_HZZ_V1_EB2_10.weights.root',
            'RecoEgamma/ElectronIdentification/data/Spring16_HZZ_V1/electronID_mva_Spring16_HZZ_V1_EE_10.weights.root'
        )
    ),
    cms.PSet(
        categoryCuts = cms.vstring(
            'abs(superCluster.eta) < 0.800',
            'abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
            'abs(superCluster.eta) >= 1.479'
        ),
        mvaName = cms.string('ElectronMVAEstimatorRun2'),
        mvaTag = cms.string('Spring16GeneralPurposeV1'),
        nCategories = cms.int32(3),
        variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Variables.txt'),
        weightFileNames = cms.vstring(
            'RecoEgamma/ElectronIdentification/data/Spring16_GeneralPurpose_V1/electronID_mva_Spring16_GeneralPurpose_V1_EB1_10.weights.root',
            'RecoEgamma/ElectronIdentification/data/Spring16_GeneralPurpose_V1/electronID_mva_Spring16_GeneralPurpose_V1_EB2_10.weights.root',
            'RecoEgamma/ElectronIdentification/data/Spring16_GeneralPurpose_V1/electronID_mva_Spring16_GeneralPurpose_V1_EE_10.weights.root'
        )
    ),
    cms.PSet(
        categoryCuts = cms.vstring(
            'pt < 10. && abs(superCluster.eta) < 0.800',
            'pt < 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
            'pt < 10. && abs(superCluster.eta) >= 1.479',
            'pt >= 10. && abs(superCluster.eta) < 0.800',
            'pt >= 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
            'pt >= 10. && abs(superCluster.eta) >= 1.479'
        ),
        mvaName = cms.string('ElectronMVAEstimatorRun2'),
        mvaTag = cms.string('Fall17NoIsoV1'),
        nCategories = cms.int32(6),
        variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Fall17V1Variables.txt'),
        weightFileNames = cms.vstring(
            'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB1_5_2017_puinfo_BDT.weights.root',
            'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB2_5_2017_puinfo_BDT.weights.root',
            'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EE_5_2017_puinfo_BDT.weights.root',
            'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB1_10_2017_puinfo_BDT.weights.root',
            'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB2_10_2017_puinfo_BDT.weights.root',
            'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EE_10_2017_puinfo_BDT.weights.root'
        )
    ),
    cms.PSet(
        categoryCuts = cms.vstring(
            'pt < 10. && abs(superCluster.eta) < 0.800',
            'pt < 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
            'pt < 10. && abs(superCluster.eta) >= 1.479',
            'pt >= 10. && abs(superCluster.eta) < 0.800',
            'pt >= 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
            'pt >= 10. && abs(superCluster.eta) >= 1.479'
        ),
        mvaName = cms.string('ElectronMVAEstimatorRun2'),
        mvaTag = cms.string('Fall17IsoV1'),
        nCategories = cms.int32(6),
        variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Fall17V1Variables.txt'),
        weightFileNames = cms.vstring(
            'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB1_5_2017_puinfo_iso_BDT.weights.root',
            'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB2_5_2017_puinfo_iso_BDT.weights.root',
            'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EE_5_2017_puinfo_iso_BDT.weights.root',
            'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB1_10_2017_puinfo_iso_BDT.weights.root',
            'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB2_10_2017_puinfo_iso_BDT.weights.root',
            'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EE_10_2017_puinfo_iso_BDT.weights.root'
        )
    ),
    cms.PSet(
        categoryCuts = cms.vstring(
            'pt < 10. && abs(superCluster.eta) < 0.800',
            'pt < 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
            'pt < 10. && abs(superCluster.eta) >= 1.479',
            'pt >= 10. && abs(superCluster.eta) < 0.800',
            'pt >= 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
            'pt >= 10. && abs(superCluster.eta) >= 1.479'
        ),
        mvaName = cms.string('ElectronMVAEstimatorRun2'),
        mvaTag = cms.string('Fall17NoIsoV2'),
        nCategories = cms.int32(6),
        variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Variables.txt'),
        weightFileNames = cms.vstring(
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17NoIsoV2/EB1_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17NoIsoV2/EB2_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17NoIsoV2/EE_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17NoIsoV2/EB1_10.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17NoIsoV2/EB2_10.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17NoIsoV2/EE_10.weights.root'
        )
    ),
    cms.PSet(
        categoryCuts = cms.vstring(
            'pt < 10. && abs(superCluster.eta) < 0.800',
            'pt < 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
            'pt < 10. && abs(superCluster.eta) >= 1.479',
            'pt >= 10. && abs(superCluster.eta) < 0.800',
            'pt >= 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
            'pt >= 10. && abs(superCluster.eta) >= 1.479'
        ),
        mvaName = cms.string('ElectronMVAEstimatorRun2'),
        mvaTag = cms.string('Fall17IsoV2'),
        nCategories = cms.int32(6),
        variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Variables.txt'),
        weightFileNames = cms.vstring(
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17IsoV2/EB1_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17IsoV2/EB2_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17IsoV2/EE_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17IsoV2/EB1_10.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17IsoV2/EB2_10.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17IsoV2/EE_10.weights.root'
        )
    ),
    cms.PSet(
        categoryCuts = cms.vstring(
            'pt < 10. && abs(superCluster.eta) < 0.800',
            'pt < 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
            'pt < 10. && abs(superCluster.eta) >= 1.479',
            'pt >= 10. && abs(superCluster.eta) < 0.800',
            'pt >= 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
            'pt >= 10. && abs(superCluster.eta) >= 1.479'
        ),
        mvaName = cms.string('ElectronMVAEstimatorRun2'),
        mvaTag = cms.string('RunIIIWinter22NoIsoV1'),
        nCategories = cms.int32(6),
        variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronIDVariablesRun3.txt'),
        weightFileNames = cms.vstring(
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22NoIsoV1/EB1_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22NoIsoV1/EB2_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22NoIsoV1/EE_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22NoIsoV1/EB1_10.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22NoIsoV1/EB2_10.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22NoIsoV1/EE_10.weights.root'
        )
    ),
    cms.PSet(
        categoryCuts = cms.vstring(
            'pt < 10. && abs(superCluster.eta) < 0.800',
            'pt < 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
            'pt < 10. && abs(superCluster.eta) >= 1.479',
            'pt >= 10. && abs(superCluster.eta) < 0.800',
            'pt >= 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
            'pt >= 10. && abs(superCluster.eta) >= 1.479'
        ),
        mvaName = cms.string('ElectronMVAEstimatorRun2'),
        mvaTag = cms.string('RunIIIWinter22IsoV1'),
        nCategories = cms.int32(6),
        variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronIDVariablesRun3.txt'),
        weightFileNames = cms.vstring(
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22IsoV1/EB1_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22IsoV1/EB2_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22IsoV1/EE_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22IsoV1/EB1_10.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22IsoV1/EB2_10.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22IsoV1/EE_10.weights.root'
        )
    ),
    cms.PSet(
        categoryCuts = cms.vstring(
            'pt < 10. & abs(superCluster.eta) < 0.800',
            'pt < 10. & abs(superCluster.eta) >= 0.800 & abs(superCluster.eta) < 1.479',
            'pt < 10. & abs(superCluster.eta) >= 1.479',
            'pt >= 10. & abs(superCluster.eta) < 0.800',
            'pt >= 10. & abs(superCluster.eta) >= 0.800 & abs(superCluster.eta) < 1.479',
            'pt >= 10. & abs(superCluster.eta) >= 1.479'
        ),
        mvaName = cms.string('ElectronMVAEstimatorRun2'),
        mvaTag = cms.string('Summer16ULIdIso'),
        nCategories = cms.int32(6),
        variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Variables.txt'),
        weightFileNames = cms.vstring(
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_16UL_ID_ISO/EB1_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_16UL_ID_ISO/EB2_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_16UL_ID_ISO/EE_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_16UL_ID_ISO/EB1_10.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_16UL_ID_ISO/EB2_10.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_16UL_ID_ISO/EE_10.weights.root'
        )
    ),
    cms.PSet(
        categoryCuts = cms.vstring(
            'pt < 10. & abs(superCluster.eta) < 0.800',
            'pt < 10. & abs(superCluster.eta) >= 0.800 & abs(superCluster.eta) < 1.479',
            'pt < 10. & abs(superCluster.eta) >= 1.479',
            'pt >= 10. & abs(superCluster.eta) < 0.800',
            'pt >= 10. & abs(superCluster.eta) >= 0.800 & abs(superCluster.eta) < 1.479',
            'pt >= 10. & abs(superCluster.eta) >= 1.479'
        ),
        mvaName = cms.string('ElectronMVAEstimatorRun2'),
        mvaTag = cms.string('Summer17ULIdIso'),
        nCategories = cms.int32(6),
        variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Variables.txt'),
        weightFileNames = cms.vstring(
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_17UL_ID_ISO/EB1_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_17UL_ID_ISO/EB2_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_17UL_ID_ISO/EE_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_17UL_ID_ISO/EB1_10.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_17UL_ID_ISO/EB2_10.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_17UL_ID_ISO/EE_10.weights.root'
        )
    ),
    cms.PSet(
        categoryCuts = cms.vstring(
            'pt < 10. & abs(superCluster.eta) < 0.800',
            'pt < 10. & abs(superCluster.eta) >= 0.800 & abs(superCluster.eta) < 1.479',
            'pt < 10. & abs(superCluster.eta) >= 1.479',
            'pt >= 10. & abs(superCluster.eta) < 0.800',
            'pt >= 10. & abs(superCluster.eta) >= 0.800 & abs(superCluster.eta) < 1.479',
            'pt >= 10. & abs(superCluster.eta) >= 1.479'
        ),
        mvaName = cms.string('ElectronMVAEstimatorRun2'),
        mvaTag = cms.string('Summer18ULIdIso'),
        nCategories = cms.int32(6),
        variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Variables.txt'),
        weightFileNames = cms.vstring(
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_18UL_ID_ISO/EB1_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_18UL_ID_ISO/EB2_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_18UL_ID_ISO/EE_5.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_18UL_ID_ISO/EB1_10.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_18UL_ID_ISO/EB2_10.weights.root',
            'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_18UL_ID_ISO/EE_10.weights.root'
        )
    )
)

process.mvaConfigsForPhoProducer = cms.VPSet(
    cms.PSet(
        categoryCuts = cms.vstring(
            'abs(superCluster.eta) <  1.479',
            'abs(superCluster.eta) >= 1.479'
        ),
        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Spring16/effAreaPhotons_cone03_pfPhotons_90percentBased_3bins.txt'),
        mvaName = cms.string('PhotonMVAEstimator'),
        mvaTag = cms.string('Run2Spring16NonTrigV1'),
        nCategories = cms.int32(2),
        phoIsoCutoff = cms.double(2.5),
        phoIsoPtScalingCoeff = cms.vdouble(0.0053, 0.0034),
        variableDefinition = cms.string('RecoEgamma/PhotonIdentification/data/PhotonMVAEstimatorRun2VariablesSpring16.txt'),
        weightFileNames = cms.vstring(
            'RecoEgamma/PhotonIdentification/data/MVA/Spring16/EB_V1.weights.xml.gz',
            'RecoEgamma/PhotonIdentification/data/MVA/Spring16/EE_V1.weights.xml.gz'
        )
    ),
    cms.PSet(
        categoryCuts = cms.vstring(
            'abs(superCluster.eta) <  1.479',
            'abs(superCluster.eta) >= 1.479'
        ),
        mvaName = cms.string('PhotonMVAEstimator'),
        mvaTag = cms.string('RunIIFall17v1p1'),
        nCategories = cms.int32(2),
        variableDefinition = cms.string('RecoEgamma/PhotonIdentification/data/PhotonMVAEstimatorRun2VariablesFall17V1p1.txt'),
        weightFileNames = cms.vstring(
            'RecoEgamma/PhotonIdentification/data/MVA/Fall17/EB_V1.weights.root',
            'RecoEgamma/PhotonIdentification/data/MVA/Fall17/EE_V1.weights.root'
        )
    ),
    cms.PSet(
        categoryCuts = cms.vstring(
            'abs(superCluster.eta) <  1.479',
            'abs(superCluster.eta) >= 1.479'
        ),
        mvaName = cms.string('PhotonMVAEstimator'),
        mvaTag = cms.string('RunIIFall17v2'),
        nCategories = cms.int32(2),
        variableDefinition = cms.string('RecoEgamma/PhotonIdentification/data/PhotonMVAEstimatorRun2VariablesFall17V1p1.txt'),
        weightFileNames = cms.vstring(
            'RecoEgamma/PhotonIdentification/data/MVA/Fall17/EB_V2.weights.root',
            'RecoEgamma/PhotonIdentification/data/MVA/Fall17/EE_V2.weights.root'
        )
    ),
    cms.PSet(
        categoryCuts = cms.vstring(
            'abs(superCluster.eta) <  1.479',
            'abs(superCluster.eta) >= 1.479'
        ),
        mvaName = cms.string('PhotonMVAEstimator'),
        mvaTag = cms.string('RunIIIWinter22v1'),
        nCategories = cms.int32(2),
        variableDefinition = cms.string('RecoEgamma/PhotonIdentification/data/PhotonMVAEstimatorRun3VariablesWinter22V1.txt'),
        weightFileNames = cms.vstring(
            'RecoEgamma/PhotonIdentification/data/MVA/RunIII_Winter22/PhoMVA_ID_EB_V1.weights.root',
            'RecoEgamma/PhotonIdentification/data/MVA/RunIII_Winter22/PhoMVA_ID_EE_V1.weights.root'
        )
    ),
    cms.PSet(
        categoryCuts = cms.vstring(
            'abs(superCluster.eta) <  1.479',
            'abs(superCluster.eta) >= 1.479'
        ),
        mvaName = cms.string('PhotonMVAEstimator'),
        mvaTag = cms.string('PhaseIISummer20v0'),
        nCategories = cms.int32(2),
        variableDefinition = cms.string('RecoEgamma/PhotonIdentification/data/PhotonMVAEstimatorRun2VariablesFall17V1p1.txt'),
        weightFileNames = cms.vstring(
            'RecoEgamma/PhotonIdentification/data/MVA/PhaseII/PhotonID_MVA_barrel_Egamma_PhaseII_weight.xml.gz',
            'RecoEgamma/PhotonIdentification/data/MVA/PhaseII/PhotonID_MVA_barrel_Egamma_PhaseII_weight.xml.gz'
        )
    )
)

process.patMultPhiCorrParams_Puppi_ULDATA2016postVFPF = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2016postVFPF'),
    px = cms.vdouble(0.0234421, -0.371298),
    py = cms.vdouble(-0.00997438, 0.0809178),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_Puppi_ULDATA2016postVFPG = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2016postVFPG'),
    px = cms.vdouble(0.0182134, -0.335786),
    py = cms.vdouble(-0.0063338, 0.093349),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_Puppi_ULDATA2016postVFPH = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2016postVFPH'),
    px = cms.vdouble(0.015702, -0.340832),
    py = cms.vdouble(-0.00544957, 0.199093),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_Puppi_ULDATA2016preVFPB = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2016preVFPB'),
    px = cms.vdouble(-0.00109025, -0.338093),
    py = cms.vdouble(-0.00356058, 0.128407),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_Puppi_ULDATA2016preVFPC = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2016preVFPC'),
    px = cms.vdouble(-0.00271913, -0.342268),
    py = cms.vdouble(0.00187386, 0.104),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_Puppi_ULDATA2016preVFPD = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2016preVFPD'),
    px = cms.vdouble(-0.00254194, -0.305264),
    py = cms.vdouble(-0.00177408, 0.164639),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_Puppi_ULDATA2016preVFPE = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2016preVFPE'),
    px = cms.vdouble(-0.00358835, -0.225435),
    py = cms.vdouble(-0.000444268, 0.180479),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_Puppi_ULDATA2016preVFPF = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2016preVFPF'),
    px = cms.vdouble(0.0056759, -0.454101),
    py = cms.vdouble(-0.00962707, 0.35731),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_Puppi_ULDATA2017B = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2017B'),
    px = cms.vdouble(-0.00382117, -0.666228),
    py = cms.vdouble(0.0109034, 0.172188),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_Puppi_ULDATA2017C = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2017C'),
    px = cms.vdouble(-0.00110699, -0.747643),
    py = cms.vdouble(-0.0012184, 0.303817),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_Puppi_ULDATA2017D = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2017D'),
    px = cms.vdouble(-0.00141442, -0.721382),
    py = cms.vdouble(-0.0011873, 0.21646),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_Puppi_ULDATA2017E = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2017E'),
    px = cms.vdouble(0.00593859, -0.851999),
    py = cms.vdouble(-0.00754254, 0.245956),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_Puppi_ULDATA2017F = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2017F'),
    px = cms.vdouble(0.00765682, -0.945001),
    py = cms.vdouble(-0.0154974, 0.804176),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_Puppi_ULDATA2018A = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2018A'),
    px = cms.vdouble(-0.0073377, 0.0250294),
    py = cms.vdouble(-0.000406059, 0.0417346),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_Puppi_ULDATA2018B = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2018B'),
    px = cms.vdouble(0.00434261, 0.00892927),
    py = cms.vdouble(0.00234695, 0.20381),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_Puppi_ULDATA2018C = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2018C'),
    px = cms.vdouble(0.00198311, 0.37026),
    py = cms.vdouble(-0.016127, 0.402029),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_Puppi_ULDATA2018D = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2018D'),
    px = cms.vdouble(0.00220647, 0.378141),
    py = cms.vdouble(-0.0160244, 0.471053),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_Puppi_ULMC2016postVFP = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULMC2016postVFP'),
    px = cms.vdouble(-0.0060447, -0.4183),
    py = cms.vdouble(0.008331, -0.0990046),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_Puppi_ULMC2016preVFP = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULMC2016preVFP'),
    px = cms.vdouble(-0.0058341, -0.395049),
    py = cms.vdouble(0.00971595, -0.101288),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_Puppi_ULMC2017 = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULMC2017'),
    px = cms.vdouble(-0.0102265, -0.446416),
    py = cms.vdouble(0.0198663, 0.243182),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_Puppi_ULMC2018 = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULMC2018'),
    px = cms.vdouble(-0.0214557, 0.969428),
    py = cms.vdouble(0.0167134, 0.199296),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_T0pcT1SmearTxy_25ns = cms.VPSet(
    cms.PSet(
        etaMax = cms.double(2.7),
        etaMin = cms.double(0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaPlus'),
        px = cms.vdouble(-0.00229295500096, 3.15487850373e-07),
        py = cms.vdouble(0.000114282381437, -1.58467325852e-08),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(0),
        etaMin = cms.double(-2.7),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaMinus'),
        px = cms.vdouble(-0.000198571488347, -1.94054852726e-07),
        py = cms.vdouble(-0.00137832489313, -2.02238617742e-06),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.392),
        etaMin = cms.double(-1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0Barrel'),
        px = cms.vdouble(-0.0153652906396, -3.80210366974e-05),
        py = cms.vdouble(0.00798098092474, -0.000103998219585),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3),
        etaMin = cms.double(1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapPlus'),
        px = cms.vdouble(-0.00305719113962, -0.00032676418359),
        py = cms.vdouble(-0.00345131507897, 0.000164816815994),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.392),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapMinus'),
        px = cms.vdouble(-0.000159031461755, 0.00012231873804),
        py = cms.vdouble(0.0260436390996, -8.17994745657e-05),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.479),
        etaMin = cms.double(-1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaBarrel'),
        px = cms.vdouble(-0.00163144589987, 3.17557692226e-06),
        py = cms.vdouble(-0.000710945802217, 6.45810884842e-06),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3.0),
        etaMin = cms.double(1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapPlus'),
        px = cms.vdouble(-0.00108893779312, -2.53584544941e-05),
        py = cms.vdouble(0.00188026342884, 8.15028097381e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.479),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapMinus'),
        px = cms.vdouble(-0.00130486432072, 1.72313009972e-05),
        py = cms.vdouble(-0.00367119684052, -1.63143116342e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFPlus'),
        px = cms.vdouble(-0.000218928792083, -1.0492437382e-06),
        py = cms.vdouble(2.7982430778e-05, -6.87804028426e-08),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFMinus'),
        px = cms.vdouble(-0.000851170798547, 3.18768998961e-07),
        py = cms.vdouble(6.10447368609e-05, -5.92655106387e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFPlus'),
        px = cms.vdouble(0.00138084425101, -6.39459000901e-06),
        py = cms.vdouble(-0.000532336534523, 2.21305870813e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFMinus'),
        px = cms.vdouble(0.00102598393499, -3.37284909389e-06),
        py = cms.vdouble(0.000439449053802, -2.3750891943e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    )
)

process.patMultPhiCorrParams_T0pcT1SmearTxy_50ns = cms.VPSet(
    cms.PSet(
        etaMax = cms.double(2.7),
        etaMin = cms.double(0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaPlus'),
        px = cms.vdouble(-0.00220049396857, 4.86017686051e-07),
        py = cms.vdouble(0.000301784350668, -2.55951949068e-07),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(0),
        etaMin = cms.double(-2.7),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaMinus'),
        px = cms.vdouble(-0.000217969078412, 3.0200051094e-07),
        py = cms.vdouble(-0.0014606200538, -2.29508676725e-06),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.392),
        etaMin = cms.double(-1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0Barrel'),
        px = cms.vdouble(-0.0135587323577, 5.55593286464e-05),
        py = cms.vdouble(0.00848783774079, -0.00022596699093),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3),
        etaMin = cms.double(1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapPlus'),
        px = cms.vdouble(-0.00285895832031, -6.08161900014e-05),
        py = cms.vdouble(-0.00934018266651, 0.000259105827172),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.392),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapMinus'),
        px = cms.vdouble(-0.00537876208774, 0.000209817129512),
        py = cms.vdouble(0.011148063877, -4.44149746767e-06),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.479),
        etaMin = cms.double(-1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaBarrel'),
        px = cms.vdouble(-0.00192842680623, 2.61152485314e-06),
        py = cms.vdouble(-0.000507607323037, 4.48832037695e-06),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3.0),
        etaMin = cms.double(1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapPlus'),
        px = cms.vdouble(-0.000519297328533, -2.0682880001e-05),
        py = cms.vdouble(0.00282867507264, 6.66930895313e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.479),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapMinus'),
        px = cms.vdouble(-0.00103112559755, 1.33699817646e-05),
        py = cms.vdouble(-0.00209888421545, -3.30667819828e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFPlus'),
        px = cms.vdouble(-0.000392672935556, -9.65693700264e-07),
        py = cms.vdouble(0.000114612488388, -3.44552389568e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFMinus'),
        px = cms.vdouble(-0.00093227965176, 7.74599924874e-07),
        py = cms.vdouble(-2.95036363418e-05, -7.98830257983e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFPlus'),
        px = cms.vdouble(0.00275218993341, -1.69184089548e-05),
        py = cms.vdouble(-0.00113061539637, 6.05994897808e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFMinus'),
        px = cms.vdouble(0.00136623849956, -5.55451851761e-06),
        py = cms.vdouble(0.00117549065237, -6.54719096891e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    )
)

process.patMultPhiCorrParams_T0pcT1T2SmearTxy_25ns = cms.VPSet(
    cms.PSet(
        etaMax = cms.double(2.7),
        etaMin = cms.double(0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaPlus'),
        px = cms.vdouble(-0.00229295500096, 3.15487850373e-07),
        py = cms.vdouble(0.000114282381437, -1.58467325852e-08),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(0),
        etaMin = cms.double(-2.7),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaMinus'),
        px = cms.vdouble(-0.000198571488347, -1.94054852726e-07),
        py = cms.vdouble(-0.00137832489313, -2.02238617742e-06),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.392),
        etaMin = cms.double(-1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0Barrel'),
        px = cms.vdouble(-0.0153652906396, -3.80210366974e-05),
        py = cms.vdouble(0.00798098092474, -0.000103998219585),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3),
        etaMin = cms.double(1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapPlus'),
        px = cms.vdouble(-0.00305719113962, -0.00032676418359),
        py = cms.vdouble(-0.00345131507897, 0.000164816815994),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.392),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapMinus'),
        px = cms.vdouble(-0.000159031461755, 0.00012231873804),
        py = cms.vdouble(0.0260436390996, -8.17994745657e-05),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.479),
        etaMin = cms.double(-1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaBarrel'),
        px = cms.vdouble(-0.00163144589987, 3.17557692226e-06),
        py = cms.vdouble(-0.000710945802217, 6.45810884842e-06),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3.0),
        etaMin = cms.double(1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapPlus'),
        px = cms.vdouble(-0.00108893779312, -2.53584544941e-05),
        py = cms.vdouble(0.00188026342884, 8.15028097381e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.479),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapMinus'),
        px = cms.vdouble(-0.00130486432072, 1.72313009972e-05),
        py = cms.vdouble(-0.00367119684052, -1.63143116342e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFPlus'),
        px = cms.vdouble(-0.000218928792083, -1.0492437382e-06),
        py = cms.vdouble(2.7982430778e-05, -6.87804028426e-08),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFMinus'),
        px = cms.vdouble(-0.000851170798547, 3.18768998961e-07),
        py = cms.vdouble(6.10447368609e-05, -5.92655106387e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFPlus'),
        px = cms.vdouble(0.00138084425101, -6.39459000901e-06),
        py = cms.vdouble(-0.000532336534523, 2.21305870813e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFMinus'),
        px = cms.vdouble(0.00102598393499, -3.37284909389e-06),
        py = cms.vdouble(0.000439449053802, -2.3750891943e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    )
)

process.patMultPhiCorrParams_T0pcT1T2SmearTxy_50ns = cms.VPSet(
    cms.PSet(
        etaMax = cms.double(2.7),
        etaMin = cms.double(0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaPlus'),
        px = cms.vdouble(-0.00220049396857, 4.86017686051e-07),
        py = cms.vdouble(0.000301784350668, -2.55951949068e-07),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(0),
        etaMin = cms.double(-2.7),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaMinus'),
        px = cms.vdouble(-0.000217969078412, 3.0200051094e-07),
        py = cms.vdouble(-0.0014606200538, -2.29508676725e-06),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.392),
        etaMin = cms.double(-1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0Barrel'),
        px = cms.vdouble(-0.0135587323577, 5.55593286464e-05),
        py = cms.vdouble(0.00848783774079, -0.00022596699093),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3),
        etaMin = cms.double(1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapPlus'),
        px = cms.vdouble(-0.00285895832031, -6.08161900014e-05),
        py = cms.vdouble(-0.00934018266651, 0.000259105827172),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.392),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapMinus'),
        px = cms.vdouble(-0.00537876208774, 0.000209817129512),
        py = cms.vdouble(0.011148063877, -4.44149746767e-06),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.479),
        etaMin = cms.double(-1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaBarrel'),
        px = cms.vdouble(-0.00192842680623, 2.61152485314e-06),
        py = cms.vdouble(-0.000507607323037, 4.48832037695e-06),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3.0),
        etaMin = cms.double(1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapPlus'),
        px = cms.vdouble(-0.000519297328533, -2.0682880001e-05),
        py = cms.vdouble(0.00282867507264, 6.66930895313e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.479),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapMinus'),
        px = cms.vdouble(-0.00103112559755, 1.33699817646e-05),
        py = cms.vdouble(-0.00209888421545, -3.30667819828e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFPlus'),
        px = cms.vdouble(-0.000392672935556, -9.65693700264e-07),
        py = cms.vdouble(0.000114612488388, -3.44552389568e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFMinus'),
        px = cms.vdouble(-0.00093227965176, 7.74599924874e-07),
        py = cms.vdouble(-2.95036363418e-05, -7.98830257983e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFPlus'),
        px = cms.vdouble(0.00275218993341, -1.69184089548e-05),
        py = cms.vdouble(-0.00113061539637, 6.05994897808e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFMinus'),
        px = cms.vdouble(0.00136623849956, -5.55451851761e-06),
        py = cms.vdouble(0.00117549065237, -6.54719096891e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    )
)

process.patMultPhiCorrParams_T0pcT1T2Txy_25ns = cms.VPSet(
    cms.PSet(
        etaMax = cms.double(2.7),
        etaMin = cms.double(0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaPlus'),
        px = cms.vdouble(-0.00229295500096, 3.15487850373e-07),
        py = cms.vdouble(0.000114282381437, -1.58467325852e-08),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(0),
        etaMin = cms.double(-2.7),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaMinus'),
        px = cms.vdouble(-0.000198571488347, -1.94054852726e-07),
        py = cms.vdouble(-0.00137832489313, -2.02238617742e-06),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.392),
        etaMin = cms.double(-1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0Barrel'),
        px = cms.vdouble(-0.0153652906396, -3.80210366974e-05),
        py = cms.vdouble(0.00798098092474, -0.000103998219585),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3),
        etaMin = cms.double(1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapPlus'),
        px = cms.vdouble(-0.00305719113962, -0.00032676418359),
        py = cms.vdouble(-0.00345131507897, 0.000164816815994),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.392),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapMinus'),
        px = cms.vdouble(-0.000159031461755, 0.00012231873804),
        py = cms.vdouble(0.0260436390996, -8.17994745657e-05),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.479),
        etaMin = cms.double(-1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaBarrel'),
        px = cms.vdouble(-0.00163144589987, 3.17557692226e-06),
        py = cms.vdouble(-0.000710945802217, 6.45810884842e-06),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3.0),
        etaMin = cms.double(1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapPlus'),
        px = cms.vdouble(-0.00108893779312, -2.53584544941e-05),
        py = cms.vdouble(0.00188026342884, 8.15028097381e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.479),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapMinus'),
        px = cms.vdouble(-0.00130486432072, 1.72313009972e-05),
        py = cms.vdouble(-0.00367119684052, -1.63143116342e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFPlus'),
        px = cms.vdouble(-0.000218928792083, -1.0492437382e-06),
        py = cms.vdouble(2.7982430778e-05, -6.87804028426e-08),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFMinus'),
        px = cms.vdouble(-0.000851170798547, 3.18768998961e-07),
        py = cms.vdouble(6.10447368609e-05, -5.92655106387e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFPlus'),
        px = cms.vdouble(0.00138084425101, -6.39459000901e-06),
        py = cms.vdouble(-0.000532336534523, 2.21305870813e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFMinus'),
        px = cms.vdouble(0.00102598393499, -3.37284909389e-06),
        py = cms.vdouble(0.000439449053802, -2.3750891943e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    )
)

process.patMultPhiCorrParams_T0pcT1T2Txy_50ns = cms.VPSet(
    cms.PSet(
        etaMax = cms.double(2.7),
        etaMin = cms.double(0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaPlus'),
        px = cms.vdouble(-0.00220049396857, 4.86017686051e-07),
        py = cms.vdouble(0.000301784350668, -2.55951949068e-07),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(0),
        etaMin = cms.double(-2.7),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaMinus'),
        px = cms.vdouble(-0.000217969078412, 3.0200051094e-07),
        py = cms.vdouble(-0.0014606200538, -2.29508676725e-06),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.392),
        etaMin = cms.double(-1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0Barrel'),
        px = cms.vdouble(-0.0135587323577, 5.55593286464e-05),
        py = cms.vdouble(0.00848783774079, -0.00022596699093),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3),
        etaMin = cms.double(1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapPlus'),
        px = cms.vdouble(-0.00285895832031, -6.08161900014e-05),
        py = cms.vdouble(-0.00934018266651, 0.000259105827172),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.392),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapMinus'),
        px = cms.vdouble(-0.00537876208774, 0.000209817129512),
        py = cms.vdouble(0.011148063877, -4.44149746767e-06),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.479),
        etaMin = cms.double(-1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaBarrel'),
        px = cms.vdouble(-0.00192842680623, 2.61152485314e-06),
        py = cms.vdouble(-0.000507607323037, 4.48832037695e-06),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3.0),
        etaMin = cms.double(1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapPlus'),
        px = cms.vdouble(-0.000519297328533, -2.0682880001e-05),
        py = cms.vdouble(0.00282867507264, 6.66930895313e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.479),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapMinus'),
        px = cms.vdouble(-0.00103112559755, 1.33699817646e-05),
        py = cms.vdouble(-0.00209888421545, -3.30667819828e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFPlus'),
        px = cms.vdouble(-0.000392672935556, -9.65693700264e-07),
        py = cms.vdouble(0.000114612488388, -3.44552389568e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFMinus'),
        px = cms.vdouble(-0.00093227965176, 7.74599924874e-07),
        py = cms.vdouble(-2.95036363418e-05, -7.98830257983e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFPlus'),
        px = cms.vdouble(0.00275218993341, -1.69184089548e-05),
        py = cms.vdouble(-0.00113061539637, 6.05994897808e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFMinus'),
        px = cms.vdouble(0.00136623849956, -5.55451851761e-06),
        py = cms.vdouble(0.00117549065237, -6.54719096891e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    )
)

process.patMultPhiCorrParams_T0pcT1Txy_25ns = cms.VPSet(
    cms.PSet(
        etaMax = cms.double(2.7),
        etaMin = cms.double(0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaPlus'),
        px = cms.vdouble(-0.00229295500096, 3.15487850373e-07),
        py = cms.vdouble(0.000114282381437, -1.58467325852e-08),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(0),
        etaMin = cms.double(-2.7),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaMinus'),
        px = cms.vdouble(-0.000198571488347, -1.94054852726e-07),
        py = cms.vdouble(-0.00137832489313, -2.02238617742e-06),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.392),
        etaMin = cms.double(-1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0Barrel'),
        px = cms.vdouble(-0.0153652906396, -3.80210366974e-05),
        py = cms.vdouble(0.00798098092474, -0.000103998219585),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3),
        etaMin = cms.double(1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapPlus'),
        px = cms.vdouble(-0.00305719113962, -0.00032676418359),
        py = cms.vdouble(-0.00345131507897, 0.000164816815994),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.392),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapMinus'),
        px = cms.vdouble(-0.000159031461755, 0.00012231873804),
        py = cms.vdouble(0.0260436390996, -8.17994745657e-05),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.479),
        etaMin = cms.double(-1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaBarrel'),
        px = cms.vdouble(-0.00163144589987, 3.17557692226e-06),
        py = cms.vdouble(-0.000710945802217, 6.45810884842e-06),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3.0),
        etaMin = cms.double(1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapPlus'),
        px = cms.vdouble(-0.00108893779312, -2.53584544941e-05),
        py = cms.vdouble(0.00188026342884, 8.15028097381e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.479),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapMinus'),
        px = cms.vdouble(-0.00130486432072, 1.72313009972e-05),
        py = cms.vdouble(-0.00367119684052, -1.63143116342e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFPlus'),
        px = cms.vdouble(-0.000218928792083, -1.0492437382e-06),
        py = cms.vdouble(2.7982430778e-05, -6.87804028426e-08),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFMinus'),
        px = cms.vdouble(-0.000851170798547, 3.18768998961e-07),
        py = cms.vdouble(6.10447368609e-05, -5.92655106387e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFPlus'),
        px = cms.vdouble(0.00138084425101, -6.39459000901e-06),
        py = cms.vdouble(-0.000532336534523, 2.21305870813e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFMinus'),
        px = cms.vdouble(0.00102598393499, -3.37284909389e-06),
        py = cms.vdouble(0.000439449053802, -2.3750891943e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    )
)

process.patMultPhiCorrParams_T0pcT1Txy_50ns = cms.VPSet(
    cms.PSet(
        etaMax = cms.double(2.7),
        etaMin = cms.double(0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaPlus'),
        px = cms.vdouble(-0.00220049396857, 4.86017686051e-07),
        py = cms.vdouble(0.000301784350668, -2.55951949068e-07),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(0),
        etaMin = cms.double(-2.7),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaMinus'),
        px = cms.vdouble(-0.000217969078412, 3.0200051094e-07),
        py = cms.vdouble(-0.0014606200538, -2.29508676725e-06),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.392),
        etaMin = cms.double(-1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0Barrel'),
        px = cms.vdouble(-0.0135587323577, 5.55593286464e-05),
        py = cms.vdouble(0.00848783774079, -0.00022596699093),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3),
        etaMin = cms.double(1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapPlus'),
        px = cms.vdouble(-0.00285895832031, -6.08161900014e-05),
        py = cms.vdouble(-0.00934018266651, 0.000259105827172),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.392),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapMinus'),
        px = cms.vdouble(-0.00537876208774, 0.000209817129512),
        py = cms.vdouble(0.011148063877, -4.44149746767e-06),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.479),
        etaMin = cms.double(-1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaBarrel'),
        px = cms.vdouble(-0.00192842680623, 2.61152485314e-06),
        py = cms.vdouble(-0.000507607323037, 4.48832037695e-06),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3.0),
        etaMin = cms.double(1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapPlus'),
        px = cms.vdouble(-0.000519297328533, -2.0682880001e-05),
        py = cms.vdouble(0.00282867507264, 6.66930895313e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.479),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapMinus'),
        px = cms.vdouble(-0.00103112559755, 1.33699817646e-05),
        py = cms.vdouble(-0.00209888421545, -3.30667819828e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFPlus'),
        px = cms.vdouble(-0.000392672935556, -9.65693700264e-07),
        py = cms.vdouble(0.000114612488388, -3.44552389568e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFMinus'),
        px = cms.vdouble(-0.00093227965176, 7.74599924874e-07),
        py = cms.vdouble(-2.95036363418e-05, -7.98830257983e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFPlus'),
        px = cms.vdouble(0.00275218993341, -1.69184089548e-05),
        py = cms.vdouble(-0.00113061539637, 6.05994897808e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFMinus'),
        px = cms.vdouble(0.00136623849956, -5.55451851761e-06),
        py = cms.vdouble(0.00117549065237, -6.54719096891e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    )
)

process.patMultPhiCorrParams_T0pcTxy_25ns = cms.VPSet(
    cms.PSet(
        etaMax = cms.double(2.7),
        etaMin = cms.double(0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaPlus'),
        px = cms.vdouble(-0.00229295500096, 3.15487850373e-07),
        py = cms.vdouble(0.000114282381437, -1.58467325852e-08),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(0),
        etaMin = cms.double(-2.7),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaMinus'),
        px = cms.vdouble(-0.000198571488347, -1.94054852726e-07),
        py = cms.vdouble(-0.00137832489313, -2.02238617742e-06),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.392),
        etaMin = cms.double(-1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0Barrel'),
        px = cms.vdouble(-0.0153652906396, -3.80210366974e-05),
        py = cms.vdouble(0.00798098092474, -0.000103998219585),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3),
        etaMin = cms.double(1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapPlus'),
        px = cms.vdouble(-0.00305719113962, -0.00032676418359),
        py = cms.vdouble(-0.00345131507897, 0.000164816815994),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.392),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapMinus'),
        px = cms.vdouble(-0.000159031461755, 0.00012231873804),
        py = cms.vdouble(0.0260436390996, -8.17994745657e-05),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.479),
        etaMin = cms.double(-1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaBarrel'),
        px = cms.vdouble(-0.00163144589987, 3.17557692226e-06),
        py = cms.vdouble(-0.000710945802217, 6.45810884842e-06),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3.0),
        etaMin = cms.double(1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapPlus'),
        px = cms.vdouble(-0.00108893779312, -2.53584544941e-05),
        py = cms.vdouble(0.00188026342884, 8.15028097381e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.479),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapMinus'),
        px = cms.vdouble(-0.00130486432072, 1.72313009972e-05),
        py = cms.vdouble(-0.00367119684052, -1.63143116342e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFPlus'),
        px = cms.vdouble(-0.000218928792083, -1.0492437382e-06),
        py = cms.vdouble(2.7982430778e-05, -6.87804028426e-08),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFMinus'),
        px = cms.vdouble(-0.000851170798547, 3.18768998961e-07),
        py = cms.vdouble(6.10447368609e-05, -5.92655106387e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFPlus'),
        px = cms.vdouble(0.00138084425101, -6.39459000901e-06),
        py = cms.vdouble(-0.000532336534523, 2.21305870813e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFMinus'),
        px = cms.vdouble(0.00102598393499, -3.37284909389e-06),
        py = cms.vdouble(0.000439449053802, -2.3750891943e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    )
)

process.patMultPhiCorrParams_T0pcTxy_50ns = cms.VPSet(
    cms.PSet(
        etaMax = cms.double(2.7),
        etaMin = cms.double(0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaPlus'),
        px = cms.vdouble(-0.00220049396857, 4.86017686051e-07),
        py = cms.vdouble(0.000301784350668, -2.55951949068e-07),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(0),
        etaMin = cms.double(-2.7),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaMinus'),
        px = cms.vdouble(-0.000217969078412, 3.0200051094e-07),
        py = cms.vdouble(-0.0014606200538, -2.29508676725e-06),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.392),
        etaMin = cms.double(-1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0Barrel'),
        px = cms.vdouble(-0.0135587323577, 5.55593286464e-05),
        py = cms.vdouble(0.00848783774079, -0.00022596699093),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3),
        etaMin = cms.double(1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapPlus'),
        px = cms.vdouble(-0.00285895832031, -6.08161900014e-05),
        py = cms.vdouble(-0.00934018266651, 0.000259105827172),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.392),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapMinus'),
        px = cms.vdouble(-0.00537876208774, 0.000209817129512),
        py = cms.vdouble(0.011148063877, -4.44149746767e-06),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.479),
        etaMin = cms.double(-1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaBarrel'),
        px = cms.vdouble(-0.00192842680623, 2.61152485314e-06),
        py = cms.vdouble(-0.000507607323037, 4.48832037695e-06),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3.0),
        etaMin = cms.double(1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapPlus'),
        px = cms.vdouble(-0.000519297328533, -2.0682880001e-05),
        py = cms.vdouble(0.00282867507264, 6.66930895313e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.479),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapMinus'),
        px = cms.vdouble(-0.00103112559755, 1.33699817646e-05),
        py = cms.vdouble(-0.00209888421545, -3.30667819828e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFPlus'),
        px = cms.vdouble(-0.000392672935556, -9.65693700264e-07),
        py = cms.vdouble(0.000114612488388, -3.44552389568e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFMinus'),
        px = cms.vdouble(-0.00093227965176, 7.74599924874e-07),
        py = cms.vdouble(-2.95036363418e-05, -7.98830257983e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFPlus'),
        px = cms.vdouble(0.00275218993341, -1.69184089548e-05),
        py = cms.vdouble(-0.00113061539637, 6.05994897808e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFMinus'),
        px = cms.vdouble(0.00136623849956, -5.55451851761e-06),
        py = cms.vdouble(0.00117549065237, -6.54719096891e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    )
)

process.patMultPhiCorrParams_T1SmearTxy_25ns = cms.VPSet(
    cms.PSet(
        etaMax = cms.double(2.7),
        etaMin = cms.double(0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaPlus'),
        px = cms.vdouble(-0.00229295500096, 3.15487850373e-07),
        py = cms.vdouble(0.000114282381437, -1.58467325852e-08),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(0),
        etaMin = cms.double(-2.7),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaMinus'),
        px = cms.vdouble(-0.000198571488347, -1.94054852726e-07),
        py = cms.vdouble(-0.00137832489313, -2.02238617742e-06),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.392),
        etaMin = cms.double(-1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0Barrel'),
        px = cms.vdouble(-0.0153652906396, -3.80210366974e-05),
        py = cms.vdouble(0.00798098092474, -0.000103998219585),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3),
        etaMin = cms.double(1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapPlus'),
        px = cms.vdouble(-0.00305719113962, -0.00032676418359),
        py = cms.vdouble(-0.00345131507897, 0.000164816815994),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.392),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapMinus'),
        px = cms.vdouble(-0.000159031461755, 0.00012231873804),
        py = cms.vdouble(0.0260436390996, -8.17994745657e-05),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.479),
        etaMin = cms.double(-1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaBarrel'),
        px = cms.vdouble(-0.00163144589987, 3.17557692226e-06),
        py = cms.vdouble(-0.000710945802217, 6.45810884842e-06),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3.0),
        etaMin = cms.double(1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapPlus'),
        px = cms.vdouble(-0.00108893779312, -2.53584544941e-05),
        py = cms.vdouble(0.00188026342884, 8.15028097381e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.479),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapMinus'),
        px = cms.vdouble(-0.00130486432072, 1.72313009972e-05),
        py = cms.vdouble(-0.00367119684052, -1.63143116342e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFPlus'),
        px = cms.vdouble(-0.000218928792083, -1.0492437382e-06),
        py = cms.vdouble(2.7982430778e-05, -6.87804028426e-08),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFMinus'),
        px = cms.vdouble(-0.000851170798547, 3.18768998961e-07),
        py = cms.vdouble(6.10447368609e-05, -5.92655106387e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFPlus'),
        px = cms.vdouble(0.00138084425101, -6.39459000901e-06),
        py = cms.vdouble(-0.000532336534523, 2.21305870813e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFMinus'),
        px = cms.vdouble(0.00102598393499, -3.37284909389e-06),
        py = cms.vdouble(0.000439449053802, -2.3750891943e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    )
)

process.patMultPhiCorrParams_T1SmearTxy_50ns = cms.VPSet(
    cms.PSet(
        etaMax = cms.double(2.7),
        etaMin = cms.double(0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaPlus'),
        px = cms.vdouble(-0.00220049396857, 4.86017686051e-07),
        py = cms.vdouble(0.000301784350668, -2.55951949068e-07),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(0),
        etaMin = cms.double(-2.7),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaMinus'),
        px = cms.vdouble(-0.000217969078412, 3.0200051094e-07),
        py = cms.vdouble(-0.0014606200538, -2.29508676725e-06),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.392),
        etaMin = cms.double(-1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0Barrel'),
        px = cms.vdouble(-0.0135587323577, 5.55593286464e-05),
        py = cms.vdouble(0.00848783774079, -0.00022596699093),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3),
        etaMin = cms.double(1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapPlus'),
        px = cms.vdouble(-0.00285895832031, -6.08161900014e-05),
        py = cms.vdouble(-0.00934018266651, 0.000259105827172),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.392),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapMinus'),
        px = cms.vdouble(-0.00537876208774, 0.000209817129512),
        py = cms.vdouble(0.011148063877, -4.44149746767e-06),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.479),
        etaMin = cms.double(-1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaBarrel'),
        px = cms.vdouble(-0.00192842680623, 2.61152485314e-06),
        py = cms.vdouble(-0.000507607323037, 4.48832037695e-06),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3.0),
        etaMin = cms.double(1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapPlus'),
        px = cms.vdouble(-0.000519297328533, -2.0682880001e-05),
        py = cms.vdouble(0.00282867507264, 6.66930895313e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.479),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapMinus'),
        px = cms.vdouble(-0.00103112559755, 1.33699817646e-05),
        py = cms.vdouble(-0.00209888421545, -3.30667819828e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFPlus'),
        px = cms.vdouble(-0.000392672935556, -9.65693700264e-07),
        py = cms.vdouble(0.000114612488388, -3.44552389568e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFMinus'),
        px = cms.vdouble(-0.00093227965176, 7.74599924874e-07),
        py = cms.vdouble(-2.95036363418e-05, -7.98830257983e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFPlus'),
        px = cms.vdouble(0.00275218993341, -1.69184089548e-05),
        py = cms.vdouble(-0.00113061539637, 6.05994897808e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFMinus'),
        px = cms.vdouble(0.00136623849956, -5.55451851761e-06),
        py = cms.vdouble(0.00117549065237, -6.54719096891e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    )
)

process.patMultPhiCorrParams_T1T2SmearTxy_25ns = cms.VPSet(
    cms.PSet(
        etaMax = cms.double(2.7),
        etaMin = cms.double(0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaPlus'),
        px = cms.vdouble(-0.00229295500096, 3.15487850373e-07),
        py = cms.vdouble(0.000114282381437, -1.58467325852e-08),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(0),
        etaMin = cms.double(-2.7),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaMinus'),
        px = cms.vdouble(-0.000198571488347, -1.94054852726e-07),
        py = cms.vdouble(-0.00137832489313, -2.02238617742e-06),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.392),
        etaMin = cms.double(-1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0Barrel'),
        px = cms.vdouble(-0.0153652906396, -3.80210366974e-05),
        py = cms.vdouble(0.00798098092474, -0.000103998219585),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3),
        etaMin = cms.double(1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapPlus'),
        px = cms.vdouble(-0.00305719113962, -0.00032676418359),
        py = cms.vdouble(-0.00345131507897, 0.000164816815994),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.392),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapMinus'),
        px = cms.vdouble(-0.000159031461755, 0.00012231873804),
        py = cms.vdouble(0.0260436390996, -8.17994745657e-05),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.479),
        etaMin = cms.double(-1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaBarrel'),
        px = cms.vdouble(-0.00163144589987, 3.17557692226e-06),
        py = cms.vdouble(-0.000710945802217, 6.45810884842e-06),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3.0),
        etaMin = cms.double(1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapPlus'),
        px = cms.vdouble(-0.00108893779312, -2.53584544941e-05),
        py = cms.vdouble(0.00188026342884, 8.15028097381e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.479),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapMinus'),
        px = cms.vdouble(-0.00130486432072, 1.72313009972e-05),
        py = cms.vdouble(-0.00367119684052, -1.63143116342e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFPlus'),
        px = cms.vdouble(-0.000218928792083, -1.0492437382e-06),
        py = cms.vdouble(2.7982430778e-05, -6.87804028426e-08),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFMinus'),
        px = cms.vdouble(-0.000851170798547, 3.18768998961e-07),
        py = cms.vdouble(6.10447368609e-05, -5.92655106387e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFPlus'),
        px = cms.vdouble(0.00138084425101, -6.39459000901e-06),
        py = cms.vdouble(-0.000532336534523, 2.21305870813e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFMinus'),
        px = cms.vdouble(0.00102598393499, -3.37284909389e-06),
        py = cms.vdouble(0.000439449053802, -2.3750891943e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    )
)

process.patMultPhiCorrParams_T1T2SmearTxy_50ns = cms.VPSet(
    cms.PSet(
        etaMax = cms.double(2.7),
        etaMin = cms.double(0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaPlus'),
        px = cms.vdouble(-0.00220049396857, 4.86017686051e-07),
        py = cms.vdouble(0.000301784350668, -2.55951949068e-07),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(0),
        etaMin = cms.double(-2.7),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaMinus'),
        px = cms.vdouble(-0.000217969078412, 3.0200051094e-07),
        py = cms.vdouble(-0.0014606200538, -2.29508676725e-06),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.392),
        etaMin = cms.double(-1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0Barrel'),
        px = cms.vdouble(-0.0135587323577, 5.55593286464e-05),
        py = cms.vdouble(0.00848783774079, -0.00022596699093),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3),
        etaMin = cms.double(1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapPlus'),
        px = cms.vdouble(-0.00285895832031, -6.08161900014e-05),
        py = cms.vdouble(-0.00934018266651, 0.000259105827172),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.392),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapMinus'),
        px = cms.vdouble(-0.00537876208774, 0.000209817129512),
        py = cms.vdouble(0.011148063877, -4.44149746767e-06),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.479),
        etaMin = cms.double(-1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaBarrel'),
        px = cms.vdouble(-0.00192842680623, 2.61152485314e-06),
        py = cms.vdouble(-0.000507607323037, 4.48832037695e-06),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3.0),
        etaMin = cms.double(1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapPlus'),
        px = cms.vdouble(-0.000519297328533, -2.0682880001e-05),
        py = cms.vdouble(0.00282867507264, 6.66930895313e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.479),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapMinus'),
        px = cms.vdouble(-0.00103112559755, 1.33699817646e-05),
        py = cms.vdouble(-0.00209888421545, -3.30667819828e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFPlus'),
        px = cms.vdouble(-0.000392672935556, -9.65693700264e-07),
        py = cms.vdouble(0.000114612488388, -3.44552389568e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFMinus'),
        px = cms.vdouble(-0.00093227965176, 7.74599924874e-07),
        py = cms.vdouble(-2.95036363418e-05, -7.98830257983e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFPlus'),
        px = cms.vdouble(0.00275218993341, -1.69184089548e-05),
        py = cms.vdouble(-0.00113061539637, 6.05994897808e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFMinus'),
        px = cms.vdouble(0.00136623849956, -5.55451851761e-06),
        py = cms.vdouble(0.00117549065237, -6.54719096891e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    )
)

process.patMultPhiCorrParams_T1T2Txy_25ns = cms.VPSet(
    cms.PSet(
        etaMax = cms.double(2.7),
        etaMin = cms.double(0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaPlus'),
        px = cms.vdouble(-0.00229295500096, 3.15487850373e-07),
        py = cms.vdouble(0.000114282381437, -1.58467325852e-08),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(0),
        etaMin = cms.double(-2.7),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaMinus'),
        px = cms.vdouble(-0.000198571488347, -1.94054852726e-07),
        py = cms.vdouble(-0.00137832489313, -2.02238617742e-06),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.392),
        etaMin = cms.double(-1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0Barrel'),
        px = cms.vdouble(-0.0153652906396, -3.80210366974e-05),
        py = cms.vdouble(0.00798098092474, -0.000103998219585),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3),
        etaMin = cms.double(1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapPlus'),
        px = cms.vdouble(-0.00305719113962, -0.00032676418359),
        py = cms.vdouble(-0.00345131507897, 0.000164816815994),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.392),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapMinus'),
        px = cms.vdouble(-0.000159031461755, 0.00012231873804),
        py = cms.vdouble(0.0260436390996, -8.17994745657e-05),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.479),
        etaMin = cms.double(-1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaBarrel'),
        px = cms.vdouble(-0.00163144589987, 3.17557692226e-06),
        py = cms.vdouble(-0.000710945802217, 6.45810884842e-06),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3.0),
        etaMin = cms.double(1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapPlus'),
        px = cms.vdouble(-0.00108893779312, -2.53584544941e-05),
        py = cms.vdouble(0.00188026342884, 8.15028097381e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.479),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapMinus'),
        px = cms.vdouble(-0.00130486432072, 1.72313009972e-05),
        py = cms.vdouble(-0.00367119684052, -1.63143116342e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFPlus'),
        px = cms.vdouble(-0.000218928792083, -1.0492437382e-06),
        py = cms.vdouble(2.7982430778e-05, -6.87804028426e-08),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFMinus'),
        px = cms.vdouble(-0.000851170798547, 3.18768998961e-07),
        py = cms.vdouble(6.10447368609e-05, -5.92655106387e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFPlus'),
        px = cms.vdouble(0.00138084425101, -6.39459000901e-06),
        py = cms.vdouble(-0.000532336534523, 2.21305870813e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFMinus'),
        px = cms.vdouble(0.00102598393499, -3.37284909389e-06),
        py = cms.vdouble(0.000439449053802, -2.3750891943e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    )
)

process.patMultPhiCorrParams_T1T2Txy_50ns = cms.VPSet(
    cms.PSet(
        etaMax = cms.double(2.7),
        etaMin = cms.double(0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaPlus'),
        px = cms.vdouble(-0.00220049396857, 4.86017686051e-07),
        py = cms.vdouble(0.000301784350668, -2.55951949068e-07),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(0),
        etaMin = cms.double(-2.7),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaMinus'),
        px = cms.vdouble(-0.000217969078412, 3.0200051094e-07),
        py = cms.vdouble(-0.0014606200538, -2.29508676725e-06),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.392),
        etaMin = cms.double(-1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0Barrel'),
        px = cms.vdouble(-0.0135587323577, 5.55593286464e-05),
        py = cms.vdouble(0.00848783774079, -0.00022596699093),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3),
        etaMin = cms.double(1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapPlus'),
        px = cms.vdouble(-0.00285895832031, -6.08161900014e-05),
        py = cms.vdouble(-0.00934018266651, 0.000259105827172),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.392),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapMinus'),
        px = cms.vdouble(-0.00537876208774, 0.000209817129512),
        py = cms.vdouble(0.011148063877, -4.44149746767e-06),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.479),
        etaMin = cms.double(-1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaBarrel'),
        px = cms.vdouble(-0.00192842680623, 2.61152485314e-06),
        py = cms.vdouble(-0.000507607323037, 4.48832037695e-06),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3.0),
        etaMin = cms.double(1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapPlus'),
        px = cms.vdouble(-0.000519297328533, -2.0682880001e-05),
        py = cms.vdouble(0.00282867507264, 6.66930895313e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.479),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapMinus'),
        px = cms.vdouble(-0.00103112559755, 1.33699817646e-05),
        py = cms.vdouble(-0.00209888421545, -3.30667819828e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFPlus'),
        px = cms.vdouble(-0.000392672935556, -9.65693700264e-07),
        py = cms.vdouble(0.000114612488388, -3.44552389568e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFMinus'),
        px = cms.vdouble(-0.00093227965176, 7.74599924874e-07),
        py = cms.vdouble(-2.95036363418e-05, -7.98830257983e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFPlus'),
        px = cms.vdouble(0.00275218993341, -1.69184089548e-05),
        py = cms.vdouble(-0.00113061539637, 6.05994897808e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFMinus'),
        px = cms.vdouble(0.00136623849956, -5.55451851761e-06),
        py = cms.vdouble(0.00117549065237, -6.54719096891e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    )
)

process.patMultPhiCorrParams_T1Txy_25ns = cms.VPSet(
    cms.PSet(
        etaMax = cms.double(2.7),
        etaMin = cms.double(0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaPlus'),
        px = cms.vdouble(-0.00229295500096, 3.15487850373e-07),
        py = cms.vdouble(0.000114282381437, -1.58467325852e-08),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(0),
        etaMin = cms.double(-2.7),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaMinus'),
        px = cms.vdouble(-0.000198571488347, -1.94054852726e-07),
        py = cms.vdouble(-0.00137832489313, -2.02238617742e-06),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.392),
        etaMin = cms.double(-1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0Barrel'),
        px = cms.vdouble(-0.0153652906396, -3.80210366974e-05),
        py = cms.vdouble(0.00798098092474, -0.000103998219585),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3),
        etaMin = cms.double(1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapPlus'),
        px = cms.vdouble(-0.00305719113962, -0.00032676418359),
        py = cms.vdouble(-0.00345131507897, 0.000164816815994),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.392),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapMinus'),
        px = cms.vdouble(-0.000159031461755, 0.00012231873804),
        py = cms.vdouble(0.0260436390996, -8.17994745657e-05),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.479),
        etaMin = cms.double(-1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaBarrel'),
        px = cms.vdouble(-0.00163144589987, 3.17557692226e-06),
        py = cms.vdouble(-0.000710945802217, 6.45810884842e-06),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3.0),
        etaMin = cms.double(1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapPlus'),
        px = cms.vdouble(-0.00108893779312, -2.53584544941e-05),
        py = cms.vdouble(0.00188026342884, 8.15028097381e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.479),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapMinus'),
        px = cms.vdouble(-0.00130486432072, 1.72313009972e-05),
        py = cms.vdouble(-0.00367119684052, -1.63143116342e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFPlus'),
        px = cms.vdouble(-0.000218928792083, -1.0492437382e-06),
        py = cms.vdouble(2.7982430778e-05, -6.87804028426e-08),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFMinus'),
        px = cms.vdouble(-0.000851170798547, 3.18768998961e-07),
        py = cms.vdouble(6.10447368609e-05, -5.92655106387e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFPlus'),
        px = cms.vdouble(0.00138084425101, -6.39459000901e-06),
        py = cms.vdouble(-0.000532336534523, 2.21305870813e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFMinus'),
        px = cms.vdouble(0.00102598393499, -3.37284909389e-06),
        py = cms.vdouble(0.000439449053802, -2.3750891943e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    )
)

process.patMultPhiCorrParams_T1Txy_50ns = cms.VPSet(
    cms.PSet(
        etaMax = cms.double(2.7),
        etaMin = cms.double(0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaPlus'),
        px = cms.vdouble(-0.00220049396857, 4.86017686051e-07),
        py = cms.vdouble(0.000301784350668, -2.55951949068e-07),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(0),
        etaMin = cms.double(-2.7),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaMinus'),
        px = cms.vdouble(-0.000217969078412, 3.0200051094e-07),
        py = cms.vdouble(-0.0014606200538, -2.29508676725e-06),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.392),
        etaMin = cms.double(-1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0Barrel'),
        px = cms.vdouble(-0.0135587323577, 5.55593286464e-05),
        py = cms.vdouble(0.00848783774079, -0.00022596699093),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3),
        etaMin = cms.double(1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapPlus'),
        px = cms.vdouble(-0.00285895832031, -6.08161900014e-05),
        py = cms.vdouble(-0.00934018266651, 0.000259105827172),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.392),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapMinus'),
        px = cms.vdouble(-0.00537876208774, 0.000209817129512),
        py = cms.vdouble(0.011148063877, -4.44149746767e-06),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.479),
        etaMin = cms.double(-1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaBarrel'),
        px = cms.vdouble(-0.00192842680623, 2.61152485314e-06),
        py = cms.vdouble(-0.000507607323037, 4.48832037695e-06),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3.0),
        etaMin = cms.double(1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapPlus'),
        px = cms.vdouble(-0.000519297328533, -2.0682880001e-05),
        py = cms.vdouble(0.00282867507264, 6.66930895313e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.479),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapMinus'),
        px = cms.vdouble(-0.00103112559755, 1.33699817646e-05),
        py = cms.vdouble(-0.00209888421545, -3.30667819828e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFPlus'),
        px = cms.vdouble(-0.000392672935556, -9.65693700264e-07),
        py = cms.vdouble(0.000114612488388, -3.44552389568e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFMinus'),
        px = cms.vdouble(-0.00093227965176, 7.74599924874e-07),
        py = cms.vdouble(-2.95036363418e-05, -7.98830257983e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFPlus'),
        px = cms.vdouble(0.00275218993341, -1.69184089548e-05),
        py = cms.vdouble(-0.00113061539637, 6.05994897808e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFMinus'),
        px = cms.vdouble(0.00136623849956, -5.55451851761e-06),
        py = cms.vdouble(0.00117549065237, -6.54719096891e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    )
)

process.patMultPhiCorrParams_Txy_25ns = cms.VPSet(
    cms.PSet(
        etaMax = cms.double(2.7),
        etaMin = cms.double(0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaPlus'),
        px = cms.vdouble(-0.00229295500096, 3.15487850373e-07),
        py = cms.vdouble(0.000114282381437, -1.58467325852e-08),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(0),
        etaMin = cms.double(-2.7),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaMinus'),
        px = cms.vdouble(-0.000198571488347, -1.94054852726e-07),
        py = cms.vdouble(-0.00137832489313, -2.02238617742e-06),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.392),
        etaMin = cms.double(-1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0Barrel'),
        px = cms.vdouble(-0.0153652906396, -3.80210366974e-05),
        py = cms.vdouble(0.00798098092474, -0.000103998219585),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3),
        etaMin = cms.double(1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapPlus'),
        px = cms.vdouble(-0.00305719113962, -0.00032676418359),
        py = cms.vdouble(-0.00345131507897, 0.000164816815994),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.392),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapMinus'),
        px = cms.vdouble(-0.000159031461755, 0.00012231873804),
        py = cms.vdouble(0.0260436390996, -8.17994745657e-05),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.479),
        etaMin = cms.double(-1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaBarrel'),
        px = cms.vdouble(-0.00163144589987, 3.17557692226e-06),
        py = cms.vdouble(-0.000710945802217, 6.45810884842e-06),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3.0),
        etaMin = cms.double(1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapPlus'),
        px = cms.vdouble(-0.00108893779312, -2.53584544941e-05),
        py = cms.vdouble(0.00188026342884, 8.15028097381e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.479),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapMinus'),
        px = cms.vdouble(-0.00130486432072, 1.72313009972e-05),
        py = cms.vdouble(-0.00367119684052, -1.63143116342e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFPlus'),
        px = cms.vdouble(-0.000218928792083, -1.0492437382e-06),
        py = cms.vdouble(2.7982430778e-05, -6.87804028426e-08),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFMinus'),
        px = cms.vdouble(-0.000851170798547, 3.18768998961e-07),
        py = cms.vdouble(6.10447368609e-05, -5.92655106387e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFPlus'),
        px = cms.vdouble(0.00138084425101, -6.39459000901e-06),
        py = cms.vdouble(-0.000532336534523, 2.21305870813e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFMinus'),
        px = cms.vdouble(0.00102598393499, -3.37284909389e-06),
        py = cms.vdouble(0.000439449053802, -2.3750891943e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    )
)

process.patMultPhiCorrParams_Txy_50ns = cms.VPSet(
    cms.PSet(
        etaMax = cms.double(2.7),
        etaMin = cms.double(0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaPlus'),
        px = cms.vdouble(-0.00220049396857, 4.86017686051e-07),
        py = cms.vdouble(0.000301784350668, -2.55951949068e-07),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(0),
        etaMin = cms.double(-2.7),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hEtaMinus'),
        px = cms.vdouble(-0.000217969078412, 3.0200051094e-07),
        py = cms.vdouble(-0.0014606200538, -2.29508676725e-06),
        type = cms.int32(1),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.392),
        etaMin = cms.double(-1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0Barrel'),
        px = cms.vdouble(-0.0135587323577, 5.55593286464e-05),
        py = cms.vdouble(0.00848783774079, -0.00022596699093),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3),
        etaMin = cms.double(1.392),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapPlus'),
        px = cms.vdouble(-0.00285895832031, -6.08161900014e-05),
        py = cms.vdouble(-0.00934018266651, 0.000259105827172),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.392),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('h0EndcapMinus'),
        px = cms.vdouble(-0.00537876208774, 0.000209817129512),
        py = cms.vdouble(0.011148063877, -4.44149746767e-06),
        type = cms.int32(5),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(1.479),
        etaMin = cms.double(-1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaBarrel'),
        px = cms.vdouble(-0.00192842680623, 2.61152485314e-06),
        py = cms.vdouble(-0.000507607323037, 4.48832037695e-06),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(3.0),
        etaMin = cms.double(1.479),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapPlus'),
        px = cms.vdouble(-0.000519297328533, -2.0682880001e-05),
        py = cms.vdouble(0.00282867507264, 6.66930895313e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-1.479),
        etaMin = cms.double(-3.0),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('gammaEndcapMinus'),
        px = cms.vdouble(-0.00103112559755, 1.33699817646e-05),
        py = cms.vdouble(-0.00209888421545, -3.30667819828e-05),
        type = cms.int32(4),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFPlus'),
        px = cms.vdouble(-0.000392672935556, -9.65693700264e-07),
        py = cms.vdouble(0.000114612488388, -3.44552389568e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('hHFMinus'),
        px = cms.vdouble(-0.00093227965176, 7.74599924874e-07),
        py = cms.vdouble(-2.95036363418e-05, -7.98830257983e-07),
        type = cms.int32(6),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(5.2),
        etaMin = cms.double(2.901376),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFPlus'),
        px = cms.vdouble(0.00275218993341, -1.69184089548e-05),
        py = cms.vdouble(-0.00113061539637, 6.05994897808e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    ),
    cms.PSet(
        etaMax = cms.double(-2.901376),
        etaMin = cms.double(-5.2),
        fx = cms.string('(x*[0])+(sq(x)*[1])'),
        fy = cms.string('(x*[0])+(sq(x)*[1])'),
        name = cms.string('egammaHFMinus'),
        px = cms.vdouble(0.00136623849956, -5.55451851761e-06),
        py = cms.vdouble(0.00117549065237, -6.54719096891e-06),
        type = cms.int32(7),
        varType = cms.int32(0)
    )
)

process.patMultPhiCorrParams_ULDATA2016postVFPF = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2016postVFPF'),
    px = cms.vdouble(0.134616, -0.89965),
    py = cms.vdouble(0.0397736, 1.0385),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_ULDATA2016postVFPG = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2016postVFPG'),
    px = cms.vdouble(0.121809, -0.584893),
    py = cms.vdouble(0.0558974, 0.891234),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_ULDATA2016postVFPH = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2016postVFPH'),
    px = cms.vdouble(0.0868828, -0.703489),
    py = cms.vdouble(0.0888774, 0.902632),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_ULDATA2016preVFPB = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2016preVFPB'),
    px = cms.vdouble(-0.0214894, -0.188255),
    py = cms.vdouble(0.0876624, 0.812885),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_ULDATA2016preVFPC = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2016preVFPC'),
    px = cms.vdouble(-0.032209, 0.067288),
    py = cms.vdouble(0.113917, 0.743906),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_ULDATA2016preVFPD = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2016preVFPD'),
    px = cms.vdouble(-0.0293663, 0.21106),
    py = cms.vdouble(0.11331, 0.815787),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_ULDATA2016preVFPE = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2016preVFPE'),
    px = cms.vdouble(-0.0132046, 0.20073),
    py = cms.vdouble(0.134809, 0.679068),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_ULDATA2016preVFPF = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2016preVFPF'),
    px = cms.vdouble(-0.0543566, 0.816597),
    py = cms.vdouble(0.114225, 1.17266),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_ULDATA2017B = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2017B'),
    px = cms.vdouble(-0.211161, 0.419333),
    py = cms.vdouble(0.251789, -1.28089),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_ULDATA2017C = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2017C'),
    px = cms.vdouble(-0.185184, -0.164009),
    py = cms.vdouble(0.200941, -0.56853),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_ULDATA2017D = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2017D'),
    px = cms.vdouble(-0.201606, 0.426502),
    py = cms.vdouble(0.188208, -0.58313),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_ULDATA2017E = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2017E'),
    px = cms.vdouble(-0.162472, 0.176329),
    py = cms.vdouble(0.138076, -0.250239),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_ULDATA2017F = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2017F'),
    px = cms.vdouble(-0.210639, 0.72934),
    py = cms.vdouble(0.198626, 1.028),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_ULDATA2018A = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2018A'),
    px = cms.vdouble(0.263733, -1.91115),
    py = cms.vdouble(0.0431304, -0.112043),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_ULDATA2018B = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2018B'),
    px = cms.vdouble(0.400466, -3.05914),
    py = cms.vdouble(0.146125, -0.533233),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_ULDATA2018C = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2018C'),
    px = cms.vdouble(0.430911, -1.42865),
    py = cms.vdouble(0.0620083, -1.46021),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_ULDATA2018D = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULDATA2018D'),
    px = cms.vdouble(0.457327, -1.56856),
    py = cms.vdouble(0.0684071, -0.928372),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_ULMC2016postVFP = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULMC2016postVFP'),
    px = cms.vdouble(-0.153497, -0.231751),
    py = cms.vdouble(0.00731978, 0.243323),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_ULMC2016preVFP = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULMC2016preVFP'),
    px = cms.vdouble(-0.188743, 0.136539),
    py = cms.vdouble(0.0127927, 0.117747),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_ULMC2017 = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULMC2017'),
    px = cms.vdouble(-0.300155, 1.90608),
    py = cms.vdouble(0.300213, -2.02232),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.patMultPhiCorrParams_ULMC2018 = cms.VPSet(cms.PSet(
    etaMax = cms.double(9.9),
    etaMin = cms.double(-9.9),
    fx = cms.string('((x*[0])+[1])'),
    fy = cms.string('((x*[0])+[1])'),
    name = cms.string('ULMC2018'),
    px = cms.vdouble(0.183518, 0.546754),
    py = cms.vdouble(0.192263, -0.42121),
    type = cms.int32(0),
    varType = cms.int32(3)
))

process.puppiCentral = cms.VPSet(cms.PSet(
    algoId = cms.int32(5),
    applyLowPUCorr = cms.bool(True),
    combOpt = cms.int32(0),
    cone = cms.double(0.4),
    rmsPtMin = cms.double(0.1),
    rmsScaleFactor = cms.double(1.0),
    useCharged = cms.bool(True)
))

process.puppiForward = cms.VPSet(cms.PSet(
    algoId = cms.int32(5),
    applyLowPUCorr = cms.bool(True),
    combOpt = cms.int32(0),
    cone = cms.double(0.4),
    rmsPtMin = cms.double(0.5),
    rmsScaleFactor = cms.double(1.0),
    useCharged = cms.bool(False)
))

process.ECFAdder = cms.EDProducer("ECFAdder",
    Njets = cms.vuint32(1, 2, 3),
    alpha = cms.double(1),
    beta = cms.double(1),
    cuts = cms.vstring(
        '',
        '',
        ''
    ),
    ecftype = cms.string(''),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("no default"),
    srcWeights = cms.InputTag("puppi")
)


process.HBHENoiseFilterResultProducer = cms.EDProducer("HBHENoiseFilterResultProducer",
    IgnoreTS4TS5ifJetInLowBVRegion = cms.bool(False),
    defaultDecision = cms.string('HBHENoiseFilterResultRun2Loose'),
    minHPDHits = cms.int32(17),
    minHPDNoOtherHits = cms.int32(10),
    minIsolatedNoiseSumE = cms.double(50.0),
    minIsolatedNoiseSumEt = cms.double(25.0),
    minNumIsolatedNoiseChannels = cms.int32(10),
    minZeros = cms.int32(9999),
    noiselabel = cms.InputTag("hcalnoise"),
    useBunchSpacingProducer = cms.bool(True)
)


process.MEtoEDMConverter = cms.EDProducer("MEtoEDMConverter",
    Frequency = cms.untracked.int32(50),
    MEPathToSave = cms.untracked.string(''),
    Name = cms.untracked.string('MEtoEDMConverter'),
    Verbosity = cms.untracked.int32(0)
)


process.NjettinessAK8Puppi = cms.EDProducer("NjettinessAdder",
    Njets = cms.vuint32(1, 2, 3, 4),
    R0 = cms.double(0.8),
    Rcutoff = cms.double(999.0),
    akAxesR0 = cms.double(999.0),
    axesDefinition = cms.uint32(6),
    beta = cms.double(1.0),
    measureDefinition = cms.uint32(0),
    nPass = cms.int32(999),
    src = cms.InputTag("ak8PFJetsPuppi"),
    srcWeights = cms.InputTag("puppi")
)


process.NjettinessAK8Subjets = cms.EDProducer("NjettinessAdder",
    Njets = cms.vuint32(1, 2, 3, 4),
    R0 = cms.double(0.8),
    Rcutoff = cms.double(999.0),
    akAxesR0 = cms.double(999.0),
    axesDefinition = cms.uint32(6),
    beta = cms.double(1.0),
    measureDefinition = cms.uint32(0),
    nPass = cms.int32(999),
    src = cms.InputTag("ak8PFJetsPuppiSoftDrop","SubJets"),
    srcWeights = cms.InputTag("puppi")
)


process.PATElectronProducer = cms.EDProducer("PATElectronProducer",
    addEfficiencies = cms.bool(False),
    addElectronID = cms.bool(True),
    addGenMatch = cms.bool(True),
    addMVAVariables = cms.bool(True),
    addPFClusterIso = cms.bool(False),
    addPuppiIsolation = cms.bool(False),
    addResolutions = cms.bool(False),
    beamLineSrc = cms.InputTag(""),
    computeMiniIso = cms.bool(False),
    ecalPFClusterIsoMap = cms.InputTag(""),
    efficiencies = cms.PSet(

    ),
    electronIDSource = cms.InputTag(""),
    electronSource = cms.InputTag("no default"),
    embedBasicClusters = cms.bool(True),
    embedGenMatch = cms.bool(False),
    embedGsfElectronCore = cms.bool(True),
    embedGsfTrack = cms.bool(True),
    embedHighLevelSelection = cms.bool(True),
    embedPFCandidate = cms.bool(False),
    embedPflowBasicClusters = cms.bool(True),
    embedPflowPreshowerClusters = cms.bool(True),
    embedPflowSuperCluster = cms.bool(True),
    embedPreshowerClusters = cms.bool(True),
    embedRecHits = cms.bool(True),
    embedSeedCluster = cms.bool(True),
    embedSuperCluster = cms.bool(True),
    embedTrack = cms.bool(False),
    genParticleMatch = cms.InputTag(""),
    hcalPFClusterIsoMap = cms.InputTag(""),
    isoDeposits = cms.PSet(
        ecal = cms.optional.InputTag,
        hcal = cms.optional.InputTag,
        pfAllParticles = cms.optional.InputTag,
        pfChargedAll = cms.optional.InputTag,
        pfChargedHadrons = cms.optional.InputTag,
        pfNeutralHadrons = cms.optional.InputTag,
        pfPUChargedHadrons = cms.optional.InputTag,
        pfPhotons = cms.optional.InputTag,
        tracker = cms.optional.InputTag,
        user = cms.optional.VInputTag
    ),
    isolationValues = cms.PSet(
        ecal = cms.optional.InputTag,
        hcal = cms.optional.InputTag,
        pfAllParticles = cms.optional.InputTag,
        pfChargedAll = cms.optional.InputTag,
        pfChargedHadrons = cms.optional.InputTag,
        pfNeutralHadrons = cms.optional.InputTag,
        pfPUChargedHadrons = cms.optional.InputTag,
        pfPhotons = cms.optional.InputTag,
        tracker = cms.optional.InputTag,
        user = cms.optional.VInputTag
    ),
    isolationValuesNoPFId = cms.PSet(
        ecal = cms.optional.InputTag,
        hcal = cms.optional.InputTag,
        pfAllParticles = cms.optional.InputTag,
        pfChargedAll = cms.optional.InputTag,
        pfChargedHadrons = cms.optional.InputTag,
        pfNeutralHadrons = cms.optional.InputTag,
        pfPUChargedHadrons = cms.optional.InputTag,
        pfPhotons = cms.optional.InputTag,
        tracker = cms.optional.InputTag,
        user = cms.optional.VInputTag
    ),
    mightGet = cms.optional.untracked.vstring,
    miniIsoParamsB = cms.vdouble(),
    miniIsoParamsE = cms.vdouble(),
    pfCandidateMap = cms.InputTag("no default"),
    pfCandsForMiniIso = cms.InputTag("packedPFCandidates"),
    pfElectronSource = cms.InputTag("pfElectrons"),
    pvSrc = cms.InputTag(""),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    resolutions = cms.PSet(

    ),
    useParticleFlow = cms.bool(False),
    usePfCandidateMultiMap = cms.bool(False),
    userData = cms.PSet(
        userCands = cms.PSet(
            labelPostfixesToStrip = cms.vstring(),
            src = cms.required.VInputTag
        ),
        userClasses = cms.PSet(
            labelPostfixesToStrip = cms.vstring(),
            src = cms.required.VInputTag
        ),
        userFloats = cms.PSet(
            labelPostfixesToStrip = cms.vstring(),
            src = cms.required.VInputTag
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            labelPostfixesToStrip = cms.vstring(),
            src = cms.required.VInputTag
        )
    ),
    userIsolation = cms.PSet(

    )
)


process.PATPhotonProducer = cms.EDProducer("PATPhotonProducer",
    addEfficiencies = cms.bool(False),
    addGenMatch = cms.bool(True),
    addPFClusterIso = cms.bool(False),
    addPhotonID = cms.bool(True),
    addPuppiIsolation = cms.bool(False),
    addResolutions = cms.bool(False),
    beamLineSrc = cms.InputTag(""),
    conversionSource = cms.InputTag("allConversions"),
    ecalPFClusterIsoMap = cms.InputTag(""),
    efficiencies = cms.PSet(

    ),
    electronSource = cms.InputTag("no default"),
    embedBasicClusters = cms.bool(True),
    embedGenMatch = cms.bool(False),
    embedPreshowerClusters = cms.bool(True),
    embedRecHits = cms.bool(True),
    embedSeedCluster = cms.bool(True),
    embedSuperCluster = cms.bool(True),
    genParticleMatch = cms.InputTag(""),
    hcalPFClusterIsoMap = cms.InputTag(""),
    isoDeposits = cms.PSet(
        ecal = cms.optional.InputTag,
        hcal = cms.optional.InputTag,
        pfAllParticles = cms.optional.InputTag,
        pfChargedAll = cms.optional.InputTag,
        pfChargedHadrons = cms.optional.InputTag,
        pfNeutralHadrons = cms.optional.InputTag,
        pfPUChargedHadrons = cms.optional.InputTag,
        pfPhotons = cms.optional.InputTag,
        tracker = cms.optional.InputTag,
        user = cms.optional.VInputTag
    ),
    isolationValues = cms.PSet(
        ecal = cms.optional.InputTag,
        hcal = cms.optional.InputTag,
        pfAllParticles = cms.optional.InputTag,
        pfChargedAll = cms.optional.InputTag,
        pfChargedHadrons = cms.optional.InputTag,
        pfNeutralHadrons = cms.optional.InputTag,
        pfPUChargedHadrons = cms.optional.InputTag,
        pfPhotons = cms.optional.InputTag,
        tracker = cms.optional.InputTag,
        user = cms.optional.VInputTag
    ),
    mightGet = cms.optional.untracked.vstring,
    photonIDSource = cms.InputTag(""),
    photonSource = cms.InputTag("no default"),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    resolutions = cms.PSet(

    ),
    saveRegressionData = cms.bool(True),
    userData = cms.PSet(
        userCands = cms.PSet(
            labelPostfixesToStrip = cms.vstring(),
            src = cms.required.VInputTag
        ),
        userClasses = cms.PSet(
            labelPostfixesToStrip = cms.vstring(),
            src = cms.required.VInputTag
        ),
        userFloats = cms.PSet(
            labelPostfixesToStrip = cms.vstring(),
            src = cms.required.VInputTag
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            labelPostfixesToStrip = cms.vstring(),
            src = cms.required.VInputTag
        )
    ),
    userIsolation = cms.PSet(

    )
)


process.PFTauPrimaryVertexProducer = cms.EDProducer("PFTauPrimaryVertexProducer",
    Algorithm = cms.int32(0),
    ElectronTag = cms.InputTag("MyElectrons"),
    MuonTag = cms.InputTag("MyMuons"),
    PFTauTag = cms.InputTag("hpsPFTauProducer"),
    PVTag = cms.InputTag("offlinePrimaryVertices"),
    RemoveElectronTracks = cms.bool(False),
    RemoveMuonTracks = cms.bool(False),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    cut = cms.string('pt > 18.0 & abs(eta)<2.3'),
    discriminators = cms.VPSet(cms.PSet(
        discriminator = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding"),
        selectionCut = cms.double(0.5)
    )),
    mightGet = cms.optional.untracked.vstring,
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            maxDeltaZ = cms.double(0.2),
            maxDeltaZToLeadTrack = cms.double(-1.0),
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.03),
            minGammaEt = cms.double(1.5),
            minTrackHits = cms.uint32(8),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(1.0),
            minTrackVertexWeight = cms.double(-1.0)
        ),
        leadingTrkOrPFCandOption = cms.string('leadPFCand'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        pvFindingAlgo = cms.string('closestInDeltaZ'),
        recoverLeadingTrk = cms.bool(False),
        signalQualityCuts = cms.PSet(
            maxDeltaZ = cms.double(0.4),
            maxDeltaZToLeadTrack = cms.double(-1.0),
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.1),
            minGammaEt = cms.double(1.0),
            minNeutralHadronEt = cms.double(30.0),
            minTrackHits = cms.uint32(3),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(0.5),
            minTrackVertexWeight = cms.double(-1.0)
        ),
        vertexTrackFiltering = cms.bool(False),
        vxAssocQualityCuts = cms.PSet(
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.1),
            minGammaEt = cms.double(1.0),
            minTrackHits = cms.uint32(3),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(0.5),
            minTrackVertexWeight = cms.double(-1.0)
        )
    ),
    useBeamSpot = cms.bool(True),
    useSelectedTaus = cms.bool(False)
)


process.PFTauSecondaryVertexProducer = cms.EDProducer("PFTauSecondaryVertexProducer",
    PFTauTag = cms.InputTag("hpsPFTauProducer"),
    mightGet = cms.optional.untracked.vstring
)


process.PFTauTransverseImpactParameters = cms.EDProducer("PFTauTransverseImpactParameters",
    PFTauPVATag = cms.InputTag("PFTauPrimaryVertexProducer"),
    PFTauSVATag = cms.InputTag("PFTauSecondaryVertexProducer"),
    PFTauTag = cms.InputTag("hpsPFTauProducer"),
    mightGet = cms.optional.untracked.vstring,
    useFullCalculation = cms.bool(False)
)


process.PackedPFTowers = cms.EDProducer("PackedPFTowers",
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("packedPFCandidates"),
    useHF = cms.bool(True)
)


process.QGTagger = cms.EDProducer("QGTagger",
    computeLikelihood = cms.bool(True),
    jec = cms.InputTag(""),
    jetsLabel = cms.string('QGL_AK4PFchs'),
    mightGet = cms.optional.untracked.vstring,
    srcConstituentWeights = cms.InputTag(""),
    srcJets = cms.InputTag("ak4PFJetsCHS"),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll"),
    srcVertexCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    systematicsLabel = cms.string(''),
    useQualityCuts = cms.bool(False)
)


process.RecoTauCleaner = cms.EDProducer("RecoTauCleaner",
    cleaners = cms.VPSet(
        cms.PSet(
            name = cms.string('Charge'),
            nprongs = cms.vuint32(1, 3),
            passForCharge = cms.int32(1),
            plugin = cms.string('RecoTauChargeCleanerPlugin'),
            selectionFailValue = cms.double(0),
            tolerance = cms.double(0)
        ),
        cms.PSet(
            name = cms.string('HPS_Select'),
            plugin = cms.string('RecoTauDiscriminantCleanerPlugin'),
            src = cms.InputTag("hpsSelectionDiscriminator"),
            tolerance = cms.double(0)
        ),
        cms.PSet(
            minTrackPt = cms.double(5.0),
            name = cms.string('killSoftTwoProngTaus'),
            plugin = cms.string('RecoTauSoftTwoProngTausCleanerPlugin'),
            tolerance = cms.double(0)
        ),
        cms.PSet(
            name = cms.string('ChargedHadronMultiplicity'),
            plugin = cms.string('RecoTauChargedHadronMultiplicityCleanerPlugin'),
            tolerance = cms.double(0)
        ),
        cms.PSet(
            name = cms.string('Pt'),
            plugin = cms.string('RecoTauStringCleanerPlugin'),
            selection = cms.string('leadCand().isNonnull()'),
            selectionFailValue = cms.double(1000.0),
            selectionPassFunction = cms.string('-pt()'),
            tolerance = cms.double(0.01)
        ),
        cms.PSet(
            name = cms.string('StripMultiplicity'),
            plugin = cms.string('RecoTauStringCleanerPlugin'),
            selection = cms.string('leadCand().isNonnull()'),
            selectionFailValue = cms.double(1000.0),
            selectionPassFunction = cms.string('-signalPiZeroCandidates().size()'),
            tolerance = cms.double(0)
        ),
        cms.PSet(
            name = cms.string('CombinedIsolation'),
            plugin = cms.string('RecoTauStringCleanerPlugin'),
            selection = cms.string('leadCand().isNonnull()'),
            selectionFailValue = cms.double(1000.0),
            selectionPassFunction = cms.string('isolationPFChargedHadrCandsPtSum() + isolationPFGammaCandsEtSum()'),
            tolerance = cms.double(0)
        )
    ),
    outputSelection = cms.string(''),
    src = cms.InputTag("combinatoricRecoTaus"),
    verbosity = cms.int32(0)
)


process.RecoTauJetRegionProducer = cms.EDProducer("RecoTauJetRegionProducer",
    deltaR = cms.double(0.8),
    maxJetAbsEta = cms.double(2.7),
    minJetPt = cms.double(14.0),
    pfCandAssocMapSrc = cms.InputTag(""),
    pfCandSrc = cms.InputTag("particleFlow"),
    src = cms.InputTag("ak4PFJets"),
    verbosity = cms.int32(0)
)


process.RecoTauPiZeroUnembedder = cms.EDProducer("RecoTauPiZeroUnembedder",
    src = cms.InputTag("hpsPFTauProducerSansRefs")
)


process.ak4CaloL1FastL2L3Corrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4CaloL1FastjetCorrector", "ak4CaloL2RelativeCorrector", "ak4CaloL3AbsoluteCorrector")
)


process.ak4CaloL1FastL2L3L6Corrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4CaloL1FastjetCorrector", "ak4CaloL2RelativeCorrector", "ak4CaloL3AbsoluteCorrector", "ak4CaloL6SLBCorrector")
)


process.ak4CaloL1FastL2L3ResidualCorrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4CaloL1FastjetCorrector", "ak4CaloL2RelativeCorrector", "ak4CaloL3AbsoluteCorrector", "ak4CaloResidualCorrector")
)


process.ak4CaloL1FastjetCorrector = cms.EDProducer("L1FastjetCorrectorProducer",
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAllCalo")
)


process.ak4CaloL1L2L3Corrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4CaloL1OffsetCorrector", "ak4CaloL2RelativeCorrector", "ak4CaloL3AbsoluteCorrector")
)


process.ak4CaloL1L2L3ResidualCorrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4CaloL1OffsetCorrector", "ak4CaloL2RelativeCorrector", "ak4CaloL3AbsoluteCorrector", "ak4CaloResidualCorrector")
)


process.ak4CaloL1OffsetCorrector = cms.EDProducer("L1OffsetCorrectorProducer",
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.InputTag("offlinePrimaryVertices")
)


process.ak4CaloL2L3Corrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4CaloL2RelativeCorrector", "ak4CaloL3AbsoluteCorrector")
)


process.ak4CaloL2L3CorrectorNoHF = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag(cms.InputTag("ak4CaloL2RelativeCorrectorNoHF"), cms.InputTag("ak4CaloL3AbsoluteCorrectorNoHF"))
)


process.ak4CaloL2L3CorrectorPuppi = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag(cms.InputTag("ak4CaloL2RelativeCorrectorPuppi"), cms.InputTag("ak4CaloL3AbsoluteCorrectorPuppi"))
)


process.ak4CaloL2L3L6Corrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4CaloL2RelativeCorrector", "ak4CaloL3AbsoluteCorrector", "ak4CaloL6SLBCorrector")
)


process.ak4CaloL2L3ResidualCorrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4CaloL2RelativeCorrector", "ak4CaloL3AbsoluteCorrector", "ak4CaloResidualCorrector")
)


process.ak4CaloL2L3ResidualCorrectorNoHF = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag(cms.InputTag("ak4CaloL2RelativeCorrectorNoHF"), cms.InputTag("ak4CaloL3AbsoluteCorrectorNoHF"), cms.InputTag("ak4CaloResidualCorrectorNoHF"))
)


process.ak4CaloL2L3ResidualCorrectorPuppi = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag(cms.InputTag("ak4CaloL2RelativeCorrectorPuppi"), cms.InputTag("ak4CaloL3AbsoluteCorrectorPuppi"), cms.InputTag("ak4CaloResidualCorrectorPuppi"))
)


process.ak4CaloL2RelativeCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L2Relative')
)


process.ak4CaloL2RelativeCorrectorNoHF = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L2Relative')
)


process.ak4CaloL2RelativeCorrectorPuppi = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L2Relative')
)


process.ak4CaloL3AbsoluteCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L3Absolute')
)


process.ak4CaloL3AbsoluteCorrectorNoHF = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L3Absolute')
)


process.ak4CaloL3AbsoluteCorrectorPuppi = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L3Absolute')
)


process.ak4CaloL6SLBCorrector = cms.EDProducer("L6SLBCorrectorProducer",
    addMuonToJet = cms.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    srcBTagInfoElectron = cms.InputTag("ak4CaloJetsSoftElectronTagInfos"),
    srcBTagInfoMuon = cms.InputTag("ak4CaloJetsSoftMuonTagInfos")
)


process.ak4CaloResidualCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L2L3Residual')
)


process.ak4CaloResidualCorrectorNoHF = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L2L3Residual')
)


process.ak4CaloResidualCorrectorPuppi = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L2L3Residual')
)


process.ak4GenJetFlavourInfos = cms.EDProducer("JetFlavourClustering",
    bHadrons = cms.InputTag("selectedHadronsAndPartonsForGenJetsFlavourInfos","bHadrons"),
    cHadrons = cms.InputTag("selectedHadronsAndPartonsForGenJetsFlavourInfos","cHadrons"),
    ghostRescaling = cms.double(1e-18),
    hadronFlavourHasPriority = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    jets = cms.InputTag("ak4GenJetsNoNu"),
    leptons = cms.InputTag("selectedHadronsAndPartonsForGenJetsFlavourInfos","leptons"),
    partons = cms.InputTag("selectedHadronsAndPartonsForGenJetsFlavourInfos","physicsPartons"),
    rParam = cms.double(0.4)
)


process.ak4HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    applyWeight = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak4HiGenJetsCleaned = cms.EDProducer("HiGenJetCleaner",
    createNewCollection = cms.untracked.bool(True),
    deltaR = cms.double(0.25),
    fillDummyEntries = cms.untracked.bool(True),
    ptCut = cms.double(20),
    src = cms.InputTag("ak4HiGenJets")
)


process.ak4HiSignalGenJets = cms.EDProducer("HiSignalGenJetProducer",
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("ak4HiGenJets")
)


process.ak4JPTL1FastL2L3Corrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4CaloL1FastjetCorrector", "ak4L1JPTFastjetCorrector", "ak4JPTL2RelativeCorrector", "ak4JPTL3AbsoluteCorrector")
)


process.ak4JPTL1FastL2L3ResidualCorrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4CaloL1FastjetCorrector", "ak4L1JPTFastjetCorrector", "ak4JPTL2RelativeCorrector", "ak4JPTL3AbsoluteCorrector", "ak4JPTResidualCorrector")
)


process.ak4JPTL1L2L3Corrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4CaloL1OffsetCorrector", "ak4L1JPTOffsetCorrector", "ak4JPTL2RelativeCorrector", "ak4JPTL3AbsoluteCorrector")
)


process.ak4JPTL1L2L3ResidualCorrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4CaloL1OffsetCorrector", "ak4L1JPTOffsetCorrector", "ak4JPTL2RelativeCorrector", "ak4JPTL3AbsoluteCorrector", "ak4JPTResidualCorrector")
)


process.ak4JPTL2L3Corrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4CaloL1OffsetCorrector", "ak4L1JPTOffsetCorrector", "ak4JPTL2RelativeCorrector", "ak4JPTL3AbsoluteCorrector")
)


process.ak4JPTL2L3ResidualCorrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4CaloL1OffsetCorrector", "ak4L1JPTOffsetCorrector", "ak4JPTL2RelativeCorrector", "ak4JPTL3AbsoluteCorrector", "ak4JPTResidualCorrector")
)


process.ak4JPTL2RelativeCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4JPT'),
    level = cms.string('L2Relative')
)


process.ak4JPTL3AbsoluteCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4JPT'),
    level = cms.string('L3Absolute')
)


process.ak4JPTResidualCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4JPT'),
    level = cms.string('L2L3Residual')
)


process.ak4JetFlavourInfos = cms.EDProducer("JetFlavourClustering",
    bHadrons = cms.InputTag("selectedHadronsAndPartons","bHadrons"),
    cHadrons = cms.InputTag("selectedHadronsAndPartons","cHadrons"),
    ghostRescaling = cms.double(1e-18),
    hadronFlavourHasPriority = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    jets = cms.InputTag("ak4PFJets"),
    leptons = cms.InputTag("selectedHadronsAndPartons","leptons"),
    partons = cms.InputTag("selectedHadronsAndPartons","physicsPartons"),
    rParam = cms.double(0.4)
)


process.ak4JetTracksAssociatorAtVertexPF = cms.EDProducer("JetTracksAssociatorAtVertex",
    coneSize = cms.double(0.4),
    jets = cms.InputTag("ak4PFJetsCHS"),
    pvSrc = cms.InputTag("offlinePrimaryVertices"),
    tracks = cms.InputTag("generalTracks"),
    useAssigned = cms.bool(False)
)


process.ak4L1JPTFastjetCorrector = cms.EDProducer("L1JPTOffsetCorrectorProducer",
    algorithm = cms.string('AK4JPT'),
    level = cms.string('L1JPTOffset'),
    offsetService = cms.InputTag("ak4CaloL1FastjetCorrector")
)


process.ak4L1JPTOffsetCorrector = cms.EDProducer("L1JPTOffsetCorrectorProducer",
    algorithm = cms.string('AK4JPT'),
    level = cms.string('L1JPTOffset'),
    offsetService = cms.InputTag("ak4CaloL1OffsetCorrector")
)


process.ak4PFCHSL1FastL2L3Corrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4PFCHSL1FastjetCorrector", "ak4PFCHSL2RelativeCorrector", "ak4PFCHSL3AbsoluteCorrector")
)


process.ak4PFCHSL1FastL2L3CorrectorNoHF = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag(cms.InputTag("ak4PFCHSL1FastjetCorrectorNoHF"), cms.InputTag("ak4PFCHSL2RelativeCorrectorNoHF"), cms.InputTag("ak4PFCHSL3AbsoluteCorrectorNoHF"))
)


process.ak4PFCHSL1FastL2L3CorrectorPuppi = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag(cms.InputTag("ak4PFCHSL1FastjetCorrectorPuppi"), cms.InputTag("ak4PFCHSL2RelativeCorrectorPuppi"), cms.InputTag("ak4PFCHSL3AbsoluteCorrectorPuppi"))
)


process.ak4PFCHSL1FastL2L3ResidualCorrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4PFCHSL1FastjetCorrector", "ak4PFCHSL2RelativeCorrector", "ak4PFCHSL3AbsoluteCorrector", "ak4PFCHSResidualCorrector")
)


process.ak4PFCHSL1FastL2L3ResidualCorrectorNoHF = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag(cms.InputTag("ak4PFCHSL1FastjetCorrectorNoHF"), cms.InputTag("ak4PFCHSL2RelativeCorrectorNoHF"), cms.InputTag("ak4PFCHSL3AbsoluteCorrectorNoHF"), cms.InputTag("ak4PFCHSResidualCorrectorNoHF"))
)


process.ak4PFCHSL1FastL2L3ResidualCorrectorPuppi = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag(cms.InputTag("ak4PFCHSL1FastjetCorrectorPuppi"), cms.InputTag("ak4PFCHSL2RelativeCorrectorPuppi"), cms.InputTag("ak4PFCHSL3AbsoluteCorrectorPuppi"), cms.InputTag("ak4PFCHSResidualCorrectorPuppi"))
)


process.ak4PFCHSL1FastjetCorrector = cms.EDProducer("L1FastjetCorrectorProducer",
    algorithm = cms.string('AK4PFchs'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak4PFCHSL1FastjetCorrectorNoHF = cms.EDProducer("L1FastjetCorrectorProducer",
    algorithm = cms.string('AK4PFchs'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak4PFCHSL1FastjetCorrectorPuppi = cms.EDProducer("L1FastjetCorrectorProducer",
    algorithm = cms.string('AK4PFchs'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak4PFCHSL1L2L3Corrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4PFCHSL1OffsetCorrector", "ak4PFCHSL2RelativeCorrector", "ak4PFCHSL3AbsoluteCorrector")
)


process.ak4PFCHSL1L2L3ResidualCorrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4PFCHSL1OffsetCorrector", "ak4PFCHSL2RelativeCorrector", "ak4PFCHSL3AbsoluteCorrector", "ak4PFCHSResidualCorrector")
)


process.ak4PFCHSL1OffsetCorrector = cms.EDProducer("L1OffsetCorrectorProducer",
    algorithm = cms.string('AK4PFchs'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.InputTag("offlinePrimaryVertices")
)


process.ak4PFCHSL2L3Corrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4PFCHSL2RelativeCorrector", "ak4PFCHSL3AbsoluteCorrector")
)


process.ak4PFCHSL2L3ResidualCorrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4PFCHSL2RelativeCorrector", "ak4PFCHSL3AbsoluteCorrector", "ak4PFCHSResidualCorrector")
)


process.ak4PFCHSL2RelativeCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4PFchs'),
    level = cms.string('L2Relative')
)


process.ak4PFCHSL2RelativeCorrectorNoHF = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4PFchs'),
    level = cms.string('L2Relative')
)


process.ak4PFCHSL2RelativeCorrectorPuppi = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4PFchs'),
    level = cms.string('L2Relative')
)


process.ak4PFCHSL3AbsoluteCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4PFchs'),
    level = cms.string('L3Absolute')
)


process.ak4PFCHSL3AbsoluteCorrectorNoHF = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4PFchs'),
    level = cms.string('L3Absolute')
)


process.ak4PFCHSL3AbsoluteCorrectorPuppi = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4PFchs'),
    level = cms.string('L3Absolute')
)


process.ak4PFCHSResidualCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4PFchs'),
    level = cms.string('L2L3Residual')
)


process.ak4PFCHSResidualCorrectorNoHF = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4PFchs'),
    level = cms.string('L2L3Residual')
)


process.ak4PFCHSResidualCorrectorPuppi = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4PFchs'),
    level = cms.string('L2L3Residual')
)


process.ak4PFJetTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    coneSize = cms.double(0.4),
    jets = cms.InputTag("ak4PFJets"),
    pvSrc = cms.InputTag("offlinePrimaryVertices"),
    tracks = cms.InputTag("generalTracks"),
    useAssigned = cms.bool(False)
)


process.ak4PFJetTracksAssociatorAtVertexBoosted = cms.EDProducer("JetTracksAssociatorAtVertex",
    coneSize = cms.double(0.4),
    jets = cms.InputTag("boostedTauSeeds"),
    pvSrc = cms.InputTag("offlinePrimaryVertices"),
    tracks = cms.InputTag("generalTracks"),
    useAssigned = cms.bool(False)
)


process.ak4PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(5.0),
    Rho_EtaMax = cms.double(4.4),
    applyWeight = cms.bool(False),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(5.0),
    jetType = cms.string('PFJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("particleFlow"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.ak4PFJetsCHS = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(5.0),
    Rho_EtaMax = cms.double(4.4),
    applyWeight = cms.bool(False),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(5.0),
    jetType = cms.string('PFJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("pfNoPileUpJME"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.ak4PFJetsCHSNoHF = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(5.0),
    Rho_EtaMax = cms.double(4.4),
    applyWeight = cms.bool(False),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(5.0),
    jetType = cms.string('PFJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("pfNoPileUpJMENoHF"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.ak4PFJetsCS = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(5.0),
    Rho_EtaMax = cms.double(4.4),
    applyWeight = cms.bool(False),
    csRParam = cms.double(0.4),
    csRho_EtaMax = cms.double(4.4),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(100.0),
    jetType = cms.string('PFJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("particleFlow"),
    srcPVs = cms.InputTag(""),
    useConstituentSubtraction = cms.bool(True),
    useDeterministicSeed = cms.bool(True),
    useExplicitGhosts = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.ak4PFJetsForFlow = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(5.0),
    Rho_EtaMax = cms.double(4.4),
    applyWeight = cms.bool(False),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(False),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(True),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(15.0),
    jetType = cms.string('BasicJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(25),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("hiPFCandCleanerforJets"),
    srcPVs = cms.InputTag(""),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.ak4PFJetsLegacyHPSPiZeros = cms.EDProducer("RecoTauPiZeroProducer",
    builders = cms.VPSet(cms.PSet(
        applyElecTrackQcuts = cms.bool(False),
        makeCombinatoricStrips = cms.bool(False),
        maxStripBuildIterations = cms.int32(-1),
        minGammaEtStripAdd = cms.double(1.0),
        minGammaEtStripSeed = cms.double(1.0),
        minStripEt = cms.double(1.0),
        name = cms.string('s'),
        plugin = cms.string('RecoTauPiZeroStripPlugin3'),
        qualityCuts = cms.PSet(
            isolationQualityCuts = cms.PSet(
                maxDeltaZ = cms.double(0.2),
                maxDeltaZToLeadTrack = cms.double(-1.0),
                maxTrackChi2 = cms.double(100.0),
                maxTransverseImpactParameter = cms.double(0.03),
                minGammaEt = cms.double(1.5),
                minTrackHits = cms.uint32(8),
                minTrackPixelHits = cms.uint32(0),
                minTrackPt = cms.double(1.0),
                minTrackVertexWeight = cms.double(-1.0)
            ),
            leadingTrkOrPFCandOption = cms.string('leadPFCand'),
            primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
            pvFindingAlgo = cms.string('closestInDeltaZ'),
            recoverLeadingTrk = cms.bool(False),
            signalQualityCuts = cms.PSet(
                maxDeltaZ = cms.double(0.4),
                maxDeltaZToLeadTrack = cms.double(-1.0),
                maxTrackChi2 = cms.double(100.0),
                maxTransverseImpactParameter = cms.double(0.1),
                minGammaEt = cms.double(1.0),
                minNeutralHadronEt = cms.double(30.0),
                minTrackHits = cms.uint32(3),
                minTrackPixelHits = cms.uint32(0),
                minTrackPt = cms.double(0.5),
                minTrackVertexWeight = cms.double(-1.0)
            ),
            vertexTrackFiltering = cms.bool(False),
            vxAssocQualityCuts = cms.PSet(
                maxTrackChi2 = cms.double(100.0),
                maxTransverseImpactParameter = cms.double(0.1),
                minGammaEt = cms.double(1.0),
                minTrackHits = cms.uint32(3),
                minTrackPixelHits = cms.uint32(0),
                minTrackPt = cms.double(0.5),
                minTrackVertexWeight = cms.double(-1.0)
            )
        ),
        stripCandidatesParticleIds = cms.vint32(2, 4),
        stripEtaAssociationDistance = cms.double(0.05),
        stripEtaAssociationDistanceFunc = cms.PSet(
            function = cms.string('TMath::Min(0.15, TMath::Max(0.05, [0]*TMath::Power(pT, -[1])))'),
            par0 = cms.double(0.197077),
            par1 = cms.double(0.658701)
        ),
        stripPhiAssociationDistance = cms.double(0.2),
        stripPhiAssociationDistanceFunc = cms.PSet(
            function = cms.string('TMath::Min(0.3, TMath::Max(0.05, [0]*TMath::Power(pT, -[1])))'),
            par0 = cms.double(0.352476),
            par1 = cms.double(0.707716)
        ),
        updateStripAfterEachDaughter = cms.bool(False),
        verbosity = cms.int32(0)
    )),
    jetSrc = cms.InputTag("ak4PFJets"),
    massHypothesis = cms.double(0.136),
    maxJetAbsEta = cms.double(2.7),
    mightGet = cms.optional.untracked.vstring,
    minJetPt = cms.double(14.0),
    outputSelection = cms.string('pt > 0'),
    ranking = cms.VPSet(cms.PSet(
        name = cms.string('InStrip'),
        plugin = cms.string('RecoTauPiZeroStringQuality'),
        selection = cms.string('algoIs("kStrips")'),
        selectionFailValue = cms.double(1000),
        selectionPassFunction = cms.string('abs(mass() - 0.13579)')
    )),
    verbosity = cms.int32(0)
)


process.ak4PFJetsLegacyHPSPiZerosBoosted = cms.EDProducer("RecoTauPiZeroProducer",
    builders = cms.VPSet(cms.PSet(
        applyElecTrackQcuts = cms.bool(False),
        makeCombinatoricStrips = cms.bool(False),
        maxStripBuildIterations = cms.int32(-1),
        minGammaEtStripAdd = cms.double(1.0),
        minGammaEtStripSeed = cms.double(1.0),
        minStripEt = cms.double(1.0),
        name = cms.string('s'),
        plugin = cms.string('RecoTauPiZeroStripPlugin3'),
        qualityCuts = cms.PSet(
            isolationQualityCuts = cms.PSet(
                maxDeltaZ = cms.double(0.2),
                maxDeltaZToLeadTrack = cms.double(-1.0),
                maxTrackChi2 = cms.double(100.0),
                maxTransverseImpactParameter = cms.double(0.03),
                minGammaEt = cms.double(1.5),
                minTrackHits = cms.uint32(8),
                minTrackPixelHits = cms.uint32(0),
                minTrackPt = cms.double(1.0),
                minTrackVertexWeight = cms.double(-1.0)
            ),
            leadingTrkOrPFCandOption = cms.string('leadPFCand'),
            primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
            pvFindingAlgo = cms.string('closestInDeltaZ'),
            recoverLeadingTrk = cms.bool(False),
            signalQualityCuts = cms.PSet(
                maxDeltaZ = cms.double(0.4),
                maxDeltaZToLeadTrack = cms.double(-1.0),
                maxTrackChi2 = cms.double(100.0),
                maxTransverseImpactParameter = cms.double(0.1),
                minGammaEt = cms.double(1.0),
                minNeutralHadronEt = cms.double(30.0),
                minTrackHits = cms.uint32(3),
                minTrackPixelHits = cms.uint32(0),
                minTrackPt = cms.double(0.5),
                minTrackVertexWeight = cms.double(-1.0)
            ),
            vertexTrackFiltering = cms.bool(False),
            vxAssocQualityCuts = cms.PSet(
                maxTrackChi2 = cms.double(100.0),
                maxTransverseImpactParameter = cms.double(0.1),
                minGammaEt = cms.double(1.0),
                minTrackHits = cms.uint32(3),
                minTrackPixelHits = cms.uint32(0),
                minTrackPt = cms.double(0.5),
                minTrackVertexWeight = cms.double(-1.0)
            )
        ),
        stripCandidatesParticleIds = cms.vint32(2, 4),
        stripEtaAssociationDistance = cms.double(0.05),
        stripEtaAssociationDistanceFunc = cms.PSet(
            function = cms.string('TMath::Min(0.15, TMath::Max(0.05, [0]*TMath::Power(pT, -[1])))'),
            par0 = cms.double(0.197077),
            par1 = cms.double(0.658701)
        ),
        stripPhiAssociationDistance = cms.double(0.2),
        stripPhiAssociationDistanceFunc = cms.PSet(
            function = cms.string('TMath::Min(0.3, TMath::Max(0.05, [0]*TMath::Power(pT, -[1])))'),
            par0 = cms.double(0.352476),
            par1 = cms.double(0.707716)
        ),
        updateStripAfterEachDaughter = cms.bool(False),
        verbosity = cms.int32(0)
    )),
    jetSrc = cms.InputTag("boostedTauSeeds"),
    massHypothesis = cms.double(0.136),
    maxJetAbsEta = cms.double(2.7),
    mightGet = cms.optional.untracked.vstring,
    minJetPt = cms.double(14.0),
    outputSelection = cms.string('pt > 0'),
    ranking = cms.VPSet(cms.PSet(
        name = cms.string('InStrip'),
        plugin = cms.string('RecoTauPiZeroStringQuality'),
        selection = cms.string('algoIs("kStrips")'),
        selectionFailValue = cms.double(1000),
        selectionPassFunction = cms.string('abs(mass() - 0.13579)')
    )),
    verbosity = cms.int32(0)
)


process.ak4PFJetsPuppi = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(5.0),
    Rho_EtaMax = cms.double(4.4),
    applyWeight = cms.bool(True),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(5.0),
    jetType = cms.string('PFJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("particleFlow"),
    srcPVs = cms.InputTag(""),
    srcWeights = cms.InputTag("puppi"),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.ak4PFJetsPuppiTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    coneSize = cms.double(0.4),
    jets = cms.InputTag("ak4PFJetsPuppi"),
    pvSrc = cms.InputTag("offlinePrimaryVertices"),
    tracks = cms.InputTag("generalTracks"),
    useAssigned = cms.bool(False)
)


process.ak4PFJetsRecoTauChargedHadrons = cms.EDProducer("PFRecoTauChargedHadronProducer",
    builders = cms.VPSet(
        cms.PSet(
            chargedHadronCandidatesParticleIds = cms.vint32(1, 2, 3),
            dRmergeNeutralHadronWrtChargedHadron = cms.double(0.005),
            dRmergeNeutralHadronWrtElectron = cms.double(0.05),
            dRmergeNeutralHadronWrtNeutralHadron = cms.double(0.01),
            dRmergeNeutralHadronWrtOther = cms.double(0.005),
            dRmergePhotonWrtChargedHadron = cms.double(0.005),
            dRmergePhotonWrtElectron = cms.double(0.005),
            dRmergePhotonWrtNeutralHadron = cms.double(0.01),
            dRmergePhotonWrtOther = cms.double(0.005),
            maxUnmatchedBlockElementsNeutralHadron = cms.int32(1),
            maxUnmatchedBlockElementsPhoton = cms.int32(1),
            minBlockElementMatchesNeutralHadron = cms.int32(2),
            minBlockElementMatchesPhoton = cms.int32(2),
            minMergeChargedHadronPt = cms.double(100.0),
            minMergeGammaEt = cms.double(1.0),
            minMergeNeutralHadronEt = cms.double(1.0),
            name = cms.string('chargedPFCandidates'),
            plugin = cms.string('PFRecoTauChargedHadronFromPFCandidatePlugin'),
            qualityCuts = cms.PSet(
                isolationQualityCuts = cms.PSet(
                    maxDeltaZ = cms.double(0.2),
                    maxDeltaZToLeadTrack = cms.double(-1.0),
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.03),
                    minGammaEt = cms.double(1.5),
                    minTrackHits = cms.uint32(8),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(1.0),
                    minTrackVertexWeight = cms.double(-1.0)
                ),
                leadingTrkOrPFCandOption = cms.string('leadPFCand'),
                primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
                pvFindingAlgo = cms.string('closestInDeltaZ'),
                recoverLeadingTrk = cms.bool(False),
                signalQualityCuts = cms.PSet(
                    maxDeltaZ = cms.double(0.4),
                    maxDeltaZToLeadTrack = cms.double(-1.0),
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.1),
                    minGammaEt = cms.double(1.0),
                    minNeutralHadronEt = cms.double(30.0),
                    minTrackHits = cms.uint32(3),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(0.5),
                    minTrackVertexWeight = cms.double(-1.0)
                ),
                vertexTrackFiltering = cms.bool(False),
                vxAssocQualityCuts = cms.PSet(
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.1),
                    minGammaEt = cms.double(1.0),
                    minTrackHits = cms.uint32(3),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(0.5),
                    minTrackVertexWeight = cms.double(-1.0)
                )
            ),
            verbosity = cms.int32(0)
        ),
        cms.PSet(
            dRcone = cms.double(0.5),
            dRconeLimitedToJetArea = cms.bool(False),
            dRmergeNeutralHadron = cms.double(0.1),
            dRmergePhoton = cms.double(0.05),
            minMergeChargedHadronPt = cms.double(100.0),
            minMergeGammaEt = cms.double(1.0),
            minMergeNeutralHadronEt = cms.double(1.0),
            name = cms.string('tracks'),
            plugin = cms.string('PFRecoTauChargedHadronFromTrackPlugin'),
            qualityCuts = cms.PSet(
                isolationQualityCuts = cms.PSet(
                    maxDeltaZ = cms.double(0.2),
                    maxDeltaZToLeadTrack = cms.double(-1.0),
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.03),
                    minGammaEt = cms.double(1.5),
                    minTrackHits = cms.uint32(8),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(1.0),
                    minTrackVertexWeight = cms.double(-1.0)
                ),
                leadingTrkOrPFCandOption = cms.string('leadPFCand'),
                primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
                pvFindingAlgo = cms.string('closestInDeltaZ'),
                recoverLeadingTrk = cms.bool(False),
                signalQualityCuts = cms.PSet(
                    maxDeltaZ = cms.double(0.4),
                    maxDeltaZToLeadTrack = cms.double(-1.0),
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.1),
                    minGammaEt = cms.double(1.0),
                    minNeutralHadronEt = cms.double(30.0),
                    minTrackHits = cms.uint32(3),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(0.5),
                    minTrackVertexWeight = cms.double(-1.0)
                ),
                vertexTrackFiltering = cms.bool(False),
                vxAssocQualityCuts = cms.PSet(
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.1),
                    minGammaEt = cms.double(1.0),
                    minTrackHits = cms.uint32(3),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(0.5),
                    minTrackVertexWeight = cms.double(-1.0)
                )
            ),
            srcTracks = cms.InputTag("generalTracks"),
            verbosity = cms.int32(0)
        ),
        cms.PSet(
            chargedHadronCandidatesParticleIds = cms.vint32(5),
            dRmergeNeutralHadronWrtChargedHadron = cms.double(0.005),
            dRmergeNeutralHadronWrtElectron = cms.double(0.05),
            dRmergeNeutralHadronWrtNeutralHadron = cms.double(0.01),
            dRmergeNeutralHadronWrtOther = cms.double(0.005),
            dRmergePhotonWrtChargedHadron = cms.double(0.005),
            dRmergePhotonWrtElectron = cms.double(0.005),
            dRmergePhotonWrtNeutralHadron = cms.double(0.01),
            dRmergePhotonWrtOther = cms.double(0.005),
            maxUnmatchedBlockElementsNeutralHadron = cms.int32(1),
            maxUnmatchedBlockElementsPhoton = cms.int32(1),
            minBlockElementMatchesNeutralHadron = cms.int32(2),
            minBlockElementMatchesPhoton = cms.int32(2),
            minMergeChargedHadronPt = cms.double(0.0),
            minMergeGammaEt = cms.double(1.0),
            minMergeNeutralHadronEt = cms.double(1.0),
            name = cms.string('PFNeutralHadrons'),
            plugin = cms.string('PFRecoTauChargedHadronFromPFCandidatePlugin'),
            qualityCuts = cms.PSet(
                isolationQualityCuts = cms.PSet(
                    maxDeltaZ = cms.double(0.2),
                    maxDeltaZToLeadTrack = cms.double(-1.0),
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.03),
                    minGammaEt = cms.double(1.5),
                    minTrackHits = cms.uint32(8),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(1.0),
                    minTrackVertexWeight = cms.double(-1.0)
                ),
                leadingTrkOrPFCandOption = cms.string('leadPFCand'),
                primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
                pvFindingAlgo = cms.string('closestInDeltaZ'),
                recoverLeadingTrk = cms.bool(False),
                signalQualityCuts = cms.PSet(
                    maxDeltaZ = cms.double(0.4),
                    maxDeltaZToLeadTrack = cms.double(-1.0),
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.1),
                    minGammaEt = cms.double(1.0),
                    minNeutralHadronEt = cms.double(30.0),
                    minTrackHits = cms.uint32(3),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(0.5),
                    minTrackVertexWeight = cms.double(-1.0)
                ),
                vertexTrackFiltering = cms.bool(False),
                vxAssocQualityCuts = cms.PSet(
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.1),
                    minGammaEt = cms.double(1.0),
                    minTrackHits = cms.uint32(3),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(0.5),
                    minTrackVertexWeight = cms.double(-1.0)
                )
            ),
            verbosity = cms.int32(0)
        )
    ),
    jetSrc = cms.InputTag("ak4PFJets"),
    maxJetAbsEta = cms.double(2.7),
    mightGet = cms.optional.untracked.vstring,
    minJetPt = cms.double(14.0),
    outputSelection = cms.string('pt > 0.5'),
    ranking = cms.VPSet(
        cms.PSet(
            name = cms.string('ChargedPFCandidate'),
            plugin = cms.string('PFRecoTauChargedHadronStringQuality'),
            selection = cms.string("algoIs(\'kChargedPFCandidate\')"),
            selectionFailValue = cms.double(1000.0),
            selectionPassFunction = cms.string('-pt')
        ),
        cms.PSet(
            name = cms.string('ChargedPFCandidate'),
            plugin = cms.string('PFRecoTauChargedHadronStringQuality'),
            selection = cms.string("algoIs(\'kTrack\')"),
            selectionFailValue = cms.double(1000.0),
            selectionPassFunction = cms.string('-pt')
        ),
        cms.PSet(
            name = cms.string('ChargedPFCandidate'),
            plugin = cms.string('PFRecoTauChargedHadronStringQuality'),
            selection = cms.string("algoIs(\'kPFNeutralHadron\')"),
            selectionFailValue = cms.double(1000.0),
            selectionPassFunction = cms.string('-pt')
        )
    ),
    verbosity = cms.int32(0)
)


process.ak4PFJetsRecoTauChargedHadronsBoosted = cms.EDProducer("PFRecoTauChargedHadronProducer",
    builders = cms.VPSet(
        cms.PSet(
            chargedHadronCandidatesParticleIds = cms.vint32(1, 2, 3),
            dRmergeNeutralHadronWrtChargedHadron = cms.double(0.005),
            dRmergeNeutralHadronWrtElectron = cms.double(0.05),
            dRmergeNeutralHadronWrtNeutralHadron = cms.double(0.01),
            dRmergeNeutralHadronWrtOther = cms.double(0.005),
            dRmergePhotonWrtChargedHadron = cms.double(0.005),
            dRmergePhotonWrtElectron = cms.double(0.005),
            dRmergePhotonWrtNeutralHadron = cms.double(0.01),
            dRmergePhotonWrtOther = cms.double(0.005),
            maxUnmatchedBlockElementsNeutralHadron = cms.int32(1),
            maxUnmatchedBlockElementsPhoton = cms.int32(1),
            minBlockElementMatchesNeutralHadron = cms.int32(2),
            minBlockElementMatchesPhoton = cms.int32(2),
            minMergeChargedHadronPt = cms.double(100.0),
            minMergeGammaEt = cms.double(1.0),
            minMergeNeutralHadronEt = cms.double(1.0),
            name = cms.string('chargedPFCandidates'),
            plugin = cms.string('PFRecoTauChargedHadronFromPFCandidatePlugin'),
            qualityCuts = cms.PSet(
                isolationQualityCuts = cms.PSet(
                    maxDeltaZ = cms.double(0.2),
                    maxDeltaZToLeadTrack = cms.double(-1.0),
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.03),
                    minGammaEt = cms.double(1.5),
                    minTrackHits = cms.uint32(8),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(1.0),
                    minTrackVertexWeight = cms.double(-1.0)
                ),
                leadingTrkOrPFCandOption = cms.string('leadPFCand'),
                primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
                pvFindingAlgo = cms.string('closestInDeltaZ'),
                recoverLeadingTrk = cms.bool(False),
                signalQualityCuts = cms.PSet(
                    maxDeltaZ = cms.double(0.4),
                    maxDeltaZToLeadTrack = cms.double(-1.0),
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.1),
                    minGammaEt = cms.double(1.0),
                    minNeutralHadronEt = cms.double(30.0),
                    minTrackHits = cms.uint32(3),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(0.5),
                    minTrackVertexWeight = cms.double(-1.0)
                ),
                vertexTrackFiltering = cms.bool(False),
                vxAssocQualityCuts = cms.PSet(
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.1),
                    minGammaEt = cms.double(1.0),
                    minTrackHits = cms.uint32(3),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(0.5),
                    minTrackVertexWeight = cms.double(-1.0)
                )
            ),
            verbosity = cms.int32(0)
        ),
        cms.PSet(
            dRcone = cms.double(0.3),
            dRconeLimitedToJetArea = cms.bool(True),
            dRmergeNeutralHadron = cms.double(0.1),
            dRmergePhoton = cms.double(0.05),
            minMergeChargedHadronPt = cms.double(100.0),
            minMergeGammaEt = cms.double(1.0),
            minMergeNeutralHadronEt = cms.double(1.0),
            name = cms.string('tracks'),
            plugin = cms.string('PFRecoTauChargedHadronFromTrackPlugin'),
            qualityCuts = cms.PSet(
                isolationQualityCuts = cms.PSet(
                    maxDeltaZ = cms.double(0.2),
                    maxDeltaZToLeadTrack = cms.double(-1.0),
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.03),
                    minGammaEt = cms.double(1.5),
                    minTrackHits = cms.uint32(8),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(1.0),
                    minTrackVertexWeight = cms.double(-1.0)
                ),
                leadingTrkOrPFCandOption = cms.string('leadPFCand'),
                primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
                pvFindingAlgo = cms.string('closestInDeltaZ'),
                recoverLeadingTrk = cms.bool(False),
                signalQualityCuts = cms.PSet(
                    maxDeltaZ = cms.double(0.4),
                    maxDeltaZToLeadTrack = cms.double(-1.0),
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.1),
                    minGammaEt = cms.double(1.0),
                    minNeutralHadronEt = cms.double(30.0),
                    minTrackHits = cms.uint32(3),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(0.5),
                    minTrackVertexWeight = cms.double(-1.0)
                ),
                vertexTrackFiltering = cms.bool(False),
                vxAssocQualityCuts = cms.PSet(
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.1),
                    minGammaEt = cms.double(1.0),
                    minTrackHits = cms.uint32(3),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(0.5),
                    minTrackVertexWeight = cms.double(-1.0)
                )
            ),
            srcTracks = cms.InputTag("generalTracks"),
            verbosity = cms.int32(0)
        ),
        cms.PSet(
            chargedHadronCandidatesParticleIds = cms.vint32(5),
            dRmergeNeutralHadronWrtChargedHadron = cms.double(0.005),
            dRmergeNeutralHadronWrtElectron = cms.double(0.05),
            dRmergeNeutralHadronWrtNeutralHadron = cms.double(0.01),
            dRmergeNeutralHadronWrtOther = cms.double(0.005),
            dRmergePhotonWrtChargedHadron = cms.double(0.005),
            dRmergePhotonWrtElectron = cms.double(0.005),
            dRmergePhotonWrtNeutralHadron = cms.double(0.01),
            dRmergePhotonWrtOther = cms.double(0.005),
            maxUnmatchedBlockElementsNeutralHadron = cms.int32(1),
            maxUnmatchedBlockElementsPhoton = cms.int32(1),
            minBlockElementMatchesNeutralHadron = cms.int32(2),
            minBlockElementMatchesPhoton = cms.int32(2),
            minMergeChargedHadronPt = cms.double(0.0),
            minMergeGammaEt = cms.double(1.0),
            minMergeNeutralHadronEt = cms.double(1.0),
            name = cms.string('PFNeutralHadrons'),
            plugin = cms.string('PFRecoTauChargedHadronFromPFCandidatePlugin'),
            qualityCuts = cms.PSet(
                isolationQualityCuts = cms.PSet(
                    maxDeltaZ = cms.double(0.2),
                    maxDeltaZToLeadTrack = cms.double(-1.0),
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.03),
                    minGammaEt = cms.double(1.5),
                    minTrackHits = cms.uint32(8),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(1.0),
                    minTrackVertexWeight = cms.double(-1.0)
                ),
                leadingTrkOrPFCandOption = cms.string('leadPFCand'),
                primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
                pvFindingAlgo = cms.string('closestInDeltaZ'),
                recoverLeadingTrk = cms.bool(False),
                signalQualityCuts = cms.PSet(
                    maxDeltaZ = cms.double(0.4),
                    maxDeltaZToLeadTrack = cms.double(-1.0),
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.1),
                    minGammaEt = cms.double(1.0),
                    minNeutralHadronEt = cms.double(30.0),
                    minTrackHits = cms.uint32(3),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(0.5),
                    minTrackVertexWeight = cms.double(-1.0)
                ),
                vertexTrackFiltering = cms.bool(False),
                vxAssocQualityCuts = cms.PSet(
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.1),
                    minGammaEt = cms.double(1.0),
                    minTrackHits = cms.uint32(3),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(0.5),
                    minTrackVertexWeight = cms.double(-1.0)
                )
            ),
            verbosity = cms.int32(0)
        )
    ),
    jetSrc = cms.InputTag("boostedTauSeeds"),
    maxJetAbsEta = cms.double(2.7),
    mightGet = cms.optional.untracked.vstring,
    minJetPt = cms.double(14.0),
    outputSelection = cms.string('pt > 0.5'),
    ranking = cms.VPSet(
        cms.PSet(
            name = cms.string('ChargedPFCandidate'),
            plugin = cms.string('PFRecoTauChargedHadronStringQuality'),
            selection = cms.string("algoIs(\'kChargedPFCandidate\')"),
            selectionFailValue = cms.double(1000.0),
            selectionPassFunction = cms.string('-pt')
        ),
        cms.PSet(
            name = cms.string('ChargedPFCandidate'),
            plugin = cms.string('PFRecoTauChargedHadronStringQuality'),
            selection = cms.string("algoIs(\'kTrack\')"),
            selectionFailValue = cms.double(1000.0),
            selectionPassFunction = cms.string('-pt')
        ),
        cms.PSet(
            name = cms.string('ChargedPFCandidate'),
            plugin = cms.string('PFRecoTauChargedHadronStringQuality'),
            selection = cms.string("algoIs(\'kPFNeutralHadron\')"),
            selectionFailValue = cms.double(1000.0),
            selectionPassFunction = cms.string('-pt')
        )
    ),
    verbosity = cms.int32(0)
)


process.ak4PFJetsSK = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(5.0),
    Rho_EtaMax = cms.double(4.4),
    applyWeight = cms.bool(False),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(5.0),
    jetType = cms.string('PFJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("softKiller"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True),
    useExplicitGhosts = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.ak4PFL1FastL2L3Corrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4PFL1FastjetCorrector", "ak4PFL2RelativeCorrector", "ak4PFL3AbsoluteCorrector")
)


process.ak4PFL1FastL2L3L6Corrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4PFL1FastjetCorrector", "ak4PFL2RelativeCorrector", "ak4PFL3AbsoluteCorrector", "ak4PFL6SLBCorrector")
)


process.ak4PFL1FastL2L3ResidualCorrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4PFL1FastjetCorrector", "ak4PFL2RelativeCorrector", "ak4PFL3AbsoluteCorrector", "ak4PFResidualCorrector")
)


process.ak4PFL1FastjetCorrector = cms.EDProducer("L1FastjetCorrectorProducer",
    algorithm = cms.string('AK4PF'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak4PFL1L2L3Corrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4PFL1OffsetCorrector", "ak4PFL2RelativeCorrector", "ak4PFL3AbsoluteCorrector")
)


process.ak4PFL1L2L3ResidualCorrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4PFL1OffsetCorrector", "ak4PFL2RelativeCorrector", "ak4PFL3AbsoluteCorrector", "ak4PFResidualCorrector")
)


process.ak4PFL1OffsetCorrector = cms.EDProducer("L1OffsetCorrectorProducer",
    algorithm = cms.string('AK4PF'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.InputTag("offlinePrimaryVertices")
)


process.ak4PFL2L3Corrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4PFL2RelativeCorrector", "ak4PFL3AbsoluteCorrector")
)


process.ak4PFL2L3L6Corrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4PFL2RelativeCorrector", "ak4PFL3AbsoluteCorrector", "ak4PFL6SLBCorrector")
)


process.ak4PFL2L3ResidualCorrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4PFL2RelativeCorrector", "ak4PFL3AbsoluteCorrector", "ak4PFResidualCorrector")
)


process.ak4PFL2RelativeCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4PF'),
    level = cms.string('L2Relative')
)


process.ak4PFL3AbsoluteCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4PF'),
    level = cms.string('L3Absolute')
)


process.ak4PFL6SLBCorrector = cms.EDProducer("L6SLBCorrectorProducer",
    addMuonToJet = cms.bool(False),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    srcBTagInfoElectron = cms.InputTag("ak4PFJetsSoftElectronTagInfos"),
    srcBTagInfoMuon = cms.InputTag("ak4PFJetsSoftMuonTagInfos")
)


process.ak4PFPuppiL1FastL2L3Corrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4PFPuppiL1FastjetCorrector", "ak4PFPuppiL2RelativeCorrector", "ak4PFPuppiL3AbsoluteCorrector")
)


process.ak4PFPuppiL1FastL2L3ResidualCorrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4PFPuppiL1FastjetCorrector", "ak4PFPuppiL2RelativeCorrector", "ak4PFPuppiL3AbsoluteCorrector", "ak4PFPuppiResidualCorrector")
)


process.ak4PFPuppiL1FastjetCorrector = cms.EDProducer("L1FastjetCorrectorProducer",
    algorithm = cms.string('AK4PFPuppi'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak4PFPuppiL1L2L3Corrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4PFPuppiL1OffsetCorrector", "ak4PFPuppiL2RelativeCorrector", "ak4PFPuppiL3AbsoluteCorrector")
)


process.ak4PFPuppiL1L2L3ResidualCorrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4PFPuppiL1OffsetCorrector", "ak4PFPuppiL2RelativeCorrector", "ak4PFPuppiL3AbsoluteCorrector", "ak4PFPuppiResidualCorrector")
)


process.ak4PFPuppiL1OffsetCorrector = cms.EDProducer("L1OffsetCorrectorProducer",
    algorithm = cms.string('AK4PFPuppi'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.InputTag("offlinePrimaryVertices")
)


process.ak4PFPuppiL2L3Corrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4PFPuppiL2RelativeCorrector", "ak4PFPuppiL3AbsoluteCorrector")
)


process.ak4PFPuppiL2L3ResidualCorrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4PFPuppiL2RelativeCorrector", "ak4PFPuppiL3AbsoluteCorrector", "ak4PFPuppiResidualCorrector")
)


process.ak4PFPuppiL2RelativeCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4PFPuppi'),
    level = cms.string('L2Relative')
)


process.ak4PFPuppiL3AbsoluteCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4PFPuppi'),
    level = cms.string('L3Absolute')
)


process.ak4PFPuppiResidualCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4PFPuppi'),
    level = cms.string('L2L3Residual')
)


process.ak4PFResidualCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4PF'),
    level = cms.string('L2L3Residual')
)


process.ak4TrackL2L3Corrector = cms.EDProducer("ChainedJetCorrectorProducer",
    correctors = cms.VInputTag("ak4TrackL2RelativeCorrector", "ak4TrackL3AbsoluteCorrector")
)


process.ak4TrackL2RelativeCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4TRK'),
    level = cms.string('L2Relative')
)


process.ak4TrackL3AbsoluteCorrector = cms.EDProducer("LXXXCorrectorProducer",
    algorithm = cms.string('AK4TRK'),
    level = cms.string('L3Absolute')
)


process.ak5JetExtender = cms.EDProducer("JetExtender",
    coneSize = cms.double(0.5),
    jet2TracksAtCALO = cms.InputTag("ak5JetTracksAssociatorAtCaloFace"),
    jet2TracksAtVX = cms.InputTag("ak5JetTracksAssociatorAtVertex"),
    jets = cms.InputTag("ak5CaloJets")
)


process.ak5JetTracksAssociatorAtCaloFace = cms.EDProducer("JetTracksAssociatorAtCaloFace",
    coneSize = cms.double(0.5),
    extrapolations = cms.InputTag("trackExtrapolator"),
    jets = cms.InputTag("ak5CaloJets"),
    trackQuality = cms.string('goodIterative'),
    tracks = cms.InputTag("generalTracks")
)


process.ak5JetTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    coneSize = cms.double(0.5),
    jets = cms.InputTag("ak5CaloJets"),
    pvSrc = cms.InputTag("offlinePrimaryVertices"),
    tracks = cms.InputTag("generalTracks"),
    useAssigned = cms.bool(False)
)


process.ak5JetTracksAssociatorAtVertexPF = cms.EDProducer("JetTracksAssociatorAtVertex",
    coneSize = cms.double(0.5),
    jets = cms.InputTag("ak5PFJetsCHS"),
    pvSrc = cms.InputTag("offlinePrimaryVertices"),
    tracks = cms.InputTag("generalTracks"),
    useAssigned = cms.bool(False)
)


process.ak5JetTracksAssociatorExplicit = cms.EDProducer("JetTracksAssociatorExplicit",
    coneSize = cms.double(0.5),
    jets = cms.InputTag("ak5PFJetsCHS"),
    pvSrc = cms.InputTag("offlinePrimaryVertices"),
    tracks = cms.InputTag("generalTracks"),
    useAssigned = cms.bool(False)
)


process.ak8GenJetsNoNuConstituents = cms.EDProducer("GenJetConstituentSelector",
    cut = cms.string('pt > 100.0'),
    src = cms.InputTag("ak8GenJetsNoNu")
)


process.ak8GenJetsNoNuSoftDrop = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    R0 = cms.double(0.8),
    Rho_EtaMax = cms.double(4.5),
    applyWeight = cms.bool(False),
    beta = cms.double(0.0),
    doAreaFastjet = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetCollInstanceName = cms.string('SubJets'),
    jetPtMin = cms.double(100.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.8),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("ak8GenJetsNoNuConstituents","constituents"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True),
    useExplicitGhosts = cms.bool(True),
    useSoftDrop = cms.bool(True),
    writeCompound = cms.bool(True),
    zcut = cms.double(0.1)
)


process.ak8PFJetsPuppi = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(5.0),
    Rho_EtaMax = cms.double(4.4),
    applyWeight = cms.bool(True),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(50.0),
    jetType = cms.string('PFJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.8),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("particleFlow"),
    srcPVs = cms.InputTag(""),
    srcWeights = cms.InputTag("puppi"),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.ak8PFJetsPuppiConstituents = cms.EDProducer("PFJetConstituentSelector",
    cut = cms.string('pt > 170.0 && abs(rapidity()) < 2.4'),
    src = cms.InputTag("ak8PFJetsPuppi")
)


process.ak8PFJetsPuppiSoftDrop = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(5.0),
    R0 = cms.double(0.8),
    Rho_EtaMax = cms.double(4.4),
    applyWeight = cms.bool(True),
    beta = cms.double(0.0),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetCollInstanceName = cms.string('SubJets'),
    jetPtMin = cms.double(100.0),
    jetType = cms.string('PFJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.8),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("ak8PFJetsPuppiConstituents","constituents"),
    srcPVs = cms.InputTag(""),
    srcWeights = cms.InputTag("puppi"),
    useDeterministicSeed = cms.bool(True),
    useExplicitGhosts = cms.bool(True),
    useSoftDrop = cms.bool(True),
    voronoiRfact = cms.double(-0.9),
    writeCompound = cms.bool(True),
    zcut = cms.double(0.1)
)


process.ak8PFJetsPuppiSoftDropMass = cms.EDProducer("RecoJetDeltaRValueMapProducer",
    distMax = cms.double(0.8),
    matched = cms.InputTag("ak8PFJetsPuppiSoftDrop"),
    src = cms.InputTag("ak8PFJetsPuppi"),
    value = cms.string('mass')
)


process.ak8PFJetsPuppiTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    coneSize = cms.double(0.8),
    jets = cms.InputTag("ak8PFJetsPuppi"),
    pvSrc = cms.InputTag("offlinePrimaryVertices"),
    tracks = cms.InputTag("generalTracks"),
    useAssigned = cms.bool(False)
)


process.akCs4PFJets = cms.EDProducer("CSJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.005),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.5),
    applyWeight = cms.bool(False),
    csAlpha = cms.double(2.0),
    csRParam = cms.double(-1.0),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(True),
    etaMap = cms.InputTag("hiPuRho","mapEtaEdges"),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetCollInstanceName = cms.string('pfParticlesCs'),
    jetPtMin = cms.double(0.0),
    jetType = cms.string('PFJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    rho = cms.InputTag("hiPuRho","mapToRho"),
    rhoFlowFitParams = cms.InputTag("hiFJRhoFlowModulation","rhoFlowFitParams"),
    rhom = cms.InputTag("hiPuRho","mapToRhoM"),
    src = cms.InputTag("particleFlow"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True),
    useExplicitGhosts = cms.bool(True),
    useModulatedRho = cms.bool(False),
    voronoiRfact = cms.double(-0.9),
    writeJetsWithConst = cms.bool(True)
)


process.allPartons = cms.EDProducer("PartonSelector",
    src = cms.InputTag("hiSignalGenParticles"),
    withLeptons = cms.bool(False)
)


process.basicJetsForMet = cms.EDProducer("PATJetCleanerForType1MET",
    jetCorrEtaMax = cms.double(9.9),
    jetCorrLabel = cms.InputTag("L3Absolute"),
    jetCorrLabelRes = cms.InputTag("L2L3Residual"),
    offsetCorrLabel = cms.InputTag("L1FastJet"),
    skipEM = cms.bool(True),
    skipEMfractionThreshold = cms.double(0.9),
    skipMuonSelection = cms.string('isGlobalMuon | isStandAloneMuon'),
    skipMuons = cms.bool(True),
    src = cms.InputTag("patJets"),
    type1JetPtThreshold = cms.double(15.0)
)


process.basicJetsForMetNoHF = cms.EDProducer("PATJetCleanerForType1MET",
    jetCorrEtaMax = cms.double(9.9),
    jetCorrLabel = cms.InputTag("L3Absolute"),
    jetCorrLabelRes = cms.InputTag("L2L3Residual"),
    offsetCorrLabel = cms.InputTag("L1FastJet"),
    skipEM = cms.bool(True),
    skipEMfractionThreshold = cms.double(0.9),
    skipMuonSelection = cms.string('isGlobalMuon | isStandAloneMuon'),
    skipMuons = cms.bool(True),
    src = cms.InputTag("patJetsNoHF"),
    type1JetPtThreshold = cms.double(15.0)
)


process.basicJetsForMetPuppi = cms.EDProducer("PATJetCleanerForType1MET",
    jetCorrEtaMax = cms.double(9.9),
    jetCorrLabel = cms.InputTag("L3Absolute"),
    jetCorrLabelRes = cms.InputTag("L2L3Residual"),
    offsetCorrLabel = cms.InputTag("L1FastJet"),
    skipEM = cms.bool(True),
    skipEMfractionThreshold = cms.double(0.9),
    skipMuonSelection = cms.string('isGlobalMuon | isStandAloneMuon'),
    skipMuons = cms.bool(True),
    src = cms.InputTag("patJetsPuppi"),
    type1JetPtThreshold = cms.double(15.0)
)


process.boostedTauSeeds = cms.EDProducer("BoostedTauSeedsProducer",
    pfCandidateSrc = cms.InputTag("particleFlow"),
    subjetSrc = cms.InputTag("ca8PFJetsCHSprunedForBoostedTaus","subJetsForSeedingBoostedTaus"),
    verbosity = cms.int32(0)
)


process.bunchSpacingProducer = cms.EDProducer("BunchSpacingProducer",
    bunchSpacingOverride = cms.uint32(25),
    mightGet = cms.optional.untracked.vstring,
    overrideBunchSpacing = cms.bool(False)
)


process.ca8PFJetsCHSprunedForBoostedTaus = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(5.0),
    Rho_EtaMax = cms.double(4.4),
    applyWeight = cms.bool(False),
    dRMax = cms.double(0.8),
    dRMin = cms.double(0.0),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('CambridgeAachen'),
    jetCollInstanceName = cms.string('subJetsForSeedingBoostedTaus'),
    jetPtMin = cms.double(100.0),
    jetType = cms.string('PFJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxDepth = cms.int32(100),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    muMax = cms.double(0.667),
    muMin = cms.double(0.0),
    nFilt = cms.int32(100),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.8),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("particleFlow"),
    srcPVs = cms.InputTag(""),
    subjetPtMin = cms.double(10.0),
    useCMSBoostedTauSeedingAlgorithm = cms.bool(True),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9),
    writeCompound = cms.bool(True),
    yMax = cms.double(1000000.0),
    yMin = cms.double(-1000000.0)
)


process.caloJetMap = cms.EDProducer("RecoJetDeltaRValueMapProducer",
    distMax = cms.double(0.4),
    lazyParser = cms.bool(True),
    matched = cms.InputTag("ak4CaloJets"),
    src = cms.InputTag("ak4PFJetsCHS"),
    valueLabels = cms.vstring(
        'pt',
        'emEnergyFraction'
    ),
    values = cms.vstring(
        'pt',
        'emEnergyFraction'
    )
)


process.caloMetT1 = cms.EDProducer("CorrectedCaloMETProducer",
    src = cms.InputTag("caloMetM"),
    srcCorrections = cms.VInputTag(cms.InputTag("corrCaloMetType1","type1"))
)


process.caloMetT1NoHF = cms.EDProducer("CorrectedCaloMETProducer",
    src = cms.InputTag("caloMetM"),
    srcCorrections = cms.VInputTag(cms.InputTag("corrCaloMetType1NoHF","type1"))
)


process.caloMetT1Puppi = cms.EDProducer("CorrectedCaloMETProducer",
    src = cms.InputTag("caloMetM"),
    srcCorrections = cms.VInputTag(cms.InputTag("corrCaloMetType1Puppi","type1"))
)


process.caloMetT1T2 = cms.EDProducer("CorrectedCaloMETProducer",
    src = cms.InputTag("caloMetM"),
    srcCorrections = cms.VInputTag(cms.InputTag("corrCaloMetType1","type1"), cms.InputTag("corrCaloMetType2"))
)


process.caloMetT1T2NoHF = cms.EDProducer("CorrectedCaloMETProducer",
    src = cms.InputTag("caloMetM"),
    srcCorrections = cms.VInputTag(cms.InputTag("corrCaloMetType1NoHF","type1"), cms.InputTag("corrCaloMetType2NoHF"))
)


process.caloMetT1T2Puppi = cms.EDProducer("CorrectedCaloMETProducer",
    src = cms.InputTag("caloMetM"),
    srcCorrections = cms.VInputTag(cms.InputTag("corrCaloMetType1Puppi","type1"), cms.InputTag("corrCaloMetType2Puppi"))
)


process.centralityBin = cms.EDProducer("CentralityBinProducer",
    Centrality = cms.InputTag("hiCentrality"),
    centralityVariable = cms.string('HFtowers'),
    nonDefaultGlauberModel = cms.string(''),
    pPbRunFlip = cms.uint32(99999999)
)


process.cleanedEcalDrivenGsfElectronsHGC = cms.EDProducer("HGCalElectronFilter",
    cleanBarrel = cms.bool(False),
    inputGsfElectrons = cms.InputTag("ecalDrivenGsfElectronsHGC"),
    mightGet = cms.optional.untracked.vstring,
    outputCollection = cms.string('')
)


process.cleanedParticleFlow = cms.EDProducer("HiBadParticleCleaner",
    PFCandidates = cms.InputTag("particleFlow"),
    maxSigLoose = cms.double(100.0),
    maxSigTight = cms.double(10.0),
    minCaloCompatibility = cms.double(0.35),
    minChargedHadronPt = cms.double(20.0),
    minMuonPt = cms.double(20.0),
    minMuonTrackRelErr = cms.double(2.0),
    minMuonTrackRelPtErr = cms.double(2.0),
    minPixelNHits = cms.uint32(3),
    minTrackNHits = cms.uint32(10),
    minTrackerLayersForMuonLoose = cms.int32(7),
    minTrackerLayersForMuonTight = cms.int32(10),
    offlinePV = cms.InputTag("offlinePrimaryVertices")
)


process.cleanedPartons = cms.EDProducer("HiPartonCleaner",
    createNewCollection = cms.untracked.bool(True),
    deltaR = cms.double(0.25),
    fillDummyEntries = cms.untracked.bool(True),
    ptCut = cms.double(20),
    src = cms.InputTag("allPartons")
)


process.cleanedPatJets = cms.EDProducer("PATJetCleaner",
    checkOverlaps = cms.PSet(
        electrons = cms.PSet(
            algorithm = cms.string('byDeltaR'),
            checkRecoComponents = cms.bool(False),
            deltaR = cms.double(0.5),
            pairCut = cms.string(''),
            preselection = cms.string(''),
            requireNoOverlaps = cms.bool(False),
            src = cms.InputTag("selectedPatElectrons")
        ),
        muons = cms.PSet(
            algorithm = cms.string('byDeltaR'),
            checkRecoComponents = cms.bool(False),
            deltaR = cms.double(0.5),
            pairCut = cms.string(''),
            preselection = cms.string(''),
            requireNoOverlaps = cms.bool(False),
            src = cms.InputTag("selectedPatMuons")
        )
    ),
    finalCut = cms.string(''),
    preselection = cms.string(''),
    src = cms.InputTag("jetSelectorForMet")
)


process.cleanedPatJetsNoHF = cms.EDProducer("PATJetCleaner",
    checkOverlaps = cms.PSet(
        electrons = cms.PSet(
            algorithm = cms.string('byDeltaR'),
            checkRecoComponents = cms.bool(False),
            deltaR = cms.double(0.5),
            pairCut = cms.string(''),
            preselection = cms.string(''),
            requireNoOverlaps = cms.bool(False),
            src = cms.InputTag("selectedPatElectrons")
        ),
        muons = cms.PSet(
            algorithm = cms.string('byDeltaR'),
            checkRecoComponents = cms.bool(False),
            deltaR = cms.double(0.5),
            pairCut = cms.string(''),
            preselection = cms.string(''),
            requireNoOverlaps = cms.bool(False),
            src = cms.InputTag("selectedPatMuons")
        )
    ),
    finalCut = cms.string(''),
    preselection = cms.string(''),
    src = cms.InputTag("jetSelectorForMetNoHF")
)


process.cleanedPatJetsPuppi = cms.EDProducer("PATJetCleaner",
    checkOverlaps = cms.PSet(
        electrons = cms.PSet(
            algorithm = cms.string('byDeltaR'),
            checkRecoComponents = cms.bool(False),
            deltaR = cms.double(0.5),
            pairCut = cms.string(''),
            preselection = cms.string(''),
            requireNoOverlaps = cms.bool(False),
            src = cms.InputTag("selectedPatElectrons")
        ),
        muons = cms.PSet(
            algorithm = cms.string('byDeltaR'),
            checkRecoComponents = cms.bool(False),
            deltaR = cms.double(0.5),
            pairCut = cms.string(''),
            preselection = cms.string(''),
            requireNoOverlaps = cms.bool(False),
            src = cms.InputTag("selectedPatMuons")
        )
    ),
    finalCut = cms.string(''),
    preselection = cms.string(''),
    src = cms.InputTag("jetSelectorForMetPuppi")
)


process.combinatoricRecoTaus = cms.EDProducer("RecoTauProducer",
    buildNullTaus = cms.bool(False),
    builders = cms.VPSet(cms.PSet(
        decayModes = cms.VPSet(
            cms.PSet(
                maxPiZeros = cms.uint32(0),
                maxTracks = cms.uint32(6),
                nCharged = cms.uint32(1),
                nPiZeros = cms.uint32(0)
            ),
            cms.PSet(
                maxPiZeros = cms.uint32(6),
                maxTracks = cms.uint32(6),
                nCharged = cms.uint32(1),
                nPiZeros = cms.uint32(1)
            ),
            cms.PSet(
                maxPiZeros = cms.uint32(5),
                maxTracks = cms.uint32(6),
                nCharged = cms.uint32(1),
                nPiZeros = cms.uint32(2)
            ),
            cms.PSet(
                maxPiZeros = cms.uint32(0),
                maxTracks = cms.uint32(6),
                nCharged = cms.uint32(2),
                nPiZeros = cms.uint32(0)
            ),
            cms.PSet(
                maxPiZeros = cms.uint32(3),
                maxTracks = cms.uint32(6),
                nCharged = cms.uint32(2),
                nPiZeros = cms.uint32(1)
            ),
            cms.PSet(
                maxPiZeros = cms.uint32(0),
                maxTracks = cms.uint32(6),
                nCharged = cms.uint32(3),
                nPiZeros = cms.uint32(0)
            ),
            cms.PSet(
                maxPiZeros = cms.uint32(3),
                maxTracks = cms.uint32(6),
                nCharged = cms.uint32(3),
                nPiZeros = cms.uint32(1)
            )
        ),
        isolationConeSize = cms.double(0.5),
        minAbsPhotonSumPt_insideSignalCone = cms.double(2.5),
        minAbsPhotonSumPt_outsideSignalCone = cms.double(1000000000.0),
        minRelPhotonSumPt_insideSignalCone = cms.double(0.1),
        minRelPhotonSumPt_outsideSignalCone = cms.double(1000000000.0),
        name = cms.string('combinatoric'),
        pfCandSrc = cms.InputTag("particleFlow"),
        plugin = cms.string('RecoTauBuilderCombinatoricPlugin'),
        qualityCuts = cms.PSet(
            isolationQualityCuts = cms.PSet(
                maxDeltaZ = cms.double(0.2),
                maxDeltaZToLeadTrack = cms.double(-1.0),
                maxTrackChi2 = cms.double(100.0),
                maxTransverseImpactParameter = cms.double(0.03),
                minGammaEt = cms.double(1.5),
                minTrackHits = cms.uint32(8),
                minTrackPixelHits = cms.uint32(0),
                minTrackPt = cms.double(1.0),
                minTrackVertexWeight = cms.double(-1.0)
            ),
            leadingTrkOrPFCandOption = cms.string('leadPFCand'),
            primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
            pvFindingAlgo = cms.string('closestInDeltaZ'),
            recoverLeadingTrk = cms.bool(False),
            signalQualityCuts = cms.PSet(
                maxDeltaZ = cms.double(0.4),
                maxDeltaZToLeadTrack = cms.double(-1.0),
                maxTrackChi2 = cms.double(100.0),
                maxTransverseImpactParameter = cms.double(0.1),
                minGammaEt = cms.double(1.0),
                minNeutralHadronEt = cms.double(30.0),
                minTrackHits = cms.uint32(3),
                minTrackPixelHits = cms.uint32(0),
                minTrackPt = cms.double(0.5),
                minTrackVertexWeight = cms.double(-1.0)
            ),
            vertexTrackFiltering = cms.bool(False),
            vxAssocQualityCuts = cms.PSet(
                maxTrackChi2 = cms.double(100.0),
                maxTransverseImpactParameter = cms.double(0.1),
                minGammaEt = cms.double(1.0),
                minTrackHits = cms.uint32(3),
                minTrackPixelHits = cms.uint32(0),
                minTrackPt = cms.double(0.5),
                minTrackVertexWeight = cms.double(-1.0)
            )
        ),
        signalConeSize = cms.string('max(min(0.1, 3.0/pt()), 0.05)'),
        verbosity = cms.int32(0)
    )),
    chargedHadronSrc = cms.InputTag("ak4PFJetsRecoTauChargedHadrons"),
    jetRegionSrc = cms.InputTag("recoTauAK4PFJets08Region"),
    jetSrc = cms.InputTag("ak4PFJets"),
    maxJetAbsEta = cms.double(2.7),
    minJetPt = cms.double(14.0),
    modifiers = cms.VPSet(
        cms.PSet(
            name = cms.string('sipt'),
            plugin = cms.string('RecoTauImpactParameterSignificancePlugin'),
            qualityCuts = cms.PSet(
                isolationQualityCuts = cms.PSet(
                    maxDeltaZ = cms.double(0.2),
                    maxDeltaZToLeadTrack = cms.double(-1.0),
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.03),
                    minGammaEt = cms.double(1.5),
                    minTrackHits = cms.uint32(8),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(1.0),
                    minTrackVertexWeight = cms.double(-1.0)
                ),
                leadingTrkOrPFCandOption = cms.string('leadPFCand'),
                primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
                pvFindingAlgo = cms.string('closestInDeltaZ'),
                recoverLeadingTrk = cms.bool(False),
                signalQualityCuts = cms.PSet(
                    maxDeltaZ = cms.double(0.4),
                    maxDeltaZToLeadTrack = cms.double(-1.0),
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.1),
                    minGammaEt = cms.double(1.0),
                    minNeutralHadronEt = cms.double(30.0),
                    minTrackHits = cms.uint32(3),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(0.5),
                    minTrackVertexWeight = cms.double(-1.0)
                ),
                vertexTrackFiltering = cms.bool(False),
                vxAssocQualityCuts = cms.PSet(
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.1),
                    minGammaEt = cms.double(1.0),
                    minTrackHits = cms.uint32(3),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(0.5),
                    minTrackVertexWeight = cms.double(-1.0)
                )
            )
        ),
        cms.PSet(
            DataType = cms.string('AOD'),
            EcalStripSumE_deltaEta = cms.double(0.03),
            EcalStripSumE_deltaPhiOverQ_maxValue = cms.double(0.5),
            EcalStripSumE_deltaPhiOverQ_minValue = cms.double(-0.1),
            EcalStripSumE_minClusEnergy = cms.double(0.1),
            ElecPreIDLeadTkMatch_maxDR = cms.double(0.01),
            ElectronPreIDProducer = cms.InputTag("elecpreid"),
            maximumForElectrionPreIDOutput = cms.double(-0.1),
            name = cms.string('elec_rej'),
            plugin = cms.string('RecoTauElectronRejectionPlugin')
        ),
        cms.PSet(
            dRaddNeutralHadron = cms.double(0.12),
            dRaddPhoton = cms.double(-1.0),
            minGammaEt = cms.double(10.0),
            minNeutralHadronEt = cms.double(50.0),
            name = cms.string('tau_en_reconstruction'),
            plugin = cms.string('PFRecoTauEnergyAlgorithmPlugin'),
            verbosity = cms.int32(0)
        ),
        cms.PSet(
            name = cms.string('tau_lost_tracks'),
            plugin = cms.string('PFRecoTauLostTrackPlugin'),
            trackSrc = cms.InputTag("generalTracks"),
            verbosity = cms.int32(0)
        ),
        cms.PSet(
            name = cms.string('tau_mass'),
            plugin = cms.string('PFRecoTauMassPlugin'),
            verbosity = cms.int32(0)
        ),
        cms.PSet(
            name = cms.string('TTIworkaround'),
            pfTauTagInfoSrc = cms.InputTag("pfRecoTauTagInfoProducer"),
            plugin = cms.string('RecoTauTagInfoWorkaroundModifer')
        )
    ),
    outputSelection = cms.string('leadChargedHadrCand().isNonnull()'),
    piZeroSrc = cms.InputTag("ak4PFJetsLegacyHPSPiZeros")
)


process.combinatoricRecoTausBoosted = cms.EDProducer("RecoTauProducer",
    buildNullTaus = cms.bool(False),
    builders = cms.VPSet(cms.PSet(
        decayModes = cms.VPSet(
            cms.PSet(
                maxPiZeros = cms.uint32(0),
                maxTracks = cms.uint32(6),
                nCharged = cms.uint32(1),
                nPiZeros = cms.uint32(0)
            ),
            cms.PSet(
                maxPiZeros = cms.uint32(6),
                maxTracks = cms.uint32(6),
                nCharged = cms.uint32(1),
                nPiZeros = cms.uint32(1)
            ),
            cms.PSet(
                maxPiZeros = cms.uint32(5),
                maxTracks = cms.uint32(6),
                nCharged = cms.uint32(1),
                nPiZeros = cms.uint32(2)
            ),
            cms.PSet(
                maxPiZeros = cms.uint32(0),
                maxTracks = cms.uint32(6),
                nCharged = cms.uint32(2),
                nPiZeros = cms.uint32(0)
            ),
            cms.PSet(
                maxPiZeros = cms.uint32(3),
                maxTracks = cms.uint32(6),
                nCharged = cms.uint32(2),
                nPiZeros = cms.uint32(1)
            ),
            cms.PSet(
                maxPiZeros = cms.uint32(0),
                maxTracks = cms.uint32(6),
                nCharged = cms.uint32(3),
                nPiZeros = cms.uint32(0)
            ),
            cms.PSet(
                maxPiZeros = cms.uint32(3),
                maxTracks = cms.uint32(6),
                nCharged = cms.uint32(3),
                nPiZeros = cms.uint32(1)
            )
        ),
        isolationConeSize = cms.double(0.5),
        minAbsPhotonSumPt_insideSignalCone = cms.double(2.5),
        minAbsPhotonSumPt_outsideSignalCone = cms.double(1000000000.0),
        minRelPhotonSumPt_insideSignalCone = cms.double(0.1),
        minRelPhotonSumPt_outsideSignalCone = cms.double(1000000000.0),
        name = cms.string('combinatoric'),
        pfCandSrc = cms.InputTag("particleFlow"),
        plugin = cms.string('RecoTauBuilderCombinatoricPlugin'),
        qualityCuts = cms.PSet(
            isolationQualityCuts = cms.PSet(
                maxDeltaZ = cms.double(0.2),
                maxDeltaZToLeadTrack = cms.double(-1.0),
                maxTrackChi2 = cms.double(100.0),
                maxTransverseImpactParameter = cms.double(0.03),
                minGammaEt = cms.double(1.5),
                minTrackHits = cms.uint32(8),
                minTrackPixelHits = cms.uint32(0),
                minTrackPt = cms.double(1.0),
                minTrackVertexWeight = cms.double(-1.0)
            ),
            leadingTrkOrPFCandOption = cms.string('leadPFCand'),
            primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
            pvFindingAlgo = cms.string('closestInDeltaZ'),
            recoverLeadingTrk = cms.bool(False),
            signalQualityCuts = cms.PSet(
                maxDeltaZ = cms.double(0.4),
                maxDeltaZToLeadTrack = cms.double(-1.0),
                maxTrackChi2 = cms.double(100.0),
                maxTransverseImpactParameter = cms.double(0.1),
                minGammaEt = cms.double(1.0),
                minNeutralHadronEt = cms.double(30.0),
                minTrackHits = cms.uint32(3),
                minTrackPixelHits = cms.uint32(0),
                minTrackPt = cms.double(0.5),
                minTrackVertexWeight = cms.double(-1.0)
            ),
            vertexTrackFiltering = cms.bool(False),
            vxAssocQualityCuts = cms.PSet(
                maxTrackChi2 = cms.double(100.0),
                maxTransverseImpactParameter = cms.double(0.1),
                minGammaEt = cms.double(1.0),
                minTrackHits = cms.uint32(3),
                minTrackPixelHits = cms.uint32(0),
                minTrackPt = cms.double(0.5),
                minTrackVertexWeight = cms.double(-1.0)
            )
        ),
        signalConeSize = cms.string('max(min(0.1, 3.0/pt()), 0.05)'),
        verbosity = cms.int32(0)
    )),
    chargedHadronSrc = cms.InputTag("ak4PFJetsRecoTauChargedHadronsBoosted"),
    jetRegionSrc = cms.InputTag("recoTauAK4PFJets08RegionBoosted"),
    jetSrc = cms.InputTag("boostedTauSeeds"),
    maxJetAbsEta = cms.double(2.7),
    minJetPt = cms.double(14.0),
    modifiers = cms.VPSet(
        cms.PSet(
            name = cms.string('sipt'),
            plugin = cms.string('RecoTauImpactParameterSignificancePlugin'),
            qualityCuts = cms.PSet(
                isolationQualityCuts = cms.PSet(
                    maxDeltaZ = cms.double(0.2),
                    maxDeltaZToLeadTrack = cms.double(-1.0),
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.03),
                    minGammaEt = cms.double(1.5),
                    minTrackHits = cms.uint32(8),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(1.0),
                    minTrackVertexWeight = cms.double(-1.0)
                ),
                leadingTrkOrPFCandOption = cms.string('leadPFCand'),
                primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
                pvFindingAlgo = cms.string('closestInDeltaZ'),
                recoverLeadingTrk = cms.bool(False),
                signalQualityCuts = cms.PSet(
                    maxDeltaZ = cms.double(0.4),
                    maxDeltaZToLeadTrack = cms.double(-1.0),
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.1),
                    minGammaEt = cms.double(1.0),
                    minNeutralHadronEt = cms.double(30.0),
                    minTrackHits = cms.uint32(3),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(0.5),
                    minTrackVertexWeight = cms.double(-1.0)
                ),
                vertexTrackFiltering = cms.bool(False),
                vxAssocQualityCuts = cms.PSet(
                    maxTrackChi2 = cms.double(100.0),
                    maxTransverseImpactParameter = cms.double(0.1),
                    minGammaEt = cms.double(1.0),
                    minTrackHits = cms.uint32(3),
                    minTrackPixelHits = cms.uint32(0),
                    minTrackPt = cms.double(0.5),
                    minTrackVertexWeight = cms.double(-1.0)
                )
            )
        ),
        cms.PSet(
            DataType = cms.string('AOD'),
            EcalStripSumE_deltaEta = cms.double(0.03),
            EcalStripSumE_deltaPhiOverQ_maxValue = cms.double(0.5),
            EcalStripSumE_deltaPhiOverQ_minValue = cms.double(-0.1),
            EcalStripSumE_minClusEnergy = cms.double(0.1),
            ElecPreIDLeadTkMatch_maxDR = cms.double(0.01),
            ElectronPreIDProducer = cms.InputTag("elecpreid"),
            maximumForElectrionPreIDOutput = cms.double(-0.1),
            name = cms.string('elec_rej'),
            plugin = cms.string('RecoTauElectronRejectionPlugin')
        ),
        cms.PSet(
            dRaddNeutralHadron = cms.double(0.12),
            dRaddPhoton = cms.double(-1.0),
            minGammaEt = cms.double(10.0),
            minNeutralHadronEt = cms.double(50.0),
            name = cms.string('tau_en_reconstruction'),
            plugin = cms.string('PFRecoTauEnergyAlgorithmPlugin'),
            verbosity = cms.int32(0)
        ),
        cms.PSet(
            name = cms.string('tau_lost_tracks'),
            plugin = cms.string('PFRecoTauLostTrackPlugin'),
            trackSrc = cms.InputTag("generalTracks"),
            verbosity = cms.int32(0)
        ),
        cms.PSet(
            name = cms.string('tau_mass'),
            plugin = cms.string('PFRecoTauMassPlugin'),
            verbosity = cms.int32(0)
        ),
        cms.PSet(
            name = cms.string('TTIworkaround'),
            pfTauTagInfoSrc = cms.InputTag("pfRecoTauTagInfoProducerBoosted"),
            plugin = cms.string('RecoTauTagInfoWorkaroundModifer')
        )
    ),
    outputSelection = cms.string('leadChargedHadrCand().isNonnull()'),
    piZeroSrc = cms.InputTag("ak4PFJetsLegacyHPSPiZerosBoosted")
)


process.combinedSecondaryVertexV2BJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('combinedSecondaryVertexV2Computer'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"), cms.InputTag("secondaryVertexTagInfos"))
)


process.corrCaloMetType1 = cms.EDProducer("CaloJetMETcorrInputProducer",
    jetCorrEtaMax = cms.double(9.9),
    jetCorrLabel = cms.InputTag("ak4CaloL2L3Corrector"),
    skipEM = cms.bool(True),
    skipEMfractionThreshold = cms.double(0.9),
    src = cms.InputTag("ak4CaloJets"),
    srcMET = cms.InputTag("caloMetM"),
    type1JetPtThreshold = cms.double(20.0)
)


process.corrCaloMetType1NoHF = cms.EDProducer("CaloJetMETcorrInputProducer",
    jetCorrEtaMax = cms.double(9.9),
    jetCorrLabel = cms.InputTag("ak4CaloL2L3CorrectorNoHF"),
    skipEM = cms.bool(True),
    skipEMfractionThreshold = cms.double(0.9),
    src = cms.InputTag("ak4CaloJets"),
    srcMET = cms.InputTag("caloMetM"),
    type1JetPtThreshold = cms.double(20.0)
)


process.corrCaloMetType1Puppi = cms.EDProducer("CaloJetMETcorrInputProducer",
    jetCorrEtaMax = cms.double(9.9),
    jetCorrLabel = cms.InputTag("ak4CaloL2L3CorrectorPuppi"),
    skipEM = cms.bool(True),
    skipEMfractionThreshold = cms.double(0.9),
    src = cms.InputTag("ak4CaloJets"),
    srcMET = cms.InputTag("caloMetM"),
    type1JetPtThreshold = cms.double(20.0)
)


process.corrCaloMetType2 = cms.EDProducer("Type2CorrectionProducer",
    srcUnclEnergySums = cms.VInputTag(cms.InputTag("corrCaloMetType1","type2"), cms.InputTag("muCaloMetCorr")),
    type2CorrFormula = cms.string('A + B*TMath::Exp(-C*x)'),
    type2CorrParameter = cms.PSet(
        A = cms.double(2.0),
        B = cms.double(1.3),
        C = cms.double(0.1)
    )
)


process.corrCaloMetType2NoHF = cms.EDProducer("Type2CorrectionProducer",
    srcUnclEnergySums = cms.VInputTag(cms.InputTag("corrCaloMetType1NoHF","type2"), cms.InputTag("muCaloMetCorrNoHF")),
    type2CorrFormula = cms.string('A + B*TMath::Exp(-C*x)'),
    type2CorrParameter = cms.PSet(
        A = cms.double(2.0),
        B = cms.double(1.3),
        C = cms.double(0.1)
    )
)


process.corrCaloMetType2Puppi = cms.EDProducer("Type2CorrectionProducer",
    srcUnclEnergySums = cms.VInputTag(cms.InputTag("corrCaloMetType1Puppi","type2"), cms.InputTag("muCaloMetCorrPuppi")),
    type2CorrFormula = cms.string('A + B*TMath::Exp(-C*x)'),
    type2CorrParameter = cms.PSet(
        A = cms.double(2.0),
        B = cms.double(1.3),
        C = cms.double(0.1)
    )
)


process.corrPfMetType1 = cms.EDProducer("PFJetMETcorrInputProducer",
    jetCorrEtaMax = cms.double(9.9),
    jetCorrLabel = cms.InputTag("ak4PFCHSL1FastL2L3Corrector"),
    jetCorrLabelRes = cms.InputTag("ak4PFCHSL1FastL2L3ResidualCorrector"),
    offsetCorrLabel = cms.InputTag("ak4PFCHSL1FastjetCorrector"),
    skipEM = cms.bool(True),
    skipEMfractionThreshold = cms.double(0.9),
    skipMuonSelection = cms.string('isGlobalMuon | isStandAloneMuon'),
    skipMuons = cms.bool(True),
    src = cms.InputTag("ak4PFJetsCHS"),
    type1JetPtThreshold = cms.double(15.0)
)


process.corrPfMetType1NoHF = cms.EDProducer("PFJetMETcorrInputProducer",
    jetCorrEtaMax = cms.double(9.9),
    jetCorrLabel = cms.InputTag("ak4PFCHSL1FastL2L3CorrectorNoHF"),
    jetCorrLabelRes = cms.InputTag("ak4PFCHSL1FastL2L3ResidualCorrectorNoHF"),
    offsetCorrLabel = cms.InputTag("ak4PFCHSL1FastjetCorrectorNoHF"),
    skipEM = cms.bool(True),
    skipEMfractionThreshold = cms.double(0.9),
    skipMuonSelection = cms.string('isGlobalMuon | isStandAloneMuon'),
    skipMuons = cms.bool(True),
    src = cms.InputTag("ak4PFJetsCHSNoHF"),
    type1JetPtThreshold = cms.double(15.0)
)


process.corrPfMetType1Puppi = cms.EDProducer("PFJetMETcorrInputProducer",
    jetCorrEtaMax = cms.double(9.9),
    jetCorrLabel = cms.InputTag("ak4PFPuppiL1FastL2L3Corrector"),
    jetCorrLabelRes = cms.InputTag("ak4PFPuppiL1FastL2L3ResidualCorrector"),
    offsetCorrLabel = cms.InputTag("ak4PFPuppiL1FastjetCorrector"),
    skipEM = cms.bool(True),
    skipEMfractionThreshold = cms.double(0.9),
    skipMuonSelection = cms.string('isGlobalMuon | isStandAloneMuon'),
    skipMuons = cms.bool(True),
    src = cms.InputTag("ak4PFJetsPuppi"),
    type1JetPtThreshold = cms.double(15.0)
)


process.corrPfMetType2 = cms.EDProducer("Type2CorrectionProducer",
    srcUnclEnergySums = cms.VInputTag(cms.InputTag("corrPfMetType1","type2"), cms.InputTag("corrPfMetType1","offset"), cms.InputTag("pfCandMETcorr")),
    type2CorrFormula = cms.string('A'),
    type2CorrParameter = cms.PSet(
        A = cms.double(1.4)
    )
)


process.corrPfMetType2NoHF = cms.EDProducer("Type2CorrectionProducer",
    srcUnclEnergySums = cms.VInputTag(cms.InputTag("corrPfMetType1NoHF","type2"), cms.InputTag("corrPfMetType1NoHF","offset"), cms.InputTag("pfCandMETcorrNoHF")),
    type2CorrFormula = cms.string('A'),
    type2CorrParameter = cms.PSet(
        A = cms.double(1.4)
    )
)


process.corrPfMetType2Puppi = cms.EDProducer("Type2CorrectionProducer",
    srcUnclEnergySums = cms.VInputTag(cms.InputTag("corrPfMetType1Puppi","type2"), cms.InputTag("corrPfMetType1Puppi","offset"), cms.InputTag("pfCandMETcorrPuppi")),
    type2CorrFormula = cms.string('A'),
    type2CorrParameter = cms.PSet(
        A = cms.double(1.4)
    )
)


process.deepMETsResolutionTune = cms.EDProducer("DeepMETProducer",
    graph_path = cms.string('RecoMET/METPUSubtraction/data/models/deepmet/deepmet_v1_2018/model.graphdef'),
    ignore_leptons = cms.bool(False),
    max_n_pf = cms.uint32(4500),
    mightGet = cms.optional.untracked.vstring,
    norm_factor = cms.double(50),
    pf_src = cms.InputTag("packedPFCandidates")
)


process.deepMETsResponseTune = cms.EDProducer("DeepMETProducer",
    graph_path = cms.string('RecoMET/METPUSubtraction/data/models/deepmet/deepmet_resp_v1_2018/model.graphdef'),
    ignore_leptons = cms.bool(False),
    max_n_pf = cms.uint32(4500),
    mightGet = cms.optional.untracked.vstring,
    norm_factor = cms.double(50),
    pf_src = cms.InputTag("packedPFCandidates")
)


process.deepTau2017v2p1ForMini = cms.EDProducer("DeepTauId",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    VSeWP = cms.vstring(
        '0.0630386',
        '0.1686942',
        '0.362813',
        '0.6815435',
        '0.8847544',
        '0.9675541',
        '0.9859251',
        '0.9928449'
    ),
    VSjetWP = cms.vstring(
        '0.2599605',
        '0.4249705',
        '0.5983682',
        '0.7848675',
        '0.8834768',
        '0.9308689',
        '0.9573137',
        '0.9733927'
    ),
    VSmuWP = cms.vstring(
        '0.1058354',
        '0.2158633',
        '0.5551894',
        '0.8754835'
    ),
    basicTauDiscriminators = cms.untracked.InputTag("basicTauDiscriminators"),
    basicTauDiscriminatorsdR03 = cms.untracked.InputTag("basicTauDiscriminatorsdR03"),
    debug_level = cms.int32(0),
    disable_CellIndex_workaround = cms.bool(False),
    disable_dxy_pca = cms.bool(True),
    disable_hcalFraction_workaround = cms.bool(False),
    electrons = cms.InputTag("slimmedElectrons"),
    graph_file = cms.vstring(
        'core:RecoTauTag/TrainingFiles/data/DeepTauId/deepTau_2017v2p6_e6_core.pb',
        'inner:RecoTauTag/TrainingFiles/data/DeepTauId/deepTau_2017v2p6_e6_inner.pb',
        'outer:RecoTauTag/TrainingFiles/data/DeepTauId/deepTau_2017v2p6_e6_outer.pb'
    ),
    is_online = cms.bool(False),
    mem_mapped = cms.bool(False),
    mightGet = cms.optional.untracked.vstring,
    muons = cms.InputTag("slimmedMuons"),
    pfTauTransverseImpactParameters = cms.InputTag("hpsPFTauTransverseImpactParameters"),
    pfcands = cms.InputTag("packedPFCandidates"),
    rho = cms.InputTag("fixedGridRhoAll"),
    save_inputs = cms.bool(False),
    sub_version = cms.uint32(1),
    taus = cms.InputTag("slimmedTausNoDeepIDs"),
    version = cms.uint32(2),
    vertices = cms.InputTag("offlineSlimmedPrimaryVertices"),
    year = cms.uint32(2017)
)


process.deepTau2018v2p5ForMini = cms.EDProducer("DeepTauId",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    VSeWP = cms.vstring(
        '0.099',
        '0.2384',
        '0.4136',
        '0.688',
        '0.8704',
        '0.9669',
        '0.9882',
        '0.9951'
    ),
    VSjetWP = cms.vstring(
        '0.4083',
        '0.6285',
        '0.8052',
        '0.9233',
        '0.9632',
        '0.9799',
        '0.9884',
        '0.9931'
    ),
    VSmuWP = cms.vstring(
        '0.2949',
        '0.4746',
        '0.7454',
        '0.9172'
    ),
    basicTauDiscriminators = cms.untracked.InputTag("basicTauDiscriminators"),
    basicTauDiscriminatorsdR03 = cms.untracked.InputTag("basicTauDiscriminatorsdR03"),
    debug_level = cms.int32(0),
    disable_CellIndex_workaround = cms.bool(True),
    disable_dxy_pca = cms.bool(True),
    disable_hcalFraction_workaround = cms.bool(True),
    electrons = cms.InputTag("slimmedElectrons"),
    graph_file = cms.vstring(
        'core:RecoTauTag/TrainingFiles/data/DeepTauId/deepTau_2018v2p5_core.pb',
        'inner:RecoTauTag/TrainingFiles/data/DeepTauId/deepTau_2018v2p5_inner.pb',
        'outer:RecoTauTag/TrainingFiles/data/DeepTauId/deepTau_2018v2p5_outer.pb'
    ),
    is_online = cms.bool(False),
    mem_mapped = cms.bool(False),
    mightGet = cms.optional.untracked.vstring,
    muons = cms.InputTag("slimmedMuons"),
    pfTauTransverseImpactParameters = cms.InputTag("hpsPFTauTransverseImpactParameters"),
    pfcands = cms.InputTag("packedPFCandidates"),
    rho = cms.InputTag("fixedGridRhoAll"),
    save_inputs = cms.bool(False),
    sub_version = cms.uint32(5),
    taus = cms.InputTag("slimmedTausNoDeepIDs"),
    version = cms.uint32(2),
    vertices = cms.InputTag("offlineSlimmedPrimaryVertices"),
    year = cms.uint32(2018)
)


process.discriminationByIsolationMVArun2v1 = cms.EDProducer("RecoTauDiscriminantCutMultiplexer",
    PFTauProducer = cms.InputTag("pfTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding"),
            cut = cms.double(0.5)
        )
    ),
    inputFileName = cms.FileInPath('RecoTauTag/RecoTau/data/emptyMVAinputFile'),
    loadMVAfromDB = cms.bool(True),
    mapping = cms.VPSet(cms.PSet(
        category = cms.uint32(0),
        cut = cms.string('newDMwLT'),
        variable = cms.string('pt')
    )),
    mightGet = cms.optional.untracked.vstring,
    mvaOutput_normalization = cms.string(''),
    rawValues = cms.vstring('discriminator'),
    toMultiplex = cms.InputTag("discriminationByIsolationMVArun2v1raw"),
    verbosity = cms.int32(0),
    workingPoints = cms.vstring(
        'Eff80',
        'Eff70',
        'Eff60',
        'Eff50',
        'Eff40'
    )
)


process.discriminationByIsolationMVArun2v1raw = cms.EDProducer("PFRecoTauDiscriminationByMVAIsolationRun2",
    PFTauProducer = cms.InputTag("pfTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding"),
            cut = cms.double(0.5)
        )
    ),
    inputFileName = cms.optional.FileInPath,
    inputIDNameSuffix = cms.string(''),
    loadMVAfromDB = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    mvaName = cms.string('tauIdMVAnewDMwLT'),
    mvaOpt = cms.string('newDMwLT'),
    srcBasicTauDiscriminators = cms.InputTag("hpsPFTauBasicDiscriminators"),
    srcTauTransverseImpactParameters = cms.InputTag(""),
    verbosity = cms.int32(0)
)


process.displacedMuonReducedTrackExtras = cms.EDProducer("MuonReducedTrackExtraProducer",
    cut = cms.string('pt > 3.0'),
    mightGet = cms.optional.untracked.vstring,
    muonTag = cms.InputTag("displacedMuons"),
    outputClusters = cms.bool(True),
    pixelClusterTag = cms.InputTag("siPixelClusters"),
    stripClusterTag = cms.InputTag("siStripClusters"),
    trackExtraAssocs = cms.VInputTag(),
    trackExtraTags = cms.VInputTag("displacedTracks", "displacedGlobalMuons")
)


process.ecf = cms.EDProducer("ECFAdder",
    Njets = cms.vuint32(1, 2, 3),
    alpha = cms.double(1),
    beta = cms.double(1),
    cuts = cms.vstring(
        '',
        '',
        ''
    ),
    ecftype = cms.string('ECF'),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("ak8PFJetsPuppi"),
    srcWeights = cms.InputTag("puppi")
)


process.ecfCbeta1 = cms.EDProducer("ECFAdder",
    Njets = cms.vuint32(1, 2, 3),
    alpha = cms.double(1),
    beta = cms.double(1),
    cuts = cms.vstring(
        '',
        '',
        ''
    ),
    ecftype = cms.string('C'),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("ak8PFJetsPuppi"),
    srcWeights = cms.InputTag("puppi")
)


process.ecfCbeta2 = cms.EDProducer("ECFAdder",
    Njets = cms.vuint32(1, 2, 3),
    alpha = cms.double(2.0),
    beta = cms.double(2.0),
    cuts = cms.vstring(
        '',
        '',
        ''
    ),
    ecftype = cms.string('C'),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("ak8PFJetsPuppi"),
    srcWeights = cms.InputTag("puppi")
)


process.ecfDbeta1 = cms.EDProducer("ECFAdder",
    Njets = cms.vuint32(2),
    alpha = cms.double(1),
    beta = cms.double(1),
    cuts = cms.vstring(
        '',
        '',
        ''
    ),
    ecftype = cms.string('D'),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("ak8PFJetsPuppi"),
    srcWeights = cms.InputTag("puppi")
)


process.ecfDbeta2 = cms.EDProducer("ECFAdder",
    Njets = cms.vuint32(2),
    alpha = cms.double(2.0),
    beta = cms.double(2.0),
    cuts = cms.vstring(
        '',
        '',
        ''
    ),
    ecftype = cms.string('D'),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("ak8PFJetsPuppi"),
    srcWeights = cms.InputTag("puppi")
)


process.ecfMbeta1 = cms.EDProducer("ECFAdder",
    Njets = cms.vuint32(1, 2, 3),
    alpha = cms.double(1),
    beta = cms.double(1),
    cuts = cms.vstring(
        '',
        '',
        ''
    ),
    ecftype = cms.string('M'),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("ak8PFJetsPuppi"),
    srcWeights = cms.InputTag("puppi")
)


process.ecfMbeta2 = cms.EDProducer("ECFAdder",
    Njets = cms.vuint32(1, 2, 3),
    alpha = cms.double(2.0),
    beta = cms.double(2.0),
    cuts = cms.vstring(
        '',
        '',
        ''
    ),
    ecftype = cms.string('M'),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("ak8PFJetsPuppi"),
    srcWeights = cms.InputTag("puppi")
)


process.ecfNbeta1 = cms.EDProducer("ECFAdder",
    Njets = cms.vuint32(1, 2, 3),
    alpha = cms.double(1),
    beta = cms.double(1),
    cuts = cms.vstring(
        '',
        '',
        ''
    ),
    ecftype = cms.string('N'),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("ak8PFJetsPuppi"),
    srcWeights = cms.InputTag("puppi")
)


process.ecfNbeta2 = cms.EDProducer("ECFAdder",
    Njets = cms.vuint32(1, 2, 3),
    alpha = cms.double(2.0),
    beta = cms.double(2.0),
    cuts = cms.vstring(
        '',
        '',
        ''
    ),
    ecftype = cms.string('N'),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("ak8PFJetsPuppi"),
    srcWeights = cms.InputTag("puppi")
)


process.ecfUbeta1 = cms.EDProducer("ECFAdder",
    Njets = cms.vuint32(1, 2, 3),
    alpha = cms.double(1),
    beta = cms.double(1),
    cuts = cms.vstring(
        '',
        '',
        ''
    ),
    ecftype = cms.string('U'),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("ak8PFJetsPuppi"),
    srcWeights = cms.InputTag("puppi")
)


process.ecfUbeta2 = cms.EDProducer("ECFAdder",
    Njets = cms.vuint32(1, 2, 3),
    alpha = cms.double(2.0),
    beta = cms.double(2.0),
    cuts = cms.vstring(
        '',
        '',
        ''
    ),
    ecftype = cms.string('U'),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("ak8PFJetsPuppi"),
    srcWeights = cms.InputTag("puppi")
)


process.egmElectronPUPPIIsolation = cms.EDProducer("CITKPFIsolationSumProducerForPUPPI",
    isolationConeDefinitions = cms.VPSet(
        cms.PSet(
            VetoConeSizeBarrel = cms.double(0.0),
            VetoConeSizeEndcaps = cms.double(0.015),
            coneSize = cms.double(0.3),
            isolateAgainst = cms.string('h+'),
            isolationAlgo = cms.string('ElectronPFIsolationWithConeVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3)
        ),
        cms.PSet(
            VetoConeSizeBarrel = cms.double(0.0),
            VetoConeSizeEndcaps = cms.double(0.0),
            coneSize = cms.double(0.3),
            isolateAgainst = cms.string('h0'),
            isolationAlgo = cms.string('ElectronPFIsolationWithConeVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3)
        ),
        cms.PSet(
            VetoConeSizeBarrel = cms.double(0.0),
            VetoConeSizeEndcaps = cms.double(0.08),
            coneSize = cms.double(0.3),
            isolateAgainst = cms.string('gamma'),
            isolationAlgo = cms.string('ElectronPFIsolationWithConeVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3)
        )
    ),
    mightGet = cms.optional.untracked.vstring,
    puppiValueMap = cms.InputTag(""),
    srcForIsolationCone = cms.InputTag("packedPFCandidates"),
    srcToIsolate = cms.InputTag("reducedEgamma","reducedGedGsfElectrons"),
    usePUPPINoLepton = cms.bool(False)
)


process.egmElectronPUPPINoLeptonsIsolation = cms.EDProducer("CITKPFIsolationSumProducerForPUPPI",
    isolationConeDefinitions = cms.VPSet(
        cms.PSet(
            VetoConeSizeBarrel = cms.double(0.0),
            VetoConeSizeEndcaps = cms.double(0.015),
            coneSize = cms.double(0.3),
            isolateAgainst = cms.string('h+'),
            isolationAlgo = cms.string('ElectronPFIsolationWithConeVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3)
        ),
        cms.PSet(
            VetoConeSizeBarrel = cms.double(0.0),
            VetoConeSizeEndcaps = cms.double(0.0),
            coneSize = cms.double(0.3),
            isolateAgainst = cms.string('h0'),
            isolationAlgo = cms.string('ElectronPFIsolationWithConeVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3)
        ),
        cms.PSet(
            VetoConeSizeBarrel = cms.double(0.0),
            VetoConeSizeEndcaps = cms.double(0.08),
            coneSize = cms.double(0.3),
            isolateAgainst = cms.string('gamma'),
            isolationAlgo = cms.string('ElectronPFIsolationWithConeVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3)
        )
    ),
    mightGet = cms.optional.untracked.vstring,
    puppiValueMap = cms.InputTag(""),
    srcForIsolationCone = cms.InputTag("packedPFCandidates"),
    srcToIsolate = cms.InputTag("reducedEgamma","reducedGedGsfElectrons"),
    usePUPPINoLepton = cms.bool(True)
)


process.egmGsfElectronIDs = cms.EDProducer("VersionedGsfElectronIdProducer",
    physicsObjectIDs = cms.VPSet(
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(35.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.4442),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.566)
                            )
                        ),
                        cutName = cms.string('GsfEleSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(deltaEtaSeedClusterTrackAtVtx)'),
                        cutValueEB = cms.double(0.004),
                        cutValueEE = cms.double(0.006),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(deltaPhiSuperClusterTrackAtVtx)'),
                        cutValueEB = cms.double(0.06),
                        cutValueEE = cms.double(0.06),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleFull5x5SigmaIEtaIEtaWithSatCut'),
                        isIgnored = cms.bool(False),
                        maxNrSatCrysIn5x5EB = cms.int32(0),
                        maxNrSatCrysIn5x5EE = cms.int32(0),
                        maxSigmaIEtaIEtaEB = cms.double(9999),
                        maxSigmaIEtaIEtaEE = cms.double(0.03),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleFull5x5E2x5OverE5x5WithSatCut'),
                        isIgnored = cms.bool(False),
                        maxNrSatCrysIn5x5EB = cms.int32(0),
                        maxNrSatCrysIn5x5EE = cms.int32(0),
                        minE1x5OverE5x5EB = cms.double(0.83),
                        minE1x5OverE5x5EE = cms.double(-1.0),
                        minE2x5OverE5x5EB = cms.double(0.94),
                        minE2x5OverE5x5EE = cms.double(-1.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        constTermEB = cms.double(1.0),
                        constTermEE = cms.double(5),
                        cutName = cms.string('GsfEleHadronicOverEMLinearCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        slopeStartEB = cms.double(0.0),
                        slopeStartEE = cms.double(0.0),
                        slopeTermEB = cms.double(0.05),
                        slopeTermEE = cms.double(0.05)
                    ),
                    cms.PSet(
                        constTermEB = cms.double(5.0),
                        constTermEE = cms.double(5.0),
                        cutName = cms.string('GsfEleTrkPtIsoCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        slopeStartEB = cms.double(0.0),
                        slopeStartEE = cms.double(0.0),
                        slopeTermEB = cms.double(0.0),
                        slopeTermEE = cms.double(0.0),
                        useHEEPIso = cms.bool(True)
                    ),
                    cms.PSet(
                        constTermEB = cms.double(2.0),
                        constTermEE = cms.double(2.5),
                        cutName = cms.string('GsfEleEmHadD1IsoRhoCut'),
                        energyType = cms.string('EcalTrk'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        rho = cms.InputTag("fixedGridRhoFastjetAll"),
                        rhoConstant = cms.double(0.28),
                        slopeStartEB = cms.double(0.0),
                        slopeStartEE = cms.double(50.0),
                        slopeTermEB = cms.double(0.03),
                        slopeTermEE = cms.double(0.03)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleDxyCut'),
                        dxyCutValueEB = cms.double(0.02),
                        dxyCutValueEE = cms.double(0.05),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        vertexSrc = cms.InputTag("offlinePrimaryVertices"),
                        vertexSrcMiniAOD = cms.InputTag("offlineSlimmedPrimaryVertices")
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleMissingHitsCut'),
                        isIgnored = cms.bool(False),
                        maxMissingHitsEB = cms.uint32(1),
                        maxMissingHitsEE = cms.uint32(1),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleEcalDrivenCut'),
                        ecalDrivenEB = cms.int32(1),
                        ecalDrivenEE = cms.int32(1),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    )
                ),
                idName = cms.string('heepElectronID-HEEPV70'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('49b6b60e9f16727f241eb34b9d345a8f'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('GsfEleMinEcalEtCut'),
                        isIgnored = cms.bool(False),
                        minEt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.4442),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.566)
                            )
                        ),
                        cutName = cms.string('GsfEleSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(deltaEtaSeedClusterTrackAtVtx)'),
                        cutValueEB = cms.double(0.004),
                        cutValueEE = cms.double(0.006),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(deltaPhiSuperClusterTrackAtVtx)'),
                        cutValueEB = cms.double(0.06),
                        cutValueEE = cms.double(0.06),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleFull5x5SigmaIEtaIEtaWithSatCut'),
                        isIgnored = cms.bool(False),
                        maxNrSatCrysIn5x5EB = cms.int32(0),
                        maxNrSatCrysIn5x5EE = cms.int32(0),
                        maxSigmaIEtaIEtaEB = cms.double(9999),
                        maxSigmaIEtaIEtaEE = cms.double(0.03),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleFull5x5E2x5OverE5x5WithSatCut'),
                        isIgnored = cms.bool(False),
                        maxNrSatCrysIn5x5EB = cms.int32(0),
                        maxNrSatCrysIn5x5EE = cms.int32(0),
                        minE1x5OverE5x5EB = cms.double(0.83),
                        minE1x5OverE5x5EE = cms.double(-1.0),
                        minE2x5OverE5x5EB = cms.double(0.94),
                        minE2x5OverE5x5EE = cms.double(-1.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        constTermEB = cms.double(1.0),
                        constTermEE = cms.double(5),
                        cutName = cms.string('GsfEleHadronicOverEMLinearCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        slopeStartEB = cms.double(0.0),
                        slopeStartEE = cms.double(0.0),
                        slopeTermEB = cms.double(0.05),
                        slopeTermEE = cms.double(0.05)
                    ),
                    cms.PSet(
                        constTermEB = cms.double(5.0),
                        constTermEE = cms.double(5.0),
                        cutName = cms.string('GsfEleTrkPtIsoCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        slopeStartEB = cms.double(0.0),
                        slopeStartEE = cms.double(0.0),
                        slopeTermEB = cms.double(0.0),
                        slopeTermEE = cms.double(0.0),
                        useHEEPIso = cms.bool(True)
                    ),
                    cms.PSet(
                        constTermEB = cms.double(2.0),
                        constTermEE = cms.double(2.5),
                        cutName = cms.string('GsfEleEmHadD1IsoRhoCut'),
                        energyType = cms.string('Ecal'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        rho = cms.InputTag("fixedGridRhoFastjetAll"),
                        rhoConstant = cms.double(0.28),
                        slopeStartEB = cms.double(0.0),
                        slopeStartEE = cms.double(50.0),
                        slopeTermEB = cms.double(0.03),
                        slopeTermEE = cms.double(0.03)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleDxyCut'),
                        dxyCutValueEB = cms.double(0.02),
                        dxyCutValueEE = cms.double(0.05),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        vertexSrc = cms.InputTag("offlinePrimaryVertices"),
                        vertexSrcMiniAOD = cms.InputTag("offlineSlimmedPrimaryVertices")
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleMissingHitsCut'),
                        isIgnored = cms.bool(False),
                        maxMissingHitsEB = cms.uint32(1),
                        maxMissingHitsEE = cms.uint32(1),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleEcalDrivenCut'),
                        ecalDrivenEB = cms.int32(1),
                        ecalDrivenEE = cms.int32(1),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    )
                ),
                idName = cms.string('heepElectronID-HEEPV71'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string(''),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('GsfEleSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('? superCluster.isNonnull && superCluster.seed.isNonnull ?abs(deltaEtaSuperClusterTrackAtVtx - superCluster.eta + superCluster.seed.eta) : 999999.'),
                        cutValueEB = cms.double(0.00387),
                        cutValueEE = cms.double(0.0072),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(deltaPhiSuperClusterTrackAtVtx)'),
                        cutValueEB = cms.double(0.0716),
                        cutValueEE = cms.double(0.147),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('full5x5_sigmaIetaIeta'),
                        cutValueEB = cms.double(0.0105),
                        cutValueEE = cms.double(0.0356),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelC0 = cms.double(0.05),
                        barrelCE = cms.double(1.12),
                        barrelCr = cms.double(0.0368),
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleHadronicOverEMEnergyScaledCut'),
                        endcapC0 = cms.double(0.0414),
                        endcapCE = cms.double(0.5),
                        endcapCr = cms.double(0.201),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(1. - eSuperClusterOverP) / ecalEnergy'),
                        cutValueEB = cms.double(0.129),
                        cutValueEE = cms.double(0.0875),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleEffAreaPFIsoCut'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/ElectronIdentification/data/Fall17/effAreaElectrons_cone03_pfNeuHadronsAndPhotons_92X.txt'),
                        isIgnored = cms.bool(False),
                        isRelativeIso = cms.bool(True),
                        isoCutEBHighPt = cms.double(0.133),
                        isoCutEBLowPt = cms.double(0.133),
                        isoCutEEHighPt = cms.double(0.146),
                        isoCutEELowPt = cms.double(0.146),
                        needsAdditionalProducts = cms.bool(True),
                        ptCutOff = cms.double(20.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        beamspotSrc = cms.InputTag("offlineBeamSpot"),
                        conversionSrc = cms.InputTag("allConversions"),
                        conversionSrcMiniAOD = cms.InputTag("reducedEgamma","reducedConversions"),
                        cutName = cms.string('GsfEleConversionVetoCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleMissingHitsCut'),
                        isIgnored = cms.bool(False),
                        maxMissingHitsEB = cms.uint32(1),
                        maxMissingHitsEE = cms.uint32(1),
                        needsAdditionalProducts = cms.bool(False)
                    )
                ),
                idName = cms.string('cutBasedElectronID-Fall17-94X-V1-loose'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('0b8456d622494441fe713a6858e0f7c1'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('GsfEleSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('? superCluster.isNonnull && superCluster.seed.isNonnull ?abs(deltaEtaSuperClusterTrackAtVtx - superCluster.eta + superCluster.seed.eta) : 999999.'),
                        cutValueEB = cms.double(0.00365),
                        cutValueEE = cms.double(0.00625),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(deltaPhiSuperClusterTrackAtVtx)'),
                        cutValueEB = cms.double(0.0588),
                        cutValueEE = cms.double(0.0355),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('full5x5_sigmaIetaIeta'),
                        cutValueEB = cms.double(0.0105),
                        cutValueEE = cms.double(0.0309),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelC0 = cms.double(0.026),
                        barrelCE = cms.double(1.12),
                        barrelCr = cms.double(0.0368),
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleHadronicOverEMEnergyScaledCut'),
                        endcapC0 = cms.double(0.026),
                        endcapCE = cms.double(0.5),
                        endcapCr = cms.double(0.201),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(1. - eSuperClusterOverP) / ecalEnergy'),
                        cutValueEB = cms.double(0.0327),
                        cutValueEE = cms.double(0.0335),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleEffAreaPFIsoCut'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/ElectronIdentification/data/Fall17/effAreaElectrons_cone03_pfNeuHadronsAndPhotons_92X.txt'),
                        isIgnored = cms.bool(False),
                        isRelativeIso = cms.bool(True),
                        isoCutEBHighPt = cms.double(0.0718),
                        isoCutEBLowPt = cms.double(0.0718),
                        isoCutEEHighPt = cms.double(0.143),
                        isoCutEELowPt = cms.double(0.143),
                        needsAdditionalProducts = cms.bool(True),
                        ptCutOff = cms.double(20.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        beamspotSrc = cms.InputTag("offlineBeamSpot"),
                        conversionSrc = cms.InputTag("allConversions"),
                        conversionSrcMiniAOD = cms.InputTag("reducedEgamma","reducedConversions"),
                        cutName = cms.string('GsfEleConversionVetoCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleMissingHitsCut'),
                        isIgnored = cms.bool(False),
                        maxMissingHitsEB = cms.uint32(1),
                        maxMissingHitsEE = cms.uint32(1),
                        needsAdditionalProducts = cms.bool(False)
                    )
                ),
                idName = cms.string('cutBasedElectronID-Fall17-94X-V1-medium'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('a238ee70910de53d36866e89768500e9'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('GsfEleSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('? superCluster.isNonnull && superCluster.seed.isNonnull ?abs(deltaEtaSuperClusterTrackAtVtx - superCluster.eta + superCluster.seed.eta) : 999999.'),
                        cutValueEB = cms.double(0.00353),
                        cutValueEE = cms.double(0.00567),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(deltaPhiSuperClusterTrackAtVtx)'),
                        cutValueEB = cms.double(0.0499),
                        cutValueEE = cms.double(0.0165),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('full5x5_sigmaIetaIeta'),
                        cutValueEB = cms.double(0.0104),
                        cutValueEE = cms.double(0.0305),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelC0 = cms.double(0.026),
                        barrelCE = cms.double(1.12),
                        barrelCr = cms.double(0.0368),
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleHadronicOverEMEnergyScaledCut'),
                        endcapC0 = cms.double(0.026),
                        endcapCE = cms.double(0.5),
                        endcapCr = cms.double(0.201),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(1. - eSuperClusterOverP) / ecalEnergy'),
                        cutValueEB = cms.double(0.0278),
                        cutValueEE = cms.double(0.0158),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleEffAreaPFIsoCut'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/ElectronIdentification/data/Fall17/effAreaElectrons_cone03_pfNeuHadronsAndPhotons_92X.txt'),
                        isIgnored = cms.bool(False),
                        isRelativeIso = cms.bool(True),
                        isoCutEBHighPt = cms.double(0.0361),
                        isoCutEBLowPt = cms.double(0.0361),
                        isoCutEEHighPt = cms.double(0.094),
                        isoCutEELowPt = cms.double(0.094),
                        needsAdditionalProducts = cms.bool(True),
                        ptCutOff = cms.double(20.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        beamspotSrc = cms.InputTag("offlineBeamSpot"),
                        conversionSrc = cms.InputTag("allConversions"),
                        conversionSrcMiniAOD = cms.InputTag("reducedEgamma","reducedConversions"),
                        cutName = cms.string('GsfEleConversionVetoCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleMissingHitsCut'),
                        isIgnored = cms.bool(False),
                        maxMissingHitsEB = cms.uint32(1),
                        maxMissingHitsEE = cms.uint32(1),
                        needsAdditionalProducts = cms.bool(False)
                    )
                ),
                idName = cms.string('cutBasedElectronID-Fall17-94X-V1-tight'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('4acb2d2796efde7fba75380ce8823fc2'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('GsfEleSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('? superCluster.isNonnull && superCluster.seed.isNonnull ?abs(deltaEtaSuperClusterTrackAtVtx - superCluster.eta + superCluster.seed.eta) : 999999.'),
                        cutValueEB = cms.double(0.00523),
                        cutValueEE = cms.double(0.00984),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(deltaPhiSuperClusterTrackAtVtx)'),
                        cutValueEB = cms.double(0.159),
                        cutValueEE = cms.double(0.157),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('full5x5_sigmaIetaIeta'),
                        cutValueEB = cms.double(0.0128),
                        cutValueEE = cms.double(0.0445),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelC0 = cms.double(0.05),
                        barrelCE = cms.double(1.12),
                        barrelCr = cms.double(0.0368),
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleHadronicOverEMEnergyScaledCut'),
                        endcapC0 = cms.double(0.05),
                        endcapCE = cms.double(0.5),
                        endcapCr = cms.double(0.201),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(1. - eSuperClusterOverP) / ecalEnergy'),
                        cutValueEB = cms.double(0.193),
                        cutValueEE = cms.double(0.0962),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleEffAreaPFIsoCut'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/ElectronIdentification/data/Fall17/effAreaElectrons_cone03_pfNeuHadronsAndPhotons_92X.txt'),
                        isIgnored = cms.bool(False),
                        isRelativeIso = cms.bool(True),
                        isoCutEBHighPt = cms.double(0.168),
                        isoCutEBLowPt = cms.double(0.168),
                        isoCutEEHighPt = cms.double(0.185),
                        isoCutEELowPt = cms.double(0.185),
                        needsAdditionalProducts = cms.bool(True),
                        ptCutOff = cms.double(20.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        beamspotSrc = cms.InputTag("offlineBeamSpot"),
                        conversionSrc = cms.InputTag("allConversions"),
                        conversionSrcMiniAOD = cms.InputTag("reducedEgamma","reducedConversions"),
                        cutName = cms.string('GsfEleConversionVetoCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleMissingHitsCut'),
                        isIgnored = cms.bool(False),
                        maxMissingHitsEB = cms.uint32(2),
                        maxMissingHitsEE = cms.uint32(3),
                        needsAdditionalProducts = cms.bool(False)
                    )
                ),
                idName = cms.string('cutBasedElectronID-Fall17-94X-V1-veto'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('43be9b381a8d9b0910b7f81a5ad8ff3a'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('GsfEleSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('? superCluster.isNonnull && superCluster.seed.isNonnull ?abs(deltaEtaSuperClusterTrackAtVtx - superCluster.eta + superCluster.seed.eta) : 999999.'),
                        cutValueEB = cms.double(0.00377),
                        cutValueEE = cms.double(0.00674),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(deltaPhiSuperClusterTrackAtVtx)'),
                        cutValueEB = cms.double(0.0884),
                        cutValueEE = cms.double(0.169),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('full5x5_sigmaIetaIeta'),
                        cutValueEB = cms.double(0.0112),
                        cutValueEE = cms.double(0.0425),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelC0 = cms.double(0.05),
                        barrelCE = cms.double(1.16),
                        barrelCr = cms.double(0.0324),
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleHadronicOverEMEnergyScaledCut'),
                        endcapC0 = cms.double(0.0441),
                        endcapCE = cms.double(2.54),
                        endcapCr = cms.double(0.183),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(1. - eSuperClusterOverP) / ecalEnergy'),
                        cutValueEB = cms.double(0.193),
                        cutValueEE = cms.double(0.111),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelC0 = cms.double(0.112),
                        barrelCpt = cms.double(0.506),
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleRelPFIsoScaledCut'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/ElectronIdentification/data/Fall17/effAreaElectrons_cone03_pfNeuHadronsAndPhotons_94X.txt'),
                        endcapC0 = cms.double(0.108),
                        endcapCpt = cms.double(0.963),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        beamspotSrc = cms.InputTag("offlineBeamSpot"),
                        conversionSrc = cms.InputTag("allConversions"),
                        conversionSrcMiniAOD = cms.InputTag("reducedEgamma","reducedConversions"),
                        cutName = cms.string('GsfEleConversionVetoCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleMissingHitsCut'),
                        isIgnored = cms.bool(False),
                        maxMissingHitsEB = cms.uint32(1),
                        maxMissingHitsEE = cms.uint32(1),
                        needsAdditionalProducts = cms.bool(False)
                    )
                ),
                idName = cms.string('cutBasedElectronID-Fall17-94X-V2-loose'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('5547e2c8b5c222192519c41bff05bc2e'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('GsfEleSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('? superCluster.isNonnull && superCluster.seed.isNonnull ?abs(deltaEtaSuperClusterTrackAtVtx - superCluster.eta + superCluster.seed.eta) : 999999.'),
                        cutValueEB = cms.double(0.0032),
                        cutValueEE = cms.double(0.00632),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(deltaPhiSuperClusterTrackAtVtx)'),
                        cutValueEB = cms.double(0.0547),
                        cutValueEE = cms.double(0.0394),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('full5x5_sigmaIetaIeta'),
                        cutValueEB = cms.double(0.0106),
                        cutValueEE = cms.double(0.0387),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelC0 = cms.double(0.046),
                        barrelCE = cms.double(1.16),
                        barrelCr = cms.double(0.0324),
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleHadronicOverEMEnergyScaledCut'),
                        endcapC0 = cms.double(0.0275),
                        endcapCE = cms.double(2.52),
                        endcapCr = cms.double(0.183),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(1. - eSuperClusterOverP) / ecalEnergy'),
                        cutValueEB = cms.double(0.184),
                        cutValueEE = cms.double(0.0721),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelC0 = cms.double(0.0478),
                        barrelCpt = cms.double(0.506),
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleRelPFIsoScaledCut'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/ElectronIdentification/data/Fall17/effAreaElectrons_cone03_pfNeuHadronsAndPhotons_94X.txt'),
                        endcapC0 = cms.double(0.0658),
                        endcapCpt = cms.double(0.963),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        beamspotSrc = cms.InputTag("offlineBeamSpot"),
                        conversionSrc = cms.InputTag("allConversions"),
                        conversionSrcMiniAOD = cms.InputTag("reducedEgamma","reducedConversions"),
                        cutName = cms.string('GsfEleConversionVetoCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleMissingHitsCut'),
                        isIgnored = cms.bool(False),
                        maxMissingHitsEB = cms.uint32(1),
                        maxMissingHitsEE = cms.uint32(1),
                        needsAdditionalProducts = cms.bool(False)
                    )
                ),
                idName = cms.string('cutBasedElectronID-Fall17-94X-V2-medium'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('48702f025a8df2c527f53927af8b66d0'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('GsfEleSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('? superCluster.isNonnull && superCluster.seed.isNonnull ?abs(deltaEtaSuperClusterTrackAtVtx - superCluster.eta + superCluster.seed.eta) : 999999.'),
                        cutValueEB = cms.double(0.00255),
                        cutValueEE = cms.double(0.00501),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(deltaPhiSuperClusterTrackAtVtx)'),
                        cutValueEB = cms.double(0.022),
                        cutValueEE = cms.double(0.0236),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('full5x5_sigmaIetaIeta'),
                        cutValueEB = cms.double(0.0104),
                        cutValueEE = cms.double(0.0353),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelC0 = cms.double(0.026),
                        barrelCE = cms.double(1.15),
                        barrelCr = cms.double(0.0324),
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleHadronicOverEMEnergyScaledCut'),
                        endcapC0 = cms.double(0.0188),
                        endcapCE = cms.double(2.06),
                        endcapCr = cms.double(0.183),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(1. - eSuperClusterOverP) / ecalEnergy'),
                        cutValueEB = cms.double(0.159),
                        cutValueEE = cms.double(0.0197),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelC0 = cms.double(0.0287),
                        barrelCpt = cms.double(0.506),
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleRelPFIsoScaledCut'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/ElectronIdentification/data/Fall17/effAreaElectrons_cone03_pfNeuHadronsAndPhotons_94X.txt'),
                        endcapC0 = cms.double(0.0445),
                        endcapCpt = cms.double(0.963),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        beamspotSrc = cms.InputTag("offlineBeamSpot"),
                        conversionSrc = cms.InputTag("allConversions"),
                        conversionSrcMiniAOD = cms.InputTag("reducedEgamma","reducedConversions"),
                        cutName = cms.string('GsfEleConversionVetoCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleMissingHitsCut'),
                        isIgnored = cms.bool(False),
                        maxMissingHitsEB = cms.uint32(1),
                        maxMissingHitsEE = cms.uint32(1),
                        needsAdditionalProducts = cms.bool(False)
                    )
                ),
                idName = cms.string('cutBasedElectronID-Fall17-94X-V2-tight'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('c06761e199f084f5b0f7868ac48a3e19'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('GsfEleSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('? superCluster.isNonnull && superCluster.seed.isNonnull ?abs(deltaEtaSuperClusterTrackAtVtx - superCluster.eta + superCluster.seed.eta) : 999999.'),
                        cutValueEB = cms.double(0.00463),
                        cutValueEE = cms.double(0.00814),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(deltaPhiSuperClusterTrackAtVtx)'),
                        cutValueEB = cms.double(0.148),
                        cutValueEE = cms.double(0.19),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('full5x5_sigmaIetaIeta'),
                        cutValueEB = cms.double(0.0126),
                        cutValueEE = cms.double(0.0457),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelC0 = cms.double(0.05),
                        barrelCE = cms.double(1.16),
                        barrelCr = cms.double(0.0324),
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleHadronicOverEMEnergyScaledCut'),
                        endcapC0 = cms.double(0.05),
                        endcapCE = cms.double(2.54),
                        endcapCr = cms.double(0.183),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(1. - eSuperClusterOverP) / ecalEnergy'),
                        cutValueEB = cms.double(0.209),
                        cutValueEE = cms.double(0.132),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelC0 = cms.double(0.198),
                        barrelCpt = cms.double(0.506),
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleRelPFIsoScaledCut'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/ElectronIdentification/data/Fall17/effAreaElectrons_cone03_pfNeuHadronsAndPhotons_94X.txt'),
                        endcapC0 = cms.double(0.203),
                        endcapCpt = cms.double(0.963),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        beamspotSrc = cms.InputTag("offlineBeamSpot"),
                        conversionSrc = cms.InputTag("allConversions"),
                        conversionSrcMiniAOD = cms.InputTag("reducedEgamma","reducedConversions"),
                        cutName = cms.string('GsfEleConversionVetoCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleMissingHitsCut'),
                        isIgnored = cms.bool(False),
                        maxMissingHitsEB = cms.uint32(2),
                        maxMissingHitsEE = cms.uint32(3),
                        needsAdditionalProducts = cms.bool(False)
                    )
                ),
                idName = cms.string('cutBasedElectronID-Fall17-94X-V2-veto'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('74e217e3ece16b49bd337026a29fc3e9'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('GsfEleSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('? superCluster.isNonnull && superCluster.seed.isNonnull ?abs(deltaEtaSuperClusterTrackAtVtx - superCluster.eta + superCluster.seed.eta) : 999999.'),
                        cutValueEB = cms.double(0.00691),
                        cutValueEE = cms.double(0.0121),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(deltaPhiSuperClusterTrackAtVtx)'),
                        cutValueEB = cms.double(0.175),
                        cutValueEE = cms.double(0.228),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('full5x5_sigmaIetaIeta'),
                        cutValueEB = cms.double(0.0107),
                        cutValueEE = cms.double(0.0275),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelC0 = cms.double(0.05),
                        barrelCE = cms.double(1.28),
                        barrelCr = cms.double(0.0422),
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleHadronicOverEMEnergyScaledCut'),
                        endcapC0 = cms.double(0.05),
                        endcapCE = cms.double(2.3),
                        endcapCr = cms.double(0.262),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(1. - eSuperClusterOverP) / ecalEnergy'),
                        cutValueEB = cms.double(0.138),
                        cutValueEE = cms.double(0.127),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelC0 = cms.double(0.194),
                        barrelCpt = cms.double(0.535),
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleRelPFIsoScaledCut'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/ElectronIdentification/data/Run3_Winter22/effAreaElectrons_cone03_pfNeuHadronsAndPhotons_122X.txt'),
                        endcapC0 = cms.double(0.184),
                        endcapCpt = cms.double(0.519),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        beamspotSrc = cms.InputTag("offlineBeamSpot"),
                        conversionSrc = cms.InputTag("allConversions"),
                        conversionSrcMiniAOD = cms.InputTag("reducedEgamma","reducedConversions"),
                        cutName = cms.string('GsfEleConversionVetoCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleMissingHitsCut'),
                        isIgnored = cms.bool(False),
                        maxMissingHitsEB = cms.uint32(1),
                        maxMissingHitsEE = cms.uint32(1),
                        needsAdditionalProducts = cms.bool(False)
                    )
                ),
                idName = cms.string('cutBasedElectronID-RunIIIWinter22-V1-loose'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('648b0cc1957047ffe3f027111389dcf5aa941edc'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('GsfEleSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('? superCluster.isNonnull && superCluster.seed.isNonnull ?abs(deltaEtaSuperClusterTrackAtVtx - superCluster.eta + superCluster.seed.eta) : 999999.'),
                        cutValueEB = cms.double(0.00481),
                        cutValueEE = cms.double(0.00951),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(deltaPhiSuperClusterTrackAtVtx)'),
                        cutValueEB = cms.double(0.127),
                        cutValueEE = cms.double(0.221),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('full5x5_sigmaIetaIeta'),
                        cutValueEB = cms.double(0.0103),
                        cutValueEE = cms.double(0.0272),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelC0 = cms.double(0.0241),
                        barrelCE = cms.double(1.28),
                        barrelCr = cms.double(0.0422),
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleHadronicOverEMEnergyScaledCut'),
                        endcapC0 = cms.double(0.05),
                        endcapCE = cms.double(2.3),
                        endcapCr = cms.double(0.262),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(1. - eSuperClusterOverP) / ecalEnergy'),
                        cutValueEB = cms.double(0.0966),
                        cutValueEE = cms.double(0.111),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelC0 = cms.double(0.0837),
                        barrelCpt = cms.double(0.535),
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleRelPFIsoScaledCut'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/ElectronIdentification/data/Run3_Winter22/effAreaElectrons_cone03_pfNeuHadronsAndPhotons_122X.txt'),
                        endcapC0 = cms.double(0.0741),
                        endcapCpt = cms.double(0.519),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        beamspotSrc = cms.InputTag("offlineBeamSpot"),
                        conversionSrc = cms.InputTag("allConversions"),
                        conversionSrcMiniAOD = cms.InputTag("reducedEgamma","reducedConversions"),
                        cutName = cms.string('GsfEleConversionVetoCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleMissingHitsCut'),
                        isIgnored = cms.bool(False),
                        maxMissingHitsEB = cms.uint32(1),
                        maxMissingHitsEE = cms.uint32(1),
                        needsAdditionalProducts = cms.bool(False)
                    )
                ),
                idName = cms.string('cutBasedElectronID-RunIIIWinter22-V1-medium'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('2626edc1ad1dc1673c0713c557df78f3e90a66f5'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('GsfEleSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('? superCluster.isNonnull && superCluster.seed.isNonnull ?abs(deltaEtaSuperClusterTrackAtVtx - superCluster.eta + superCluster.seed.eta) : 999999.'),
                        cutValueEB = cms.double(0.00411),
                        cutValueEE = cms.double(0.00938),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(deltaPhiSuperClusterTrackAtVtx)'),
                        cutValueEB = cms.double(0.116),
                        cutValueEE = cms.double(0.164),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('full5x5_sigmaIetaIeta'),
                        cutValueEB = cms.double(0.0101),
                        cutValueEE = cms.double(0.027),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelC0 = cms.double(0.02),
                        barrelCE = cms.double(1.16),
                        barrelCr = cms.double(0.0422),
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleHadronicOverEMEnergyScaledCut'),
                        endcapC0 = cms.double(0.02),
                        endcapCE = cms.double(0.5),
                        endcapCr = cms.double(0.262),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(1. - eSuperClusterOverP) / ecalEnergy'),
                        cutValueEB = cms.double(0.023),
                        cutValueEE = cms.double(0.018),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelC0 = cms.double(0.0388),
                        barrelCpt = cms.double(0.535),
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleRelPFIsoScaledCut'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/ElectronIdentification/data/Run3_Winter22/effAreaElectrons_cone03_pfNeuHadronsAndPhotons_122X.txt'),
                        endcapC0 = cms.double(0.0544),
                        endcapCpt = cms.double(0.519),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        beamspotSrc = cms.InputTag("offlineBeamSpot"),
                        conversionSrc = cms.InputTag("allConversions"),
                        conversionSrcMiniAOD = cms.InputTag("reducedEgamma","reducedConversions"),
                        cutName = cms.string('GsfEleConversionVetoCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleMissingHitsCut'),
                        isIgnored = cms.bool(False),
                        maxMissingHitsEB = cms.uint32(1),
                        maxMissingHitsEE = cms.uint32(1),
                        needsAdditionalProducts = cms.bool(False)
                    )
                ),
                idName = cms.string('cutBasedElectronID-RunIIIWinter22-V1-tight'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('2331bfa0b099f80090aa1d48df03b7a134cf788e'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('GsfEleSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('? superCluster.isNonnull && superCluster.seed.isNonnull ?abs(deltaEtaSuperClusterTrackAtVtx - superCluster.eta + superCluster.seed.eta) : 999999.'),
                        cutValueEB = cms.double(0.0071),
                        cutValueEE = cms.double(0.0173),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(deltaPhiSuperClusterTrackAtVtx)'),
                        cutValueEB = cms.double(0.208),
                        cutValueEE = cms.double(0.234),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('full5x5_sigmaIetaIeta'),
                        cutValueEB = cms.double(0.0117),
                        cutValueEE = cms.double(0.0298),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelC0 = cms.double(0.05),
                        barrelCE = cms.double(1.28),
                        barrelCr = cms.double(0.0422),
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleHadronicOverEMEnergyScaledCut'),
                        endcapC0 = cms.double(0.05),
                        endcapCE = cms.double(2.3),
                        endcapCr = cms.double(0.262),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(1. - eSuperClusterOverP) / ecalEnergy'),
                        cutValueEB = cms.double(0.178),
                        cutValueEE = cms.double(0.137),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelC0 = cms.double(0.406),
                        barrelCpt = cms.double(0.535),
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleRelPFIsoScaledCut'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/ElectronIdentification/data/Run3_Winter22/effAreaElectrons_cone03_pfNeuHadronsAndPhotons_122X.txt'),
                        endcapC0 = cms.double(0.342),
                        endcapCpt = cms.double(0.519),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        beamspotSrc = cms.InputTag("offlineBeamSpot"),
                        conversionSrc = cms.InputTag("allConversions"),
                        conversionSrcMiniAOD = cms.InputTag("reducedEgamma","reducedConversions"),
                        cutName = cms.string('GsfEleConversionVetoCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleMissingHitsCut'),
                        isIgnored = cms.bool(False),
                        maxMissingHitsEB = cms.uint32(2),
                        maxMissingHitsEE = cms.uint32(3),
                        needsAdditionalProducts = cms.bool(False)
                    )
                ),
                idName = cms.string('cutBasedElectronID-RunIIIWinter22-V1-veto'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('04d495d199252c2017d5019ae8b478a7d8aebc79'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('GsfEleMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV1Categories"),
                    mvaCuts = cms.vstring(
                        '0.9530240956555949 - exp(-pt / 2.7591425841003647) *  0.4669644718545271',
                        '0.9336564763961019 - exp(-pt /  2.709276284272272) * 0.33512286599215946',
                        '0.9313133688365339 - exp(-pt / 1.5821934800715558) *  3.8889462619659265',
                        '0.9825268564943458 - exp(-pt /  8.702601455860762) *  1.1974861596609097',
                        '0.9727509457929913 - exp(-pt /  8.179525631018565) *  1.7111755094657688',
                        '0.9562619539540145 - exp(-pt /  8.109845366281608) *   3.013927699126942'
                    ),
                    mvaValueMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV1Values"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaEleID-Fall17-noIso-V1-wp80'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string(''),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('GsfEleMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV1Categories"),
                    mvaCuts = cms.vstring(
                        '0.9165112826974601 - exp(-pt / 2.7381703555094217) *    1.03549199648109',
                        '0.8655738322220173 - exp(-pt / 2.4027944652597073) *  0.7975615613282494',
                        '-3016.035055227131 - exp(-pt / -52140.61856333602) * -3016.3029387236506',
                        '0.9616542816132922 - exp(-pt /  8.757943837889817) *  3.1390200321591206',
                        '0.9319258011430132 - exp(-pt /  8.846057432565809) *  3.5985063793347787',
                        '0.8899260780999244 - exp(-pt / 10.124234115859881) *   4.352791250718547'
                    ),
                    mvaValueMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV1Values"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaEleID-Fall17-noIso-V1-wp90'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string(''),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('GsfEleMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV1Categories"),
                    mvaCuts = cms.vstring(
                        '-0.13285867293779202',
                        '-0.31765300958836074',
                        '-0.0799205914718861',
                        '-0.856871961305474',
                        '-0.8107642141584835',
                        '-0.7179265933023059'
                    ),
                    mvaValueMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV1Values"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaEleID-Fall17-noIso-V1-wpLoose'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string(''),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('GsfEleMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV1Categories"),
                    mvaCuts = cms.vstring(
                        '0.9725509559754997 - exp(-pt /  2.976593261509491) *  0.2653858736397496',
                        '0.9508038141601247 - exp(-pt / 2.6633500558725713) *  0.2355820499260076',
                        '0.9365037167596238 - exp(-pt / 1.5765442323949856) *   3.067015289215309',
                        '0.9896562087723659 - exp(-pt / 10.342490511998674) * 0.40204156417414094',
                        '0.9819232656533827 - exp(-pt /   9.05548836482051) *   0.772674931169389',
                        '0.9625098201744635 - exp(-pt /   8.42589315557279) *  2.2916152615134173'
                    ),
                    mvaValueMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV1Values"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaEleID-Fall17-iso-V1-wp80'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string(''),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('GsfEleMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV1Categories"),
                    mvaCuts = cms.vstring(
                        '0.9387070396095831 - exp(-pt /   2.6525585228167636) *  0.8222647164151365',
                        '0.8948802925677235 - exp(-pt /   2.7645670358783523) *  0.4123381218697539',
                        '-1830.8583661119892 - exp(-pt /   -36578.11055382301) * -1831.2083578116517',
                        '0.9717674837607253 - exp(-pt /    8.912850985100356) *  1.9712414940437244',
                        '0.9458745023265976 - exp(-pt /     8.83104420392795) *    2.40849932040698',
                        '0.8979112012086751 - exp(-pt /    9.814082144168015) *   4.171581694893849'
                    ),
                    mvaValueMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV1Values"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaEleID-Fall17-iso-V1-wp90'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string(''),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('GsfEleMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV1Categories"),
                    mvaCuts = cms.vstring(
                        '-0.09564086146419018',
                        '-0.28229916981926795',
                        '-0.05466682296962322',
                        '-0.833466688584422',
                        '-0.7677000247570116',
                        '-0.6917305995653829'
                    ),
                    mvaValueMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV1Values"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaEleID-Fall17-iso-V1-wpLoose'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string(''),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('GsfEleMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV2Categories"),
                    mvaCuts = cms.vstring(
                        '3.26449620468 - exp(-pt / 3.32657149223) * 8.84669783568',
                        '2.83557838497 - exp(-pt / 2.15150487651) * 11.0978016567',
                        '2.91994945177 - exp(-pt / 1.69875477522) * 24.024807824',
                        '7.1336238874 - exp(-pt / 16.5605268797) * 8.22531222391',
                        '6.18638275782 - exp(-pt / 15.2694634284) * 7.49764565324',
                        '5.43175865738 - exp(-pt / 15.4290075949) * 7.56899692285'
                    ),
                    mvaValueMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV2RawValues"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaEleID-Fall17-noIso-V2-wp80'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string(''),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('GsfEleMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV2Categories"),
                    mvaCuts = cms.vstring(
                        '2.77072387339 - exp(-pt / 3.81500912145) * 8.16304860178',
                        '1.85602317813 - exp(-pt / 2.18697654938) * 11.8568936824',
                        '1.73489307814 - exp(-pt / 2.0163211971) * 17.013880078',
                        '5.9175992258 - exp(-pt / 13.4807294538) * 9.31966232685',
                        '5.01598837255 - exp(-pt / 13.1280451502) * 8.79418193765',
                        '4.16921343208 - exp(-pt / 13.2017224621) * 9.00720913211'
                    ),
                    mvaValueMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV2RawValues"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaEleID-Fall17-noIso-V2-wp90'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string(''),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('GsfEleMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV2Categories"),
                    mvaCuts = cms.vstring(
                        '0.894411158628',
                        '0.791966464633',
                        '1.47104857173',
                        '-0.293962958665',
                        '-0.250424758584',
                        '-0.130985179031'
                    ),
                    mvaValueMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV2RawValues"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaEleID-Fall17-noIso-V2-wpLoose'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string(''),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('GsfEleMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV2Categories"),
                    mvaCuts = cms.vstring(
                        '3.53495358797 - exp(-pt / 3.07272325141) * 9.94262764352',
                        '3.06015605623 - exp(-pt / 1.95572234114) * 14.3091184421',
                        '3.02052519639 - exp(-pt / 1.59784164742) * 28.719380105',
                        '7.35752275071 - exp(-pt / 15.87907864) * 7.61288809226',
                        '6.41811074032 - exp(-pt / 14.730562874) * 6.96387331587',
                        '5.64936312428 - exp(-pt / 16.3664949747) * 7.19607610311'
                    ),
                    mvaValueMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV2RawValues"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaEleID-Fall17-iso-V2-wp80'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string(''),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('GsfEleMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV2Categories"),
                    mvaCuts = cms.vstring(
                        '2.84704783417 - exp(-pt / 3.32529515837) * 9.38050947827',
                        '2.03833922005 - exp(-pt / 1.93288758682) * 15.364588247',
                        '1.82704158461 - exp(-pt / 1.89796754399) * 19.1236071158',
                        '6.12931925263 - exp(-pt / 13.281753835) * 8.71138432196',
                        '5.26289004857 - exp(-pt / 13.2154971491) * 8.0997882835',
                        '4.37338792902 - exp(-pt / 14.0776094696) * 8.48513324496'
                    ),
                    mvaValueMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV2RawValues"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaEleID-Fall17-iso-V2-wp90'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string(''),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('GsfEleMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV2Categories"),
                    mvaCuts = cms.vstring(
                        '1.26402092475',
                        '1.17808089508',
                        '1.33051972806',
                        '2.36464785939',
                        '2.07880614597',
                        '1.08080644615'
                    ),
                    mvaValueMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV2RawValues"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaEleID-Fall17-iso-V2-wpHZZ'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string(''),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('GsfEleMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV2Categories"),
                    mvaCuts = cms.vstring(
                        '0.700642584415',
                        '0.739335420875',
                        '1.45390456109',
                        '-0.146270871164',
                        '-0.0315850882679',
                        '-0.0321841194737'
                    ),
                    mvaValueMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV2RawValues"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaEleID-Fall17-iso-V2-wpLoose'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string(''),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('GsfEleSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('? superCluster.isNonnull && superCluster.seed.isNonnull ?abs(deltaEtaSuperClusterTrackAtVtx - superCluster.eta + superCluster.seed.eta) : 999999.'),
                        cutValueEB = cms.double(0.00477),
                        cutValueEE = cms.double(0.00868),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(deltaPhiSuperClusterTrackAtVtx)'),
                        cutValueEB = cms.double(0.222),
                        cutValueEE = cms.double(0.213),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('full5x5_sigmaIetaIeta'),
                        cutValueEB = cms.double(0.011),
                        cutValueEE = cms.double(0.0314),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('hadronicOverEm'),
                        cutValueEB = cms.double(0.298),
                        cutValueEE = cms.double(0.101),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(1. - eSuperClusterOverP) / ecalEnergy'),
                        cutValueEB = cms.double(0.241),
                        cutValueEE = cms.double(0.14),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleEffAreaPFIsoCut'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/ElectronIdentification/data/Summer16/effAreaElectrons_cone03_pfNeuHadronsAndPhotons_80X.txt'),
                        isIgnored = cms.bool(False),
                        isRelativeIso = cms.bool(True),
                        isoCutEBHighPt = cms.double(0.0994),
                        isoCutEBLowPt = cms.double(0.0994),
                        isoCutEEHighPt = cms.double(0.107),
                        isoCutEELowPt = cms.double(0.107),
                        needsAdditionalProducts = cms.bool(True),
                        ptCutOff = cms.double(20.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        beamspotSrc = cms.InputTag("offlineBeamSpot"),
                        conversionSrc = cms.InputTag("allConversions"),
                        conversionSrcMiniAOD = cms.InputTag("reducedEgamma","reducedConversions"),
                        cutName = cms.string('GsfEleConversionVetoCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleMissingHitsCut'),
                        isIgnored = cms.bool(False),
                        maxMissingHitsEB = cms.uint32(1),
                        maxMissingHitsEE = cms.uint32(1),
                        needsAdditionalProducts = cms.bool(False)
                    )
                ),
                idName = cms.string('cutBasedElectronID-Summer16-80X-V1-loose'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('c1c4c739f1ba0791d40168c123183475'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('GsfEleSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('? superCluster.isNonnull && superCluster.seed.isNonnull ?abs(deltaEtaSuperClusterTrackAtVtx - superCluster.eta + superCluster.seed.eta) : 999999.'),
                        cutValueEB = cms.double(0.00311),
                        cutValueEE = cms.double(0.00609),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(deltaPhiSuperClusterTrackAtVtx)'),
                        cutValueEB = cms.double(0.103),
                        cutValueEE = cms.double(0.045),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('full5x5_sigmaIetaIeta'),
                        cutValueEB = cms.double(0.00998),
                        cutValueEE = cms.double(0.0298),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('hadronicOverEm'),
                        cutValueEB = cms.double(0.253),
                        cutValueEE = cms.double(0.0878),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(1. - eSuperClusterOverP) / ecalEnergy'),
                        cutValueEB = cms.double(0.134),
                        cutValueEE = cms.double(0.13),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleEffAreaPFIsoCut'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/ElectronIdentification/data/Summer16/effAreaElectrons_cone03_pfNeuHadronsAndPhotons_80X.txt'),
                        isIgnored = cms.bool(False),
                        isRelativeIso = cms.bool(True),
                        isoCutEBHighPt = cms.double(0.0695),
                        isoCutEBLowPt = cms.double(0.0695),
                        isoCutEEHighPt = cms.double(0.0821),
                        isoCutEELowPt = cms.double(0.0821),
                        needsAdditionalProducts = cms.bool(True),
                        ptCutOff = cms.double(20.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        beamspotSrc = cms.InputTag("offlineBeamSpot"),
                        conversionSrc = cms.InputTag("allConversions"),
                        conversionSrcMiniAOD = cms.InputTag("reducedEgamma","reducedConversions"),
                        cutName = cms.string('GsfEleConversionVetoCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleMissingHitsCut'),
                        isIgnored = cms.bool(False),
                        maxMissingHitsEB = cms.uint32(1),
                        maxMissingHitsEE = cms.uint32(1),
                        needsAdditionalProducts = cms.bool(False)
                    )
                ),
                idName = cms.string('cutBasedElectronID-Summer16-80X-V1-medium'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('71b43f74a27d2fd3d27416afd22e8692'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('GsfEleSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('? superCluster.isNonnull && superCluster.seed.isNonnull ?abs(deltaEtaSuperClusterTrackAtVtx - superCluster.eta + superCluster.seed.eta) : 999999.'),
                        cutValueEB = cms.double(0.00308),
                        cutValueEE = cms.double(0.00605),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(deltaPhiSuperClusterTrackAtVtx)'),
                        cutValueEB = cms.double(0.0816),
                        cutValueEE = cms.double(0.0394),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('full5x5_sigmaIetaIeta'),
                        cutValueEB = cms.double(0.00998),
                        cutValueEE = cms.double(0.0292),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('hadronicOverEm'),
                        cutValueEB = cms.double(0.0414),
                        cutValueEE = cms.double(0.0641),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(1. - eSuperClusterOverP) / ecalEnergy'),
                        cutValueEB = cms.double(0.0129),
                        cutValueEE = cms.double(0.0129),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleEffAreaPFIsoCut'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/ElectronIdentification/data/Summer16/effAreaElectrons_cone03_pfNeuHadronsAndPhotons_80X.txt'),
                        isIgnored = cms.bool(False),
                        isRelativeIso = cms.bool(True),
                        isoCutEBHighPt = cms.double(0.0588),
                        isoCutEBLowPt = cms.double(0.0588),
                        isoCutEEHighPt = cms.double(0.0571),
                        isoCutEELowPt = cms.double(0.0571),
                        needsAdditionalProducts = cms.bool(True),
                        ptCutOff = cms.double(20.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        beamspotSrc = cms.InputTag("offlineBeamSpot"),
                        conversionSrc = cms.InputTag("allConversions"),
                        conversionSrcMiniAOD = cms.InputTag("reducedEgamma","reducedConversions"),
                        cutName = cms.string('GsfEleConversionVetoCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleMissingHitsCut'),
                        isIgnored = cms.bool(False),
                        maxMissingHitsEB = cms.uint32(1),
                        maxMissingHitsEE = cms.uint32(1),
                        needsAdditionalProducts = cms.bool(False)
                    )
                ),
                idName = cms.string('cutBasedElectronID-Summer16-80X-V1-tight'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('ca2a9db2976d80ba2c13f9bfccdc32f2'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('GsfEleSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('? superCluster.isNonnull && superCluster.seed.isNonnull ?abs(deltaEtaSuperClusterTrackAtVtx - superCluster.eta + superCluster.seed.eta) : 999999.'),
                        cutValueEB = cms.double(0.00749),
                        cutValueEE = cms.double(0.00895),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(deltaPhiSuperClusterTrackAtVtx)'),
                        cutValueEB = cms.double(0.228),
                        cutValueEE = cms.double(0.213),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('full5x5_sigmaIetaIeta'),
                        cutValueEB = cms.double(0.0115),
                        cutValueEE = cms.double(0.037),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('hadronicOverEm'),
                        cutValueEB = cms.double(0.356),
                        cutValueEE = cms.double(0.211),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        cutName = cms.string('GsfEleEBEECut'),
                        cutString = cms.string('abs(1. - eSuperClusterOverP) / ecalEnergy'),
                        cutValueEB = cms.double(0.299),
                        cutValueEE = cms.double(0.15),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleEffAreaPFIsoCut'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/ElectronIdentification/data/Summer16/effAreaElectrons_cone03_pfNeuHadronsAndPhotons_80X.txt'),
                        isIgnored = cms.bool(False),
                        isRelativeIso = cms.bool(True),
                        isoCutEBHighPt = cms.double(0.175),
                        isoCutEBLowPt = cms.double(0.175),
                        isoCutEEHighPt = cms.double(0.159),
                        isoCutEELowPt = cms.double(0.159),
                        needsAdditionalProducts = cms.bool(True),
                        ptCutOff = cms.double(20.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        beamspotSrc = cms.InputTag("offlineBeamSpot"),
                        conversionSrc = cms.InputTag("allConversions"),
                        conversionSrcMiniAOD = cms.InputTag("reducedEgamma","reducedConversions"),
                        cutName = cms.string('GsfEleConversionVetoCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('GsfEleMissingHitsCut'),
                        isIgnored = cms.bool(False),
                        maxMissingHitsEB = cms.uint32(2),
                        maxMissingHitsEE = cms.uint32(3),
                        needsAdditionalProducts = cms.bool(False)
                    )
                ),
                idName = cms.string('cutBasedElectronID-Summer16-80X-V1-veto'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('0025c1841da1ab64a08d703ded72409b'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('GsfEleMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Spring16GeneralPurposeV1Categories"),
                    mvaCuts = cms.vstring(
                        '0.940962684155',
                        '0.899208843708',
                        '0.758484721184'
                    ),
                    mvaValueMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Spring16GeneralPurposeV1Values"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaEleID-Spring16-GeneralPurpose-V1-wp80'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('b490bc0b0af2d5f3e9efea562370af2a'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('GsfEleMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Spring16GeneralPurposeV1Categories"),
                    mvaCuts = cms.vstring(
                        '0.836695742607',
                        '0.715337944031',
                        '0.356799721718'
                    ),
                    mvaValueMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Spring16GeneralPurposeV1Values"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaEleID-Spring16-GeneralPurpose-V1-wp90'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('14c153aaf3c207deb3ad4932586647a7'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('GsfEleMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Spring16HZZV1Categories"),
                    mvaCuts = cms.vstring(
                        '-0.211',
                        '-0.396',
                        '-0.215',
                        '-0.870',
                        '-0.838',
                        '-0.763'
                    ),
                    mvaValueMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Spring16HZZV1Values"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaEleID-Spring16-HZZ-V1-wpLoose'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('1797cc03eb62387e10266fca72ea10cd'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('GsfEleMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Summer16ULIdIsoCategories"),
                    mvaCuts = cms.vstring(
                        '1.8949071018',
                        '1.80714210202',
                        '1.64751528517',
                        '0.339697782473',
                        '0.252039219555',
                        '-0.686263559006'
                    ),
                    mvaValueMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Summer16ULIdIsoRawValues"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaEleID-Summer16UL-ID-ISO-HZZ'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string(''),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('GsfEleMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Summer17ULIdIsoCategories"),
                    mvaCuts = cms.vstring(
                        '1.54440585808',
                        '1.50294621563',
                        '1.77306202112',
                        '0.157262554087',
                        '0.0273932225081',
                        '-0.623050463489'
                    ),
                    mvaValueMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Summer17ULIdIsoRawValues"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaEleID-Summer17UL-ID-ISO-HZZ'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string(''),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('GsfEleMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Summer18ULIdIsoCategories"),
                    mvaCuts = cms.vstring(
                        '1.49603193295',
                        '1.52414154008',
                        '1.77694249574',
                        '0.199463934736',
                        '0.076063564084',
                        '-0.572118857519'
                    ),
                    mvaValueMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Summer18ULIdIsoRawValues"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaEleID-Summer18UL-ID-ISO-HZZ'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string(''),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('GsfEleMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22NoIsoV1Categories"),
                    mvaCuts = cms.vstring(
                        '0.99776583820026143',
                        '0.99399710641666705',
                        '0.89762967983679642',
                        '0.99997133733482069',
                        '0.99991566148661426',
                        '0.99712023523348758'
                    ),
                    mvaValueMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22NoIsoV1Values"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaEleID-RunIIIWinter22-noIso-V1-wp80'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string(''),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('GsfEleMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22NoIsoV1Categories"),
                    mvaCuts = cms.vstring(
                        '0.9870981346957135',
                        '0.95756807831082225',
                        '0.4195020250389494',
                        '0.99981763428587134',
                        '0.99936974968805936',
                        '0.96553633326857091'
                    ),
                    mvaValueMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22NoIsoV1Values"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaEleID-RunIIIWinter22-noIso-V1-wp90'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string(''),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('GsfEleMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22IsoV1Categories"),
                    mvaCuts = cms.vstring(
                        '0.99776583820026143',
                        '0.99399710641666705',
                        '0.97627554114737425',
                        '0.99997133733482069',
                        '0.99991566148661426',
                        '0.99932288865775143'
                    ),
                    mvaValueMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22IsoV1Values"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaEleID-RunIIIWinter22-iso-V1-wp80'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string(''),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('GsfEleMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22IsoV1Categories"),
                    mvaCuts = cms.vstring(
                        '0.9870981346957135',
                        '0.95756807831082225',
                        '0.81079745560696059',
                        '0.99981763428587134',
                        '0.99936974968805936',
                        '0.99293135832977431'
                    ),
                    mvaValueMapName = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22IsoV1Values"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaEleID-RunIIIWinter22-iso-V1-wp90'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string(''),
            isPOGApproved = cms.untracked.bool(True)
        )
    ),
    physicsObjectSrc = cms.InputTag("reducedEgamma","reducedGedGsfElectrons")
)


process.egmPhotonIDs = cms.EDProducer("VersionedPhotonIdProducer",
    physicsObjectIDs = cms.VPSet(
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('PhoSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('PhotonHcalOverEcalBcCut'),
                        hcalOverEcalCutValueEB = cms.double(0.105),
                        hcalOverEcalCutValueEE = cms.double(0.029),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('PhoFull5x5SigmaIEtaIEtaCut'),
                        cutValueEB = cms.double(0.0103),
                        cutValueEE = cms.double(0.0276),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        constTermEB = cms.double(2.839),
                        constTermEE = cms.double(2.15),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('chargedHadronIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Fall17/effAreaPhotons_cone03_pfChargedHadrons_90percentBased_TrueVtx.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0),
                        linearPtTermEE = cms.double(0.0),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(0.0),
                        quadPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(9.188),
                        constTermEE = cms.double(10.471),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('neutralHadronIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Fall17/effAreaPhotons_cone03_pfNeutralHadrons_90percentBased_TrueVtx.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0126),
                        linearPtTermEE = cms.double(0.0119),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(2.6e-05),
                        quadPtTermEE = cms.double(2.5e-05),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(2.956),
                        constTermEE = cms.double(4.895),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('photonIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Fall17/effAreaPhotons_cone03_pfPhotons_90percentBased_TrueVtx.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0035),
                        linearPtTermEE = cms.double(0.004),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(0.0),
                        quadPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    )
                ),
                idName = cms.string('cutBasedPhotonID-Fall17-94X-V1-loose'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('45515ee95e01fa36972ff7ba69186c97'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('PhoSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('PhotonHcalOverEcalBcCut'),
                        hcalOverEcalCutValueEB = cms.double(0.035),
                        hcalOverEcalCutValueEE = cms.double(0.027),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('PhoFull5x5SigmaIEtaIEtaCut'),
                        cutValueEB = cms.double(0.0103),
                        cutValueEE = cms.double(0.0271),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        constTermEB = cms.double(1.416),
                        constTermEE = cms.double(1.012),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('chargedHadronIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Fall17/effAreaPhotons_cone03_pfChargedHadrons_90percentBased_TrueVtx.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0),
                        linearPtTermEE = cms.double(0.0),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(0.0),
                        quadPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(2.491),
                        constTermEE = cms.double(9.131),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('neutralHadronIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Fall17/effAreaPhotons_cone03_pfNeutralHadrons_90percentBased_TrueVtx.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0126),
                        linearPtTermEE = cms.double(0.0119),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(2.6e-05),
                        quadPtTermEE = cms.double(2.5e-05),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(2.952),
                        constTermEE = cms.double(4.095),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('photonIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Fall17/effAreaPhotons_cone03_pfPhotons_90percentBased_TrueVtx.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.004),
                        linearPtTermEE = cms.double(0.004),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(0.0),
                        quadPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    )
                ),
                idName = cms.string('cutBasedPhotonID-Fall17-94X-V1-medium'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('772f7921fa146b630e4dbe79e475a421'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('PhoSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('PhotonHcalOverEcalBcCut'),
                        hcalOverEcalCutValueEB = cms.double(0.02),
                        hcalOverEcalCutValueEE = cms.double(0.025),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('PhoFull5x5SigmaIEtaIEtaCut'),
                        cutValueEB = cms.double(0.0103),
                        cutValueEE = cms.double(0.0271),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        constTermEB = cms.double(1.158),
                        constTermEE = cms.double(0.575),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('chargedHadronIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Fall17/effAreaPhotons_cone03_pfChargedHadrons_90percentBased_TrueVtx.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0),
                        linearPtTermEE = cms.double(0.0),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(0.0),
                        quadPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(1.267),
                        constTermEE = cms.double(8.916),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('neutralHadronIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Fall17/effAreaPhotons_cone03_pfNeutralHadrons_90percentBased_TrueVtx.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0126),
                        linearPtTermEE = cms.double(0.0119),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(2.6e-05),
                        quadPtTermEE = cms.double(2.5e-05),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(2.065),
                        constTermEE = cms.double(3.272),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('photonIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Fall17/effAreaPhotons_cone03_pfPhotons_90percentBased_TrueVtx.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0035),
                        linearPtTermEE = cms.double(0.004),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(0.0),
                        quadPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    )
                ),
                idName = cms.string('cutBasedPhotonID-Fall17-94X-V1-tight'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('e260fee6f9011fb13ff56d45cccd21c5'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('PhoSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('PhotonHcalOverEcalBcCut'),
                        hcalOverEcalCutValueEB = cms.double(0.04596),
                        hcalOverEcalCutValueEE = cms.double(0.059),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('PhoFull5x5SigmaIEtaIEtaCut'),
                        cutValueEB = cms.double(0.0106),
                        cutValueEE = cms.double(0.0272),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        constTermEB = cms.double(1.694),
                        constTermEE = cms.double(2.089),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('chargedHadronIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Fall17/effAreaPhotons_cone03_pfChargedHadrons_90percentBased_V2.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0),
                        linearPtTermEE = cms.double(0.0),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(0.0),
                        quadPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(24.032),
                        constTermEE = cms.double(19.722),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('neutralHadronIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Fall17/effAreaPhotons_cone03_pfNeutralHadrons_90percentBased_V2.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.01512),
                        linearPtTermEE = cms.double(0.0117),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(2.259e-05),
                        quadPtTermEE = cms.double(2.3e-05),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(2.876),
                        constTermEE = cms.double(4.162),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('photonIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Fall17/effAreaPhotons_cone03_pfPhotons_90percentBased_V2.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.004017),
                        linearPtTermEE = cms.double(0.0037),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(0.0),
                        quadPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    )
                ),
                idName = cms.string('cutBasedPhotonID-Fall17-94X-V2-loose'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('4578dfcceb0bfd1ba5ac28973c843fd0'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('PhoSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('PhotonHcalOverEcalBcCut'),
                        hcalOverEcalCutValueEB = cms.double(0.02197),
                        hcalOverEcalCutValueEE = cms.double(0.0326),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('PhoFull5x5SigmaIEtaIEtaCut'),
                        cutValueEB = cms.double(0.01015),
                        cutValueEE = cms.double(0.0272),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        constTermEB = cms.double(1.141),
                        constTermEE = cms.double(1.051),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('chargedHadronIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Fall17/effAreaPhotons_cone03_pfChargedHadrons_90percentBased_V2.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0),
                        linearPtTermEE = cms.double(0.0),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(0.0),
                        quadPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(1.189),
                        constTermEE = cms.double(2.718),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('neutralHadronIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Fall17/effAreaPhotons_cone03_pfNeutralHadrons_90percentBased_V2.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.01512),
                        linearPtTermEE = cms.double(0.0117),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(2.259e-05),
                        quadPtTermEE = cms.double(2.3e-05),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(2.08),
                        constTermEE = cms.double(3.867),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('photonIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Fall17/effAreaPhotons_cone03_pfPhotons_90percentBased_V2.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.004017),
                        linearPtTermEE = cms.double(0.0037),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(0.0),
                        quadPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    )
                ),
                idName = cms.string('cutBasedPhotonID-Fall17-94X-V2-medium'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('28b186c301061395f394a81266c8d7de'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('PhoSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('PhotonHcalOverEcalBcCut'),
                        hcalOverEcalCutValueEB = cms.double(0.02148),
                        hcalOverEcalCutValueEE = cms.double(0.0321),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('PhoFull5x5SigmaIEtaIEtaCut'),
                        cutValueEB = cms.double(0.00996),
                        cutValueEE = cms.double(0.0271),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        constTermEB = cms.double(0.65),
                        constTermEE = cms.double(0.517),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('chargedHadronIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Fall17/effAreaPhotons_cone03_pfChargedHadrons_90percentBased_V2.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0),
                        linearPtTermEE = cms.double(0.0),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(0.0),
                        quadPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(0.317),
                        constTermEE = cms.double(2.716),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('neutralHadronIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Fall17/effAreaPhotons_cone03_pfNeutralHadrons_90percentBased_V2.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.01512),
                        linearPtTermEE = cms.double(0.0117),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(2.259e-05),
                        quadPtTermEE = cms.double(2.3e-05),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(2.044),
                        constTermEE = cms.double(3.032),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('photonIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Fall17/effAreaPhotons_cone03_pfPhotons_90percentBased_V2.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.004017),
                        linearPtTermEE = cms.double(0.0037),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(0.0),
                        quadPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    )
                ),
                idName = cms.string('cutBasedPhotonID-Fall17-94X-V2-tight'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('6f4f0ed6a8bf2de8dcf0bc3349b0546d'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('PhoMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v1p1Categories"),
                    mvaCuts = cms.vdouble(0.67, 0.54),
                    mvaValueMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v1p1Values"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaPhoID-RunIIFall17-v1p1-wp80'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('56138c4a3ac3c0bffc7f01c187063102'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('PhoMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v1p1Categories"),
                    mvaCuts = cms.vdouble(0.27, 0.14),
                    mvaValueMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v1p1Values"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaPhoID-RunIIFall17-v1p1-wp90'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('1120f91d15f68bf61b5f08958bf4f435'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('PhoMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v2Categories"),
                    mvaCuts = cms.vdouble(0.42, 0.14),
                    mvaValueMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v2Values"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaPhoID-RunIIFall17-v2-wp80'),
                isPOGApproved = cms.bool(True)
            ),
            idMD5 = cms.string('3013ddce7a3ad8b54827c29f5d92282e'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('PhoMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v2Categories"),
                    mvaCuts = cms.vdouble(-0.02, -0.26),
                    mvaValueMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v2Values"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaPhoID-RunIIFall17-v2-wp90'),
                isPOGApproved = cms.bool(True)
            ),
            idMD5 = cms.string('5c06832759b1faf7dd6fc45ed1aef3a2'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('PhoSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('PhotonHcalOverEcalBcCut'),
                        hcalOverEcalCutValueEB = cms.double(0.0597),
                        hcalOverEcalCutValueEE = cms.double(0.0481),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('PhoFull5x5SigmaIEtaIEtaCut'),
                        cutValueEB = cms.double(0.01031),
                        cutValueEE = cms.double(0.03013),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        constTermEB = cms.double(1.295),
                        constTermEE = cms.double(1.011),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('chargedHadronIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Spring16/effAreaPhotons_cone03_pfChargedHadrons_90percentBased.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0),
                        linearPtTermEE = cms.double(0.0),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(0.0),
                        quadPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(10.91),
                        constTermEE = cms.double(5.931),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('neutralHadronIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Spring16/effAreaPhotons_cone03_pfNeutralHadrons_90percentBased.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0148),
                        linearPtTermEE = cms.double(0.0163),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(1.7e-05),
                        quadPtTermEE = cms.double(1.4e-05),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(3.63),
                        constTermEE = cms.double(6.641),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('photonIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Spring16/effAreaPhotons_cone03_pfPhotons_90percentBased.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0047),
                        linearPtTermEE = cms.double(0.0034),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(0.0),
                        quadPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    )
                ),
                idName = cms.string('cutBasedPhotonID-Spring16-V2p2-loose'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('d6ce6a4f3476294bf0a3261e00170daf'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('PhoSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('PhotonHcalOverEcalBcCut'),
                        hcalOverEcalCutValueEB = cms.double(0.0396),
                        hcalOverEcalCutValueEE = cms.double(0.0219),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('PhoFull5x5SigmaIEtaIEtaCut'),
                        cutValueEB = cms.double(0.01022),
                        cutValueEE = cms.double(0.03001),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        constTermEB = cms.double(0.441),
                        constTermEE = cms.double(0.442),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('chargedHadronIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Spring16/effAreaPhotons_cone03_pfChargedHadrons_90percentBased.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0),
                        linearPtTermEE = cms.double(0.0),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(0.0),
                        quadPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(2.725),
                        constTermEE = cms.double(1.715),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('neutralHadronIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Spring16/effAreaPhotons_cone03_pfNeutralHadrons_90percentBased.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0148),
                        linearPtTermEE = cms.double(0.0163),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(1.7e-05),
                        quadPtTermEE = cms.double(1.4e-05),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(2.571),
                        constTermEE = cms.double(3.863),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('photonIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Spring16/effAreaPhotons_cone03_pfPhotons_90percentBased.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0047),
                        linearPtTermEE = cms.double(0.0034),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(0.0),
                        quadPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    )
                ),
                idName = cms.string('cutBasedPhotonID-Spring16-V2p2-medium'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('c739cfd0b6287b8586da187c06d4053f'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('PhoSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('PhotonHcalOverEcalBcCut'),
                        hcalOverEcalCutValueEB = cms.double(0.0269),
                        hcalOverEcalCutValueEE = cms.double(0.0213),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('PhoFull5x5SigmaIEtaIEtaCut'),
                        cutValueEB = cms.double(0.00994),
                        cutValueEE = cms.double(0.03),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        constTermEB = cms.double(0.202),
                        constTermEE = cms.double(0.034),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('chargedHadronIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Spring16/effAreaPhotons_cone03_pfChargedHadrons_90percentBased.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0),
                        linearPtTermEE = cms.double(0.0),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(0.0),
                        quadPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(0.264),
                        constTermEE = cms.double(0.586),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('neutralHadronIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Spring16/effAreaPhotons_cone03_pfNeutralHadrons_90percentBased.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0148),
                        linearPtTermEE = cms.double(0.0163),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(1.7e-05),
                        quadPtTermEE = cms.double(1.4e-05),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(2.362),
                        constTermEE = cms.double(2.617),
                        cutName = cms.string('PhoGenericRhoPtScaledCut'),
                        cutVariable = cms.string('photonIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Spring16/effAreaPhotons_cone03_pfPhotons_90percentBased.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0047),
                        linearPtTermEE = cms.double(0.0034),
                        needsAdditionalProducts = cms.bool(True),
                        quadPtTermEB = cms.double(0.0),
                        quadPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    )
                ),
                idName = cms.string('cutBasedPhotonID-Spring16-V2p2-tight'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('bdb623bdb1a15c13545020a919dd9530'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('PhoMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRun2Spring16NonTrigV1Categories"),
                    mvaCuts = cms.vdouble(0.68, 0.6),
                    mvaValueMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRun2Spring16NonTrigV1Values"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaPhoID-Spring16-nonTrig-V1-wp80'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('beb95233f7d1e033ad9e20cf3d804ba0'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('PhoMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRun2Spring16NonTrigV1Categories"),
                    mvaCuts = cms.vdouble(0.2, 0.2),
                    mvaValueMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRun2Spring16NonTrigV1Values"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaPhoID-Spring16-nonTrig-V1-wp90'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('36efe663348f95de0bc1cfa8dc7fa8fe'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('PhoMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIIWinter22v1Categories"),
                    mvaCuts = cms.vdouble(0.420473, 0.203451),
                    mvaValueMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIIWinter22v1Values"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaPhoID-RunIIIWinter22-v1-wp80'),
                isPOGApproved = cms.bool(True)
            ),
            idMD5 = cms.string('c198ffac6a62f5b64b1db5190048903722d29a66'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(cms.PSet(
                    cutName = cms.string('PhoMVACut'),
                    isIgnored = cms.bool(False),
                    mvaCategoriesMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIIWinter22v1Categories"),
                    mvaCuts = cms.vdouble(0.0439603, -0.249526),
                    mvaValueMapName = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIIWinter22v1Values"),
                    needsAdditionalProducts = cms.bool(True)
                )),
                idName = cms.string('mvaPhoID-RunIIIWinter22-v1-wp90'),
                isPOGApproved = cms.bool(True)
            ),
            idMD5 = cms.string('2720b451f89dd72162f4a1de626a03ee098c8352'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('PhoSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('PhoFull5x5SigmaIEtaIEtaCut'),
                        cutValueEB = cms.double(0.011452),
                        cutValueEE = cms.double(0.027674),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        constTermEB = cms.double(0.12999),
                        constTermEE = cms.double(0.15343),
                        cutName = cms.string('PhoGenericQuadraticRhoPtScaledCut'),
                        cutVariable = cms.string('hcalOverEcal'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/RunIII_Winter22/effectiveArea_coneBasedHoverE_95percentBased.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0),
                        linearPtTermEE = cms.double(0.0),
                        needsAdditionalProducts = cms.bool(True),
                        quadEAflag = cms.bool(True),
                        quadraticPtTermEB = cms.double(0.0),
                        quadraticPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(1.8852),
                        constTermEE = cms.double(1.654),
                        cutName = cms.string('PhoGenericQuadraticRhoPtScaledCut'),
                        cutVariable = cms.string('chargedHadronIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/RunIII_Winter22/effectiveArea_ChgHadronIso_95percentBased.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0),
                        linearPtTermEE = cms.double(0.0),
                        needsAdditionalProducts = cms.bool(True),
                        quadEAflag = cms.bool(True),
                        quadraticPtTermEB = cms.double(0.0),
                        quadraticPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(0.70379),
                        constTermEE = cms.double(6.61585),
                        cutName = cms.string('PhoGenericQuadraticRhoPtScaledCut'),
                        cutVariable = cms.string('ecalPFClusterIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/RunIII_Winter22/effectiveArea_ECalClusterIso_95percentBased.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.70379),
                        linearPtTermEE = cms.double(6.61585),
                        needsAdditionalProducts = cms.bool(True),
                        quadEAflag = cms.bool(True),
                        quadraticPtTermEB = cms.double(0.0),
                        quadraticPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(6.344),
                        constTermEE = cms.double(1.8588),
                        cutName = cms.string('PhoGenericQuadraticRhoPtScaledCut'),
                        cutVariable = cms.string('hcalPFClusterIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/RunIII_Winter22/effectiveArea_HCalClusterIso_95percentBased.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.010055),
                        linearPtTermEE = cms.double(0.0117),
                        needsAdditionalProducts = cms.bool(True),
                        quadEAflag = cms.bool(True),
                        quadraticPtTermEB = cms.double(5.783e-05),
                        quadraticPtTermEE = cms.double(7.476e-05),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    )
                ),
                idName = cms.string('cutBasedPhotonID-RunIIIWinter22-122X-V1-loose'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('57d3fe8d9a1bff37aca5d13887138607233af1b5'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('PhoSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('PhoFull5x5SigmaIEtaIEtaCut'),
                        cutValueEB = cms.double(0.01001),
                        cutValueEE = cms.double(0.02687),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        constTermEB = cms.double(0.058305),
                        constTermEE = cms.double(0.005181),
                        cutName = cms.string('PhoGenericQuadraticRhoPtScaledCut'),
                        cutVariable = cms.string('hcalOverEcal'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/RunIII_Winter22/effectiveArea_coneBasedHoverE_95percentBased.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0),
                        linearPtTermEE = cms.double(0.0),
                        needsAdditionalProducts = cms.bool(True),
                        quadEAflag = cms.bool(True),
                        quadraticPtTermEB = cms.double(0.0),
                        quadraticPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(0.93929),
                        constTermEE = cms.double(0.97029),
                        cutName = cms.string('PhoGenericQuadraticRhoPtScaledCut'),
                        cutVariable = cms.string('chargedHadronIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/RunIII_Winter22/effectiveArea_ChgHadronIso_95percentBased.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0),
                        linearPtTermEE = cms.double(0.0),
                        needsAdditionalProducts = cms.bool(True),
                        quadEAflag = cms.bool(True),
                        quadraticPtTermEB = cms.double(0.0),
                        quadraticPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(0.2277),
                        constTermEE = cms.double(1.124),
                        cutName = cms.string('PhoGenericQuadraticRhoPtScaledCut'),
                        cutVariable = cms.string('ecalPFClusterIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/RunIII_Winter22/effectiveArea_ECalClusterIso_95percentBased.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.2277),
                        linearPtTermEE = cms.double(1.124),
                        needsAdditionalProducts = cms.bool(True),
                        quadEAflag = cms.bool(True),
                        quadraticPtTermEB = cms.double(0.0),
                        quadraticPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(2.189),
                        constTermEE = cms.double(0.03367),
                        cutName = cms.string('PhoGenericQuadraticRhoPtScaledCut'),
                        cutVariable = cms.string('hcalPFClusterIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/RunIII_Winter22/effectiveArea_HCalClusterIso_95percentBased.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.010055),
                        linearPtTermEE = cms.double(0.0117),
                        needsAdditionalProducts = cms.bool(True),
                        quadEAflag = cms.bool(True),
                        quadraticPtTermEB = cms.double(5.783e-05),
                        quadraticPtTermEE = cms.double(7.476e-05),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    )
                ),
                idName = cms.string('cutBasedPhotonID-RunIIIWinter22-122X-V1-medium'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('114b047ad28e2aae54869847420514d74f2540b8'),
            isPOGApproved = cms.untracked.bool(True)
        ),
        cms.PSet(
            idDefinition = cms.PSet(
                cutFlow = cms.VPSet(
                    cms.PSet(
                        cutName = cms.string('MinPtCut'),
                        isIgnored = cms.bool(False),
                        minPt = cms.double(5.0),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        allowedEtaRanges = cms.VPSet(
                            cms.PSet(
                                maxEta = cms.double(1.479),
                                minEta = cms.double(0.0)
                            ),
                            cms.PSet(
                                maxEta = cms.double(2.5),
                                minEta = cms.double(1.479)
                            )
                        ),
                        cutName = cms.string('PhoSCEtaMultiRangeCut'),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False),
                        useAbsEta = cms.bool(True)
                    ),
                    cms.PSet(
                        barrelCutOff = cms.double(1.479),
                        cutName = cms.string('PhoFull5x5SigmaIEtaIEtaCut'),
                        cutValueEB = cms.double(0.009993),
                        cutValueEE = cms.double(0.02687),
                        isIgnored = cms.bool(False),
                        needsAdditionalProducts = cms.bool(False)
                    ),
                    cms.PSet(
                        constTermEB = cms.double(0.0417588),
                        constTermEE = cms.double(0.0025426),
                        cutName = cms.string('PhoGenericQuadraticRhoPtScaledCut'),
                        cutVariable = cms.string('hcalOverEcal'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/RunIII_Winter22/effectiveArea_coneBasedHoverE_95percentBased.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0),
                        linearPtTermEE = cms.double(0.0),
                        needsAdditionalProducts = cms.bool(True),
                        quadEAflag = cms.bool(True),
                        quadraticPtTermEB = cms.double(0.0),
                        quadraticPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(0.31631),
                        constTermEE = cms.double(0.29266),
                        cutName = cms.string('PhoGenericQuadraticRhoPtScaledCut'),
                        cutVariable = cms.string('chargedHadronIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/RunIII_Winter22/effectiveArea_ChgHadronIso_95percentBased.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0),
                        linearPtTermEE = cms.double(0.0),
                        needsAdditionalProducts = cms.bool(True),
                        quadEAflag = cms.bool(True),
                        quadraticPtTermEB = cms.double(0.0),
                        quadraticPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(0.14189),
                        constTermEE = cms.double(1.04269),
                        cutName = cms.string('PhoGenericQuadraticRhoPtScaledCut'),
                        cutVariable = cms.string('ecalPFClusterIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/RunIII_Winter22/effectiveArea_ECalClusterIso_95percentBased.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.14189),
                        linearPtTermEE = cms.double(1.04269),
                        needsAdditionalProducts = cms.bool(True),
                        quadEAflag = cms.bool(True),
                        quadraticPtTermEB = cms.double(0.0),
                        quadraticPtTermEE = cms.double(0.0),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    ),
                    cms.PSet(
                        constTermEB = cms.double(0.39057),
                        constTermEE = cms.double(0.029262),
                        cutName = cms.string('PhoGenericQuadraticRhoPtScaledCut'),
                        cutVariable = cms.string('hcalPFClusterIso'),
                        effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/RunIII_Winter22/effectiveArea_HCalClusterIso_95percentBased.txt'),
                        isIgnored = cms.bool(False),
                        lessThan = cms.bool(True),
                        linearPtTermEB = cms.double(0.0100547),
                        linearPtTermEE = cms.double(0.0117),
                        needsAdditionalProducts = cms.bool(True),
                        quadEAflag = cms.bool(True),
                        quadraticPtTermEB = cms.double(5.783e-05),
                        quadraticPtTermEE = cms.double(7.476e-05),
                        rho = cms.InputTag("fixedGridRhoFastjetAll")
                    )
                ),
                idName = cms.string('cutBasedPhotonID-RunIIIWinter22-122X-V1-tight'),
                isPOGApproved = cms.untracked.bool(True)
            ),
            idMD5 = cms.string('2e56bbbca90e9bc089e5a716412cc51f3de47cb3'),
            isPOGApproved = cms.untracked.bool(True)
        )
    ),
    physicsObjectSrc = cms.InputTag("reducedEgamma","reducedGedPhotons")
)


process.egmPhotonPUPPIIsolation = cms.EDProducer("CITKPFIsolationSumProducerForPUPPI",
    isolationConeDefinitions = cms.VPSet(
        cms.PSet(
            coneSize = cms.double(0.3),
            isolateAgainst = cms.string('h+'),
            isolationAlgo = cms.string('PhotonPFIsolationWithMapBasedVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3),
            particleBasedIsolation = cms.InputTag("reducedEgamma","reducedPhotonPfCandMap"),
            vertexIndex = cms.int32(0)
        ),
        cms.PSet(
            coneSize = cms.double(0.3),
            isolateAgainst = cms.string('h0'),
            isolationAlgo = cms.string('PhotonPFIsolationWithMapBasedVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3),
            particleBasedIsolation = cms.InputTag("reducedEgamma","reducedPhotonPfCandMap"),
            vertexIndex = cms.int32(0)
        ),
        cms.PSet(
            coneSize = cms.double(0.3),
            isolateAgainst = cms.string('gamma'),
            isolationAlgo = cms.string('PhotonPFIsolationWithMapBasedVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3),
            particleBasedIsolation = cms.InputTag("reducedEgamma","reducedPhotonPfCandMap"),
            vertexIndex = cms.int32(0)
        )
    ),
    mightGet = cms.optional.untracked.vstring,
    puppiValueMap = cms.InputTag("puppi"),
    srcForIsolationCone = cms.InputTag("particleFlow"),
    srcToIsolate = cms.InputTag("reducedEgamma","reducedGedPhotons"),
    usePUPPINoLepton = cms.bool(False)
)


process.elPFIsoDepositChargedAllPAT = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(0),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedParticlesPFBRECO")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("reducedEgamma","reducedGedGsfElectrons"),
    trackType = cms.string('candidate')
)


process.elPFIsoDepositChargedPAT = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(0),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedHadronsPFBRECO")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("reducedEgamma","reducedGedGsfElectrons"),
    trackType = cms.string('candidate')
)


process.elPFIsoDepositGammaPAT = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('PFCandWithSuperClusterExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(0),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        MissHitSCMatch_Veto = cms.bool(True),
        SCMatch_Veto = cms.bool(False),
        inputCandView = cms.InputTag("pfAllPhotonsPFBRECO")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("reducedEgamma","reducedGedGsfElectrons"),
    trackType = cms.string('candidate')
)


process.elPFIsoDepositNeutralPAT = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(0),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllNeutralHadronsPFBRECO")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("reducedEgamma","reducedGedGsfElectrons"),
    trackType = cms.string('candidate')
)


process.elPFIsoDepositPUPAT = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(0),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfPileUpAllChargedParticlesPFBRECO")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("reducedEgamma","reducedGedGsfElectrons"),
    trackType = cms.string('candidate')
)


process.elPFIsoValueCharged03NoPFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositChargedPAT"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    ))
)


process.elPFIsoValueCharged03PFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositChargedPAT"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    ))
)


process.elPFIsoValueCharged04NoPFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositChargedPAT"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    ))
)


process.elPFIsoValueCharged04PFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositChargedPAT"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    ))
)


process.elPFIsoValueChargedAll03NoPFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositChargedAllPAT"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    ))
)


process.elPFIsoValueChargedAll03PFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositChargedAllPAT"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    ))
)


process.elPFIsoValueChargedAll04NoPFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositChargedAllPAT"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    ))
)


process.elPFIsoValueChargedAll04PFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositChargedAllPAT"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    ))
)


process.elPFIsoValueGamma03NoPFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositGammaPAT"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.08)'),
        weight = cms.string('1')
    ))
)


process.elPFIsoValueGamma03PFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositGammaPAT"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.08)'),
        weight = cms.string('1')
    ))
)


process.elPFIsoValueGamma04NoPFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositGammaPAT"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.08)'),
        weight = cms.string('1')
    ))
)


process.elPFIsoValueGamma04PFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositGammaPAT"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.08)'),
        weight = cms.string('1')
    ))
)


process.elPFIsoValueNeutral03NoPFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositNeutralPAT"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    ))
)


process.elPFIsoValueNeutral03PFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositNeutralPAT"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    ))
)


process.elPFIsoValueNeutral04NoPFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositNeutralPAT"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    ))
)


process.elPFIsoValueNeutral04PFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositNeutralPAT"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    ))
)


process.elPFIsoValuePU03NoPFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositPUPAT"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    ))
)


process.elPFIsoValuePU03PFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositPUPAT"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    ))
)


process.elPFIsoValuePU04NoPFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositPUPAT"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    ))
)


process.elPFIsoValuePU04PFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositPUPAT"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    ))
)


process.electronMVAValueMapProducer = cms.EDProducer("ElectronMVAValueMapProducer",
    mvaConfigurations = cms.VPSet(
        cms.PSet(
            categoryCuts = cms.vstring(
                'pt < 10. && abs(superCluster.eta) < 0.800',
                'pt < 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
                'pt < 10. && abs(superCluster.eta) >= 1.479',
                'pt >= 10. && abs(superCluster.eta) < 0.800',
                'pt >= 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
                'pt >= 10. && abs(superCluster.eta) >= 1.479'
            ),
            mvaName = cms.string('ElectronMVAEstimatorRun2'),
            mvaTag = cms.string('Spring16HZZV1'),
            nCategories = cms.int32(6),
            variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Variables.txt'),
            weightFileNames = cms.vstring(
                'RecoEgamma/ElectronIdentification/data/Spring16_HZZ_V1/electronID_mva_Spring16_HZZ_V1_EB1_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/Spring16_HZZ_V1/electronID_mva_Spring16_HZZ_V1_EB2_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/Spring16_HZZ_V1/electronID_mva_Spring16_HZZ_V1_EE_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/Spring16_HZZ_V1/electronID_mva_Spring16_HZZ_V1_EB1_10.weights.root',
                'RecoEgamma/ElectronIdentification/data/Spring16_HZZ_V1/electronID_mva_Spring16_HZZ_V1_EB2_10.weights.root',
                'RecoEgamma/ElectronIdentification/data/Spring16_HZZ_V1/electronID_mva_Spring16_HZZ_V1_EE_10.weights.root'
            )
        ),
        cms.PSet(
            categoryCuts = cms.vstring(
                'abs(superCluster.eta) < 0.800',
                'abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
                'abs(superCluster.eta) >= 1.479'
            ),
            mvaName = cms.string('ElectronMVAEstimatorRun2'),
            mvaTag = cms.string('Spring16GeneralPurposeV1'),
            nCategories = cms.int32(3),
            variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Variables.txt'),
            weightFileNames = cms.vstring(
                'RecoEgamma/ElectronIdentification/data/Spring16_GeneralPurpose_V1/electronID_mva_Spring16_GeneralPurpose_V1_EB1_10.weights.root',
                'RecoEgamma/ElectronIdentification/data/Spring16_GeneralPurpose_V1/electronID_mva_Spring16_GeneralPurpose_V1_EB2_10.weights.root',
                'RecoEgamma/ElectronIdentification/data/Spring16_GeneralPurpose_V1/electronID_mva_Spring16_GeneralPurpose_V1_EE_10.weights.root'
            )
        ),
        cms.PSet(
            categoryCuts = cms.vstring(
                'pt < 10. && abs(superCluster.eta) < 0.800',
                'pt < 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
                'pt < 10. && abs(superCluster.eta) >= 1.479',
                'pt >= 10. && abs(superCluster.eta) < 0.800',
                'pt >= 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
                'pt >= 10. && abs(superCluster.eta) >= 1.479'
            ),
            mvaName = cms.string('ElectronMVAEstimatorRun2'),
            mvaTag = cms.string('Fall17NoIsoV1'),
            nCategories = cms.int32(6),
            variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Fall17V1Variables.txt'),
            weightFileNames = cms.vstring(
                'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB1_5_2017_puinfo_BDT.weights.root',
                'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB2_5_2017_puinfo_BDT.weights.root',
                'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EE_5_2017_puinfo_BDT.weights.root',
                'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB1_10_2017_puinfo_BDT.weights.root',
                'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB2_10_2017_puinfo_BDT.weights.root',
                'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EE_10_2017_puinfo_BDT.weights.root'
            )
        ),
        cms.PSet(
            categoryCuts = cms.vstring(
                'pt < 10. && abs(superCluster.eta) < 0.800',
                'pt < 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
                'pt < 10. && abs(superCluster.eta) >= 1.479',
                'pt >= 10. && abs(superCluster.eta) < 0.800',
                'pt >= 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
                'pt >= 10. && abs(superCluster.eta) >= 1.479'
            ),
            mvaName = cms.string('ElectronMVAEstimatorRun2'),
            mvaTag = cms.string('Fall17IsoV1'),
            nCategories = cms.int32(6),
            variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Fall17V1Variables.txt'),
            weightFileNames = cms.vstring(
                'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB1_5_2017_puinfo_iso_BDT.weights.root',
                'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB2_5_2017_puinfo_iso_BDT.weights.root',
                'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EE_5_2017_puinfo_iso_BDT.weights.root',
                'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB1_10_2017_puinfo_iso_BDT.weights.root',
                'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EB2_10_2017_puinfo_iso_BDT.weights.root',
                'RecoEgamma/ElectronIdentification/data/Fall17/EIDmva_EE_10_2017_puinfo_iso_BDT.weights.root'
            )
        ),
        cms.PSet(
            categoryCuts = cms.vstring(
                'pt < 10. && abs(superCluster.eta) < 0.800',
                'pt < 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
                'pt < 10. && abs(superCluster.eta) >= 1.479',
                'pt >= 10. && abs(superCluster.eta) < 0.800',
                'pt >= 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
                'pt >= 10. && abs(superCluster.eta) >= 1.479'
            ),
            mvaName = cms.string('ElectronMVAEstimatorRun2'),
            mvaTag = cms.string('Fall17NoIsoV2'),
            nCategories = cms.int32(6),
            variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Variables.txt'),
            weightFileNames = cms.vstring(
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17NoIsoV2/EB1_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17NoIsoV2/EB2_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17NoIsoV2/EE_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17NoIsoV2/EB1_10.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17NoIsoV2/EB2_10.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17NoIsoV2/EE_10.weights.root'
            )
        ),
        cms.PSet(
            categoryCuts = cms.vstring(
                'pt < 10. && abs(superCluster.eta) < 0.800',
                'pt < 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
                'pt < 10. && abs(superCluster.eta) >= 1.479',
                'pt >= 10. && abs(superCluster.eta) < 0.800',
                'pt >= 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
                'pt >= 10. && abs(superCluster.eta) >= 1.479'
            ),
            mvaName = cms.string('ElectronMVAEstimatorRun2'),
            mvaTag = cms.string('Fall17IsoV2'),
            nCategories = cms.int32(6),
            variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Variables.txt'),
            weightFileNames = cms.vstring(
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17IsoV2/EB1_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17IsoV2/EB2_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17IsoV2/EE_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17IsoV2/EB1_10.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17IsoV2/EB2_10.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Fall17IsoV2/EE_10.weights.root'
            )
        ),
        cms.PSet(
            categoryCuts = cms.vstring(
                'pt < 10. && abs(superCluster.eta) < 0.800',
                'pt < 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
                'pt < 10. && abs(superCluster.eta) >= 1.479',
                'pt >= 10. && abs(superCluster.eta) < 0.800',
                'pt >= 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
                'pt >= 10. && abs(superCluster.eta) >= 1.479'
            ),
            mvaName = cms.string('ElectronMVAEstimatorRun2'),
            mvaTag = cms.string('RunIIIWinter22NoIsoV1'),
            nCategories = cms.int32(6),
            variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronIDVariablesRun3.txt'),
            weightFileNames = cms.vstring(
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22NoIsoV1/EB1_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22NoIsoV1/EB2_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22NoIsoV1/EE_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22NoIsoV1/EB1_10.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22NoIsoV1/EB2_10.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22NoIsoV1/EE_10.weights.root'
            )
        ),
        cms.PSet(
            categoryCuts = cms.vstring(
                'pt < 10. && abs(superCluster.eta) < 0.800',
                'pt < 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
                'pt < 10. && abs(superCluster.eta) >= 1.479',
                'pt >= 10. && abs(superCluster.eta) < 0.800',
                'pt >= 10. && abs(superCluster.eta) >= 0.800 && abs(superCluster.eta) < 1.479',
                'pt >= 10. && abs(superCluster.eta) >= 1.479'
            ),
            mvaName = cms.string('ElectronMVAEstimatorRun2'),
            mvaTag = cms.string('RunIIIWinter22IsoV1'),
            nCategories = cms.int32(6),
            variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronIDVariablesRun3.txt'),
            weightFileNames = cms.vstring(
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22IsoV1/EB1_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22IsoV1/EB2_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22IsoV1/EE_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22IsoV1/EB1_10.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22IsoV1/EB2_10.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Winter22IsoV1/EE_10.weights.root'
            )
        ),
        cms.PSet(
            categoryCuts = cms.vstring(
                'pt < 10. & abs(superCluster.eta) < 0.800',
                'pt < 10. & abs(superCluster.eta) >= 0.800 & abs(superCluster.eta) < 1.479',
                'pt < 10. & abs(superCluster.eta) >= 1.479',
                'pt >= 10. & abs(superCluster.eta) < 0.800',
                'pt >= 10. & abs(superCluster.eta) >= 0.800 & abs(superCluster.eta) < 1.479',
                'pt >= 10. & abs(superCluster.eta) >= 1.479'
            ),
            mvaName = cms.string('ElectronMVAEstimatorRun2'),
            mvaTag = cms.string('Summer16ULIdIso'),
            nCategories = cms.int32(6),
            variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Variables.txt'),
            weightFileNames = cms.vstring(
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_16UL_ID_ISO/EB1_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_16UL_ID_ISO/EB2_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_16UL_ID_ISO/EE_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_16UL_ID_ISO/EB1_10.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_16UL_ID_ISO/EB2_10.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_16UL_ID_ISO/EE_10.weights.root'
            )
        ),
        cms.PSet(
            categoryCuts = cms.vstring(
                'pt < 10. & abs(superCluster.eta) < 0.800',
                'pt < 10. & abs(superCluster.eta) >= 0.800 & abs(superCluster.eta) < 1.479',
                'pt < 10. & abs(superCluster.eta) >= 1.479',
                'pt >= 10. & abs(superCluster.eta) < 0.800',
                'pt >= 10. & abs(superCluster.eta) >= 0.800 & abs(superCluster.eta) < 1.479',
                'pt >= 10. & abs(superCluster.eta) >= 1.479'
            ),
            mvaName = cms.string('ElectronMVAEstimatorRun2'),
            mvaTag = cms.string('Summer17ULIdIso'),
            nCategories = cms.int32(6),
            variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Variables.txt'),
            weightFileNames = cms.vstring(
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_17UL_ID_ISO/EB1_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_17UL_ID_ISO/EB2_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_17UL_ID_ISO/EE_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_17UL_ID_ISO/EB1_10.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_17UL_ID_ISO/EB2_10.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_17UL_ID_ISO/EE_10.weights.root'
            )
        ),
        cms.PSet(
            categoryCuts = cms.vstring(
                'pt < 10. & abs(superCluster.eta) < 0.800',
                'pt < 10. & abs(superCluster.eta) >= 0.800 & abs(superCluster.eta) < 1.479',
                'pt < 10. & abs(superCluster.eta) >= 1.479',
                'pt >= 10. & abs(superCluster.eta) < 0.800',
                'pt >= 10. & abs(superCluster.eta) >= 0.800 & abs(superCluster.eta) < 1.479',
                'pt >= 10. & abs(superCluster.eta) >= 1.479'
            ),
            mvaName = cms.string('ElectronMVAEstimatorRun2'),
            mvaTag = cms.string('Summer18ULIdIso'),
            nCategories = cms.int32(6),
            variableDefinition = cms.string('RecoEgamma/ElectronIdentification/data/ElectronMVAEstimatorRun2Variables.txt'),
            weightFileNames = cms.vstring(
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_18UL_ID_ISO/EB1_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_18UL_ID_ISO/EB2_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_18UL_ID_ISO/EE_5.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_18UL_ID_ISO/EB1_10.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_18UL_ID_ISO/EB2_10.weights.root',
                'RecoEgamma/ElectronIdentification/data/MVAWeightFiles/Summer_18UL_ID_ISO/EE_10.weights.root'
            )
        )
    ),
    src = cms.InputTag("reducedEgamma","reducedGedGsfElectrons")
)


process.electronMatch = cms.EDProducer("MCMatcher",
    checkCharge = cms.bool(True),
    matched = cms.InputTag("prunedGenParticles"),
    maxDPtRel = cms.double(0.5),
    maxDeltaR = cms.double(0.5),
    mcPdgId = cms.vint32(11),
    mcStatus = cms.vint32(1),
    resolveAmbiguities = cms.bool(True),
    resolveByMatchQuality = cms.bool(False),
    src = cms.InputTag("reducedEgamma","reducedGedGsfElectrons")
)


process.filteredDisplacedMuons = cms.EDProducer("DisplacedMuonFilterProducer",
    EcalIsoDeposits = cms.InputTag("displacedMuons","ecal"),
    FillDetectorBasedIsolation = cms.bool(False),
    FillTimingInfo = cms.bool(True),
    HcalIsoDeposits = cms.InputTag("displacedMuons","hcal"),
    HoIsoDeposits = cms.InputTag("displacedMuons","ho"),
    JetIsoDeposits = cms.InputTag("displacedMuons","jets"),
    TrackIsoDeposits = cms.InputTag("displacedMuons","tracker"),
    minMatches = cms.double(2),
    minPtSTA = cms.double(3.5),
    minPtTK = cms.double(3.5),
    srcMuons = cms.InputTag("displacedMuons")
)


process.gedGsfElectronsFrom80XTo106X = cms.EDProducer("ModifiedGsfElectronProducer",
    modifierConfig = cms.PSet(
        modifications = cms.VPSet(
            cms.PSet(
                ecalRecHitsEB = cms.InputTag("reducedEcalRecHitsEB"),
                ecalRecHitsEE = cms.InputTag("reducedEcalRecHitsEE"),
                modifierName = cms.string('EG8XObjectUpdateModifier')
            ),
            cms.PSet(
                allowGsfTrackForConvs = cms.bool(False),
                beamspot = cms.InputTag("offlineBeamSpot"),
                conversions = cms.InputTag("allConversions"),
                ecalRecHitsEB = cms.InputTag("reducedEcalRecHitsEB"),
                ecalRecHitsEE = cms.InputTag("reducedEcalRecHitsEE"),
                eleCollVMsAreKeyedTo = cms.InputTag("gedGsfElectrons"),
                eleTrkIso = cms.InputTag("heepIDVarValueMapsAOD","eleTrkPtIso"),
                eleTrkIso04 = cms.InputTag("heepIDVarValueMapsAOD","eleTrkPtIso04"),
                modifierName = cms.string('EG9X105XObjectUpdateModifier'),
                phoChargedHadIso = cms.InputTag("photonIDValueMapProducer","phoChargedIsolation"),
                phoChargedHadPFPVIso = cms.InputTag("egmPhotonIsolation","h+-DR030-"),
                phoChargedHadWorstVtxConeVetoIso = cms.InputTag("photonIDValueMapProducer","phoWorstChargedIsolationConeVeto"),
                phoChargedHadWorstVtxIso = cms.InputTag("photonIDValueMapProducer","phoWorstChargedIsolation"),
                phoCollVMsAreKeyedTo = cms.InputTag("slimmedPhotons","","@skipCurrentProcess"),
                phoNeutralHadIso = cms.InputTag("photonIDValueMapProducer","phoNeutralHadronIsolation"),
                phoPhotonIso = cms.InputTag("photonIDValueMapProducer","phoPhotonIsolation"),
                updateChargedHadPFPVIso = cms.bool(True)
            )
        )
    ),
    src = cms.InputTag("gedGsfElectrons")
)


process.gedGsfElectronsFrom94XTo106X = cms.EDProducer("ModifiedGsfElectronProducer",
    modifierConfig = cms.PSet(
        modifications = cms.VPSet(cms.PSet(
            allowGsfTrackForConvs = cms.bool(False),
            beamspot = cms.InputTag("offlineBeamSpot"),
            conversions = cms.InputTag("allConversions"),
            ecalRecHitsEB = cms.InputTag("reducedEcalRecHitsEB"),
            ecalRecHitsEE = cms.InputTag("reducedEcalRecHitsEE"),
            eleCollVMsAreKeyedTo = cms.InputTag("gedGsfElectrons"),
            eleTrkIso = cms.InputTag("heepIDVarValueMapsAOD","eleTrkPtIso"),
            eleTrkIso04 = cms.InputTag("heepIDVarValueMapsAOD","eleTrkPtIso04"),
            modifierName = cms.string('EG9X105XObjectUpdateModifier'),
            phoChargedHadIso = cms.InputTag("photonIDValueMapProducer","phoChargedIsolation"),
            phoChargedHadPFPVIso = cms.InputTag("egmPhotonIsolation","h+-DR030-"),
            phoChargedHadWorstVtxConeVetoIso = cms.InputTag("photonIDValueMapProducer","phoWorstChargedIsolationConeVeto"),
            phoChargedHadWorstVtxIso = cms.InputTag("photonIDValueMapProducer","phoWorstChargedIsolation"),
            phoCollVMsAreKeyedTo = cms.InputTag("slimmedPhotons","","@skipCurrentProcess"),
            phoNeutralHadIso = cms.InputTag("photonIDValueMapProducer","phoNeutralHadronIsolation"),
            phoPhotonIso = cms.InputTag("photonIDValueMapProducer","phoPhotonIsolation"),
            updateChargedHadPFPVIso = cms.bool(True)
        ))
    ),
    src = cms.InputTag("gedGsfElectrons")
)


process.genParticlesForJets = cms.EDProducer("InputGenJetsParticleSelector",
    excludeFromResonancePids = cms.vuint32(12, 13, 14, 16),
    excludeResonances = cms.bool(False),
    ignoreParticleIDs = cms.vuint32(
        1000022, 1000012, 1000014, 1000016, 2000012,
        2000014, 2000016, 1000039, 5100039, 4000012,
        4000014, 4000016, 9900012, 9900014, 9900016,
        39
    ),
    partonicFinalState = cms.bool(False),
    src = cms.InputTag("genParticles"),
    tausAsJets = cms.bool(False)
)


process.heavyIonCleanedGenJets = cms.EDProducer("HiGenJetCleaner",
    createNewCollection = cms.untracked.bool(True),
    deltaR = cms.double(0.25),
    fillDummyEntries = cms.untracked.bool(True),
    ptCut = cms.double(20),
    src = cms.InputTag("iterativeCone5HiGenJets")
)


process.heepIDVarValueMaps = cms.EDProducer("ElectronHEEPIDValueMapProducer",
    beamSpot = cms.InputTag("offlineBeamSpot"),
    candVetosAOD = cms.vstring(
        'ELES',
        'NONE',
        'NONELES'
    ),
    candVetosMiniAOD = cms.vstring(
        'ELES',
        'NONE',
        'NONELES'
    ),
    candsAOD = cms.VInputTag("packedCandsForTkIso", "lostTracksForTkIso", "lostTracksForTkIso:eleTracks"),
    candsMiniAOD = cms.VInputTag("packedPFCandidates", "lostTracks", "lostTracks:eleTracks"),
    dataFormat = cms.int32(0),
    ebRecHitsAOD = cms.InputTag("reducedEcalRecHitsEB"),
    ebRecHitsMiniAOD = cms.InputTag("reducedEgamma","reducedEBRecHits"),
    eeRecHitsAOD = cms.InputTag("reducedEcalRecHitsEB"),
    eeRecHitsMiniAOD = cms.InputTag("reducedEgamma","reducedEERecHits"),
    elesAOD = cms.InputTag("gedGsfElectrons"),
    elesMiniAOD = cms.InputTag("slimmedElectrons"),
    makeTrkIso04 = cms.bool(True),
    trkIso04Config = cms.PSet(
        barrelCuts = cms.PSet(
            algosToReject = cms.vstring(),
            allowedQualities = cms.vstring(),
            maxDPtPt = cms.double(0.1),
            maxDR = cms.double(0.4),
            maxDZ = cms.double(0.1),
            minDEta = cms.double(0.005),
            minDR = cms.double(0.0),
            minHits = cms.int32(8),
            minPixelHits = cms.int32(1),
            minPt = cms.double(1.0)
        ),
        endcapCuts = cms.PSet(
            algosToReject = cms.vstring(),
            allowedQualities = cms.vstring(),
            maxDPtPt = cms.double(0.1),
            maxDR = cms.double(0.4),
            maxDZ = cms.double(0.5),
            minDEta = cms.double(0.005),
            minDR = cms.double(0.0),
            minHits = cms.int32(8),
            minPixelHits = cms.int32(1),
            minPt = cms.double(1.0)
        )
    ),
    trkIsoConfig = cms.PSet(
        barrelCuts = cms.PSet(
            algosToReject = cms.vstring(),
            allowedQualities = cms.vstring(),
            maxDPtPt = cms.double(0.1),
            maxDR = cms.double(0.3),
            maxDZ = cms.double(0.1),
            minDEta = cms.double(0.005),
            minDR = cms.double(0.0),
            minHits = cms.int32(8),
            minPixelHits = cms.int32(1),
            minPt = cms.double(1.0)
        ),
        endcapCuts = cms.PSet(
            algosToReject = cms.vstring(),
            allowedQualities = cms.vstring(),
            maxDPtPt = cms.double(0.1),
            maxDR = cms.double(0.3),
            maxDZ = cms.double(0.5),
            minDEta = cms.double(0.005),
            minDR = cms.double(0.0),
            minHits = cms.int32(8),
            minPixelHits = cms.int32(1),
            minPt = cms.double(1.0)
        )
    )
)


process.heepIDVarValueMapsAOD = cms.EDProducer("ElectronHEEPIDValueMapProducer",
    beamSpot = cms.InputTag("offlineBeamSpot"),
    candVetosAOD = cms.vstring(
        'ELES',
        'NONE',
        'NONELES'
    ),
    candVetosMiniAOD = cms.vstring(
        'ELES',
        'NONE',
        'NONELES'
    ),
    candsAOD = cms.VInputTag("packedCandsForTkIso", "lostTracksForTkIso", "lostTracksForTkIso:eleTracks"),
    candsMiniAOD = cms.VInputTag("packedPFCandidates", "lostTracks", "lostTracks:eleTracks"),
    dataFormat = cms.int32(1),
    ebRecHitsAOD = cms.InputTag("reducedEcalRecHitsEB"),
    ebRecHitsMiniAOD = cms.InputTag("reducedEgamma","reducedEBRecHits"),
    eeRecHitsAOD = cms.InputTag("reducedEcalRecHitsEB"),
    eeRecHitsMiniAOD = cms.InputTag("reducedEgamma","reducedEERecHits"),
    elesAOD = cms.InputTag("gedGsfElectrons"),
    elesMiniAOD = cms.InputTag("slimmedElectrons"),
    makeTrkIso04 = cms.bool(True),
    trkIso04Config = cms.PSet(
        barrelCuts = cms.PSet(
            algosToReject = cms.vstring(),
            allowedQualities = cms.vstring(),
            maxDPtPt = cms.double(0.1),
            maxDR = cms.double(0.4),
            maxDZ = cms.double(0.1),
            minDEta = cms.double(0.005),
            minDR = cms.double(0.0),
            minHits = cms.int32(8),
            minPixelHits = cms.int32(1),
            minPt = cms.double(1.0)
        ),
        endcapCuts = cms.PSet(
            algosToReject = cms.vstring(),
            allowedQualities = cms.vstring(),
            maxDPtPt = cms.double(0.1),
            maxDR = cms.double(0.4),
            maxDZ = cms.double(0.5),
            minDEta = cms.double(0.005),
            minDR = cms.double(0.0),
            minHits = cms.int32(8),
            minPixelHits = cms.int32(1),
            minPt = cms.double(1.0)
        )
    ),
    trkIsoConfig = cms.PSet(
        barrelCuts = cms.PSet(
            algosToReject = cms.vstring(),
            allowedQualities = cms.vstring(),
            maxDPtPt = cms.double(0.1),
            maxDR = cms.double(0.3),
            maxDZ = cms.double(0.1),
            minDEta = cms.double(0.005),
            minDR = cms.double(0.0),
            minHits = cms.int32(8),
            minPixelHits = cms.int32(1),
            minPt = cms.double(1.0)
        ),
        endcapCuts = cms.PSet(
            algosToReject = cms.vstring(),
            allowedQualities = cms.vstring(),
            maxDPtPt = cms.double(0.1),
            maxDR = cms.double(0.3),
            maxDZ = cms.double(0.5),
            minDEta = cms.double(0.005),
            minDR = cms.double(0.0),
            minHits = cms.int32(8),
            minPixelHits = cms.int32(1),
            minPt = cms.double(1.0)
        )
    )
)


process.hfJetShowerShape = cms.EDProducer("HFJetShowerShape",
    hfTowerEtaWidth = cms.double(0.175),
    hfTowerPhiWidth = cms.double(0.175),
    jetEtaThreshold = cms.double(2.9),
    jetPtThreshold = cms.double(25),
    jetReferenceRadius = cms.double(0.4),
    jets = cms.InputTag("ak4PFJetsCHS"),
    mightGet = cms.optional.untracked.vstring,
    offsetPerPU = cms.double(0.4),
    stripPtThreshold = cms.double(10),
    vertexRecoEffcy = cms.double(0.7),
    vertices = cms.InputTag("offlineSlimmedPrimaryVertices"),
    widthPtThreshold = cms.double(3)
)


process.hgcElectronID = cms.EDProducer("HGCalElectronIDValueMapProducer",
    BHRecHits = cms.InputTag("HGCalRecHit","HGCHEBRecHits"),
    EERecHits = cms.InputTag("HGCalRecHit","HGCEERecHits"),
    FHRecHits = cms.InputTag("HGCalRecHit","HGCHEFRecHits"),
    dEdXWeights = cms.vdouble(
        0.0, 8.894541, 10.937907, 10.937907, 10.937907,
        10.937907, 10.937907, 10.937907, 10.937907, 10.937907,
        10.932882, 10.932882, 10.937907, 10.937907, 10.938169,
        10.938169, 10.938169, 10.938169, 10.938169, 10.938169,
        10.938169, 10.938169, 10.938169, 10.938169, 10.938169,
        10.938169, 10.938169, 10.938169, 32.332097, 51.574301,
        51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
        51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
        69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
        87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
        86.92952
    ),
    electrons = cms.InputTag("cleanedEcalDrivenGsfElectronsHGC"),
    hitMapTag = cms.InputTag("hgcalRecHitMapProducer"),
    isoDeltaR = cms.double(0.15),
    isoDeltaRmin = cms.double(0),
    isoNRings = cms.uint32(5),
    mightGet = cms.optional.untracked.vstring,
    pcaRadius = cms.double(3),
    variables = cms.vstring(
        'ecOrigEt',
        'ecOrigEnergy',
        'ecEt',
        'ecEnergy',
        'ecEnergyEE',
        'ecEnergyFH',
        'ecEnergyBH',
        'pcaEig1',
        'pcaEig2',
        'pcaEig3',
        'pcaSig1',
        'pcaSig2',
        'pcaSig3',
        'pcaAxisX',
        'pcaAxisY',
        'pcaAxisZ',
        'pcaPositionX',
        'pcaPositionY',
        'pcaPositionZ',
        'sigmaUU',
        'sigmaVV',
        'sigmaEE',
        'sigmaPP',
        'nLayers',
        'firstLayer',
        'lastLayer',
        'e4oEtot',
        'layerEfrac10',
        'layerEfrac90',
        'measuredDepth',
        'expectedDepth',
        'expectedSigma',
        'depthCompatibility',
        'caloIsoRing0',
        'caloIsoRing1',
        'caloIsoRing2',
        'caloIsoRing3',
        'caloIsoRing4'
    )
)


process.hgcPhotonID = cms.EDProducer("HGCalPhotonIDValueMapProducer",
    BHRecHits = cms.InputTag("HGCalRecHit","HGCHEBRecHits"),
    EERecHits = cms.InputTag("HGCalRecHit","HGCEERecHits"),
    FHRecHits = cms.InputTag("HGCalRecHit","HGCHEFRecHits"),
    dEdXWeights = cms.vdouble(
        0.0, 8.894541, 10.937907, 10.937907, 10.937907,
        10.937907, 10.937907, 10.937907, 10.937907, 10.937907,
        10.932882, 10.932882, 10.937907, 10.937907, 10.938169,
        10.938169, 10.938169, 10.938169, 10.938169, 10.938169,
        10.938169, 10.938169, 10.938169, 10.938169, 10.938169,
        10.938169, 10.938169, 10.938169, 32.332097, 51.574301,
        51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
        51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
        69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
        87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
        86.92952
    ),
    hitMapTag = cms.InputTag("hgcalRecHitMapProducer"),
    isoDeltaR = cms.double(0.15),
    isoDeltaRmin = cms.double(0),
    isoNRings = cms.uint32(5),
    mightGet = cms.optional.untracked.vstring,
    pcaRadius = cms.double(3),
    photons = cms.InputTag("photonsHGC"),
    variables = cms.vstring(
        'seedEt',
        'seedEnergy',
        'seedEnergyEE',
        'seedEnergyFH',
        'seedEnergyBH',
        'pcaEig1',
        'pcaEig2',
        'pcaEig3',
        'pcaSig1',
        'pcaSig2',
        'pcaSig3',
        'sigmaUU',
        'sigmaVV',
        'sigmaEE',
        'sigmaPP',
        'nLayers',
        'firstLayer',
        'lastLayer',
        'e4oEtot',
        'layerEfrac10',
        'layerEfrac90',
        'measuredDepth',
        'expectedDepth',
        'expectedSigma',
        'depthCompatibility',
        'caloIsoRing0',
        'caloIsoRing1',
        'caloIsoRing2',
        'caloIsoRing3',
        'caloIsoRing4'
    )
)


process.hgcalElectronIDValueMap = cms.EDProducer("HGCalElectronIDValueMapProducer",
    BHRecHits = cms.InputTag("HGCalRecHit","HGCHEBRecHits"),
    EERecHits = cms.InputTag("HGCalRecHit","HGCEERecHits"),
    FHRecHits = cms.InputTag("HGCalRecHit","HGCHEFRecHits"),
    dEdXWeights = cms.vdouble(
        0.0, 8.894541, 10.937907, 10.937907, 10.937907,
        10.937907, 10.937907, 10.937907, 10.937907, 10.937907,
        10.932882, 10.932882, 10.937907, 10.937907, 10.938169,
        10.938169, 10.938169, 10.938169, 10.938169, 10.938169,
        10.938169, 10.938169, 10.938169, 10.938169, 10.938169,
        10.938169, 10.938169, 10.938169, 32.332097, 51.574301,
        51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
        51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
        69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
        87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
        86.92952
    ),
    electrons = cms.InputTag("ecalDrivenGsfElectronsHGC"),
    hitMapTag = cms.InputTag("hgcalRecHitMapProducer"),
    isoDeltaR = cms.double(0.15),
    isoDeltaRmin = cms.double(0),
    isoNRings = cms.uint32(5),
    mightGet = cms.optional.untracked.vstring,
    pcaRadius = cms.double(3),
    variables = cms.vstring(
        'ecOrigEt',
        'ecOrigEnergy',
        'ecEt',
        'ecEnergy',
        'ecEnergyEE',
        'ecEnergyFH',
        'ecEnergyBH',
        'pcaEig1',
        'pcaEig2',
        'pcaEig3',
        'pcaSig1',
        'pcaSig2',
        'pcaSig3',
        'pcaAxisX',
        'pcaAxisY',
        'pcaAxisZ',
        'pcaPositionX',
        'pcaPositionY',
        'pcaPositionZ',
        'sigmaUU',
        'sigmaVV',
        'sigmaEE',
        'sigmaPP',
        'nLayers',
        'firstLayer',
        'lastLayer',
        'e4oEtot',
        'layerEfrac10',
        'layerEfrac90',
        'measuredDepth',
        'expectedDepth',
        'expectedSigma',
        'depthCompatibility',
        'caloIsoRing0',
        'caloIsoRing1',
        'caloIsoRing2',
        'caloIsoRing3',
        'caloIsoRing4'
    )
)


process.hgcalPhotonIDValueMap = cms.EDProducer("HGCalPhotonIDValueMapProducer",
    BHRecHits = cms.InputTag("HGCalRecHit","HGCHEBRecHits"),
    EERecHits = cms.InputTag("HGCalRecHit","HGCEERecHits"),
    FHRecHits = cms.InputTag("HGCalRecHit","HGCHEFRecHits"),
    dEdXWeights = cms.vdouble(
        0.0, 8.894541, 10.937907, 10.937907, 10.937907,
        10.937907, 10.937907, 10.937907, 10.937907, 10.937907,
        10.932882, 10.932882, 10.937907, 10.937907, 10.938169,
        10.938169, 10.938169, 10.938169, 10.938169, 10.938169,
        10.938169, 10.938169, 10.938169, 10.938169, 10.938169,
        10.938169, 10.938169, 10.938169, 32.332097, 51.574301,
        51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
        51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
        69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
        87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
        86.92952
    ),
    hitMapTag = cms.InputTag("hgcalRecHitMapProducer"),
    isoDeltaR = cms.double(0.15),
    isoDeltaRmin = cms.double(0),
    isoNRings = cms.uint32(5),
    mightGet = cms.optional.untracked.vstring,
    pcaRadius = cms.double(3),
    photons = cms.InputTag("photonsHGC"),
    variables = cms.vstring(
        'seedEt',
        'seedEnergy',
        'seedEnergyEE',
        'seedEnergyFH',
        'seedEnergyBH',
        'pcaEig1',
        'pcaEig2',
        'pcaEig3',
        'pcaSig1',
        'pcaSig2',
        'pcaSig3',
        'sigmaUU',
        'sigmaVV',
        'sigmaEE',
        'sigmaPP',
        'nLayers',
        'firstLayer',
        'lastLayer',
        'e4oEtot',
        'layerEfrac10',
        'layerEfrac90',
        'measuredDepth',
        'expectedDepth',
        'expectedSigma',
        'depthCompatibility',
        'caloIsoRing0',
        'caloIsoRing1',
        'caloIsoRing2',
        'caloIsoRing3',
        'caloIsoRing4'
    )
)


process.hgcalRecHitMapProducer = cms.EDProducer("HGCalRecHitMapProducer",
    BHInput = cms.InputTag("HGCalRecHit","HGCHEBRecHits"),
    EEInput = cms.InputTag("HGCalRecHit","HGCEERecHits"),
    FHInput = cms.InputTag("HGCalRecHit","HGCHEFRecHits"),
    mightGet = cms.optional.untracked.vstring
)


process.hiEvtPlane = cms.EDProducer("EvtPlaneProducer",
    CentBinCompression = cms.int32(5),
    FlatOrder = cms.int32(9),
    NumFlatBins = cms.int32(40),
    caloCentRef = cms.double(80.0),
    caloCentRefWidth = cms.double(5.0),
    caloTag = cms.InputTag("towerMaker"),
    castorTag = cms.InputTag("CastorTowerReco"),
    centralityBinTag = cms.InputTag("centralityBin","HFtowers"),
    centralityVariable = cms.string('HFtowers'),
    chi2 = cms.double(40.0),
    chi2MapLostTag = cms.InputTag("lostTrackChi2"),
    chi2MapTag = cms.InputTag("packedPFCandidateTrackChi2"),
    chi2perlayer = cms.double(0.18),
    cutEra = cms.int32(2),
    d0d0error = cms.double(3.0),
    dzdzerror = cms.double(3.0),
    dzdzerror_pix = cms.double(10.0),
    flatdelvtx = cms.double(3.0),
    flatminvtx = cms.double(-15.0),
    flatnvtxbins = cms.int32(10),
    loadDB = cms.bool(False),
    lostTag = cms.InputTag("lostTracks"),
    maxet = cms.double(-1),
    maxpt = cms.double(3.0),
    minet = cms.double(-1.0),
    minpt = cms.double(0.3),
    nhitsValid = cms.int32(11),
    nonDefaultGlauberModel = cms.string(''),
    pterror = cms.double(0.1),
    trackTag = cms.InputTag("hiGeneralTracks"),
    vertexTag = cms.InputTag("hiSelectedVertex")
)


process.hiEvtPlaneFlat = cms.EDProducer("HiEvtPlaneFlatProducer",
    CentBinCompression = cms.int32(5),
    FlatOrder = cms.int32(9),
    NumFlatBins = cms.int32(40),
    caloCentRef = cms.double(-1.0),
    caloCentRefWidth = cms.double(-1.0),
    centralityBinTag = cms.InputTag("centralityBin","HFtowers"),
    centralityTag = cms.InputTag("hiCentrality"),
    centralityVariable = cms.string('HFtowers'),
    flatdelvtx = cms.double(3.0),
    flatminvtx = cms.double(-15.0),
    flatnvtxbins = cms.int32(10),
    inputPlanesTag = cms.InputTag("hiEvtPlane"),
    nonDefaultGlauberModel = cms.string(''),
    trackTag = cms.InputTag("generalTracks"),
    useOffsetPsi = cms.bool(True),
    vertexTag = cms.InputTag("offlinePrimaryVertices")
)


process.hiFJRhoFlowModulation = cms.EDProducer("HiFJRhoFlowModulationProducer",
    EvtPlane = cms.InputTag("hiEvtPlane"),
    doEvtPlane = cms.bool(False),
    doFlatTest = cms.bool(False),
    doFreePlaneFit = cms.bool(False),
    doJettyExclusion = cms.bool(False),
    evtPlaneLevel = cms.int32(0),
    jetTag = cms.InputTag("ak4PFJets"),
    mightGet = cms.optional.untracked.vstring,
    pfCandSource = cms.InputTag("particleFlow")
)


process.hiHFfilters = cms.EDProducer("HiHFFilterProducer",
    mightGet = cms.optional.untracked.vstring,
    srcTowers = cms.InputTag("towerMaker")
)


process.hiPartons = cms.EDProducer("HiPartonCleaner",
    createNewCollection = cms.untracked.bool(True),
    deltaR = cms.double(0.25),
    fillDummyEntries = cms.untracked.bool(True),
    ptCut = cms.double(20),
    src = cms.InputTag("genPartons")
)


process.hiPixelTracks = cms.EDProducer("PATTracksToPackedCandidates",
    covarianceSchema = cms.int32(520),
    covarianceVersion = cms.int32(1),
    dxySigCut = cms.double(3.0),
    dxySigHP = cms.double(2.0),
    dzSigCut = cms.double(3.0),
    dzSigHP = cms.double(2.0),
    mightGet = cms.optional.untracked.vstring,
    ptMax = cms.double(1),
    ptMin = cms.double(0.3),
    resetHP = cms.bool(True),
    srcOfflineBeamSpot = cms.InputTag("offlineBeamSpot"),
    srcPrimaryVertices = cms.InputTag("offlineSlimmedPrimaryVertices"),
    srcTracks = cms.InputTag("hiConformalPixelTracks")
)


process.hiPuRho = cms.EDProducer("HiPuRhoProducer",
    dropZeroTowers = cms.bool(True),
    medianWindowWidth = cms.int32(2),
    mightGet = cms.optional.untracked.vstring,
    minimumTowersFraction = cms.double(0.7),
    nSigmaPU = cms.double(1),
    puPtMin = cms.double(15),
    rParam = cms.double(0.3),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("PFTowers"),
    towSigmaCut = cms.double(5)
)


process.hiSignalGenJetProducer = cms.EDProducer("HiSignalGenJetProducer",
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("akHiGenJets")
)


process.hiSignalGenParticles = cms.EDProducer("HiSignalParticleProducer",
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("genParticles")
)


process.hpsPFTauBasicDiscriminators = cms.EDProducer("PFRecoTauDiscriminationByIsolationContainer",
    IDWPdefinitions = cms.VPSet(
        cms.PSet(
            IDname = cms.string('ByLooseCombinedIsolationDBSumPtCorr3Hits'),
            maximumAbsoluteValues = cms.vdouble(2.5, 1000000000.0),
            maximumRelativeValues = cms.vdouble(-1.0, 0.1),
            referenceRawIDNames = cms.vstring(
                'ByRawCombinedIsolationDBSumPtCorr3Hits',
                'PhotonPtSumOutsideSignalCone'
            )
        ),
        cms.PSet(
            IDname = cms.string('ByMediumCombinedIsolationDBSumPtCorr3Hits'),
            maximumAbsoluteValues = cms.vdouble(1.5, 1000000000.0),
            maximumRelativeValues = cms.vdouble(-1.0, 0.1),
            referenceRawIDNames = cms.vstring(
                'ByRawCombinedIsolationDBSumPtCorr3Hits',
                'PhotonPtSumOutsideSignalCone'
            )
        ),
        cms.PSet(
            IDname = cms.string('ByTightCombinedIsolationDBSumPtCorr3Hits'),
            maximumAbsoluteValues = cms.vdouble(0.8, 1000000000.0),
            maximumRelativeValues = cms.vdouble(-1.0, 0.1),
            referenceRawIDNames = cms.vstring(
                'ByRawCombinedIsolationDBSumPtCorr3Hits',
                'PhotonPtSumOutsideSignalCone'
            )
        ),
        cms.PSet(
            IDname = cms.string('ByLooseChargedIsolation'),
            maximumAbsoluteValues = cms.vdouble(2.5),
            referenceRawIDNames = cms.vstring('ChargedIsoPtSum')
        ),
        cms.PSet(
            IDname = cms.string('ByPhotonPtSumOutsideSignalCone'),
            maximumRelativeValues = cms.vdouble(0.1),
            referenceRawIDNames = cms.vstring('PhotonPtSumOutsideSignalCone')
        )
    ),
    IDdefinitions = cms.VPSet(
        cms.PSet(
            ApplyDiscriminationByTrackerIsolation = cms.bool(True),
            IDname = cms.string('ChargedIsoPtSum'),
            storeRawSumPt = cms.bool(True)
        ),
        cms.PSet(
            ApplyDiscriminationByECALIsolation = cms.bool(True),
            IDname = cms.string('NeutralIsoPtSum'),
            storeRawSumPt = cms.bool(True)
        ),
        cms.PSet(
            ApplyDiscriminationByWeightedECALIsolation = cms.bool(True),
            IDname = cms.string('NeutralIsoPtSumWeight'),
            UseAllPFCandsForWeights = cms.bool(True),
            storeRawSumPt = cms.bool(True)
        ),
        cms.PSet(
            IDname = cms.string('TauFootprintCorrection'),
            storeRawFootprintCorrection = cms.bool(True)
        ),
        cms.PSet(
            IDname = cms.string('PhotonPtSumOutsideSignalCone'),
            storeRawPhotonSumPt_outsideSignalCone = cms.bool(True)
        ),
        cms.PSet(
            IDname = cms.string('PUcorrPtSum'),
            applyDeltaBetaCorrection = cms.bool(True),
            storeRawPUsumPt = cms.bool(True)
        ),
        cms.PSet(
            ApplyDiscriminationByECALIsolation = cms.bool(True),
            ApplyDiscriminationByTrackerIsolation = cms.bool(True),
            IDname = cms.string('ByRawCombinedIsolationDBSumPtCorr3Hits'),
            applyDeltaBetaCorrection = cms.bool(True),
            storeRawSumPt = cms.bool(True)
        )
    ),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMs"),
            cut = cms.double(0.5)
        )
    ),
    WeightECALIsolation = cms.double(1),
    applyFootprintCorrection = cms.bool(False),
    applyRhoCorrection = cms.bool(False),
    customOuterCone = cms.double(0.5),
    deltaBetaFactor = cms.string('0.2000'),
    deltaBetaPUTrackPtCutOverride = cms.bool(True),
    deltaBetaPUTrackPtCutOverride_val = cms.double(0.5),
    footprintCorrections = cms.VPSet(
        cms.PSet(
            offset = cms.string('0.0'),
            selection = cms.string('decayMode() = 0')
        ),
        cms.PSet(
            offset = cms.string('0.0'),
            selection = cms.string('decayMode() = 1 || decayMode() = 2')
        ),
        cms.PSet(
            offset = cms.string('2.7'),
            selection = cms.string('decayMode() = 5')
        ),
        cms.PSet(
            offset = cms.string('0.0'),
            selection = cms.string('decayMode() = 6')
        ),
        cms.PSet(
            offset = cms.string('max(2.0, 0.22*pt() - 2.0)'),
            selection = cms.string('decayMode() = 10')
        )
    ),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    mightGet = cms.optional.untracked.vstring,
    minTauPtForNoIso = cms.double(-99),
    particleFlowSrc = cms.InputTag("particleFlow"),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            maxDeltaZ = cms.double(0.2),
            maxDeltaZToLeadTrack = cms.double(-1.0),
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.03),
            minGammaEt = cms.double(1.0),
            minTrackHits = cms.uint32(3),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(0.5),
            minTrackVertexWeight = cms.double(-1.0)
        ),
        leadingTrkOrPFCandOption = cms.string('leadPFCand'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        pvFindingAlgo = cms.string('closestInDeltaZ'),
        recoverLeadingTrk = cms.bool(False),
        signalQualityCuts = cms.PSet(
            maxDeltaZ = cms.double(0.4),
            maxDeltaZToLeadTrack = cms.double(-1.0),
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.1),
            minGammaEt = cms.double(1.0),
            minNeutralHadronEt = cms.double(30.0),
            minTrackHits = cms.uint32(3),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(0.5),
            minTrackVertexWeight = cms.double(-1.0)
        ),
        vertexTrackFiltering = cms.bool(False),
        vxAssocQualityCuts = cms.PSet(
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.1),
            minGammaEt = cms.double(1.0),
            minTrackHits = cms.uint32(3),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(0.5),
            minTrackVertexWeight = cms.double(-1.0)
        )
    ),
    rhoConeSize = cms.double(0.5),
    rhoProducer = cms.InputTag("fixedGridRhoFastjetAll"),
    rhoUEOffsetCorrection = cms.double(1),
    verbosity = cms.int32(0),
    vertexSrc = cms.InputTag("offlinePrimaryVertices")
)


process.hpsPFTauBasicDiscriminatorsBoosted = cms.EDProducer("PFRecoTauDiscriminationByIsolationContainer",
    IDWPdefinitions = cms.VPSet(
        cms.PSet(
            IDname = cms.string('ByLooseCombinedIsolationDBSumPtCorr3Hits'),
            maximumAbsoluteValues = cms.vdouble(2.5, 1000000000.0),
            maximumRelativeValues = cms.vdouble(-1.0, 0.1),
            referenceRawIDNames = cms.vstring(
                'ByRawCombinedIsolationDBSumPtCorr3Hits',
                'PhotonPtSumOutsideSignalCone'
            )
        ),
        cms.PSet(
            IDname = cms.string('ByMediumCombinedIsolationDBSumPtCorr3Hits'),
            maximumAbsoluteValues = cms.vdouble(1.5, 1000000000.0),
            maximumRelativeValues = cms.vdouble(-1.0, 0.1),
            referenceRawIDNames = cms.vstring(
                'ByRawCombinedIsolationDBSumPtCorr3Hits',
                'PhotonPtSumOutsideSignalCone'
            )
        ),
        cms.PSet(
            IDname = cms.string('ByTightCombinedIsolationDBSumPtCorr3Hits'),
            maximumAbsoluteValues = cms.vdouble(0.8, 1000000000.0),
            maximumRelativeValues = cms.vdouble(-1.0, 0.1),
            referenceRawIDNames = cms.vstring(
                'ByRawCombinedIsolationDBSumPtCorr3Hits',
                'PhotonPtSumOutsideSignalCone'
            )
        ),
        cms.PSet(
            IDname = cms.string('ByLooseChargedIsolation'),
            maximumAbsoluteValues = cms.vdouble(2.5),
            referenceRawIDNames = cms.vstring('ChargedIsoPtSum')
        ),
        cms.PSet(
            IDname = cms.string('ByPhotonPtSumOutsideSignalCone'),
            maximumRelativeValues = cms.vdouble(0.1),
            referenceRawIDNames = cms.vstring('PhotonPtSumOutsideSignalCone')
        )
    ),
    IDdefinitions = cms.VPSet(
        cms.PSet(
            ApplyDiscriminationByTrackerIsolation = cms.bool(True),
            IDname = cms.string('ChargedIsoPtSum'),
            storeRawSumPt = cms.bool(True)
        ),
        cms.PSet(
            ApplyDiscriminationByECALIsolation = cms.bool(True),
            IDname = cms.string('NeutralIsoPtSum'),
            storeRawSumPt = cms.bool(True)
        ),
        cms.PSet(
            ApplyDiscriminationByWeightedECALIsolation = cms.bool(True),
            IDname = cms.string('NeutralIsoPtSumWeight'),
            UseAllPFCandsForWeights = cms.bool(True),
            storeRawSumPt = cms.bool(True)
        ),
        cms.PSet(
            IDname = cms.string('TauFootprintCorrection'),
            storeRawFootprintCorrection = cms.bool(True)
        ),
        cms.PSet(
            IDname = cms.string('PhotonPtSumOutsideSignalCone'),
            storeRawPhotonSumPt_outsideSignalCone = cms.bool(True)
        ),
        cms.PSet(
            IDname = cms.string('PUcorrPtSum'),
            applyDeltaBetaCorrection = cms.bool(True),
            storeRawPUsumPt = cms.bool(True)
        ),
        cms.PSet(
            ApplyDiscriminationByECALIsolation = cms.bool(True),
            ApplyDiscriminationByTrackerIsolation = cms.bool(True),
            IDname = cms.string('ByRawCombinedIsolationDBSumPtCorr3Hits'),
            applyDeltaBetaCorrection = cms.bool(True),
            storeRawSumPt = cms.bool(True)
        )
    ),
    PFTauProducer = cms.InputTag("hpsPFTauProducerBoosted"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMsBoosted"),
            cut = cms.double(0.5)
        )
    ),
    WeightECALIsolation = cms.double(1),
    applyFootprintCorrection = cms.bool(False),
    applyRhoCorrection = cms.bool(False),
    customOuterCone = cms.double(0.5),
    deltaBetaFactor = cms.string('0.2000'),
    deltaBetaPUTrackPtCutOverride = cms.bool(True),
    deltaBetaPUTrackPtCutOverride_val = cms.double(0.5),
    footprintCorrections = cms.VPSet(
        cms.PSet(
            offset = cms.string('0.0'),
            selection = cms.string('decayMode() = 0')
        ),
        cms.PSet(
            offset = cms.string('0.0'),
            selection = cms.string('decayMode() = 1 || decayMode() = 2')
        ),
        cms.PSet(
            offset = cms.string('2.7'),
            selection = cms.string('decayMode() = 5')
        ),
        cms.PSet(
            offset = cms.string('0.0'),
            selection = cms.string('decayMode() = 6')
        ),
        cms.PSet(
            offset = cms.string('max(2.0, 0.22*pt() - 2.0)'),
            selection = cms.string('decayMode() = 10')
        )
    ),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    mightGet = cms.optional.untracked.vstring,
    minTauPtForNoIso = cms.double(-99),
    particleFlowSrc = cms.InputTag("particleFlow"),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            maxDeltaZ = cms.double(0.2),
            maxDeltaZToLeadTrack = cms.double(-1.0),
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.03),
            minGammaEt = cms.double(1.0),
            minTrackHits = cms.uint32(3),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(0.5),
            minTrackVertexWeight = cms.double(-1.0)
        ),
        leadingTrkOrPFCandOption = cms.string('leadPFCand'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        pvFindingAlgo = cms.string('closestInDeltaZ'),
        recoverLeadingTrk = cms.bool(False),
        signalQualityCuts = cms.PSet(
            maxDeltaZ = cms.double(0.4),
            maxDeltaZToLeadTrack = cms.double(-1.0),
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.1),
            minGammaEt = cms.double(1.0),
            minNeutralHadronEt = cms.double(30.0),
            minTrackHits = cms.uint32(3),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(0.5),
            minTrackVertexWeight = cms.double(-1.0)
        ),
        vertexTrackFiltering = cms.bool(False),
        vxAssocQualityCuts = cms.PSet(
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.1),
            minGammaEt = cms.double(1.0),
            minTrackHits = cms.uint32(3),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(0.5),
            minTrackVertexWeight = cms.double(-1.0)
        )
    ),
    rhoConeSize = cms.double(0.5),
    rhoProducer = cms.InputTag("fixedGridRhoFastjetAll"),
    rhoUEOffsetCorrection = cms.double(1),
    verbosity = cms.int32(0),
    vertexSrc = cms.InputTag("offlinePrimaryVertices")
)


process.hpsPFTauBasicDiscriminatorsdR03 = cms.EDProducer("PFRecoTauDiscriminationByIsolationContainer",
    IDWPdefinitions = cms.VPSet(
        cms.PSet(
            IDname = cms.string('ByLooseCombinedIsolationDBSumPtCorr3HitsdR03'),
            maximumAbsoluteValues = cms.vdouble(2.5, 1000000000.0),
            maximumRelativeValues = cms.vdouble(-1.0, 0.1),
            referenceRawIDNames = cms.vstring(
                'ByRawCombinedIsolationDBSumPtCorr3HitsdR03',
                'PhotonPtSumOutsideSignalConedR03'
            )
        ),
        cms.PSet(
            IDname = cms.string('ByMediumCombinedIsolationDBSumPtCorr3HitsdR03'),
            maximumAbsoluteValues = cms.vdouble(1.5, 1000000000.0),
            maximumRelativeValues = cms.vdouble(-1.0, 0.1),
            referenceRawIDNames = cms.vstring(
                'ByRawCombinedIsolationDBSumPtCorr3HitsdR03',
                'PhotonPtSumOutsideSignalConedR03'
            )
        ),
        cms.PSet(
            IDname = cms.string('ByTightCombinedIsolationDBSumPtCorr3HitsdR03'),
            maximumAbsoluteValues = cms.vdouble(0.8, 1000000000.0),
            maximumRelativeValues = cms.vdouble(-1.0, 0.1),
            referenceRawIDNames = cms.vstring(
                'ByRawCombinedIsolationDBSumPtCorr3HitsdR03',
                'PhotonPtSumOutsideSignalConedR03'
            )
        )
    ),
    IDdefinitions = cms.VPSet(
        cms.PSet(
            ApplyDiscriminationByTrackerIsolation = cms.bool(True),
            IDname = cms.string('ChargedIsoPtSumdR03'),
            storeRawSumPt = cms.bool(True)
        ),
        cms.PSet(
            ApplyDiscriminationByECALIsolation = cms.bool(True),
            IDname = cms.string('NeutralIsoPtSumdR03'),
            storeRawSumPt = cms.bool(True)
        ),
        cms.PSet(
            ApplyDiscriminationByWeightedECALIsolation = cms.bool(True),
            IDname = cms.string('NeutralIsoPtSumWeightdR03'),
            UseAllPFCandsForWeights = cms.bool(True),
            storeRawSumPt = cms.bool(True)
        ),
        cms.PSet(
            IDname = cms.string('TauFootprintCorrectiondR03'),
            storeRawFootprintCorrection = cms.bool(True)
        ),
        cms.PSet(
            IDname = cms.string('PhotonPtSumOutsideSignalConedR03'),
            storeRawPhotonSumPt_outsideSignalCone = cms.bool(True)
        ),
        cms.PSet(
            IDname = cms.string('PUcorrPtSumdR03'),
            applyDeltaBetaCorrection = cms.bool(True),
            storeRawPUsumPt = cms.bool(True)
        ),
        cms.PSet(
            ApplyDiscriminationByECALIsolation = cms.bool(True),
            ApplyDiscriminationByTrackerIsolation = cms.bool(True),
            IDname = cms.string('ByRawCombinedIsolationDBSumPtCorr3HitsdR03'),
            applyDeltaBetaCorrection = cms.bool(True),
            storeRawSumPt = cms.bool(True)
        )
    ),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMs"),
            cut = cms.double(0.5)
        )
    ),
    WeightECALIsolation = cms.double(1),
    applyFootprintCorrection = cms.bool(False),
    applyRhoCorrection = cms.bool(False),
    customOuterCone = cms.double(0.3),
    deltaBetaFactor = cms.string('0.0720'),
    deltaBetaPUTrackPtCutOverride = cms.bool(True),
    deltaBetaPUTrackPtCutOverride_val = cms.double(0.5),
    footprintCorrections = cms.VPSet(
        cms.PSet(
            offset = cms.string('0.0'),
            selection = cms.string('decayMode() = 0')
        ),
        cms.PSet(
            offset = cms.string('0.0'),
            selection = cms.string('decayMode() = 1 || decayMode() = 2')
        ),
        cms.PSet(
            offset = cms.string('2.7'),
            selection = cms.string('decayMode() = 5')
        ),
        cms.PSet(
            offset = cms.string('0.0'),
            selection = cms.string('decayMode() = 6')
        ),
        cms.PSet(
            offset = cms.string('max(2.0, 0.22*pt() - 2.0)'),
            selection = cms.string('decayMode() = 10')
        )
    ),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    mightGet = cms.optional.untracked.vstring,
    minTauPtForNoIso = cms.double(-99),
    particleFlowSrc = cms.InputTag("particleFlow"),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            maxDeltaZ = cms.double(0.2),
            maxDeltaZToLeadTrack = cms.double(-1.0),
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.03),
            minGammaEt = cms.double(1.0),
            minTrackHits = cms.uint32(3),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(0.5),
            minTrackVertexWeight = cms.double(-1.0)
        ),
        leadingTrkOrPFCandOption = cms.string('leadPFCand'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        pvFindingAlgo = cms.string('closestInDeltaZ'),
        recoverLeadingTrk = cms.bool(False),
        signalQualityCuts = cms.PSet(
            maxDeltaZ = cms.double(0.4),
            maxDeltaZToLeadTrack = cms.double(-1.0),
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.1),
            minGammaEt = cms.double(1.0),
            minNeutralHadronEt = cms.double(30.0),
            minTrackHits = cms.uint32(3),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(0.5),
            minTrackVertexWeight = cms.double(-1.0)
        ),
        vertexTrackFiltering = cms.bool(False),
        vxAssocQualityCuts = cms.PSet(
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.1),
            minGammaEt = cms.double(1.0),
            minTrackHits = cms.uint32(3),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(0.5),
            minTrackVertexWeight = cms.double(-1.0)
        )
    ),
    rhoConeSize = cms.double(0.5),
    rhoProducer = cms.InputTag("fixedGridRhoFastjetAll"),
    rhoUEOffsetCorrection = cms.double(1),
    verbosity = cms.int32(0),
    vertexSrc = cms.InputTag("offlinePrimaryVertices")
)


process.hpsPFTauBasicDiscriminatorsdR03Boosted = cms.EDProducer("PFRecoTauDiscriminationByIsolationContainer",
    IDWPdefinitions = cms.VPSet(
        cms.PSet(
            IDname = cms.string('ByLooseCombinedIsolationDBSumPtCorr3HitsdR03'),
            maximumAbsoluteValues = cms.vdouble(2.5, 1000000000.0),
            maximumRelativeValues = cms.vdouble(-1.0, 0.1),
            referenceRawIDNames = cms.vstring(
                'ByRawCombinedIsolationDBSumPtCorr3HitsdR03',
                'PhotonPtSumOutsideSignalConedR03'
            )
        ),
        cms.PSet(
            IDname = cms.string('ByMediumCombinedIsolationDBSumPtCorr3HitsdR03'),
            maximumAbsoluteValues = cms.vdouble(1.5, 1000000000.0),
            maximumRelativeValues = cms.vdouble(-1.0, 0.1),
            referenceRawIDNames = cms.vstring(
                'ByRawCombinedIsolationDBSumPtCorr3HitsdR03',
                'PhotonPtSumOutsideSignalConedR03'
            )
        ),
        cms.PSet(
            IDname = cms.string('ByTightCombinedIsolationDBSumPtCorr3HitsdR03'),
            maximumAbsoluteValues = cms.vdouble(0.8, 1000000000.0),
            maximumRelativeValues = cms.vdouble(-1.0, 0.1),
            referenceRawIDNames = cms.vstring(
                'ByRawCombinedIsolationDBSumPtCorr3HitsdR03',
                'PhotonPtSumOutsideSignalConedR03'
            )
        )
    ),
    IDdefinitions = cms.VPSet(
        cms.PSet(
            ApplyDiscriminationByTrackerIsolation = cms.bool(True),
            IDname = cms.string('ChargedIsoPtSumdR03'),
            storeRawSumPt = cms.bool(True)
        ),
        cms.PSet(
            ApplyDiscriminationByECALIsolation = cms.bool(True),
            IDname = cms.string('NeutralIsoPtSumdR03'),
            storeRawSumPt = cms.bool(True)
        ),
        cms.PSet(
            ApplyDiscriminationByWeightedECALIsolation = cms.bool(True),
            IDname = cms.string('NeutralIsoPtSumWeightdR03'),
            UseAllPFCandsForWeights = cms.bool(True),
            storeRawSumPt = cms.bool(True)
        ),
        cms.PSet(
            IDname = cms.string('TauFootprintCorrectiondR03'),
            storeRawFootprintCorrection = cms.bool(True)
        ),
        cms.PSet(
            IDname = cms.string('PhotonPtSumOutsideSignalConedR03'),
            storeRawPhotonSumPt_outsideSignalCone = cms.bool(True)
        ),
        cms.PSet(
            IDname = cms.string('PUcorrPtSumdR03'),
            applyDeltaBetaCorrection = cms.bool(True),
            storeRawPUsumPt = cms.bool(True)
        ),
        cms.PSet(
            ApplyDiscriminationByECALIsolation = cms.bool(True),
            ApplyDiscriminationByTrackerIsolation = cms.bool(True),
            IDname = cms.string('ByRawCombinedIsolationDBSumPtCorr3HitsdR03'),
            applyDeltaBetaCorrection = cms.bool(True),
            storeRawSumPt = cms.bool(True)
        )
    ),
    PFTauProducer = cms.InputTag("hpsPFTauProducerBoosted"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMsBoosted"),
            cut = cms.double(0.5)
        )
    ),
    WeightECALIsolation = cms.double(1),
    applyFootprintCorrection = cms.bool(False),
    applyRhoCorrection = cms.bool(False),
    customOuterCone = cms.double(0.3),
    deltaBetaFactor = cms.string('0.0720'),
    deltaBetaPUTrackPtCutOverride = cms.bool(True),
    deltaBetaPUTrackPtCutOverride_val = cms.double(0.5),
    footprintCorrections = cms.VPSet(
        cms.PSet(
            offset = cms.string('0.0'),
            selection = cms.string('decayMode() = 0')
        ),
        cms.PSet(
            offset = cms.string('0.0'),
            selection = cms.string('decayMode() = 1 || decayMode() = 2')
        ),
        cms.PSet(
            offset = cms.string('2.7'),
            selection = cms.string('decayMode() = 5')
        ),
        cms.PSet(
            offset = cms.string('0.0'),
            selection = cms.string('decayMode() = 6')
        ),
        cms.PSet(
            offset = cms.string('max(2.0, 0.22*pt() - 2.0)'),
            selection = cms.string('decayMode() = 10')
        )
    ),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    mightGet = cms.optional.untracked.vstring,
    minTauPtForNoIso = cms.double(-99),
    particleFlowSrc = cms.InputTag("particleFlow"),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            maxDeltaZ = cms.double(0.2),
            maxDeltaZToLeadTrack = cms.double(-1.0),
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.03),
            minGammaEt = cms.double(1.0),
            minTrackHits = cms.uint32(3),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(0.5),
            minTrackVertexWeight = cms.double(-1.0)
        ),
        leadingTrkOrPFCandOption = cms.string('leadPFCand'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        pvFindingAlgo = cms.string('closestInDeltaZ'),
        recoverLeadingTrk = cms.bool(False),
        signalQualityCuts = cms.PSet(
            maxDeltaZ = cms.double(0.4),
            maxDeltaZToLeadTrack = cms.double(-1.0),
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.1),
            minGammaEt = cms.double(1.0),
            minNeutralHadronEt = cms.double(30.0),
            minTrackHits = cms.uint32(3),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(0.5),
            minTrackVertexWeight = cms.double(-1.0)
        ),
        vertexTrackFiltering = cms.bool(False),
        vxAssocQualityCuts = cms.PSet(
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.1),
            minGammaEt = cms.double(1.0),
            minTrackHits = cms.uint32(3),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(0.5),
            minTrackVertexWeight = cms.double(-1.0)
        )
    ),
    rhoConeSize = cms.double(0.5),
    rhoProducer = cms.InputTag("fixedGridRhoFastjetAll"),
    rhoUEOffsetCorrection = cms.double(1),
    verbosity = cms.int32(0),
    vertexSrc = cms.InputTag("offlinePrimaryVertices")
)


process.hpsPFTauDiscriminationByDeadECALElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectronDeadECAL",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMs"),
            cut = cms.double(0.5)
        )
    ),
    dR = cms.double(0.08),
    extrapolateToECalEntrance = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    minStatus = cms.uint32(12),
    verbosity = cms.int32(0)
)


process.hpsPFTauDiscriminationByDeadECALElectronRejectionBoosted = cms.EDProducer("PFRecoTauDiscriminationAgainstElectronDeadECAL",
    PFTauProducer = cms.InputTag("hpsPFTauProducerBoosted"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMsBoosted"),
            cut = cms.double(0.5)
        )
    ),
    dR = cms.double(0.08),
    extrapolateToECalEntrance = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    minStatus = cms.uint32(12),
    verbosity = cms.int32(0)
)


process.hpsPFTauDiscriminationByDecayModeFinding = cms.EDProducer("PFRecoTauDiscriminationByHPSSelection",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    decayModes = cms.VPSet(
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(-1000.0),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(0),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(0.1349),
            maxMass = cms.string('max(1.3, min(1.3*sqrt(pt/100.), 4.2))'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.3),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(1),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(0.0),
            maxMass = cms.string('max(1.2, min(1.2*sqrt(pt/100.), 4.0))'),
            maxPi0Mass = cms.double(0.2),
            minMass = cms.double(0.4),
            minPi0Mass = cms.double(0.05),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(2),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(False),
                mass = cms.bool(False),
                phi = cms.bool(False)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.5'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.8),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(3),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(0),
            nTracksMin = cms.uint32(2)
        )
    ),
    matchingCone = cms.double(0.5),
    minPixelHits = cms.int32(1),
    minTauPt = cms.double(0.0),
    requireTauChargedHadronsToBeChargedPFCands = cms.bool(True),
    verbosity = cms.int32(0)
)


process.hpsPFTauDiscriminationByDecayModeFindingBoosted = cms.EDProducer("PFRecoTauDiscriminationByHPSSelection",
    PFTauProducer = cms.InputTag("hpsPFTauProducerBoosted"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    decayModes = cms.VPSet(
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(-1000.0),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(0),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(0.1349),
            maxMass = cms.string('max(1.3, min(1.3*sqrt(pt/100.), 4.2))'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.3),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(1),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(0.0),
            maxMass = cms.string('max(1.2, min(1.2*sqrt(pt/100.), 4.0))'),
            maxPi0Mass = cms.double(0.2),
            minMass = cms.double(0.4),
            minPi0Mass = cms.double(0.05),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(2),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(False),
                mass = cms.bool(False),
                phi = cms.bool(False)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.5'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.8),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(3),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(0),
            nTracksMin = cms.uint32(2)
        )
    ),
    matchingCone = cms.double(0.5),
    minPixelHits = cms.int32(1),
    minTauPt = cms.double(0.0),
    requireTauChargedHadronsToBeChargedPFCands = cms.bool(True),
    verbosity = cms.int32(0)
)


process.hpsPFTauDiscriminationByDecayModeFindingNewDMs = cms.EDProducer("PFRecoTauDiscriminationByHPSSelection",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    decayModes = cms.VPSet(
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(-1000.0),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(0),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(0.1349),
            maxMass = cms.string('max(1.3, min(1.3*sqrt(pt/100.), 4.2))'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.3),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(1),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(0.0),
            maxMass = cms.string('max(1.2, min(1.2*sqrt(pt/100.), 4.0))'),
            maxPi0Mass = cms.double(0.2),
            minMass = cms.double(0.4),
            minPi0Mass = cms.double(0.05),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(2),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(False),
                mass = cms.bool(False),
                phi = cms.bool(False)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.2'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.0),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(2),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(0),
            nTracksMin = cms.uint32(2)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(False),
                mass = cms.bool(False),
                phi = cms.bool(False)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('max(1.2, min(1.2*sqrt(pt/100.), 4.0))'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.0),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(2),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(1),
            nTracksMin = cms.uint32(2)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(False),
                mass = cms.bool(False),
                phi = cms.bool(False)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.5'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.8),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(3),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(0),
            nTracksMin = cms.uint32(2)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(False),
                mass = cms.bool(False),
                phi = cms.bool(False)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.6'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.9),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(3),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(1),
            nTracksMin = cms.uint32(2)
        )
    ),
    matchingCone = cms.double(0.5),
    minPixelHits = cms.int32(1),
    minTauPt = cms.double(0.0),
    requireTauChargedHadronsToBeChargedPFCands = cms.bool(False),
    verbosity = cms.int32(0)
)


process.hpsPFTauDiscriminationByDecayModeFindingNewDMsBoosted = cms.EDProducer("PFRecoTauDiscriminationByHPSSelection",
    PFTauProducer = cms.InputTag("hpsPFTauProducerBoosted"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    decayModes = cms.VPSet(
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(-1000.0),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(0),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(0.1349),
            maxMass = cms.string('max(1.3, min(1.3*sqrt(pt/100.), 4.2))'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.3),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(1),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(0.0),
            maxMass = cms.string('max(1.2, min(1.2*sqrt(pt/100.), 4.0))'),
            maxPi0Mass = cms.double(0.2),
            minMass = cms.double(0.4),
            minPi0Mass = cms.double(0.05),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(2),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(False),
                mass = cms.bool(False),
                phi = cms.bool(False)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.2'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.0),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(2),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(0),
            nTracksMin = cms.uint32(2)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(False),
                mass = cms.bool(False),
                phi = cms.bool(False)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('max(1.2, min(1.2*sqrt(pt/100.), 4.0))'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.0),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(2),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(1),
            nTracksMin = cms.uint32(2)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(False),
                mass = cms.bool(False),
                phi = cms.bool(False)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.5'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.8),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(3),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(0),
            nTracksMin = cms.uint32(2)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(False),
                mass = cms.bool(False),
                phi = cms.bool(False)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.6'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.9),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(3),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(1),
            nTracksMin = cms.uint32(2)
        )
    ),
    matchingCone = cms.double(0.5),
    minPixelHits = cms.int32(1),
    minTauPt = cms.double(0.0),
    requireTauChargedHadronsToBeChargedPFCands = cms.bool(False),
    verbosity = cms.int32(0)
)


process.hpsPFTauDiscriminationByDecayModeFindingOldDMs = cms.EDProducer("PFRecoTauDiscriminationByHPSSelection",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    decayModes = cms.VPSet(
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(-1000.0),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(0),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(0.1349),
            maxMass = cms.string('max(1.3, min(1.3*sqrt(pt/100.), 4.2))'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.3),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(1),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(0.0),
            maxMass = cms.string('max(1.2, min(1.2*sqrt(pt/100.), 4.0))'),
            maxPi0Mass = cms.double(0.2),
            minMass = cms.double(0.4),
            minPi0Mass = cms.double(0.05),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(2),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(False),
                mass = cms.bool(False),
                phi = cms.bool(False)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.5'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.8),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(3),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(0),
            nTracksMin = cms.uint32(2)
        )
    ),
    matchingCone = cms.double(0.5),
    minPixelHits = cms.int32(1),
    minTauPt = cms.double(0.0),
    requireTauChargedHadronsToBeChargedPFCands = cms.bool(True),
    verbosity = cms.int32(0)
)


process.hpsPFTauDiscriminationByDecayModeFindingOldDMsBoosted = cms.EDProducer("PFRecoTauDiscriminationByHPSSelection",
    PFTauProducer = cms.InputTag("hpsPFTauProducerBoosted"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    decayModes = cms.VPSet(
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(-1000.0),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(0),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(0.1349),
            maxMass = cms.string('max(1.3, min(1.3*sqrt(pt/100.), 4.2))'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.3),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(1),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(0.0),
            maxMass = cms.string('max(1.2, min(1.2*sqrt(pt/100.), 4.0))'),
            maxPi0Mass = cms.double(0.2),
            minMass = cms.double(0.4),
            minPi0Mass = cms.double(0.05),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(2),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(False),
                mass = cms.bool(False),
                phi = cms.bool(False)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.5'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.8),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(3),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(0),
            nTracksMin = cms.uint32(2)
        )
    ),
    matchingCone = cms.double(0.5),
    minPixelHits = cms.int32(1),
    minTauPt = cms.double(0.0),
    requireTauChargedHadronsToBeChargedPFCands = cms.bool(True),
    verbosity = cms.int32(0)
)


process.hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLT = cms.EDProducer("RecoTauDiscriminantCutMultiplexer",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMs"),
            cut = cms.double(0.5)
        )
    ),
    inputFileName = cms.FileInPath('RecoTauTag/RecoTau/data/emptyMVAinputFile'),
    loadMVAfromDB = cms.bool(True),
    mapping = cms.VPSet(cms.PSet(
        category = cms.uint32(0),
        cut = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMdR0p3wLT'),
        variable = cms.string('pt')
    )),
    mightGet = cms.optional.untracked.vstring,
    mvaOutput_normalization = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMdR0p3wLT_mvaOutput_normalization'),
    rawValues = cms.vstring('discriminator'),
    toMultiplex = cms.InputTag("hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw"),
    verbosity = cms.int32(0),
    workingPoints = cms.vstring(
        '_VVLoose',
        '_VLoose',
        '_Loose',
        '_Medium',
        '_Tight',
        '_VTight',
        '_VVTight'
    )
)


process.hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw = cms.EDProducer("PFRecoTauDiscriminationByMVAIsolationRun2",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMs"),
            cut = cms.double(0.5)
        )
    ),
    inputFileName = cms.optional.FileInPath,
    inputIDNameSuffix = cms.string('dR03'),
    loadMVAfromDB = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    mvaName = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMdR0p3wLT'),
    mvaOpt = cms.string('DBoldDMwLTwGJ'),
    srcBasicTauDiscriminators = cms.InputTag("hpsPFTauBasicDiscriminatorsdR03"),
    srcTauTransverseImpactParameters = cms.InputTag("hpsPFTauTransverseImpactParameters"),
    verbosity = cms.int32(0)
)


process.hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLT = cms.EDProducer("RecoTauDiscriminantCutMultiplexer",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMs"),
            cut = cms.double(0.5)
        )
    ),
    inputFileName = cms.FileInPath('RecoTauTag/RecoTau/data/emptyMVAinputFile'),
    loadMVAfromDB = cms.bool(True),
    mapping = cms.VPSet(cms.PSet(
        category = cms.uint32(0),
        cut = cms.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT'),
        variable = cms.string('pt')
    )),
    mightGet = cms.optional.untracked.vstring,
    mvaOutput_normalization = cms.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT_mvaOutput_normalization'),
    rawValues = cms.vstring('discriminator'),
    toMultiplex = cms.InputTag("hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw"),
    verbosity = cms.int32(0),
    workingPoints = cms.vstring(
        '_VVLoose',
        '_VLoose',
        '_Loose',
        '_Medium',
        '_Tight',
        '_VTight',
        '_VVTight'
    )
)


process.hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTBoosted = cms.EDProducer("RecoTauDiscriminantCutMultiplexer",
    PFTauProducer = cms.InputTag("hpsPFTauProducerBoosted"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMsBoosted"),
            cut = cms.double(0.5)
        )
    ),
    inputFileName = cms.FileInPath('RecoTauTag/RecoTau/data/emptyMVAinputFile'),
    loadMVAfromDB = cms.bool(True),
    mapping = cms.VPSet(cms.PSet(
        category = cms.uint32(0),
        cut = cms.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT'),
        variable = cms.string('pt')
    )),
    mightGet = cms.optional.untracked.vstring,
    mvaOutput_normalization = cms.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT_mvaOutput_normalization'),
    rawValues = cms.vstring('discriminator'),
    toMultiplex = cms.InputTag("hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTrawBoosted"),
    verbosity = cms.int32(0),
    workingPoints = cms.vstring(
        '_VVLoose',
        '_VLoose',
        '_Loose',
        '_Medium',
        '_Tight',
        '_VTight',
        '_VVTight'
    )
)


process.hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw = cms.EDProducer("PFRecoTauDiscriminationByMVAIsolationRun2",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMs"),
            cut = cms.double(0.5)
        )
    ),
    inputFileName = cms.optional.FileInPath,
    inputIDNameSuffix = cms.string(''),
    loadMVAfromDB = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    mvaName = cms.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT'),
    mvaOpt = cms.string('DBnewDMwLTwGJ'),
    srcBasicTauDiscriminators = cms.InputTag("hpsPFTauBasicDiscriminators"),
    srcTauTransverseImpactParameters = cms.InputTag("hpsPFTauTransverseImpactParameters"),
    verbosity = cms.int32(0)
)


process.hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTrawBoosted = cms.EDProducer("PFRecoTauDiscriminationByMVAIsolationRun2",
    PFTauProducer = cms.InputTag("hpsPFTauProducerBoosted"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMsBoosted"),
            cut = cms.double(0.5)
        )
    ),
    inputFileName = cms.optional.FileInPath,
    inputIDNameSuffix = cms.string(''),
    loadMVAfromDB = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    mvaName = cms.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT'),
    mvaOpt = cms.string('DBnewDMwLTwGJ'),
    srcBasicTauDiscriminators = cms.InputTag("hpsPFTauBasicDiscriminatorsBoosted"),
    srcTauTransverseImpactParameters = cms.InputTag("hpsPFTauTransverseImpactParametersBoosted"),
    verbosity = cms.int32(0)
)


process.hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLT = cms.EDProducer("RecoTauDiscriminantCutMultiplexer",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMs"),
            cut = cms.double(0.5)
        )
    ),
    inputFileName = cms.FileInPath('RecoTauTag/RecoTau/data/emptyMVAinputFile'),
    loadMVAfromDB = cms.bool(True),
    mapping = cms.VPSet(cms.PSet(
        category = cms.uint32(0),
        cut = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT'),
        variable = cms.string('pt')
    )),
    mightGet = cms.optional.untracked.vstring,
    mvaOutput_normalization = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT_mvaOutput_normalization'),
    rawValues = cms.vstring('discriminator'),
    toMultiplex = cms.InputTag("hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw"),
    verbosity = cms.int32(0),
    workingPoints = cms.vstring(
        '_VVLoose',
        '_VLoose',
        '_Loose',
        '_Medium',
        '_Tight',
        '_VTight',
        '_VVTight'
    )
)


process.hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTBoosted = cms.EDProducer("RecoTauDiscriminantCutMultiplexer",
    PFTauProducer = cms.InputTag("hpsPFTauProducerBoosted"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMsBoosted"),
            cut = cms.double(0.5)
        )
    ),
    inputFileName = cms.FileInPath('RecoTauTag/RecoTau/data/emptyMVAinputFile'),
    loadMVAfromDB = cms.bool(True),
    mapping = cms.VPSet(cms.PSet(
        category = cms.uint32(0),
        cut = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT'),
        variable = cms.string('pt')
    )),
    mightGet = cms.optional.untracked.vstring,
    mvaOutput_normalization = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT_mvaOutput_normalization'),
    rawValues = cms.vstring('discriminator'),
    toMultiplex = cms.InputTag("hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTrawBoosted"),
    verbosity = cms.int32(0),
    workingPoints = cms.vstring(
        '_VVLoose',
        '_VLoose',
        '_Loose',
        '_Medium',
        '_Tight',
        '_VTight',
        '_VVTight'
    )
)


process.hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw = cms.EDProducer("PFRecoTauDiscriminationByMVAIsolationRun2",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMs"),
            cut = cms.double(0.5)
        )
    ),
    inputFileName = cms.optional.FileInPath,
    inputIDNameSuffix = cms.string(''),
    loadMVAfromDB = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    mvaName = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT'),
    mvaOpt = cms.string('DBoldDMwLTwGJ'),
    srcBasicTauDiscriminators = cms.InputTag("hpsPFTauBasicDiscriminators"),
    srcTauTransverseImpactParameters = cms.InputTag("hpsPFTauTransverseImpactParameters"),
    verbosity = cms.int32(0)
)


process.hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTrawBoosted = cms.EDProducer("PFRecoTauDiscriminationByMVAIsolationRun2",
    PFTauProducer = cms.InputTag("hpsPFTauProducerBoosted"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMsBoosted"),
            cut = cms.double(0.5)
        )
    ),
    inputFileName = cms.optional.FileInPath,
    inputIDNameSuffix = cms.string(''),
    loadMVAfromDB = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    mvaName = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT'),
    mvaOpt = cms.string('DBoldDMwLTwGJ'),
    srcBasicTauDiscriminators = cms.InputTag("hpsPFTauBasicDiscriminatorsBoosted"),
    srcTauTransverseImpactParameters = cms.InputTag("hpsPFTauTransverseImpactParametersBoosted"),
    verbosity = cms.int32(0)
)


process.hpsPFTauDiscriminationByLooseElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_BremCombined = cms.bool(False),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    ApplyCut_EcalCrackCut = cms.bool(False),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ApplyCut_EmFraction = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    ApplyCut_PFElectronMVA = cms.bool(True),
    BremCombined_Fraction = cms.double(0.99),
    BremCombined_HOP = cms.double(0.1),
    BremCombined_Mass = cms.double(0.55),
    BremCombined_StripSize = cms.double(0.03),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    EOverPLead_maxValue = cms.double(1.8),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    EmFraction_maxValue = cms.double(0.9),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    HcalTotOverPLead_minValue = cms.double(0.1),
    PFElectronMVA_maxValue = cms.double(0.6),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    )
)


process.hpsPFTauDiscriminationByMVA6ElectronRejection = cms.EDProducer("RecoTauDiscriminantCutMultiplexer",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMs"),
            cut = cms.double(0.5)
        )
    ),
    inputFileName = cms.FileInPath('RecoTauTag/RecoTau/data/emptyMVAinputFile'),
    loadMVAfromDB = cms.bool(True),
    mapping = cms.VPSet(
        cms.PSet(
            category = cms.uint32(0),
            cut = cms.string('RecoTauTag_antiElectronMVA_NoEleMatch_woGwoGSF_BL'),
            variable = cms.string('pt')
        ),
        cms.PSet(
            category = cms.uint32(2),
            cut = cms.string('RecoTauTag_antiElectronMVA_NoEleMatch_wGwoGSF_BL'),
            variable = cms.string('pt')
        ),
        cms.PSet(
            category = cms.uint32(5),
            cut = cms.string('RecoTauTag_antiElectronMVA_woGwGSF_BL'),
            variable = cms.string('pt')
        ),
        cms.PSet(
            category = cms.uint32(7),
            cut = cms.string('RecoTauTag_antiElectronMVA_wGwGSF_BL'),
            variable = cms.string('pt')
        ),
        cms.PSet(
            category = cms.uint32(8),
            cut = cms.string('RecoTauTag_antiElectronMVA_NoEleMatch_woGwoGSF_EC'),
            variable = cms.string('pt')
        ),
        cms.PSet(
            category = cms.uint32(10),
            cut = cms.string('RecoTauTag_antiElectronMVA_NoEleMatch_wGwoGSF_EC'),
            variable = cms.string('pt')
        ),
        cms.PSet(
            category = cms.uint32(13),
            cut = cms.string('RecoTauTag_antiElectronMVA_woGwGSF_EC'),
            variable = cms.string('pt')
        ),
        cms.PSet(
            category = cms.uint32(15),
            cut = cms.string('RecoTauTag_antiElectronMVA_wGwGSF_EC'),
            variable = cms.string('pt')
        )
    ),
    mightGet = cms.optional.untracked.vstring,
    mvaOutput_normalization = cms.string(''),
    rawValues = cms.vstring(
        'discriminator',
        'category'
    ),
    toMultiplex = cms.InputTag("hpsPFTauDiscriminationByMVA6rawElectronRejection"),
    verbosity = cms.int32(0),
    workingPoints = cms.vstring(
        '_VLoose',
        '_Loose',
        '_Medium',
        '_Tight',
        '_VTight'
    )
)


process.hpsPFTauDiscriminationByMVA6ElectronRejectionBoosted = cms.EDProducer("RecoTauDiscriminantCutMultiplexer",
    PFTauProducer = cms.InputTag("hpsPFTauProducerBoosted"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMsBoosted"),
            cut = cms.double(0.5)
        )
    ),
    inputFileName = cms.FileInPath('RecoTauTag/RecoTau/data/emptyMVAinputFile'),
    loadMVAfromDB = cms.bool(True),
    mapping = cms.VPSet(
        cms.PSet(
            category = cms.uint32(0),
            cut = cms.string('RecoTauTag_antiElectronMVA_NoEleMatch_woGwoGSF_BL'),
            variable = cms.string('pt')
        ),
        cms.PSet(
            category = cms.uint32(2),
            cut = cms.string('RecoTauTag_antiElectronMVA_NoEleMatch_wGwoGSF_BL'),
            variable = cms.string('pt')
        ),
        cms.PSet(
            category = cms.uint32(5),
            cut = cms.string('RecoTauTag_antiElectronMVA_woGwGSF_BL'),
            variable = cms.string('pt')
        ),
        cms.PSet(
            category = cms.uint32(7),
            cut = cms.string('RecoTauTag_antiElectronMVA_wGwGSF_BL'),
            variable = cms.string('pt')
        ),
        cms.PSet(
            category = cms.uint32(8),
            cut = cms.string('RecoTauTag_antiElectronMVA_NoEleMatch_woGwoGSF_EC'),
            variable = cms.string('pt')
        ),
        cms.PSet(
            category = cms.uint32(10),
            cut = cms.string('RecoTauTag_antiElectronMVA_NoEleMatch_wGwoGSF_EC'),
            variable = cms.string('pt')
        ),
        cms.PSet(
            category = cms.uint32(13),
            cut = cms.string('RecoTauTag_antiElectronMVA_woGwGSF_EC'),
            variable = cms.string('pt')
        ),
        cms.PSet(
            category = cms.uint32(15),
            cut = cms.string('RecoTauTag_antiElectronMVA_wGwGSF_EC'),
            variable = cms.string('pt')
        )
    ),
    mightGet = cms.optional.untracked.vstring,
    mvaOutput_normalization = cms.string(''),
    rawValues = cms.vstring(
        'discriminator',
        'category'
    ),
    toMultiplex = cms.InputTag("hpsPFTauDiscriminationByMVA6rawElectronRejectionBoosted"),
    verbosity = cms.int32(0),
    workingPoints = cms.vstring(
        '_VLoose',
        '_Loose',
        '_Medium',
        '_Tight',
        '_VTight'
    )
)


process.hpsPFTauDiscriminationByMVA6rawElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectronMVA6",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMs"),
            cut = cms.double(0.5)
        )
    ),
    hgcalElectronIDs = cms.VInputTag(),
    isPhase2 = cms.bool(False),
    loadMVAfromDB = cms.bool(True),
    method = cms.string('BDTG'),
    mightGet = cms.optional.untracked.vstring,
    minMVANoEleMatchWOgWOgsfBL = cms.double(0),
    minMVANoEleMatchWOgWOgsfEC = cms.double(0),
    minMVANoEleMatchWgWOgsfBL = cms.double(0),
    minMVANoEleMatchWgWOgsfEC = cms.double(0),
    minMVAWOgWgsfBL = cms.double(0),
    minMVAWOgWgsfEC = cms.double(0),
    minMVAWgWgsfBL = cms.double(0),
    minMVAWgWgsfEC = cms.double(0),
    mvaName_NoEleMatch_wGwoGSF_BL = cms.string('RecoTauTag_antiElectronMVA_NoEleMatch_wGwoGSF_BL'),
    mvaName_NoEleMatch_wGwoGSF_EC = cms.string('RecoTauTag_antiElectronMVA_NoEleMatch_wGwoGSF_EC'),
    mvaName_NoEleMatch_woGwoGSF_BL = cms.string('RecoTauTag_antiElectronMVA_NoEleMatch_woGwoGSF_BL'),
    mvaName_NoEleMatch_woGwoGSF_EC = cms.string('RecoTauTag_antiElectronMVA_NoEleMatch_woGwoGSF_EC'),
    mvaName_wGwGSF_BL = cms.string('RecoTauTag_antiElectronMVA_wGwGSF_BL'),
    mvaName_wGwGSF_EC = cms.string('RecoTauTag_antiElectronMVA_wGwGSF_EC'),
    mvaName_woGwGSF_BL = cms.string('RecoTauTag_antiElectronMVA_woGwGSF_BL'),
    mvaName_woGwGSF_EC = cms.string('RecoTauTag_antiElectronMVA_woGwGSF_EC'),
    returnMVA = cms.bool(True),
    srcElectrons = cms.InputTag("gedGsfElectrons"),
    usePhiAtEcalEntranceExtrapolation = cms.bool(False),
    verbosity = cms.int32(0),
    vetoEcalCracks = cms.bool(False)
)


process.hpsPFTauDiscriminationByMVA6rawElectronRejectionBoosted = cms.EDProducer("PFRecoTauDiscriminationAgainstElectronMVA6",
    PFTauProducer = cms.InputTag("hpsPFTauProducerBoosted"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMsBoosted"),
            cut = cms.double(0.5)
        )
    ),
    hgcalElectronIDs = cms.VInputTag(),
    isPhase2 = cms.bool(False),
    loadMVAfromDB = cms.bool(True),
    method = cms.string('BDTG'),
    mightGet = cms.optional.untracked.vstring,
    minMVANoEleMatchWOgWOgsfBL = cms.double(0),
    minMVANoEleMatchWOgWOgsfEC = cms.double(0),
    minMVANoEleMatchWgWOgsfBL = cms.double(0),
    minMVANoEleMatchWgWOgsfEC = cms.double(0),
    minMVAWOgWgsfBL = cms.double(0),
    minMVAWOgWgsfEC = cms.double(0),
    minMVAWgWgsfBL = cms.double(0),
    minMVAWgWgsfEC = cms.double(0),
    mvaName_NoEleMatch_wGwoGSF_BL = cms.string('RecoTauTag_antiElectronMVA_NoEleMatch_wGwoGSF_BL'),
    mvaName_NoEleMatch_wGwoGSF_EC = cms.string('RecoTauTag_antiElectronMVA_NoEleMatch_wGwoGSF_EC'),
    mvaName_NoEleMatch_woGwoGSF_BL = cms.string('RecoTauTag_antiElectronMVA_NoEleMatch_woGwoGSF_BL'),
    mvaName_NoEleMatch_woGwoGSF_EC = cms.string('RecoTauTag_antiElectronMVA_NoEleMatch_woGwoGSF_EC'),
    mvaName_wGwGSF_BL = cms.string('RecoTauTag_antiElectronMVA_wGwGSF_BL'),
    mvaName_wGwGSF_EC = cms.string('RecoTauTag_antiElectronMVA_wGwGSF_EC'),
    mvaName_woGwGSF_BL = cms.string('RecoTauTag_antiElectronMVA_woGwGSF_BL'),
    mvaName_woGwGSF_EC = cms.string('RecoTauTag_antiElectronMVA_woGwGSF_EC'),
    returnMVA = cms.bool(True),
    srcElectrons = cms.InputTag("gedGsfElectrons"),
    usePhiAtEcalEntranceExtrapolation = cms.bool(False),
    verbosity = cms.int32(0),
    vetoEcalCracks = cms.bool(False)
)


process.hpsPFTauDiscriminationByMediumElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_BremCombined = cms.bool(False),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    ApplyCut_EcalCrackCut = cms.bool(True),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ApplyCut_EmFraction = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    ApplyCut_PFElectronMVA = cms.bool(True),
    BremCombined_Fraction = cms.double(0.99),
    BremCombined_HOP = cms.double(0.1),
    BremCombined_Mass = cms.double(0.55),
    BremCombined_StripSize = cms.double(0.03),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    EOverPLead_maxValue = cms.double(1.8),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    EmFraction_maxValue = cms.double(0.9),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    HcalTotOverPLead_minValue = cms.double(0.1),
    PFElectronMVA_maxValue = cms.double(-0.1),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    )
)


process.hpsPFTauDiscriminationByMuonRejection3 = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon2Container",
    IDWPdefinitions = cms.VPSet(
        cms.PSet(
            HoPMin = cms.double(0.2),
            IDname = cms.string('ByLooseMuonRejection3'),
            discriminatorOption = cms.string('custom'),
            doCaloMuonVeto = cms.bool(True),
            maxNumberOfHitsLast2Stations = cms.int32(-1),
            maxNumberOfMatches = cms.int32(1)
        ),
        cms.PSet(
            HoPMin = cms.double(0.2),
            IDname = cms.string('ByTightMuonRejection3'),
            discriminatorOption = cms.string('custom'),
            doCaloMuonVeto = cms.bool(True),
            maxNumberOfHitsLast2Stations = cms.int32(0),
            maxNumberOfMatches = cms.int32(1)
        )
    ),
    IDdefinitions = cms.VPSet(),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    dRmuonMatch = cms.double(0.3),
    dRmuonMatchLimitedToJetArea = cms.bool(False),
    maskHitsCSC = cms.vint32(0, 0, 0, 0),
    maskHitsDT = cms.vint32(0, 0, 0, 0),
    maskHitsRPC = cms.vint32(0, 0, 0, 0),
    maskMatchesCSC = cms.vint32(1, 0, 0, 0),
    maskMatchesDT = cms.vint32(0, 0, 0, 0),
    maskMatchesRPC = cms.vint32(0, 0, 0, 0),
    mightGet = cms.optional.untracked.vstring,
    minPtMatchedMuon = cms.double(5),
    srcMuons = cms.InputTag("muons"),
    verbosity = cms.int32(0)
)


process.hpsPFTauDiscriminationByMuonRejection3Boosted = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon2Container",
    IDWPdefinitions = cms.VPSet(
        cms.PSet(
            HoPMin = cms.double(0.2),
            IDname = cms.string('ByLooseMuonRejection3'),
            discriminatorOption = cms.string('custom'),
            doCaloMuonVeto = cms.bool(True),
            maxNumberOfHitsLast2Stations = cms.int32(-1),
            maxNumberOfMatches = cms.int32(1)
        ),
        cms.PSet(
            HoPMin = cms.double(0.2),
            IDname = cms.string('ByTightMuonRejection3'),
            discriminatorOption = cms.string('custom'),
            doCaloMuonVeto = cms.bool(True),
            maxNumberOfHitsLast2Stations = cms.int32(0),
            maxNumberOfMatches = cms.int32(1)
        )
    ),
    IDdefinitions = cms.VPSet(),
    PFTauProducer = cms.InputTag("hpsPFTauProducerBoosted"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    dRmuonMatch = cms.double(0.1),
    dRmuonMatchLimitedToJetArea = cms.bool(False),
    maskHitsCSC = cms.vint32(0, 0, 0, 0),
    maskHitsDT = cms.vint32(0, 0, 0, 0),
    maskHitsRPC = cms.vint32(0, 0, 0, 0),
    maskMatchesCSC = cms.vint32(1, 0, 0, 0),
    maskMatchesDT = cms.vint32(0, 0, 0, 0),
    maskMatchesRPC = cms.vint32(0, 0, 0, 0),
    mightGet = cms.optional.untracked.vstring,
    minPtMatchedMuon = cms.double(5),
    srcMuons = cms.InputTag("muons"),
    verbosity = cms.int32(0)
)


process.hpsPFTauDiscriminationByTightElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_BremCombined = cms.bool(True),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    ApplyCut_EcalCrackCut = cms.bool(True),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ApplyCut_EmFraction = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    ApplyCut_PFElectronMVA = cms.bool(True),
    BremCombined_Fraction = cms.double(0.99),
    BremCombined_HOP = cms.double(0.1),
    BremCombined_Mass = cms.double(0.55),
    BremCombined_StripSize = cms.double(0.03),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    EOverPLead_maxValue = cms.double(1.8),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    EmFraction_maxValue = cms.double(0.9),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    HcalTotOverPLead_minValue = cms.double(0.1),
    PFElectronMVA_maxValue = cms.double(-0.1),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    )
)


process.hpsPFTauPrimaryVertexProducer = cms.EDProducer("PFTauPrimaryVertexProducer",
    Algorithm = cms.int32(0),
    ElectronTag = cms.InputTag(""),
    MuonTag = cms.InputTag(""),
    PFTauTag = cms.InputTag("hpsPFTauProducer"),
    PVTag = cms.InputTag("offlinePrimaryVertices"),
    RemoveElectronTracks = cms.bool(False),
    RemoveMuonTracks = cms.bool(False),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    cut = cms.string('pt > 18.0 & abs(eta) < 2.4'),
    discriminators = cms.VPSet(cms.PSet(
        discriminator = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMs"),
        selectionCut = cms.double(0.5)
    )),
    mightGet = cms.optional.untracked.vstring,
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            maxDeltaZ = cms.double(0.2),
            maxDeltaZToLeadTrack = cms.double(-1.0),
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.03),
            minGammaEt = cms.double(1.5),
            minTrackHits = cms.uint32(8),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(1.0),
            minTrackVertexWeight = cms.double(-1.0)
        ),
        leadingTrkOrPFCandOption = cms.string('leadPFCand'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        pvFindingAlgo = cms.string('closestInDeltaZ'),
        recoverLeadingTrk = cms.bool(False),
        signalQualityCuts = cms.PSet(
            maxDeltaZ = cms.double(0.4),
            maxDeltaZToLeadTrack = cms.double(-1.0),
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.1),
            minGammaEt = cms.double(1.0),
            minNeutralHadronEt = cms.double(30.0),
            minTrackHits = cms.uint32(3),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(0.5),
            minTrackVertexWeight = cms.double(-1.0)
        ),
        vertexTrackFiltering = cms.bool(False),
        vxAssocQualityCuts = cms.PSet(
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.1),
            minGammaEt = cms.double(1.0),
            minTrackHits = cms.uint32(3),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(0.5),
            minTrackVertexWeight = cms.double(-1.0)
        )
    ),
    useBeamSpot = cms.bool(True),
    useSelectedTaus = cms.bool(False)
)


process.hpsPFTauPrimaryVertexProducerBoosted = cms.EDProducer("PFTauPrimaryVertexProducer",
    Algorithm = cms.int32(0),
    ElectronTag = cms.InputTag(""),
    MuonTag = cms.InputTag(""),
    PFTauTag = cms.InputTag("hpsPFTauProducerBoosted"),
    PVTag = cms.InputTag("offlinePrimaryVertices"),
    RemoveElectronTracks = cms.bool(False),
    RemoveMuonTracks = cms.bool(False),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    cut = cms.string('pt > 18.0 & abs(eta) < 2.4'),
    discriminators = cms.VPSet(cms.PSet(
        discriminator = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMsBoosted"),
        selectionCut = cms.double(0.5)
    )),
    mightGet = cms.optional.untracked.vstring,
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            maxDeltaZ = cms.double(0.2),
            maxDeltaZToLeadTrack = cms.double(-1.0),
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.03),
            minGammaEt = cms.double(1.5),
            minTrackHits = cms.uint32(8),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(1.0),
            minTrackVertexWeight = cms.double(-1.0)
        ),
        leadingTrkOrPFCandOption = cms.string('leadPFCand'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        pvFindingAlgo = cms.string('closestInDeltaZ'),
        recoverLeadingTrk = cms.bool(False),
        signalQualityCuts = cms.PSet(
            maxDeltaZ = cms.double(0.4),
            maxDeltaZToLeadTrack = cms.double(-1.0),
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.1),
            minGammaEt = cms.double(1.0),
            minNeutralHadronEt = cms.double(30.0),
            minTrackHits = cms.uint32(3),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(0.5),
            minTrackVertexWeight = cms.double(-1.0)
        ),
        vertexTrackFiltering = cms.bool(False),
        vxAssocQualityCuts = cms.PSet(
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.1),
            minGammaEt = cms.double(1.0),
            minTrackHits = cms.uint32(3),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(0.5),
            minTrackVertexWeight = cms.double(-1.0)
        )
    ),
    useBeamSpot = cms.bool(True),
    useSelectedTaus = cms.bool(False)
)


process.hpsPFTauProducer = cms.EDProducer("RecoTauPiZeroUnembedder",
    src = cms.InputTag("hpsPFTauProducerSansRefs")
)


process.hpsPFTauProducerBoosted = cms.EDProducer("RecoTauPiZeroUnembedder",
    src = cms.InputTag("hpsPFTauProducerSansRefsBoosted")
)


process.hpsPFTauProducerSansRefs = cms.EDProducer("RecoTauCleaner",
    cleaners = cms.VPSet(
        cms.PSet(
            name = cms.string('Charge'),
            nprongs = cms.vuint32(1, 3),
            passForCharge = cms.int32(1),
            plugin = cms.string('RecoTauChargeCleanerPlugin'),
            selectionFailValue = cms.double(0),
            tolerance = cms.double(0)
        ),
        cms.PSet(
            name = cms.string('HPS_Select'),
            plugin = cms.string('RecoTauDiscriminantCleanerPlugin'),
            src = cms.InputTag("hpsSelectionDiscriminator"),
            tolerance = cms.double(0)
        ),
        cms.PSet(
            minTrackPt = cms.double(5.0),
            name = cms.string('killSoftTwoProngTaus'),
            plugin = cms.string('RecoTauSoftTwoProngTausCleanerPlugin'),
            tolerance = cms.double(0)
        ),
        cms.PSet(
            name = cms.string('ChargedHadronMultiplicity'),
            plugin = cms.string('RecoTauChargedHadronMultiplicityCleanerPlugin'),
            tolerance = cms.double(0)
        ),
        cms.PSet(
            name = cms.string('Pt'),
            plugin = cms.string('RecoTauStringCleanerPlugin'),
            selection = cms.string('leadCand().isNonnull()'),
            selectionFailValue = cms.double(1000.0),
            selectionPassFunction = cms.string('-pt()'),
            tolerance = cms.double(0.01)
        ),
        cms.PSet(
            name = cms.string('StripMultiplicity'),
            plugin = cms.string('RecoTauStringCleanerPlugin'),
            selection = cms.string('leadCand().isNonnull()'),
            selectionFailValue = cms.double(1000.0),
            selectionPassFunction = cms.string('-signalPiZeroCandidates().size()'),
            tolerance = cms.double(0)
        ),
        cms.PSet(
            name = cms.string('CombinedIsolation'),
            plugin = cms.string('RecoTauStringCleanerPlugin'),
            selection = cms.string('leadCand().isNonnull()'),
            selectionFailValue = cms.double(1000.0),
            selectionPassFunction = cms.string('isolationPFChargedHadrCandsPtSum() + isolationPFGammaCandsEtSum()'),
            tolerance = cms.double(0)
        )
    ),
    outputSelection = cms.string(''),
    src = cms.InputTag("combinatoricRecoTaus"),
    verbosity = cms.int32(0)
)


process.hpsPFTauProducerSansRefsBoosted = cms.EDProducer("RecoTauCleaner",
    cleaners = cms.VPSet(
        cms.PSet(
            name = cms.string('Charge'),
            nprongs = cms.vuint32(1, 3),
            passForCharge = cms.int32(1),
            plugin = cms.string('RecoTauChargeCleanerPlugin'),
            selectionFailValue = cms.double(0),
            tolerance = cms.double(0)
        ),
        cms.PSet(
            name = cms.string('HPS_Select'),
            plugin = cms.string('RecoTauDiscriminantCleanerPlugin'),
            src = cms.InputTag("hpsSelectionDiscriminatorBoosted"),
            tolerance = cms.double(0)
        ),
        cms.PSet(
            minTrackPt = cms.double(5.0),
            name = cms.string('killSoftTwoProngTaus'),
            plugin = cms.string('RecoTauSoftTwoProngTausCleanerPlugin'),
            tolerance = cms.double(0)
        ),
        cms.PSet(
            name = cms.string('ChargedHadronMultiplicity'),
            plugin = cms.string('RecoTauChargedHadronMultiplicityCleanerPlugin'),
            tolerance = cms.double(0)
        ),
        cms.PSet(
            name = cms.string('Pt'),
            plugin = cms.string('RecoTauStringCleanerPlugin'),
            selection = cms.string('leadCand().isNonnull()'),
            selectionFailValue = cms.double(1000.0),
            selectionPassFunction = cms.string('-pt()'),
            tolerance = cms.double(0.01)
        ),
        cms.PSet(
            name = cms.string('StripMultiplicity'),
            plugin = cms.string('RecoTauStringCleanerPlugin'),
            selection = cms.string('leadCand().isNonnull()'),
            selectionFailValue = cms.double(1000.0),
            selectionPassFunction = cms.string('-signalPiZeroCandidates().size()'),
            tolerance = cms.double(0)
        ),
        cms.PSet(
            name = cms.string('CombinedIsolation'),
            plugin = cms.string('RecoTauStringCleanerPlugin'),
            selection = cms.string('leadCand().isNonnull()'),
            selectionFailValue = cms.double(1000.0),
            selectionPassFunction = cms.string('isolationPFChargedHadrCandsPtSum() + isolationPFGammaCandsEtSum()'),
            tolerance = cms.double(0)
        )
    ),
    outputSelection = cms.string(''),
    src = cms.InputTag("combinatoricRecoTausBoosted"),
    verbosity = cms.int32(0)
)


process.hpsPFTauSecondaryVertexProducer = cms.EDProducer("PFTauSecondaryVertexProducer",
    PFTauTag = cms.InputTag("hpsPFTauProducer"),
    mightGet = cms.optional.untracked.vstring
)


process.hpsPFTauSecondaryVertexProducerBoosted = cms.EDProducer("PFTauSecondaryVertexProducer",
    PFTauTag = cms.InputTag("hpsPFTauProducerBoosted"),
    mightGet = cms.optional.untracked.vstring
)


process.hpsPFTauTransverseImpactParameters = cms.EDProducer("PFTauTransverseImpactParameters",
    PFTauPVATag = cms.InputTag("hpsPFTauPrimaryVertexProducer"),
    PFTauSVATag = cms.InputTag("hpsPFTauSecondaryVertexProducer"),
    PFTauTag = cms.InputTag("hpsPFTauProducer"),
    mightGet = cms.optional.untracked.vstring,
    useFullCalculation = cms.bool(True)
)


process.hpsPFTauTransverseImpactParametersBoosted = cms.EDProducer("PFTauTransverseImpactParameters",
    PFTauPVATag = cms.InputTag("hpsPFTauPrimaryVertexProducerBoosted"),
    PFTauSVATag = cms.InputTag("hpsPFTauSecondaryVertexProducerBoosted"),
    PFTauTag = cms.InputTag("hpsPFTauProducerBoosted"),
    mightGet = cms.optional.untracked.vstring,
    useFullCalculation = cms.bool(True)
)


process.hpsSelectionDiscriminator = cms.EDProducer("PFRecoTauDiscriminationByHPSSelection",
    PFTauProducer = cms.InputTag("combinatoricRecoTaus"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    decayModes = cms.VPSet(
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(-1000.0),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(0),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(0.1349),
            maxMass = cms.string('max(1.3, min(1.3*sqrt(pt/100.), 4.2))'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.3),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(1),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(0.0),
            maxMass = cms.string('max(1.2, min(1.2*sqrt(pt/100.), 4.0))'),
            maxPi0Mass = cms.double(0.2),
            minMass = cms.double(0.4),
            minPi0Mass = cms.double(0.05),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(2),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(False),
                mass = cms.bool(False),
                phi = cms.bool(False)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.2'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.0),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(2),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(0),
            nTracksMin = cms.uint32(2)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(False),
                mass = cms.bool(False),
                phi = cms.bool(False)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('max(1.2, min(1.2*sqrt(pt/100.), 4.0))'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.0),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(2),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(1),
            nTracksMin = cms.uint32(2)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(False),
                mass = cms.bool(False),
                phi = cms.bool(False)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.5'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.8),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(3),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(0),
            nTracksMin = cms.uint32(2)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(False),
                mass = cms.bool(False),
                phi = cms.bool(False)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.6'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.9),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(3),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(1),
            nTracksMin = cms.uint32(2)
        )
    ),
    matchingCone = cms.double(0.5),
    minPixelHits = cms.int32(1),
    minTauPt = cms.double(0.0),
    requireTauChargedHadronsToBeChargedPFCands = cms.bool(False),
    verbosity = cms.int32(0)
)


process.hpsSelectionDiscriminatorBoosted = cms.EDProducer("PFRecoTauDiscriminationByHPSSelection",
    PFTauProducer = cms.InputTag("combinatoricRecoTausBoosted"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    decayModes = cms.VPSet(
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(-1000.0),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(0),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(0.1349),
            maxMass = cms.string('max(1.3, min(1.3*sqrt(pt/100.), 4.2))'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.3),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(1),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(True),
                mass = cms.bool(True),
                phi = cms.bool(True)
            ),
            assumeStripMass = cms.double(0.0),
            maxMass = cms.string('max(1.2, min(1.2*sqrt(pt/100.), 4.0))'),
            maxPi0Mass = cms.double(0.2),
            minMass = cms.double(0.4),
            minPi0Mass = cms.double(0.05),
            nCharged = cms.uint32(1),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(2),
            nTracksMin = cms.uint32(1)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(False),
                mass = cms.bool(False),
                phi = cms.bool(False)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.2'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.0),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(2),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(0),
            nTracksMin = cms.uint32(2)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(False),
                mass = cms.bool(False),
                phi = cms.bool(False)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('max(1.2, min(1.2*sqrt(pt/100.), 4.0))'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.0),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(2),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(1),
            nTracksMin = cms.uint32(2)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(False),
                mass = cms.bool(False),
                phi = cms.bool(False)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.5'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.8),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(3),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(0),
            nTracksMin = cms.uint32(2)
        ),
        cms.PSet(
            applyBendCorrection = cms.PSet(
                eta = cms.bool(False),
                mass = cms.bool(False),
                phi = cms.bool(False)
            ),
            assumeStripMass = cms.double(-1.0),
            maxMass = cms.string('1.6'),
            maxPi0Mass = cms.double(1000000000.0),
            minMass = cms.double(0.9),
            minPi0Mass = cms.double(-1000.0),
            nCharged = cms.uint32(3),
            nChargedPFCandsMin = cms.uint32(1),
            nPiZeros = cms.uint32(1),
            nTracksMin = cms.uint32(2)
        )
    ),
    matchingCone = cms.double(0.5),
    minPixelHits = cms.int32(1),
    minTauPt = cms.double(0.0),
    requireTauChargedHadronsToBeChargedPFCands = cms.bool(False),
    verbosity = cms.int32(0)
)


process.impactParameterTagInfos = cms.EDProducer("TrackIPProducer",
    computeGhostTrack = cms.bool(True),
    computeProbabilities = cms.bool(True),
    ghostTrackPriorDeltaR = cms.double(0.03),
    jetDirectionUsingGhostTrack = cms.bool(False),
    jetDirectionUsingTracks = cms.bool(False),
    jetTracks = cms.InputTag("ak4JetTracksAssociatorAtVertexPF"),
    maximumChiSquared = cms.double(5.0),
    maximumLongitudinalImpactParameter = cms.double(17.0),
    maximumTransverseImpactParameter = cms.double(0.2),
    minimumNumberOfHits = cms.int32(8),
    minimumNumberOfPixelHits = cms.int32(2),
    minimumTransverseMomentum = cms.double(1.0),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    useTrackQuality = cms.bool(False)
)


process.islandPhotonCore = cms.EDProducer("PhotonCoreProducer",
    conversionProducer = cms.InputTag(""),
    endcapOnly = cms.bool(False),
    minSCEt = cms.double(8.0),
    photonCoreCollection = cms.string(''),
    pixelSeedProducer = cms.InputTag("electronMergedSeeds"),
    risolveConversionAmbiguity = cms.bool(True),
    scHybridBarrelProducer = cms.InputTag("correctedIslandBarrelSuperClusters"),
    scIslandEndcapProducer = cms.InputTag("correctedIslandEndcapSuperClusters")
)


process.isolatedTracks = cms.EDProducer("PATIsolatedTrackProducer",
    TrackAssociatorParameters = cms.PSet(
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EBRecHitCollectionLabel = cms.InputTag("reducedEcalRecHitsEB"),
        EERecHitCollectionLabel = cms.InputTag("reducedEcalRecHitsEE"),
        GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
        HBHERecHitCollectionLabel = cms.InputTag("reducedHcalRecHits","hbhereco"),
        HORecHitCollectionLabel = cms.InputTag("reducedHcalRecHits","horeco"),
        ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
        accountForTrajectoryChangeCalo = cms.bool(False),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        dRHcal = cms.double(9999.0),
        dRHcalPreselection = cms.double(0.2),
        dRMuon = cms.double(9999.0),
        dRMuonPreselection = cms.double(0.2),
        dRPreshowerPreselection = cms.double(0.2),
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        propagateAllDirections = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        truthMatch = cms.bool(False),
        useCalo = cms.bool(False),
        useEcal = cms.bool(True),
        useGEM = cms.bool(False),
        useHO = cms.bool(False),
        useHcal = cms.bool(True),
        useME0 = cms.bool(False),
        useMuon = cms.bool(False),
        usePreshower = cms.bool(False)
    ),
    absIso_cut = cms.double(5.0),
    addPrescaledDeDxTracks = cms.bool(False),
    caloJet_DR = cms.double(0.3),
    caloJets = cms.InputTag("ak4CaloJets"),
    dEdxDataPixel = cms.InputTag("dedxPixelHarmonic2"),
    dEdxDataStrip = cms.InputTag("dedxHarmonic2"),
    dEdxHitInfo = cms.InputTag("dedxHitInfo"),
    dEdxHitInfoPrescale = cms.InputTag("dedxHitInfo","prescale"),
    generalTracks = cms.InputTag("generalTracks"),
    lostTracks = cms.InputTag("lostTracks"),
    miniIsoParams = cms.vdouble(0.05, 0.2, 10.0),
    miniRelIso_cut = cms.double(0.2),
    pT_cut = cms.double(5.0),
    pT_cut_noIso = cms.double(20.0),
    packedPFCandidates = cms.InputTag("packedPFCandidates"),
    pcRefNearest_DR = cms.double(0.3),
    pcRefNearest_pTmin = cms.double(5.0),
    pfIsolation_DR = cms.double(0.3),
    pfIsolation_DZ = cms.double(0.1),
    pflepoverlap_DR = cms.double(0.001),
    pflepoverlap_pTmin = cms.double(5.0),
    pfneutralsum_DR = cms.double(0.05),
    primaryVertices = cms.InputTag("offlinePrimaryVertices"),
    relIso_cut = cms.double(0.2),
    saveDeDxHitInfo = cms.bool(True),
    saveDeDxHitInfoCut = cms.string('(pt > 10. && (pt > 15. || hitPattern().pixelLayersWithMeasurement() == hitPattern().trackerLayersWithMeasurement())  &&  abs(dxy) < 0.02 && abs(dz) < 0.1 &&  (miniPFIsolation().chargedHadronIso()/pt < 0.2) &&  !(pfLepOverlap) &&  pfNeutralSum/pt < 0.2) || (pt > 50 &&  isHighPurityTrack &&  abs(dxy) < 0.5 && abs(dz) < 0.5 &&  (miniPFIsolation().chargedHadronIso()/pt < 1.0 || pt > 100)) || (pt > 30 && abs(dxy) < 0.05 && abs(dz) < 1.0 &&lostInnerLayers == 0 &&lostLayers == 0 &&lostOuterLayers >= 1 &&(pfIsolationDR03().chargedHadronIso)/pt < 0.1)'),
    useHighPurity = cms.bool(False),
    usePrecomputedDeDxPixel = cms.bool(True),
    usePrecomputedDeDxStrip = cms.bool(True)
)


process.jetBProbabilityBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('jetBProbabilityComputer'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"))
)


process.jetProbabilityBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('jetProbabilityComputer'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"))
)


process.l1PrefiringWeightProducer = cms.EDProducer("L1PrefiringWeightProducer",
    DataEraECAL = cms.string('2017BtoF'),
    DataEraMuon = cms.string('2016'),
    JetMaxMuonFraction = cms.double(0.5),
    L1Maps = cms.string('L1PrefiringMaps.root'),
    L1MuonParametrizations = cms.string('L1MuonPrefiringParametriations.root'),
    PrefiringRateSystematicUnctyECAL = cms.double(0.2),
    PrefiringRateSystematicUnctyMuon = cms.double(0.2),
    TheJets = cms.InputTag("slimmedJets"),
    TheMuons = cms.InputTag("slimmedMuons"),
    ThePhotons = cms.InputTag("slimmedPhotons"),
    UseJetEMPt = cms.bool(False),
    mightGet = cms.optional.untracked.vstring
)


process.lostTrackChi2 = cms.EDProducer("PackedCandidateTrackChi2Producer",
    candidates = cms.InputTag("lostTracks"),
    doLostTracks = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    trackCollection = cms.InputTag("generalTracks")
)


process.lostTracks = cms.EDProducer("PATLostTracks",
    covariancePackingSchemas = cms.vint32(8, 264, 520, 776, 0),
    covarianceVersion = cms.int32(1),
    inputCandidates = cms.InputTag("particleFlow"),
    inputTracks = cms.InputTag("generalTracks"),
    kshorts = cms.InputTag("generalV0Candidates","Kshort"),
    lambdas = cms.InputTag("generalV0Candidates","Lambda"),
    minHits = cms.uint32(8),
    minPixelHits = cms.uint32(1),
    minPt = cms.double(0.95),
    minPtToStoreLowQualityProps = cms.double(0.0),
    minPtToStoreProps = cms.double(0.95),
    muons = cms.InputTag("muons"),
    originalVertices = cms.InputTag("offlinePrimaryVertices"),
    packedPFCandidates = cms.InputTag("packedPFCandidates"),
    passThroughCut = cms.string('pt>2'),
    primaryVertices = cms.InputTag("offlineSlimmedPrimaryVertices"),
    pvAssignment = cms.PSet(
        DzCutForChargedFromPUVtxs = cms.double(0.2),
        EtaMinUseDz = cms.double(-1),
        NumOfPUVtxsForCharged = cms.uint32(0),
        OnlyUseFirstDz = cms.bool(False),
        PtMaxCharged = cms.double(-1),
        maxDistanceToJetAxis = cms.double(0.07),
        maxDtSigForPrimaryAssignment = cms.double(3),
        maxDxyForJetAxisAssigment = cms.double(0.1),
        maxDxyForNotReconstructedPrimary = cms.double(0.01),
        maxDxySigForNotReconstructedPrimary = cms.double(2),
        maxDzErrorForPrimaryAssignment = cms.double(0.05),
        maxDzForJetAxisAssigment = cms.double(0.1),
        maxDzForPrimaryAssignment = cms.double(0.1),
        maxDzSigForPrimaryAssignment = cms.double(5),
        maxJetDeltaR = cms.double(0.5),
        minJetPt = cms.double(25),
        preferHighRanked = cms.bool(False),
        useTiming = cms.bool(False),
        useVertexFit = cms.bool(True)
    ),
    qualsToAutoAccept = cms.vstring('highPurity'),
    secondaryVertices = cms.InputTag("inclusiveSecondaryVertices"),
    useLegacySetup = cms.bool(False),
    xiMassCut = cms.double(1.5),
    xiSelection = cms.bool(True)
)


process.lostTracksToGenAssociation = cms.EDProducer("PackedCandidateGenAssociationProducer",
    genToPrunedAssoc = cms.InputTag("prunedGenParticles"),
    genToPrunedAssocWithStatusOne = cms.InputTag("prunedGenParticlesWithStatusOne"),
    mightGet = cms.optional.untracked.vstring,
    trackToGenAssoc = cms.InputTag("prunedTrackMCMatch"),
    trackToPackedCandidatesAssoc = cms.InputTag("lostTracks"),
    tracks = cms.InputTag("generalTracks")
)


process.lowPtElectronMatch = cms.EDProducer("MCMatcher",
    checkCharge = cms.bool(True),
    matched = cms.InputTag("genParticles"),
    maxDPtRel = cms.double(0.5),
    maxDeltaR = cms.double(0.5),
    mcPdgId = cms.vint32(11),
    mcStatus = cms.vint32(1),
    resolveAmbiguities = cms.bool(True),
    resolveByMatchQuality = cms.bool(False),
    src = cms.InputTag("lowPtGsfElectrons")
)


process.lowPtGsfElectronID = cms.EDProducer("LowPtGsfElectronIDProducer",
    MaxPtThreshold = cms.double(15),
    MinPtThreshold = cms.double(0.5),
    ModelNames = cms.vstring(''),
    ModelThresholds = cms.vdouble(-99),
    ModelWeights = cms.vstring('RecoEgamma/ElectronIdentification/data/LowPtElectrons/LowPtElectrons_ID_2020Nov28.root'),
    PassThrough = cms.bool(False),
    Version = cms.string('V1'),
    electrons = cms.InputTag("lowPtGsfElectrons"),
    gsfToTrack = cms.InputTag("lowPtGsfToTrackLinks"),
    mightGet = cms.optional.untracked.vstring,
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    unbiased = cms.InputTag("lowPtGsfElectronSeedValueMaps","unbiased"),
    useGsfToTrack = cms.bool(False),
    usePAT = cms.bool(False)
)


process.lowPtGsfElectrons = cms.EDProducer("LowPtGsfElectronFinalizer",
    mightGet = cms.optional.untracked.vstring,
    previousGsfElectronsTag = cms.InputTag("lowPtGsfElectronsPreRegression"),
    regressionConfig = cms.PSet(
        eleRegs = cms.PSet(
            ecalOnlyMean = cms.PSet(
                ebHighEtForestName = cms.ESInputTag("","lowPtElectron_eb_ecalOnly_05To50_mean"),
                ebLowEtForestName = cms.ESInputTag("","lowPtElectron_eb_ecalOnly_05To50_mean"),
                eeHighEtForestName = cms.ESInputTag("","lowPtElectron_ee_ecalOnly_05To50_mean"),
                eeLowEtForestName = cms.ESInputTag("","lowPtElectron_ee_ecalOnly_05To50_mean"),
                forceHighEnergyTrainingIfSaturated = cms.bool(True),
                lowEtHighEtBoundary = cms.double(20.0),
                rangeMaxHighEt = cms.double(3.0),
                rangeMaxLowEt = cms.double(2.0),
                rangeMinHighEt = cms.double(-1.0),
                rangeMinLowEt = cms.double(0.2)
            ),
            ecalOnlySigma = cms.PSet(
                ebHighEtForestName = cms.ESInputTag("","lowPtElectron_eb_ecalOnly_05To50_sigma"),
                ebLowEtForestName = cms.ESInputTag("","lowPtElectron_eb_ecalOnly_05To50_sigma"),
                eeHighEtForestName = cms.ESInputTag("","lowPtElectron_ee_ecalOnly_05To50_sigma"),
                eeLowEtForestName = cms.ESInputTag("","lowPtElectron_ee_ecalOnly_05To50_sigma"),
                forceHighEnergyTrainingIfSaturated = cms.bool(True),
                lowEtHighEtBoundary = cms.double(20.0),
                rangeMaxHighEt = cms.double(0.5),
                rangeMaxLowEt = cms.double(0.5),
                rangeMinHighEt = cms.double(0.0002),
                rangeMinLowEt = cms.double(0.0002)
            ),
            epComb = cms.PSet(
                ecalTrkRegressionConfig = cms.PSet(
                    ebHighEtForestName = cms.ESInputTag("","lowPtElectron_eb_ecalTrk_05To50_mean"),
                    ebLowEtForestName = cms.ESInputTag("","lowPtElectron_eb_ecalTrk_05To50_mean"),
                    eeHighEtForestName = cms.ESInputTag("","lowPtElectron_ee_ecalTrk_05To50_mean"),
                    eeLowEtForestName = cms.ESInputTag("","lowPtElectron_ee_ecalTrk_05To50_mean"),
                    forceHighEnergyTrainingIfSaturated = cms.bool(False),
                    lowEtHighEtBoundary = cms.double(20.0),
                    rangeMaxHighEt = cms.double(2.0),
                    rangeMaxLowEt = cms.double(2.0),
                    rangeMinHighEt = cms.double(0.2),
                    rangeMinLowEt = cms.double(0.2)
                ),
                ecalTrkRegressionUncertConfig = cms.PSet(
                    ebHighEtForestName = cms.ESInputTag("","lowPtElectron_eb_ecalTrk_05To50_sigma"),
                    ebLowEtForestName = cms.ESInputTag("","lowPtElectron_eb_ecalTrk_05To50_sigma"),
                    eeHighEtForestName = cms.ESInputTag("","lowPtElectron_ee_ecalTrk_05To50_sigma"),
                    eeLowEtForestName = cms.ESInputTag("","lowPtElectron_ee_ecalTrk_05To50_sigma"),
                    forceHighEnergyTrainingIfSaturated = cms.bool(False),
                    lowEtHighEtBoundary = cms.double(20.0),
                    rangeMaxHighEt = cms.double(0.5),
                    rangeMaxLowEt = cms.double(0.5),
                    rangeMinHighEt = cms.double(0.0002),
                    rangeMinLowEt = cms.double(0.0002)
                ),
                maxEPDiffInSigmaForComb = cms.double(15.0),
                maxEcalEnergyForComb = cms.double(200.0),
                maxRelTrkMomErrForComb = cms.double(10.0),
                minEOverPForComb = cms.double(0.025)
            )
        ),
        maxRawEnergyForLowPtEBSigma = cms.double(-1),
        maxRawEnergyForLowPtEESigma = cms.double(1200.0),
        modifierName = cms.string('EGRegressionModifierV3'),
        phoRegs = cms.PSet(
            ecalOnlyMean = cms.PSet(
                ebHighEtForestName = cms.ESInputTag("","photon_eb_ECALonly"),
                ebLowEtForestName = cms.ESInputTag("","photon_eb_ecalOnly_5To300_0p2To2_mean"),
                eeHighEtForestName = cms.ESInputTag("","photon_ee_ECALonly"),
                eeLowEtForestName = cms.ESInputTag("","photon_ee_ecalOnly_5To300_0p2To2_mean"),
                forceHighEnergyTrainingIfSaturated = cms.bool(True),
                lowEtHighEtBoundary = cms.double(999999.0),
                rangeMaxHighEt = cms.double(3.0),
                rangeMaxLowEt = cms.double(2.0),
                rangeMinHighEt = cms.double(-1.0),
                rangeMinLowEt = cms.double(0.2)
            ),
            ecalOnlySigma = cms.PSet(
                ebHighEtForestName = cms.ESInputTag("","photon_eb_ECALonly_var"),
                ebLowEtForestName = cms.ESInputTag("","photon_eb_ecalOnly_5To300_0p0002To0p5_sigma"),
                eeHighEtForestName = cms.ESInputTag("","photon_ee_ECALonly_var"),
                eeLowEtForestName = cms.ESInputTag("","photon_ee_ecalOnly_5To300_0p0002To0p5_sigma"),
                forceHighEnergyTrainingIfSaturated = cms.bool(True),
                lowEtHighEtBoundary = cms.double(999999.0),
                rangeMaxHighEt = cms.double(0.5),
                rangeMaxLowEt = cms.double(0.5),
                rangeMinHighEt = cms.double(0.0002),
                rangeMinLowEt = cms.double(0.0002)
            )
        ),
        rhoTag = cms.InputTag("fixedGridRhoFastjetAll"),
        useClosestToCentreSeedCrysDef = cms.bool(False)
    )
)


process.lowPtGsfLinks = cms.EDProducer("LowPtGSFToPackedCandidateLinker",
    PFCandidates = cms.InputTag("particleFlow"),
    electrons = cms.InputTag("selectedPatLowPtElectrons"),
    gsfToTrack = cms.InputTag("lowPtGsfToTrackLinks"),
    gsfTracks = cms.InputTag("lowPtGsfEleGsfTracks"),
    lostTracks = cms.InputTag("lostTracks"),
    mightGet = cms.optional.untracked.vstring,
    packedCandidates = cms.InputTag("packedPFCandidates"),
    tracks = cms.InputTag("generalTracks")
)


process.mix = cms.EDProducer("MixingModule",
    LabelPlayback = cms.string(''),
    bunchspace = cms.int32(450),
    digitizers = cms.PSet(
        ecal = cms.PSet(
            ConstantTerm = cms.double(0.003),
            EBCorrNoiseMatrixG01 = cms.vdouble(
                1.0, 0.73354, 0.64442, 0.58851, 0.55425,
                0.53082, 0.51916, 0.51097, 0.50732, 0.50409
            ),
            EBCorrNoiseMatrixG06 = cms.vdouble(
                1.0, 0.70946, 0.58021, 0.49846, 0.45006,
                0.41366, 0.39699, 0.38478, 0.37847, 0.37055
            ),
            EBCorrNoiseMatrixG12 = cms.vdouble(
                1.0, 0.71073, 0.55721, 0.46089, 0.40449,
                0.35931, 0.33924, 0.32439, 0.31581, 0.30481
            ),
            EBdigiCollection = cms.string(''),
            EBs25notContainment = cms.double(0.9675),
            EECorrNoiseMatrixG01 = cms.vdouble(
                1.0, 0.72698, 0.62048, 0.55691, 0.51848,
                0.49147, 0.47813, 0.47007, 0.46621, 0.46265
            ),
            EECorrNoiseMatrixG06 = cms.vdouble(
                1.0, 0.71217, 0.47464, 0.34056, 0.26282,
                0.20287, 0.17734, 0.16256, 0.15618, 0.14443
            ),
            EECorrNoiseMatrixG12 = cms.vdouble(
                1.0, 0.71373, 0.44825, 0.30152, 0.21609,
                0.14786, 0.11772, 0.10165, 0.09465, 0.08098
            ),
            EEdigiCollection = cms.string(''),
            EEs25notContainment = cms.double(0.968),
            ESdigiCollection = cms.string(''),
            EcalPreMixStage1 = cms.bool(False),
            EcalPreMixStage2 = cms.bool(False),
            UseLCcorrection = cms.untracked.bool(True),
            accumulatorType = cms.string('EcalDigiProducer'),
            apdAddToBarrel = cms.bool(False),
            apdDigiTag = cms.string('APD'),
            apdDoPEStats = cms.bool(True),
            apdNonlParms = cms.vdouble(
                1.48, -3.75, 1.81, 1.26, 2.0,
                45, 1.0
            ),
            apdSeparateDigi = cms.bool(True),
            apdShapeTau = cms.double(40.5),
            apdShapeTstart = cms.double(74.5),
            apdSimToPEHigh = cms.double(88200000.0),
            apdSimToPELow = cms.double(2450000.0),
            apdTimeOffWidth = cms.double(0.8),
            apdTimeOffset = cms.double(-13.5),
            applyConstantTerm = cms.bool(True),
            binOfMaximum = cms.int32(6),
            cosmicsPhase = cms.bool(False),
            cosmicsShift = cms.double(0.0),
            doEB = cms.bool(True),
            doEE = cms.bool(True),
            doENoise = cms.bool(True),
            doES = cms.bool(True),
            doESNoise = cms.bool(True),
            doFast = cms.bool(True),
            doPhotostatistics = cms.bool(True),
            hitsProducer = cms.string('g4SimHits'),
            makeDigiSimLinks = cms.untracked.bool(False),
            photoelectronsToAnalogBarrel = cms.double(0.000444444),
            photoelectronsToAnalogEndcap = cms.double(0.000555555),
            samplingFactor = cms.double(1.0),
            simHitToPhotoelectronsBarrel = cms.double(2250.0),
            simHitToPhotoelectronsEndcap = cms.double(1800.0),
            syncPhase = cms.bool(True),
            timeDependent = cms.bool(False),
            timePhase = cms.double(0.0)
        ),
        hcal = cms.PSet(
            DelivLuminosity = cms.double(0),
            HBDarkening = cms.bool(False),
            HEDarkening = cms.bool(False),
            HFDarkening = cms.bool(False),
            HFRecalParameterBlock = cms.PSet(
                HFdepthOneParameterA = cms.vdouble(
                    0.004123, 0.00602, 0.008201, 0.010489, 0.013379,
                    0.016997, 0.021464, 0.027371, 0.034195, 0.044807,
                    0.058939, 0.125497
                ),
                HFdepthOneParameterB = cms.vdouble(
                    -4e-06, -2e-06, 0.0, 4e-06, 1.5e-05,
                    2.6e-05, 6.3e-05, 8.4e-05, 0.00016, 0.000107,
                    0.000425, 0.000209
                ),
                HFdepthTwoParameterA = cms.vdouble(
                    0.002861, 0.004168, 0.0064, 0.008388, 0.011601,
                    0.014425, 0.018633, 0.023232, 0.028274, 0.035447,
                    0.051579, 0.086593
                ),
                HFdepthTwoParameterB = cms.vdouble(
                    -2e-06, -0.0, -7e-06, -6e-06, -2e-06,
                    1e-06, 1.9e-05, 3.1e-05, 6.7e-05, 1.2e-05,
                    0.000157, -3e-06
                )
            ),
            HcalPreMixStage1 = cms.bool(False),
            HcalPreMixStage2 = cms.bool(False),
            TestNumbering = cms.bool(True),
            accumulatorType = cms.string('HcalDigiProducer'),
            debugCaloSamples = cms.bool(False),
            doEmpty = cms.bool(True),
            doHFWindow = cms.bool(False),
            doIonFeedback = cms.bool(True),
            doNeutralDensityFilter = cms.bool(True),
            doNoise = cms.bool(True),
            doThermalNoise = cms.bool(True),
            doTimeSlew = cms.bool(True),
            hb = cms.PSet(
                binOfMaximum = cms.int32(6),
                delayQIE = cms.int32(-999),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(True),
                firstRing = cms.int32(1),
                readoutFrameSize = cms.int32(10),
                samplingFactors = cms.vdouble(
                    125.44, 125.54, 125.32, 125.13, 124.46,
                    125.01, 125.22, 125.48, 124.45, 125.9,
                    125.83, 127.01, 126.82, 129.73, 131.83,
                    143.52
                ),
                simHitToPhotoelectrons = cms.double(2000.0),
                sipmTau = cms.double(10.0),
                syncPhase = cms.bool(True),
                threshold_currentTDC = cms.double(18.7),
                timePhase = cms.double(6.0),
                timeSmearing = cms.bool(True)
            ),
            he = cms.PSet(
                binOfMaximum = cms.int32(6),
                delayQIE = cms.int32(-999),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(True),
                firstRing = cms.int32(16),
                readoutFrameSize = cms.int32(10),
                samplingFactors = cms.vdouble(
                    210.55, 197.93, 186.12, 189.64, 189.63,
                    190.28, 189.61, 189.6, 190.12, 191.22,
                    190.9, 193.06, 188.42, 188.42
                ),
                simHitToPhotoelectrons = cms.double(2000.0),
                sipmTau = cms.double(10.0),
                syncPhase = cms.bool(True),
                threshold_currentTDC = cms.double(18.7),
                timePhase = cms.double(6.0),
                timeSmearing = cms.bool(True)
            ),
            hf1 = cms.PSet(
                binOfMaximum = cms.int32(2),
                delayQIE = cms.int32(-999),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(False),
                photoelectronsToAnalog = cms.double(2.79),
                readoutFrameSize = cms.int32(3),
                samplingFactor = cms.double(0.37),
                simHitToPhotoelectrons = cms.double(6.0),
                sipmTau = cms.double(0.0),
                syncPhase = cms.bool(True),
                threshold_currentTDC = cms.double(3.0),
                timePhase = cms.double(9.0)
            ),
            hf2 = cms.PSet(
                binOfMaximum = cms.int32(2),
                delayQIE = cms.int32(-999),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(False),
                photoelectronsToAnalog = cms.double(1.843),
                readoutFrameSize = cms.int32(3),
                samplingFactor = cms.double(0.37),
                simHitToPhotoelectrons = cms.double(6.0),
                sipmTau = cms.double(0.0),
                syncPhase = cms.bool(True),
                threshold_currentTDC = cms.double(3.0),
                timePhase = cms.double(8.0)
            ),
            hitsProducer = cms.string('g4SimHits'),
            ho = cms.PSet(
                binOfMaximum = cms.int32(5),
                delayQIE = cms.int32(-999),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(False),
                firstRing = cms.int32(1),
                readoutFrameSize = cms.int32(10),
                samplingFactors = cms.vdouble(
                    231.0, 231.0, 231.0, 231.0, 360.0,
                    360.0, 360.0, 360.0, 360.0, 360.0,
                    360.0, 360.0, 360.0, 360.0, 360.0
                ),
                siPMCode = cms.int32(1),
                simHitToPhotoelectrons = cms.double(4000.0),
                sipmTau = cms.double(5.0),
                syncPhase = cms.bool(True),
                threshold_currentTDC = cms.double(-999.0),
                timePhase = cms.double(5.0),
                timeSmearing = cms.bool(False)
            ),
            hoHamamatsu = cms.PSet(
                binOfMaximum = cms.int32(5),
                delayQIE = cms.int32(-999),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(False),
                firstRing = cms.int32(1),
                readoutFrameSize = cms.int32(10),
                samplingFactors = cms.vdouble(
                    231.0, 231.0, 231.0, 231.0, 360.0,
                    360.0, 360.0, 360.0, 360.0, 360.0,
                    360.0, 360.0, 360.0, 360.0, 360.0
                ),
                siPMCode = cms.int32(2),
                simHitToPhotoelectrons = cms.double(4000.0),
                sipmTau = cms.double(5.0),
                syncPhase = cms.bool(True),
                threshold_currentTDC = cms.double(-999.0),
                timePhase = cms.double(5.0),
                timeSmearing = cms.bool(False)
            ),
            hoZecotek = cms.PSet(
                binOfMaximum = cms.int32(5),
                delayQIE = cms.int32(-999),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(False),
                firstRing = cms.int32(1),
                readoutFrameSize = cms.int32(10),
                samplingFactors = cms.vdouble(
                    231.0, 231.0, 231.0, 231.0, 360.0,
                    360.0, 360.0, 360.0, 360.0, 360.0,
                    360.0, 360.0, 360.0, 360.0, 360.0
                ),
                siPMCode = cms.int32(2),
                simHitToPhotoelectrons = cms.double(4000.0),
                sipmTau = cms.double(5.0),
                syncPhase = cms.bool(True),
                threshold_currentTDC = cms.double(-999.0),
                timePhase = cms.double(5.0),
                timeSmearing = cms.bool(False)
            ),
            ignoreGeantTime = cms.bool(False),
            injectTestHits = cms.bool(False),
            injectTestHitsCells = cms.vint32(),
            injectTestHitsEnergy = cms.vdouble(),
            injectTestHitsTime = cms.vdouble(),
            killHE = cms.bool(False),
            makeDigiSimLinks = cms.untracked.bool(False),
            minFCToDelay = cms.double(5.0),
            zdc = cms.PSet(
                binOfMaximum = cms.int32(5),
                delayQIE = cms.int32(-999),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(False),
                photoelectronsToAnalog = cms.double(1.843),
                readoutFrameSize = cms.int32(10),
                samplingFactor = cms.double(1.0),
                simHitToPhotoelectrons = cms.double(6.0),
                sipmTau = cms.double(0.0),
                syncPhase = cms.bool(True),
                threshold_currentTDC = cms.double(-999.0),
                timePhase = cms.double(-4.0)
            )
        ),
        mergedtruth = cms.PSet(
            HepMCProductLabel = cms.InputTag("generatorSmeared"),
            accumulatorType = cms.string('TrackingTruthAccumulator'),
            allowDifferentSimHitProcesses = cms.bool(False),
            alwaysAddAncestors = cms.bool(True),
            createInitialVertexCollection = cms.bool(False),
            createMergedBremsstrahlung = cms.bool(True),
            createUnmergedCollection = cms.bool(True),
            genParticleCollection = cms.InputTag("genParticles"),
            ignoreTracksOutsideVolume = cms.bool(False),
            maximumPreviousBunchCrossing = cms.uint32(9999),
            maximumSubsequentBunchCrossing = cms.uint32(9999),
            removeDeadModules = cms.bool(False),
            select = cms.PSet(
                chargedOnlyTP = cms.bool(True),
                intimeOnlyTP = cms.bool(False),
                lipTP = cms.double(1000),
                maxRapidityTP = cms.double(5.0),
                minHitTP = cms.int32(0),
                minRapidityTP = cms.double(-5.0),
                pdgIdTP = cms.vint32(),
                ptMaxTP = cms.double(1e+100),
                ptMinTP = cms.double(0.1),
                signalOnlyTP = cms.bool(True),
                stableOnlyTP = cms.bool(False),
                tipTP = cms.double(1000)
            ),
            simHitCollections = cms.PSet(
                muon = cms.VInputTag(cms.InputTag("g4SimHits","MuonDTHits"), cms.InputTag("g4SimHits","MuonCSCHits"), cms.InputTag("g4SimHits","MuonRPCHits"), cms.InputTag("g4SimHits","MuonGEMHits")),
                pixel = cms.VInputTag(cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof")),
                tracker = cms.VInputTag(
                    cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"), cms.InputTag("g4SimHits","TrackerHitsTOBLowTof"),
                    cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTECLowTof"), cms.InputTag("g4SimHits","TrackerHitsTECHighTof")
                )
            ),
            simTrackCollection = cms.InputTag("g4SimHits"),
            simVertexCollection = cms.InputTag("g4SimHits"),
            vertexDistanceCut = cms.double(0.003),
            volumeRadius = cms.double(120.0),
            volumeZ = cms.double(300.0)
        ),
        pixel = cms.PSet(
            AdcFullScLateCR = cms.int32(255),
            AdcFullScale = cms.int32(255),
            AddNoise = cms.bool(True),
            AddNoisyPixels = cms.bool(True),
            AddPixelInefficiency = cms.bool(True),
            AddThresholdSmearing = cms.bool(True),
            Alpha2Order = cms.bool(True),
            BPix_SignalResponse_p0 = cms.double(0.00171),
            BPix_SignalResponse_p1 = cms.double(0.711),
            BPix_SignalResponse_p2 = cms.double(203.0),
            BPix_SignalResponse_p3 = cms.double(148.0),
            ChargeVCALSmearing = cms.bool(True),
            DeadModules_DB = cms.bool(True),
            DoPixelAging = cms.bool(False),
            ElectronPerAdc = cms.double(135.0),
            ElectronsPerVcal = cms.double(47),
            ElectronsPerVcal_L1 = cms.double(50),
            ElectronsPerVcal_L1_Offset = cms.double(-670),
            ElectronsPerVcal_Offset = cms.double(-60),
            FPix_SignalResponse_p0 = cms.double(0.00171),
            FPix_SignalResponse_p1 = cms.double(0.711),
            FPix_SignalResponse_p2 = cms.double(203.0),
            FPix_SignalResponse_p3 = cms.double(148.0),
            GainSmearing = cms.double(0.0),
            KillBadFEDChannels = cms.bool(True),
            LorentzAngle_DB = cms.bool(True),
            MissCalInLateCR = cms.bool(True),
            MissCalibrate = cms.bool(True),
            NoiseInElectrons = cms.double(175.0),
            NumPixelBarrel = cms.int32(4),
            NumPixelEndcap = cms.int32(3),
            OffsetSmearing = cms.double(0.0),
            PixGeometryType = cms.string('idealForDigi'),
            PrintClusters = cms.bool(False),
            PrintTemplates = cms.bool(False),
            ReadoutNoiseInElec = cms.double(350.0),
            RoutList = cms.vstring(
                'TrackerHitsPixelBarrelLowTof',
                'TrackerHitsPixelBarrelHighTof',
                'TrackerHitsPixelEndcapLowTof',
                'TrackerHitsPixelEndcapHighTof'
            ),
            SiPixelQualityLabel = cms.string('forDigitizer'),
            TanLorentzAnglePerTesla_BPix = cms.double(0.106),
            TanLorentzAnglePerTesla_FPix = cms.double(0.106),
            ThresholdInElectrons_BPix = cms.double(1600.0),
            ThresholdInElectrons_BPix_L1 = cms.double(2000.0),
            ThresholdInElectrons_BPix_L2 = cms.double(1600.0),
            ThresholdInElectrons_FPix = cms.double(1600.0),
            ThresholdSmearing_BPix = cms.double(245.0),
            ThresholdSmearing_BPix_L1 = cms.double(245.0),
            ThresholdSmearing_BPix_L2 = cms.double(245.0),
            ThresholdSmearing_FPix = cms.double(210.0),
            TofLowerCut = cms.double(-12.5),
            TofUpperCut = cms.double(12.5),
            UseReweighting = cms.bool(True),
            accumulatorType = cms.string('SiPixelDigitizer'),
            applyLateReweighting = cms.bool(False),
            deltaProductionCut = cms.double(0.03),
            hitsProducer = cms.string('g4SimHits'),
            killModules = cms.bool(True),
            makeDigiSimLinks = cms.untracked.bool(True),
            store_SimHitEntryExitPoints = cms.bool(False),
            useDB = cms.bool(False)
        ),
        puVtx = cms.PSet(
            accumulatorType = cms.string('PileupVertexAccumulator'),
            hitsProducer = cms.string('generator'),
            makeDigiSimLinks = cms.untracked.bool(False),
            saveVtxTimes = cms.bool(False),
            vtxFallbackTag = cms.InputTag("generator"),
            vtxTag = cms.InputTag("generatorSmeared")
        ),
        strip = cms.PSet(
            APVProbabilityFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVProbaList.txt'),
            APVSaturationFromHIP = cms.bool(False),
            APVSaturationProbScaling = cms.double(1.0),
            APVShapeDecoFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVShapeDeco_320.txt'),
            APVShapePeakFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVShapePeak_default.txt'),
            APVpeakmode = cms.bool(False),
            AppliedVoltage = cms.double(300.0),
            BaselineShift = cms.bool(True),
            ChargeDistributionRMS = cms.double(6.5e-10),
            ChargeMobility = cms.double(310.0),
            CommonModeNoise = cms.bool(True),
            CosmicDelayShift = cms.untracked.double(0.0),
            CouplingConstantDecIB1 = cms.vdouble(0.7748, 0.0962, 0.0165),
            CouplingConstantDecIB2 = cms.vdouble(0.83, 0.0756, 0.0094),
            CouplingConstantDecOB1 = cms.vdouble(0.6871, 0.1222, 0.0342),
            CouplingConstantDecOB2 = cms.vdouble(0.725, 0.1102, 0.0273),
            CouplingConstantDecW1a = cms.vdouble(0.786, 0.093, 0.014),
            CouplingConstantDecW1b = cms.vdouble(0.822, 0.08, 0.009),
            CouplingConstantDecW2a = cms.vdouble(0.7962, 0.0914, 0.0104),
            CouplingConstantDecW2b = cms.vdouble(0.888, 0.05, 0.006),
            CouplingConstantDecW3a = cms.vdouble(0.8164, 0.09, 0.0018),
            CouplingConstantDecW3b = cms.vdouble(0.848, 0.06, 0.016),
            CouplingConstantDecW4 = cms.vdouble(0.876, 0.06, 0.002),
            CouplingConstantDecW5 = cms.vdouble(0.7565, 0.0913, 0.0304),
            CouplingConstantDecW6 = cms.vdouble(0.758, 0.093, 0.026),
            CouplingConstantDecW7 = cms.vdouble(0.7828, 0.0862, 0.0224),
            CouplingConstantPeakIB1 = cms.vdouble(0.9006, 0.0497),
            CouplingConstantPeakIB2 = cms.vdouble(0.9342, 0.0328),
            CouplingConstantPeakOB1 = cms.vdouble(0.8542, 0.0729),
            CouplingConstantPeakOB2 = cms.vdouble(0.8719, 0.064),
            CouplingConstantPeakW1a = cms.vdouble(0.996, 0.002),
            CouplingConstantPeakW1b = cms.vdouble(0.976, 0.012),
            CouplingConstantPeakW2a = cms.vdouble(1.0, 0.0),
            CouplingConstantPeakW2b = cms.vdouble(0.998, 0.001),
            CouplingConstantPeakW3a = cms.vdouble(0.996, 0.002),
            CouplingConstantPeakW3b = cms.vdouble(0.992, 0.004),
            CouplingConstantPeakW4 = cms.vdouble(0.992, 0.004),
            CouplingConstantPeakW5 = cms.vdouble(0.968, 0.016),
            CouplingConstantPeakW6 = cms.vdouble(0.972, 0.014),
            CouplingConstantPeakW7 = cms.vdouble(0.964, 0.018),
            CouplingConstantRunIIDecIB1 = cms.vdouble(0.8361, 0.0703, 0.0117),
            CouplingConstantRunIIDecIB2 = cms.vdouble(0.8616, 0.0588, 0.0104),
            CouplingConstantRunIIDecOB1 = cms.vdouble(0.7461, 0.0996, 0.0273),
            CouplingConstantRunIIDecOB2 = cms.vdouble(0.7925, 0.0834, 0.0203),
            CouplingConstantRunIIDecW1a = cms.vdouble(0.8571, 0.0608, 0.0106),
            CouplingConstantRunIIDecW1b = cms.vdouble(0.8827, 0.0518, 0.0068),
            CouplingConstantRunIIDecW2a = cms.vdouble(0.8861, 0.049, 0.008),
            CouplingConstantRunIIDecW2b = cms.vdouble(0.8943, 0.0483, 0.0046),
            CouplingConstantRunIIDecW3a = cms.vdouble(0.8984, 0.0494, 0.0014),
            CouplingConstantRunIIDecW3b = cms.vdouble(0.8611, 0.0573, 0.0121),
            CouplingConstantRunIIDecW4 = cms.vdouble(0.8881, 0.0544, 0.0015),
            CouplingConstantRunIIDecW5 = cms.vdouble(0.7997, 0.077, 0.0231),
            CouplingConstantRunIIDecW6 = cms.vdouble(0.8067, 0.0769, 0.0198),
            CouplingConstantRunIIDecW7 = cms.vdouble(0.7883, 0.0888, 0.0171),
            CouplingConstantsRunIIDecB = cms.bool(True),
            CouplingConstantsRunIIDecW = cms.bool(True),
            DeltaProductionCut = cms.double(0.120425),
            DepletionVoltage = cms.double(170.0),
            DigiModeList = cms.PSet(
                PRDigi = cms.string('ProcessedRaw'),
                SCDigi = cms.string('ScopeMode'),
                VRDigi = cms.string('VirginRaw'),
                ZSDigi = cms.string('ZeroSuppressed')
            ),
            FedAlgorithm = cms.int32(4),
            FedAlgorithm_PM = cms.int32(4),
            Gain = cms.string(''),
            GeometryType = cms.string('idealForDigi'),
            GevPerElectron = cms.double(3.61e-09),
            Inefficiency = cms.double(0.0),
            LandauFluctuations = cms.bool(True),
            LorentzAngle = cms.string(''),
            Noise = cms.bool(True),
            NoiseSigmaThreshold = cms.double(2.0),
            PedestalsOffset = cms.double(128),
            PreMixingMode = cms.bool(False),
            ROUList = cms.vstring(
                'TrackerHitsTIBLowTof',
                'TrackerHitsTIBHighTof',
                'TrackerHitsTIDLowTof',
                'TrackerHitsTIDHighTof',
                'TrackerHitsTOBLowTof',
                'TrackerHitsTOBHighTof',
                'TrackerHitsTECLowTof',
                'TrackerHitsTECHighTof'
            ),
            RealPedestals = cms.bool(True),
            SingleStripNoise = cms.bool(True),
            TOFCutForDeconvolution = cms.double(50.0),
            TOFCutForPeak = cms.double(100.0),
            Temperature = cms.double(273.0),
            TrackerConfigurationFromDB = cms.bool(False),
            ZeroSuppression = cms.bool(True),
            accumulatorType = cms.string('SiStripDigitizer'),
            apv_mVPerQ = cms.double(5.5),
            apv_maxResponse = cms.double(729),
            apv_rate = cms.double(66.2),
            apvfCPerElectron = cms.double(0.0001602),
            chargeDivisionsPerStrip = cms.int32(10),
            cmnRMStec = cms.double(2.44),
            cmnRMStib = cms.double(5.92),
            cmnRMStid = cms.double(3.08),
            cmnRMStob = cms.double(1.08),
            electronPerAdcDec = cms.double(247.0),
            electronPerAdcPeak = cms.double(262.0),
            fracOfEventsToSimAPV = cms.double(0.0),
            hitsProducer = cms.string('g4SimHits'),
            includeAPVSimulation = cms.bool(False),
            makeDigiSimLinks = cms.untracked.bool(True),
            noDiffusion = cms.bool(False)
        )
    ),
    maxBunch = cms.int32(3),
    minBunch = cms.int32(-5),
    mixObjects = cms.PSet(
        mixCH = cms.PSet(
            crossingFrames = cms.untracked.vstring(),
            input = cms.VInputTag(
                cms.InputTag("g4SimHits","CastorFI"), cms.InputTag("g4SimHits","EcalHitsEB"), cms.InputTag("g4SimHits","EcalHitsEE"), cms.InputTag("g4SimHits","EcalHitsES"), cms.InputTag("g4SimHits","HcalHits"),
                cms.InputTag("g4SimHits","ZDCHITS")
            ),
            subdets = cms.vstring(
                'CastorFI',
                'EcalHitsEB',
                'EcalHitsEE',
                'EcalHitsES',
                'HcalHits',
                'ZDCHITS'
            ),
            type = cms.string('PCaloHit')
        ),
        mixHepMC = cms.PSet(
            input = cms.VInputTag(cms.InputTag("generatorSmeared"), cms.InputTag("generator")),
            makeCrossingFrame = cms.untracked.bool(True),
            type = cms.string('HepMCProduct')
        ),
        mixSH = cms.PSet(
            crossingFrames = cms.untracked.vstring(
                'MuonCSCHits',
                'MuonDTHits',
                'MuonRPCHits',
                'MuonGEMHits',
                'TotemHitsRP',
                'CTPPSPixelHits'
            ),
            input = cms.VInputTag(
                cms.InputTag("g4SimHits","MuonCSCHits"), cms.InputTag("g4SimHits","MuonDTHits"), cms.InputTag("g4SimHits","MuonRPCHits"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"),
                cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"), cms.InputTag("g4SimHits","TrackerHitsTECHighTof"), cms.InputTag("g4SimHits","TrackerHitsTECLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"),
                cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"), cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"), cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTOBLowTof"),
                cms.InputTag("g4SimHits","MuonGEMHits"), cms.InputTag("g4SimHits","TotemHitsRP"), cms.InputTag("g4SimHits","CTPPSPixelHits")
            ),
            pcrossingFrames = cms.untracked.vstring(),
            subdets = cms.vstring(
                'MuonCSCHits',
                'MuonDTHits',
                'MuonRPCHits',
                'TrackerHitsPixelBarrelHighTof',
                'TrackerHitsPixelBarrelLowTof',
                'TrackerHitsPixelEndcapHighTof',
                'TrackerHitsPixelEndcapLowTof',
                'TrackerHitsTECHighTof',
                'TrackerHitsTECLowTof',
                'TrackerHitsTIBHighTof',
                'TrackerHitsTIBLowTof',
                'TrackerHitsTIDHighTof',
                'TrackerHitsTIDLowTof',
                'TrackerHitsTOBHighTof',
                'TrackerHitsTOBLowTof',
                'MuonGEMHits',
                'TotemHitsRP',
                'CTPPSPixelHits'
            ),
            type = cms.string('PSimHit')
        ),
        mixTracks = cms.PSet(
            input = cms.VInputTag(cms.InputTag("g4SimHits")),
            makeCrossingFrame = cms.untracked.bool(False),
            type = cms.string('SimTrack')
        ),
        mixVertices = cms.PSet(
            input = cms.VInputTag(cms.InputTag("g4SimHits")),
            makeCrossingFrame = cms.untracked.bool(False),
            type = cms.string('SimVertex')
        )
    ),
    mixProdStep1 = cms.bool(False),
    mixProdStep2 = cms.bool(False),
    playback = cms.untracked.bool(False),
    useCurrentProcessOnly = cms.bool(False)
)


process.muCaloMetCorr = cms.EDProducer("MuonMETcorrInputProducer",
    src = cms.InputTag("muons"),
    srcMuonCorrections = cms.InputTag("muonMETValueMapProducer","muCorrData")
)


process.muCaloMetCorrNoHF = cms.EDProducer("MuonMETcorrInputProducer",
    src = cms.InputTag("muons"),
    srcMuonCorrections = cms.InputTag("muonMETValueMapProducer","muCorrData")
)


process.muCaloMetCorrPuppi = cms.EDProducer("MuonMETcorrInputProducer",
    src = cms.InputTag("muons"),
    srcMuonCorrections = cms.InputTag("muonMETValueMapProducer","muCorrData")
)


process.muPFIsoDepositChargedAllPAT = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedParticlesPFBRECO")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("muons"),
    trackType = cms.string('candidate')
)


process.muPFIsoDepositChargedPAT = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedHadronsPFBRECO")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("muons"),
    trackType = cms.string('candidate')
)


process.muPFIsoDepositGammaPAT = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllPhotonsPFBRECO")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("muons"),
    trackType = cms.string('candidate')
)


process.muPFIsoDepositNeutralPAT = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllNeutralHadronsPFBRECO")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("muons"),
    trackType = cms.string('candidate')
)


process.muPFIsoDepositPUPAT = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfPileUpAllChargedParticlesPFBRECO")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("muons"),
    trackType = cms.string('candidate')
)


process.muPFIsoValueCharged03PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositChargedPAT"),
        vetos = cms.vstring(
            '0.0001',
            'Threshold(0.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFIsoValueCharged04PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositChargedPAT"),
        vetos = cms.vstring(
            '0.0001',
            'Threshold(0.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFIsoValueChargedAll03PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositChargedAllPAT"),
        vetos = cms.vstring(
            '0.0001',
            'Threshold(0.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFIsoValueChargedAll04PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositChargedAllPAT"),
        vetos = cms.vstring(
            '0.0001',
            'Threshold(0.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFIsoValueGamma03PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositGammaPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(0.5)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFIsoValueGamma04PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositGammaPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(0.5)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFIsoValueGammaHighThreshold03PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositGammaPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(1.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFIsoValueGammaHighThreshold04PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositGammaPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(1.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFIsoValueNeutral03PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositNeutralPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(0.5)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFIsoValueNeutral04PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositNeutralPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(0.5)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFIsoValueNeutralHighThreshold03PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositNeutralPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(1.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFIsoValueNeutralHighThreshold04PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositNeutralPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(1.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFIsoValuePU03PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositPUPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(0.5)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFIsoValuePU04PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositPUPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(0.5)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFMeanDRIsoValueCharged03PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.3),
        mode = cms.string('meanDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositChargedPAT"),
        vetos = cms.vstring(
            '0.0001',
            'Threshold(0.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFMeanDRIsoValueCharged04PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.4),
        mode = cms.string('meanDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositChargedPAT"),
        vetos = cms.vstring(
            '0.0001',
            'Threshold(0.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFMeanDRIsoValueChargedAll03PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.3),
        mode = cms.string('meanDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositChargedAllPAT"),
        vetos = cms.vstring(
            '0.0001',
            'Threshold(0.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFMeanDRIsoValueChargedAll04PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.4),
        mode = cms.string('meanDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositChargedAllPAT"),
        vetos = cms.vstring(
            '0.0001',
            'Threshold(0.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFMeanDRIsoValueGamma03PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.3),
        mode = cms.string('meanDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositGammaPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(0.5)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFMeanDRIsoValueGamma04PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.4),
        mode = cms.string('meanDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositGammaPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(0.5)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFMeanDRIsoValueGammaHighThreshold03PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.3),
        mode = cms.string('meanDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositGammaPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(1.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFMeanDRIsoValueGammaHighThreshold04PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.4),
        mode = cms.string('meanDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositGammaPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(1.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFMeanDRIsoValueNeutral03PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.3),
        mode = cms.string('meanDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositNeutralPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(0.5)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFMeanDRIsoValueNeutral04PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.4),
        mode = cms.string('meanDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositNeutralPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(0.5)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFMeanDRIsoValueNeutralHighThreshold03PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.3),
        mode = cms.string('meanDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositNeutralPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(1.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFMeanDRIsoValueNeutralHighThreshold04PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.4),
        mode = cms.string('meanDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositNeutralPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(1.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFMeanDRIsoValuePU03PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.3),
        mode = cms.string('meanDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositPUPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(0.5)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFMeanDRIsoValuePU04PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.4),
        mode = cms.string('meanDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositPUPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(0.5)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFSumDRIsoValueCharged03PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.3),
        mode = cms.string('sumDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositChargedPAT"),
        vetos = cms.vstring(
            '0.0001',
            'Threshold(0.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFSumDRIsoValueCharged04PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.4),
        mode = cms.string('sumDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositChargedPAT"),
        vetos = cms.vstring(
            '0.0001',
            'Threshold(0.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFSumDRIsoValueChargedAll03PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.3),
        mode = cms.string('sumDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositChargedAllPAT"),
        vetos = cms.vstring(
            '0.0001',
            'Threshold(0.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFSumDRIsoValueChargedAll04PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.4),
        mode = cms.string('sumDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositChargedAllPAT"),
        vetos = cms.vstring(
            '0.0001',
            'Threshold(0.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFSumDRIsoValueGamma03PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.3),
        mode = cms.string('sumDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositGammaPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(0.5)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFSumDRIsoValueGamma04PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.4),
        mode = cms.string('sumDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositGammaPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(0.5)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFSumDRIsoValueGammaHighThreshold03PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.3),
        mode = cms.string('sumDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositGammaPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(1.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFSumDRIsoValueGammaHighThreshold04PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.4),
        mode = cms.string('sumDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositGammaPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(1.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFSumDRIsoValueNeutral03PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.3),
        mode = cms.string('sumDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositNeutralPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(0.5)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFSumDRIsoValueNeutral04PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.4),
        mode = cms.string('sumDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositNeutralPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(0.5)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFSumDRIsoValueNeutralHighThreshold03PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.3),
        mode = cms.string('sumDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositNeutralPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(1.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFSumDRIsoValueNeutralHighThreshold04PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.4),
        mode = cms.string('sumDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositNeutralPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(1.0)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFSumDRIsoValuePU03PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.3),
        mode = cms.string('sumDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositPUPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(0.5)'
        ),
        weight = cms.string('1')
    ))
)


process.muPFSumDRIsoValuePU04PAT = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        deltaR = cms.double(0.4),
        mode = cms.string('sumDR'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("muPFIsoDepositPUPAT"),
        vetos = cms.vstring(
            '0.01',
            'Threshold(0.5)'
        ),
        weight = cms.string('1')
    ))
)


process.muonMatch = cms.EDProducer("MCMatcher",
    checkCharge = cms.bool(True),
    matched = cms.InputTag("prunedGenParticles"),
    maxDPtRel = cms.double(0.5),
    maxDeltaR = cms.double(0.5),
    mcPdgId = cms.vint32(13),
    mcStatus = cms.vint32(1),
    resolveAmbiguities = cms.bool(True),
    resolveByMatchQuality = cms.bool(False),
    src = cms.InputTag("muons")
)


process.muonPUPPIIsolation = cms.EDProducer("CITKPFIsolationSumProducerForPUPPI",
    isolationConeDefinitions = cms.VPSet(
        cms.PSet(
            VetoConeSize = cms.double(0.0001),
            VetoThreshold = cms.double(0.0),
            coneSize = cms.double(0.4),
            isolateAgainst = cms.string('h+'),
            isolationAlgo = cms.string('MuonPFIsolationWithConeVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3)
        ),
        cms.PSet(
            VetoConeSize = cms.double(0.01),
            VetoThreshold = cms.double(0.0),
            coneSize = cms.double(0.4),
            isolateAgainst = cms.string('h0'),
            isolationAlgo = cms.string('MuonPFIsolationWithConeVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3)
        ),
        cms.PSet(
            VetoConeSize = cms.double(0.01),
            VetoThreshold = cms.double(0.0),
            coneSize = cms.double(0.4),
            isolateAgainst = cms.string('gamma'),
            isolationAlgo = cms.string('MuonPFIsolationWithConeVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3)
        )
    ),
    mightGet = cms.optional.untracked.vstring,
    puppiValueMap = cms.InputTag(""),
    srcForIsolationCone = cms.InputTag("packedPFCandidates"),
    srcToIsolate = cms.InputTag("muons"),
    usePUPPINoLepton = cms.bool(False)
)


process.muonPUPPINoLeptonsIsolation = cms.EDProducer("CITKPFIsolationSumProducerForPUPPI",
    isolationConeDefinitions = cms.VPSet(
        cms.PSet(
            VetoConeSize = cms.double(0.0001),
            VetoThreshold = cms.double(0.0),
            coneSize = cms.double(0.4),
            isolateAgainst = cms.string('h+'),
            isolationAlgo = cms.string('MuonPFIsolationWithConeVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3)
        ),
        cms.PSet(
            VetoConeSize = cms.double(0.01),
            VetoThreshold = cms.double(0.0),
            coneSize = cms.double(0.4),
            isolateAgainst = cms.string('h0'),
            isolationAlgo = cms.string('MuonPFIsolationWithConeVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3)
        ),
        cms.PSet(
            VetoConeSize = cms.double(0.01),
            VetoThreshold = cms.double(0.0),
            coneSize = cms.double(0.4),
            isolateAgainst = cms.string('gamma'),
            isolationAlgo = cms.string('MuonPFIsolationWithConeVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3)
        )
    ),
    mightGet = cms.optional.untracked.vstring,
    puppiValueMap = cms.InputTag(""),
    srcForIsolationCone = cms.InputTag("packedPFCandidates"),
    srcToIsolate = cms.InputTag("muons"),
    usePUPPINoLepton = cms.bool(True)
)


process.muonReducedTrackExtras = cms.EDProducer("MuonReducedTrackExtraProducer",
    cut = cms.string('pt > 3.0'),
    mightGet = cms.optional.untracked.vstring,
    muonTag = cms.InputTag("muons"),
    outputClusters = cms.bool(True),
    pixelClusterTag = cms.InputTag("siPixelClusters"),
    stripClusterTag = cms.InputTag("siStripClusters"),
    trackExtraAssocs = cms.VInputTag(),
    trackExtraTags = cms.VInputTag("generalTracks", "globalMuons", "tevMuons:firstHit", "tevMuons:picky", "tevMuons:dyt")
)


process.nb1AK8PuppiSoftDrop = cms.EDProducer("ECFAdder",
    Njets = cms.vuint32(1, 2, 3),
    alpha = cms.double(1),
    beta = cms.double(1),
    cuts = cms.vstring(
        '',
        '',
        'pt > 250'
    ),
    ecftype = cms.string('N'),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("ak8PFJetsPuppiSoftDrop"),
    srcWeights = cms.InputTag("puppi")
)


process.nb1AK8PuppiSoftDropSubjets = cms.EDProducer("ECFAdder",
    Njets = cms.vuint32(1, 2, 3),
    alpha = cms.double(1),
    beta = cms.double(1),
    cuts = cms.vstring(
        '',
        '',
        ''
    ),
    ecftype = cms.string('N'),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("ak8PFJetsPuppiSoftDrop","SubJets"),
    srcWeights = cms.InputTag("puppi")
)


process.nb2AK8PuppiSoftDrop = cms.EDProducer("ECFAdder",
    Njets = cms.vuint32(1, 2, 3),
    alpha = cms.double(2.0),
    beta = cms.double(2.0),
    cuts = cms.vstring(
        '',
        '',
        'pt > 250'
    ),
    ecftype = cms.string('N'),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("ak8PFJetsPuppiSoftDrop"),
    srcWeights = cms.InputTag("puppi")
)


process.nb2AK8PuppiSoftDropSubjets = cms.EDProducer("ECFAdder",
    Njets = cms.vuint32(1, 2, 3),
    alpha = cms.double(2.0),
    beta = cms.double(2.0),
    cuts = cms.vstring(
        '',
        '',
        ''
    ),
    ecftype = cms.string('N'),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("ak8PFJetsPuppiSoftDrop","SubJets"),
    srcWeights = cms.InputTag("puppi")
)


process.offlinePrimaryVerticesRecovery = cms.EDProducer("PrimaryVertexProducer",
    TkClusParameters = cms.PSet(
        TkDAClusParameters = cms.PSet(
            Tmin = cms.double(2.0),
            Tpurge = cms.double(2.0),
            Tstop = cms.double(0.5),
            block_size = cms.uint32(10000),
            convergence_mode = cms.int32(0),
            coolingFactor = cms.double(0.6),
            d0CutOff = cms.double(3.0),
            delta_highT = cms.double(0.01),
            delta_lowT = cms.double(0.001),
            dzCutOff = cms.double(3.0),
            overlap_frac = cms.double(0.0),
            runInBlocks = cms.bool(False),
            uniquetrkminp = cms.double(0.0),
            uniquetrkweight = cms.double(0.8),
            vertexSize = cms.double(0.006),
            zmerge = cms.double(0.01),
            zrange = cms.double(4.0)
        ),
        TkGapClusParameters = cms.PSet(
            zSeparation = cms.double(1.0)
        ),
        algorithm = cms.string('gap')
    ),
    TkFilterParameters = cms.PSet(
        algorithm = cms.string('filter'),
        maxD0Error = cms.double(1.0),
        maxD0Significance = cms.double(999.0),
        maxDzError = cms.double(1.0),
        maxEta = cms.double(999.0),
        maxNormalizedChi2 = cms.double(999.0),
        minPixelLayersWithHits = cms.int32(0),
        minPt = cms.double(0.0),
        minSiliconLayersWithHits = cms.int32(0),
        trackQuality = cms.string('any')
    ),
    TrackLabel = cms.InputTag("generalTracks"),
    beamSpotLabel = cms.InputTag("offlineBeamSpot"),
    isRecoveryIteration = cms.bool(True),
    recoveryVtxCollection = cms.InputTag("offlinePrimaryVertices"),
    verbose = cms.untracked.bool(False),
    vertexCollections = cms.VPSet(cms.PSet(
        algorithm = cms.string('AdaptiveVertexFitter'),
        chi2cutoff = cms.double(2.5),
        label = cms.string(''),
        maxDistanceToBeam = cms.double(1.0),
        minNdof = cms.double(0.0),
        useBeamConstraint = cms.bool(False)
    ))
)


process.offlineSlimmedPrimaryVertices = cms.EDProducer("PATVertexSlimmer",
    score = cms.InputTag("primaryVertexAssociation","original"),
    src = cms.InputTag("offlinePrimaryVertices")
)


process.offlineSlimmedPrimaryVertices4D = cms.EDProducer("PATVertexSlimmer",
    src = cms.InputTag("offlinePrimaryVertices4D")
)


process.offlineSlimmedPrimaryVerticesRecovery = cms.EDProducer("PATVertexSlimmer",
    src = cms.InputTag("offlinePrimaryVerticesRecovery")
)


process.offlineSlimmedPrimaryVerticesWithBS = cms.EDProducer("PATVertexSlimmer",
    score = cms.InputTag("primaryVertexWithBSAssociation","original"),
    src = cms.InputTag("offlinePrimaryVerticesWithBS")
)


process.oniaPhotonCandidates = cms.EDProducer("OniaPhotonConversionProducer",
    TkMinNumOfDOF = cms.uint32(3),
    convAlgo = cms.string('undefined'),
    convQuality = cms.vstring(
        'highPurity',
        'generalTracksOnly'
    ),
    convSelection = cms.string('conversionVertex.position.rho>1.5'),
    conversions = cms.InputTag("allConversions"),
    minDistanceOfApproachMaxCut = cms.double(1.0),
    minDistanceOfApproachMinCut = cms.double(-0.25),
    pfcandidates = cms.InputTag("particleFlow"),
    pi0LargeWindow = cms.vdouble(0.11, 0.16),
    pi0OnlineSwitch = cms.bool(False),
    pi0SmallWindow = cms.vdouble(0.13, 0.14),
    primaryVertexTag = cms.InputTag("offlinePrimaryVertices"),
    sigmaTkVtxComp = cms.uint32(5),
    trackchi2Cut = cms.double(10),
    vertexChi2ProbCut = cms.double(0.0005),
    wantCompatibleInnerHits = cms.bool(True),
    wantHighpurity = cms.bool(False),
    wantTkVtxCompatibility = cms.bool(False)
)


process.ootPhotonCore = cms.EDProducer("PhotonCoreProducer",
    conversionProducer = cms.InputTag("conversions"),
    endcapOnly = cms.bool(False),
    minSCEt = cms.double(10.0),
    photonCoreCollection = cms.string(''),
    pixelSeedProducer = cms.InputTag("electronMergedSeeds"),
    risolveConversionAmbiguity = cms.bool(True),
    scHybridBarrelProducer = cms.InputTag("particleFlowSuperClusterOOTECAL","particleFlowSuperClusterOOTECALBarrel"),
    scIslandEndcapProducer = cms.InputTag("particleFlowSuperClusterOOTECAL","particleFlowSuperClusterOOTECALEndcapWithPreshower")
)


process.ootPhotonEcalPFClusterIsolationProducer = cms.EDProducer("PhotonEcalPFClusterIsolationProducer",
    candidateProducer = cms.InputTag("ootPhotonsTmp"),
    drMax = cms.double(0.3),
    drVetoBarrel = cms.double(0),
    drVetoEndcap = cms.double(0),
    energyBarrel = cms.double(0),
    energyEndcap = cms.double(0),
    etaStripBarrel = cms.double(0),
    etaStripEndcap = cms.double(0),
    mightGet = cms.optional.untracked.vstring,
    pfClusterProducer = cms.InputTag("particleFlowClusterOOTECAL")
)


process.ootPhotonMatch = cms.EDProducer("MCMatcher",
    checkCharge = cms.bool(True),
    matched = cms.InputTag("prunedGenParticles"),
    maxDPtRel = cms.double(1.0),
    maxDeltaR = cms.double(0.2),
    mcPdgId = cms.vint32(22),
    mcStatus = cms.vint32(1),
    resolveAmbiguities = cms.bool(True),
    resolveByMatchQuality = cms.bool(False),
    src = cms.InputTag("reducedEgamma","reducedOOTPhotons")
)


process.ootPhotons = cms.EDProducer("GEDPhotonProducer",
    PFIsolationCalculatorSet = cms.PSet(
        ComponentName = cms.string('pfIsolationCalculator'),
        applyDzDxyVeto = cms.bool(True),
        applyMissHitPhVeto = cms.bool(False),
        applyPFPUVeto = cms.bool(True),
        applyVeto = cms.bool(True),
        checkClosestZVertex = cms.bool(True),
        coneDR = cms.double(0.3),
        deltaRVetoBarrel = cms.bool(True),
        deltaRVetoBarrelCharged = cms.double(0.02),
        deltaRVetoBarrelNeutrals = cms.double(-1.0),
        deltaRVetoBarrelPhotons = cms.double(-1.0),
        deltaRVetoEndcap = cms.bool(True),
        deltaRVetoEndcapCharged = cms.double(0.02),
        deltaRVetoEndcapNeutrals = cms.double(-1.0),
        deltaRVetoEndcapPhotons = cms.double(0.07),
        numberOfCrystalEndcapPhotons = cms.double(4.0),
        numberOfRings = cms.int32(1),
        particleType = cms.int32(1),
        rectangleDeltaEtaVetoBarrelCharged = cms.double(-1),
        rectangleDeltaEtaVetoBarrelNeutrals = cms.double(-1),
        rectangleDeltaEtaVetoBarrelPhotons = cms.double(0.015),
        rectangleDeltaEtaVetoEndcapCharged = cms.double(-1),
        rectangleDeltaEtaVetoEndcapNeutrals = cms.double(-1),
        rectangleDeltaEtaVetoEndcapPhotons = cms.double(-1),
        rectangleDeltaPhiVetoBarrelCharged = cms.double(-1),
        rectangleDeltaPhiVetoBarrelNeutrals = cms.double(-1),
        rectangleDeltaPhiVetoBarrelPhotons = cms.double(1.0),
        rectangleDeltaPhiVetoEndcapCharged = cms.double(-1),
        rectangleDeltaPhiVetoEndcapNeutrals = cms.double(-1),
        rectangleDeltaPhiVetoEndcapPhotons = cms.double(-1),
        rectangleVetoBarrel = cms.bool(True),
        rectangleVetoEndcap = cms.bool(False),
        ringSize = cms.double(0.3),
        useCrystalSize = cms.bool(True)
    ),
    PhotonDNNPFid = cms.PSet(
        enabled = cms.bool(False),
        inputTensorName = cms.string('FirstLayer_input'),
        modelsFiles = cms.vstring(
            'RecoEgamma/PhotonIdentification/data/Photon_PFID_dnn/v1/EB/EB_modelDNN.pb',
            'RecoEgamma/PhotonIdentification/data/Photon_PFID_dnn/v1/EE/EE_modelDNN.pb'
        ),
        outputDim = cms.vuint32(1, 1),
        outputTensorName = cms.string('sequential/FinalLayer/Sigmoid'),
        scalersFiles = cms.vstring(
            'RecoEgamma/PhotonIdentification/data/Photon_PFID_dnn/v1/EB/EB_scaler.txt',
            'RecoEgamma/PhotonIdentification/data/Photon_PFID_dnn/v1/EE/EE_scaler.txt'
        ),
        useEBModelInGap = cms.bool(True)
    ),
    RecHitFlagToBeExcludedEB = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    RecHitFlagToBeExcludedEE = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    RecHitSeverityToBeExcludedEB = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    RecHitSeverityToBeExcludedEE = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    barrelEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    candidateP4type = cms.string('fromEcalEnergy'),
    checkHcalStatus = cms.bool(True),
    ecalRecHitSumEtOffsetBarrel = cms.double(999999999),
    ecalRecHitSumEtOffsetEndcap = cms.double(999999999),
    ecalRecHitSumEtSlopeBarrel = cms.double(0.0),
    ecalRecHitSumEtSlopeEndcap = cms.double(0.0),
    endcapEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    energyRegressionWeightsDBLocation = cms.string('wgbrph'),
    energyRegressionWeightsFileLocation = cms.string('/afs/cern.ch/user/b/bendavid/cmspublic/regweights/gbrph.root'),
    hOverEConeSize = cms.double(0.15),
    hbheInstance = cms.string(''),
    hbheModule = cms.string('hbhereco'),
    hbheRecHits = cms.InputTag("hbhereco"),
    hcalRecHitSumEtOffsetBarrel = cms.double(999999999),
    hcalRecHitSumEtOffsetEndcap = cms.double(999999999),
    hcalRecHitSumEtSlopeBarrel = cms.double(0.0),
    hcalRecHitSumEtSlopeEndcap = cms.double(0.0),
    hcalRun2EffDepth = cms.bool(False),
    highEt = cms.double(100.0),
    isolationSumsCalculatorSet = cms.PSet(
        ComponentName = cms.string('isolationSumsCalculator'),
        EcalRecHitEtaSliceA_Barrel = cms.double(2.5),
        EcalRecHitEtaSliceA_Endcap = cms.double(2.5),
        EcalRecHitEtaSliceB_Barrel = cms.double(2.5),
        EcalRecHitEtaSliceB_Endcap = cms.double(2.5),
        EcalRecHitInnerRadiusA_Barrel = cms.double(3.5),
        EcalRecHitInnerRadiusA_Endcap = cms.double(3.5),
        EcalRecHitInnerRadiusB_Barrel = cms.double(3.5),
        EcalRecHitInnerRadiusB_Endcap = cms.double(3.5),
        EcalRecHitOuterRadiusA_Barrel = cms.double(0.4),
        EcalRecHitOuterRadiusA_Endcap = cms.double(0.4),
        EcalRecHitOuterRadiusB_Barrel = cms.double(0.3),
        EcalRecHitOuterRadiusB_Endcap = cms.double(0.3),
        EcalRecHitThreshEA_Barrel = cms.double(0.095),
        EcalRecHitThreshEA_Endcap = cms.double(0.0),
        EcalRecHitThreshEB_Barrel = cms.double(0.095),
        EcalRecHitThreshEB_Endcap = cms.double(0.0),
        EcalRecHitThreshEtA_Barrel = cms.double(0.0),
        EcalRecHitThreshEtA_Endcap = cms.double(0.11),
        EcalRecHitThreshEtB_Barrel = cms.double(0.0),
        EcalRecHitThreshEtB_Endcap = cms.double(0.11),
        HBHERecHitCollection = cms.InputTag("hbhereco"),
        HcalRecHitInnerRadiusA_Barrel = cms.vdouble(
            0.15, 0.15, 0.15, 0.15, 0.15,
            0.15, 0.15
        ),
        HcalRecHitInnerRadiusA_Endcap = cms.vdouble(
            0.15, 0.15, 0.15, 0.15, 0.15,
            0.15, 0.15
        ),
        HcalRecHitInnerRadiusB_Barrel = cms.vdouble(
            0.15, 0.15, 0.15, 0.15, 0.15,
            0.15, 0.15
        ),
        HcalRecHitInnerRadiusB_Endcap = cms.vdouble(
            0.15, 0.15, 0.15, 0.15, 0.15,
            0.15, 0.15
        ),
        HcalRecHitOuterRadiusA_Barrel = cms.vdouble(
            0.4, 0.4, 0.4, 0.4, 0.4,
            0.4, 0.4
        ),
        HcalRecHitOuterRadiusA_Endcap = cms.vdouble(
            0.4, 0.4, 0.4, 0.4, 0.4,
            0.4, 0.4
        ),
        HcalRecHitOuterRadiusB_Barrel = cms.vdouble(
            0.3, 0.3, 0.3, 0.3, 0.3,
            0.3, 0.3
        ),
        HcalRecHitOuterRadiusB_Endcap = cms.vdouble(
            0.3, 0.3, 0.3, 0.3, 0.3,
            0.3, 0.3
        ),
        TrackConeInnerRadiusA_Barrel = cms.double(0.04),
        TrackConeInnerRadiusA_Endcap = cms.double(0.04),
        TrackConeInnerRadiusB_Barrel = cms.double(0.04),
        TrackConeInnerRadiusB_Endcap = cms.double(0.04),
        TrackConeOuterRadiusA_Barrel = cms.double(0.4),
        TrackConeOuterRadiusA_Endcap = cms.double(0.4),
        TrackConeOuterRadiusB_Barrel = cms.double(0.3),
        TrackConeOuterRadiusB_Endcap = cms.double(0.3),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        beamSpotProducer = cms.InputTag("offlineBeamSpot"),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        isolationtrackEtaSliceA_Barrel = cms.double(0.015),
        isolationtrackEtaSliceA_Endcap = cms.double(0.015),
        isolationtrackEtaSliceB_Barrel = cms.double(0.015),
        isolationtrackEtaSliceB_Endcap = cms.double(0.015),
        isolationtrackThresholdA_Barrel = cms.double(0.0),
        isolationtrackThresholdA_Endcap = cms.double(0.0),
        isolationtrackThresholdB_Barrel = cms.double(0.0),
        isolationtrackThresholdB_Endcap = cms.double(0.0),
        longImpactParameterA_Barrel = cms.double(0.2),
        longImpactParameterA_Endcap = cms.double(0.2),
        longImpactParameterB_Barrel = cms.double(0.2),
        longImpactParameterB_Endcap = cms.double(0.2),
        maxHcalRecHitSeverity = cms.int32(9),
        moduleEtaBoundary = cms.vdouble(
            0.0, 0.02, 0.43, 0.46, 0.78,
            0.81, 1.13, 1.15, 1.45, 1.58
        ),
        modulePhiBoundary = cms.double(0.0087),
        recHitEThresholdHB = cms.vdouble(0.4, 0.3, 0.3, 0.3),
        recHitEThresholdHE = cms.vdouble(
            0.1, 0.2, 0.2, 0.2, 0.2,
            0.2, 0.2
        ),
        trackProducer = cms.InputTag("generalTracks"),
        transImpactParameterA_Barrel = cms.double(0.1),
        transImpactParameterA_Endcap = cms.double(0.1),
        transImpactParameterB_Barrel = cms.double(0.1),
        transImpactParameterB_Endcap = cms.double(0.1),
        useNumCrystals = cms.bool(True),
        vetoClustered = cms.bool(False)
    ),
    maxHcalRecHitSeverity = cms.int32(9),
    maxHoverEBarrel = cms.double(0.5),
    maxHoverEEndcap = cms.double(0.5),
    minR9Barrel = cms.double(0.94),
    minR9Endcap = cms.double(0.95),
    minSCEtBarrel = cms.double(10.0),
    minSCEtEndcap = cms.double(10.0),
    mipVariableSet = cms.PSet(
        ComponentName = cms.string('mipVariable'),
        HaloDiscThreshold = cms.double(70.0),
        ResidualWidth = cms.double(0.23),
        XRangeFit = cms.double(180.0),
        YRangeFit = cms.double(7.0),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE")
    ),
    multThresEB = cms.double(1.0),
    multThresEE = cms.double(1.25),
    mvaBasedHaloVariableSet = cms.PSet(
        HBHERecHitsCollection = cms.InputTag("hbhereco"),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        esRecHitCollection = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
        noiseThrES = cms.double(0.0),
        recHitEThresholdHB = cms.vdouble(0.4, 0.3, 0.3, 0.3),
        recHitEThresholdHE = cms.vdouble(
            0.1, 0.2, 0.2, 0.2, 0.2,
            0.2, 0.2
        ),
        rhoLabel = cms.InputTag("fixedGridRhoFastjetAllTmp"),
        trainingFileName = cms.FileInPath('RecoEgamma/PhotonIdentification/data/beamHaloTaggerID/xgboostToTMVA_BHtagger.root')
    ),
    nTrackHollowConeBarrel = cms.double(999999999),
    nTrackHollowConeEndcap = cms.double(999999999),
    nTrackSolidConeBarrel = cms.double(999999999),
    nTrackSolidConeEndcap = cms.double(999999999),
    outputPhotonCollection = cms.string(''),
    pfCandidates = cms.InputTag("particleFlowTmp"),
    pfECALClusIsolCfg = cms.PSet(
        drMax = cms.double(0.3),
        drVetoBarrel = cms.double(0),
        drVetoEndcap = cms.double(0),
        energyBarrel = cms.double(0),
        energyEndcap = cms.double(0),
        etaStripBarrel = cms.double(0),
        etaStripEndcap = cms.double(0),
        pfClusterProducer = cms.InputTag("particleFlowClusterECAL")
    ),
    pfECALClusIsolation = cms.InputTag("ootPhotonEcalPFClusterIsolationProducer"),
    pfEgammaCandidates = cms.InputTag(""),
    pfHCALClusIsolCfg = cms.PSet(
        drMax = cms.double(0.3),
        drVetoBarrel = cms.double(0),
        drVetoEndcap = cms.double(0),
        energyBarrel = cms.double(0),
        energyEndcap = cms.double(0),
        etaStripBarrel = cms.double(0),
        etaStripEndcap = cms.double(0),
        pfClusterProducerHCAL = cms.InputTag("particleFlowClusterHCAL"),
        pfClusterProducerHFEM = cms.InputTag(""),
        pfClusterProducerHFHAD = cms.InputTag(""),
        useEt = cms.bool(True),
        useHF = cms.bool(False)
    ),
    pfHCALClusIsolation = cms.InputTag("ootPhotonHcalPFClusterIsolationProducer"),
    pfIsolCfg = cms.PSet(
        chargedHadronIso = cms.InputTag(""),
        chargedHadronPFPVIso = cms.InputTag(""),
        chargedHadronWorstVtxGeomVetoIso = cms.InputTag(""),
        chargedHadronWorstVtxIso = cms.InputTag(""),
        neutralHadronIso = cms.InputTag(""),
        photonIso = cms.InputTag("")
    ),
    photonEcalEnergyCorrFunction = cms.string('EcalClusterEnergyCorrectionObjectSpecific'),
    photonProducer = cms.InputTag("ootPhotonsTmp"),
    posCalcParameters = cms.PSet(
        LogWeighted = cms.bool(True),
        T0_barl = cms.double(7.4),
        T0_endc = cms.double(6.3),
        T0_endcPresh = cms.double(3.6),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    posCalc_logweight = cms.bool(True),
    posCalc_t0_barl = cms.double(7.7),
    posCalc_t0_endc = cms.double(6.3),
    posCalc_t0_endcPresh = cms.double(3.6),
    posCalc_w0 = cms.double(4.2),
    posCalc_x0 = cms.double(0.89),
    preshowerHits = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    primaryVertexProducer = cms.InputTag("offlinePrimaryVerticesWithBS"),
    recHitEThresholdHB = cms.vdouble(0.4, 0.3, 0.3, 0.3),
    recHitEThresholdHE = cms.vdouble(
        0.1, 0.2, 0.2, 0.2, 0.2,
        0.2, 0.2
    ),
    reconstructionStep = cms.string('ootfinal'),
    regressionWeightsFromDB = cms.bool(True),
    runMIPTagger = cms.bool(True),
    runMVABasedHaloTagger = cms.bool(True),
    sigmaIetaIetaCutBarrel = cms.double(999999999),
    sigmaIetaIetaCutEndcap = cms.double(999999999),
    superClusterCrackEnergyCorrFunction = cms.string('EcalClusterCrackCorrection'),
    superClusterEnergyCorrFunction = cms.string('EcalClusterEnergyCorrection'),
    superClusterEnergyErrorFunction = cms.string('EcalClusterEnergyUncertainty'),
    trackPtSumHollowConeBarrel = cms.double(999999999),
    trackPtSumHollowConeEndcap = cms.double(999999999),
    trackPtSumSolidConeBarrel = cms.double(999999999),
    trackPtSumSolidConeEndcap = cms.double(999999999),
    usePrimaryVertex = cms.bool(True),
    useRegression = cms.bool(True),
    valueMapPhotons = cms.string('')
)


process.ootPhotonsTmp = cms.EDProducer("GEDPhotonProducer",
    PFIsolationCalculatorSet = cms.PSet(
        ComponentName = cms.string('pfIsolationCalculator'),
        applyDzDxyVeto = cms.bool(True),
        applyMissHitPhVeto = cms.bool(False),
        applyPFPUVeto = cms.bool(True),
        applyVeto = cms.bool(True),
        checkClosestZVertex = cms.bool(True),
        coneDR = cms.double(0.3),
        deltaRVetoBarrel = cms.bool(True),
        deltaRVetoBarrelCharged = cms.double(0.02),
        deltaRVetoBarrelNeutrals = cms.double(-1.0),
        deltaRVetoBarrelPhotons = cms.double(-1.0),
        deltaRVetoEndcap = cms.bool(True),
        deltaRVetoEndcapCharged = cms.double(0.02),
        deltaRVetoEndcapNeutrals = cms.double(-1.0),
        deltaRVetoEndcapPhotons = cms.double(0.07),
        numberOfCrystalEndcapPhotons = cms.double(4.0),
        numberOfRings = cms.int32(1),
        particleType = cms.int32(1),
        rectangleDeltaEtaVetoBarrelCharged = cms.double(-1),
        rectangleDeltaEtaVetoBarrelNeutrals = cms.double(-1),
        rectangleDeltaEtaVetoBarrelPhotons = cms.double(0.015),
        rectangleDeltaEtaVetoEndcapCharged = cms.double(-1),
        rectangleDeltaEtaVetoEndcapNeutrals = cms.double(-1),
        rectangleDeltaEtaVetoEndcapPhotons = cms.double(-1),
        rectangleDeltaPhiVetoBarrelCharged = cms.double(-1),
        rectangleDeltaPhiVetoBarrelNeutrals = cms.double(-1),
        rectangleDeltaPhiVetoBarrelPhotons = cms.double(1.0),
        rectangleDeltaPhiVetoEndcapCharged = cms.double(-1),
        rectangleDeltaPhiVetoEndcapNeutrals = cms.double(-1),
        rectangleDeltaPhiVetoEndcapPhotons = cms.double(-1),
        rectangleVetoBarrel = cms.bool(True),
        rectangleVetoEndcap = cms.bool(False),
        ringSize = cms.double(0.3),
        useCrystalSize = cms.bool(True)
    ),
    PhotonDNNPFid = cms.PSet(
        enabled = cms.bool(False),
        inputTensorName = cms.string('FirstLayer_input'),
        modelsFiles = cms.vstring(
            'RecoEgamma/PhotonIdentification/data/Photon_PFID_dnn/v1/EB/EB_modelDNN.pb',
            'RecoEgamma/PhotonIdentification/data/Photon_PFID_dnn/v1/EE/EE_modelDNN.pb'
        ),
        outputDim = cms.vuint32(1, 1),
        outputTensorName = cms.string('sequential/FinalLayer/Sigmoid'),
        scalersFiles = cms.vstring(
            'RecoEgamma/PhotonIdentification/data/Photon_PFID_dnn/v1/EB/EB_scaler.txt',
            'RecoEgamma/PhotonIdentification/data/Photon_PFID_dnn/v1/EE/EE_scaler.txt'
        ),
        useEBModelInGap = cms.bool(True)
    ),
    RecHitFlagToBeExcludedEB = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    RecHitFlagToBeExcludedEE = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    RecHitSeverityToBeExcludedEB = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    RecHitSeverityToBeExcludedEE = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    barrelEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    candidateP4type = cms.string('fromEcalEnergy'),
    checkHcalStatus = cms.bool(True),
    ecalRecHitSumEtOffsetBarrel = cms.double(999999999),
    ecalRecHitSumEtOffsetEndcap = cms.double(999999999),
    ecalRecHitSumEtSlopeBarrel = cms.double(0.0),
    ecalRecHitSumEtSlopeEndcap = cms.double(0.0),
    endcapEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    energyRegressionWeightsDBLocation = cms.string('wgbrph'),
    energyRegressionWeightsFileLocation = cms.string('/afs/cern.ch/user/b/bendavid/cmspublic/regweights/gbrph.root'),
    hOverEConeSize = cms.double(0.15),
    hbheInstance = cms.string(''),
    hbheModule = cms.string('hbhereco'),
    hbheRecHits = cms.InputTag("hbhereco"),
    hcalRecHitSumEtOffsetBarrel = cms.double(999999999),
    hcalRecHitSumEtOffsetEndcap = cms.double(999999999),
    hcalRecHitSumEtSlopeBarrel = cms.double(0.0),
    hcalRecHitSumEtSlopeEndcap = cms.double(0.0),
    hcalRun2EffDepth = cms.bool(False),
    highEt = cms.double(100.0),
    isolationSumsCalculatorSet = cms.PSet(
        ComponentName = cms.string('isolationSumsCalculator'),
        EcalRecHitEtaSliceA_Barrel = cms.double(2.5),
        EcalRecHitEtaSliceA_Endcap = cms.double(2.5),
        EcalRecHitEtaSliceB_Barrel = cms.double(2.5),
        EcalRecHitEtaSliceB_Endcap = cms.double(2.5),
        EcalRecHitInnerRadiusA_Barrel = cms.double(3.5),
        EcalRecHitInnerRadiusA_Endcap = cms.double(3.5),
        EcalRecHitInnerRadiusB_Barrel = cms.double(3.5),
        EcalRecHitInnerRadiusB_Endcap = cms.double(3.5),
        EcalRecHitOuterRadiusA_Barrel = cms.double(0.4),
        EcalRecHitOuterRadiusA_Endcap = cms.double(0.4),
        EcalRecHitOuterRadiusB_Barrel = cms.double(0.3),
        EcalRecHitOuterRadiusB_Endcap = cms.double(0.3),
        EcalRecHitThreshEA_Barrel = cms.double(0.095),
        EcalRecHitThreshEA_Endcap = cms.double(0.0),
        EcalRecHitThreshEB_Barrel = cms.double(0.095),
        EcalRecHitThreshEB_Endcap = cms.double(0.0),
        EcalRecHitThreshEtA_Barrel = cms.double(0.0),
        EcalRecHitThreshEtA_Endcap = cms.double(0.11),
        EcalRecHitThreshEtB_Barrel = cms.double(0.0),
        EcalRecHitThreshEtB_Endcap = cms.double(0.11),
        HBHERecHitCollection = cms.InputTag("hbhereco"),
        HcalRecHitInnerRadiusA_Barrel = cms.vdouble(
            0.15, 0.15, 0.15, 0.15, 0.15,
            0.15, 0.15
        ),
        HcalRecHitInnerRadiusA_Endcap = cms.vdouble(
            0.15, 0.15, 0.15, 0.15, 0.15,
            0.15, 0.15
        ),
        HcalRecHitInnerRadiusB_Barrel = cms.vdouble(
            0.15, 0.15, 0.15, 0.15, 0.15,
            0.15, 0.15
        ),
        HcalRecHitInnerRadiusB_Endcap = cms.vdouble(
            0.15, 0.15, 0.15, 0.15, 0.15,
            0.15, 0.15
        ),
        HcalRecHitOuterRadiusA_Barrel = cms.vdouble(
            0.4, 0.4, 0.4, 0.4, 0.4,
            0.4, 0.4
        ),
        HcalRecHitOuterRadiusA_Endcap = cms.vdouble(
            0.4, 0.4, 0.4, 0.4, 0.4,
            0.4, 0.4
        ),
        HcalRecHitOuterRadiusB_Barrel = cms.vdouble(
            0.3, 0.3, 0.3, 0.3, 0.3,
            0.3, 0.3
        ),
        HcalRecHitOuterRadiusB_Endcap = cms.vdouble(
            0.3, 0.3, 0.3, 0.3, 0.3,
            0.3, 0.3
        ),
        TrackConeInnerRadiusA_Barrel = cms.double(0.04),
        TrackConeInnerRadiusA_Endcap = cms.double(0.04),
        TrackConeInnerRadiusB_Barrel = cms.double(0.04),
        TrackConeInnerRadiusB_Endcap = cms.double(0.04),
        TrackConeOuterRadiusA_Barrel = cms.double(0.4),
        TrackConeOuterRadiusA_Endcap = cms.double(0.4),
        TrackConeOuterRadiusB_Barrel = cms.double(0.3),
        TrackConeOuterRadiusB_Endcap = cms.double(0.3),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        beamSpotProducer = cms.InputTag("offlineBeamSpot"),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        isolationtrackEtaSliceA_Barrel = cms.double(0.015),
        isolationtrackEtaSliceA_Endcap = cms.double(0.015),
        isolationtrackEtaSliceB_Barrel = cms.double(0.015),
        isolationtrackEtaSliceB_Endcap = cms.double(0.015),
        isolationtrackThresholdA_Barrel = cms.double(0.0),
        isolationtrackThresholdA_Endcap = cms.double(0.0),
        isolationtrackThresholdB_Barrel = cms.double(0.0),
        isolationtrackThresholdB_Endcap = cms.double(0.0),
        longImpactParameterA_Barrel = cms.double(0.2),
        longImpactParameterA_Endcap = cms.double(0.2),
        longImpactParameterB_Barrel = cms.double(0.2),
        longImpactParameterB_Endcap = cms.double(0.2),
        maxHcalRecHitSeverity = cms.int32(9),
        moduleEtaBoundary = cms.vdouble(
            0.0, 0.02, 0.43, 0.46, 0.78,
            0.81, 1.13, 1.15, 1.45, 1.58
        ),
        modulePhiBoundary = cms.double(0.0087),
        recHitEThresholdHB = cms.vdouble(0.4, 0.3, 0.3, 0.3),
        recHitEThresholdHE = cms.vdouble(
            0.1, 0.2, 0.2, 0.2, 0.2,
            0.2, 0.2
        ),
        trackProducer = cms.InputTag("generalTracks"),
        transImpactParameterA_Barrel = cms.double(0.1),
        transImpactParameterA_Endcap = cms.double(0.1),
        transImpactParameterB_Barrel = cms.double(0.1),
        transImpactParameterB_Endcap = cms.double(0.1),
        useNumCrystals = cms.bool(True),
        vetoClustered = cms.bool(False)
    ),
    maxHcalRecHitSeverity = cms.int32(9),
    maxHoverEBarrel = cms.double(0.5),
    maxHoverEEndcap = cms.double(0.5),
    minR9Barrel = cms.double(0.94),
    minR9Endcap = cms.double(0.95),
    minSCEtBarrel = cms.double(10.0),
    minSCEtEndcap = cms.double(10.0),
    mipVariableSet = cms.PSet(
        ComponentName = cms.string('mipVariable'),
        HaloDiscThreshold = cms.double(70.0),
        ResidualWidth = cms.double(0.23),
        XRangeFit = cms.double(180.0),
        YRangeFit = cms.double(7.0),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE")
    ),
    multThresEB = cms.double(1.0),
    multThresEE = cms.double(1.25),
    mvaBasedHaloVariableSet = cms.PSet(
        HBHERecHitsCollection = cms.InputTag("hbhereco"),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        esRecHitCollection = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
        noiseThrES = cms.double(0.0),
        recHitEThresholdHB = cms.vdouble(0.4, 0.3, 0.3, 0.3),
        recHitEThresholdHE = cms.vdouble(
            0.1, 0.2, 0.2, 0.2, 0.2,
            0.2, 0.2
        ),
        rhoLabel = cms.InputTag("fixedGridRhoFastjetAllTmp"),
        trainingFileName = cms.FileInPath('RecoEgamma/PhotonIdentification/data/beamHaloTaggerID/xgboostToTMVA_BHtagger.root')
    ),
    nTrackHollowConeBarrel = cms.double(999999999),
    nTrackHollowConeEndcap = cms.double(999999999),
    nTrackSolidConeBarrel = cms.double(999999999),
    nTrackSolidConeEndcap = cms.double(999999999),
    outputPhotonCollection = cms.string(''),
    pfCandidates = cms.InputTag("particleFlowTmp"),
    pfECALClusIsolCfg = cms.PSet(
        drMax = cms.double(0.3),
        drVetoBarrel = cms.double(0),
        drVetoEndcap = cms.double(0),
        energyBarrel = cms.double(0),
        energyEndcap = cms.double(0),
        etaStripBarrel = cms.double(0),
        etaStripEndcap = cms.double(0),
        pfClusterProducer = cms.InputTag("particleFlowClusterECAL")
    ),
    pfEgammaCandidates = cms.InputTag(""),
    pfHCALClusIsolCfg = cms.PSet(
        drMax = cms.double(0.3),
        drVetoBarrel = cms.double(0),
        drVetoEndcap = cms.double(0),
        energyBarrel = cms.double(0),
        energyEndcap = cms.double(0),
        etaStripBarrel = cms.double(0),
        etaStripEndcap = cms.double(0),
        pfClusterProducerHCAL = cms.InputTag("particleFlowClusterHCAL"),
        pfClusterProducerHFEM = cms.InputTag(""),
        pfClusterProducerHFHAD = cms.InputTag(""),
        useEt = cms.bool(True),
        useHF = cms.bool(False)
    ),
    photonEcalEnergyCorrFunction = cms.string('EcalClusterEnergyCorrectionObjectSpecific'),
    photonProducer = cms.InputTag("ootPhotonCore"),
    posCalcParameters = cms.PSet(
        LogWeighted = cms.bool(True),
        T0_barl = cms.double(7.4),
        T0_endc = cms.double(6.3),
        T0_endcPresh = cms.double(3.6),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    posCalc_logweight = cms.bool(True),
    posCalc_t0_barl = cms.double(7.7),
    posCalc_t0_endc = cms.double(6.3),
    posCalc_t0_endcPresh = cms.double(3.6),
    posCalc_w0 = cms.double(4.2),
    posCalc_x0 = cms.double(0.89),
    preshowerHits = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    primaryVertexProducer = cms.InputTag("offlinePrimaryVerticesWithBS"),
    recHitEThresholdHB = cms.vdouble(0.4, 0.3, 0.3, 0.3),
    recHitEThresholdHE = cms.vdouble(
        0.1, 0.2, 0.2, 0.2, 0.2,
        0.2, 0.2
    ),
    reconstructionStep = cms.string('oot'),
    regressionWeightsFromDB = cms.bool(True),
    runMIPTagger = cms.bool(True),
    runMVABasedHaloTagger = cms.bool(True),
    sigmaIetaIetaCutBarrel = cms.double(999999999),
    sigmaIetaIetaCutEndcap = cms.double(999999999),
    superClusterCrackEnergyCorrFunction = cms.string('EcalClusterCrackCorrection'),
    superClusterEnergyCorrFunction = cms.string('EcalClusterEnergyCorrection'),
    superClusterEnergyErrorFunction = cms.string('EcalClusterEnergyUncertainty'),
    trackPtSumHollowConeBarrel = cms.double(999999999),
    trackPtSumHollowConeEndcap = cms.double(999999999),
    trackPtSumSolidConeBarrel = cms.double(999999999),
    trackPtSumSolidConeEndcap = cms.double(999999999),
    usePrimaryVertex = cms.bool(True),
    useRegression = cms.bool(True),
    valueMapPhotons = cms.string('')
)


process.packedCandidateMuonID = cms.EDProducer("PackedCandidateMuonSelectorProducer",
    candidates = cms.InputTag("packedPFCandidates"),
    lostTracks = cms.InputTag("lostTracks"),
    mightGet = cms.optional.untracked.vstring,
    muonIDs = cms.vstring(),
    muonSelectors = cms.vstring(
        'AllTrackerMuons',
        'TMOneStationTight'
    ),
    muons = cms.InputTag("muons")
)


process.packedGenParticles = cms.EDProducer("PATPackedGenParticleProducer",
    inputCollection = cms.InputTag("prunedGenParticlesWithStatusOne"),
    inputOriginal = cms.InputTag("genParticles"),
    map = cms.InputTag("prunedGenParticles"),
    maxRapidity = cms.double(6)
)


process.packedGenParticlesSignal = cms.EDProducer("PackedGenParticleSignalProducer",
    genParticles = cms.InputTag("genParticles"),
    mightGet = cms.optional.untracked.vstring,
    packedGenParticles = cms.InputTag("packedGenParticles")
)


process.packedPFCandidateToGenAssociation = cms.EDProducer("PackedCandidateGenAssociationProducer",
    genToPrunedAssoc = cms.InputTag("prunedGenParticles"),
    genToPrunedAssocWithStatusOne = cms.InputTag("prunedGenParticlesWithStatusOne"),
    mightGet = cms.optional.untracked.vstring,
    trackToGenAssoc = cms.InputTag("prunedTrackMCMatch"),
    trackToPackedCandidatesAssoc = cms.InputTag("packedPFCandidates"),
    tracks = cms.InputTag("generalTracks")
)


process.packedPFCandidateTrackChi2 = cms.EDProducer("PackedCandidateTrackChi2Producer",
    candidates = cms.InputTag("packedPFCandidates"),
    doLostTracks = cms.bool(False),
    mightGet = cms.optional.untracked.vstring,
    trackCollection = cms.InputTag("generalTracks")
)


process.packedPFCandidates = cms.EDProducer("PATPackedCandidateProducer",
    PuppiNoLepSrc = cms.InputTag("puppiNoLep"),
    PuppiSrc = cms.InputTag("puppi"),
    chargedHadronIsolation = cms.InputTag("chargedHadronPFTrackIsolation"),
    covariancePackingSchemas = cms.vint32(8, 264, 520, 776, 0),
    covarianceVersion = cms.int32(1),
    inputCollection = cms.InputTag("particleFlow"),
    inputVertices = cms.InputTag("offlineSlimmedPrimaryVertices"),
    minPtForChargedHadronProperties = cms.double(3.0),
    minPtForLowQualityTrackProperties = cms.double(0.0),
    minPtForTrackProperties = cms.double(0.95),
    originalTracks = cms.InputTag("generalTracks"),
    originalVertices = cms.InputTag("offlinePrimaryVertices"),
    pfCandidateTypesForHcalDepth = cms.vint32(),
    secondaryVerticesForWhiteList = cms.VInputTag(cms.InputTag("inclusiveCandidateSecondaryVertices"), cms.InputTag("inclusiveCandidateSecondaryVerticesCvsL"), cms.InputTag("generalV0Candidates","Kshort"), cms.InputTag("generalV0Candidates","Lambda")),
    storeHcalDepthEndcapOnly = cms.bool(False),
    storeTiming = cms.bool(False),
    timeMap = cms.InputTag(""),
    timeMapErr = cms.InputTag(""),
    vertexAssociator = cms.InputTag("primaryVertexAssociation","original")
)


process.packedPFCandidatesRemoved = cms.EDProducer("PATPackedCandidateProducer",
    PuppiNoLepSrc = cms.InputTag("puppiNoLep"),
    PuppiSrc = cms.InputTag("puppi"),
    chargedHadronIsolation = cms.InputTag("chargedHadronPFTrackIsolation"),
    covariancePackingSchemas = cms.vint32(8, 264, 520, 776, 0),
    covarianceVersion = cms.int32(1),
    inputCollection = cms.InputTag("cleanedParticleFlow","removed"),
    inputVertices = cms.InputTag("offlineSlimmedPrimaryVertices"),
    minPtForChargedHadronProperties = cms.double(3.0),
    minPtForLowQualityTrackProperties = cms.double(0.0),
    minPtForTrackProperties = cms.double(0.95),
    originalTracks = cms.InputTag("generalTracks"),
    originalVertices = cms.InputTag("offlinePrimaryVertices"),
    pfCandidateTypesForHcalDepth = cms.vint32(),
    secondaryVerticesForWhiteList = cms.VInputTag(cms.InputTag("inclusiveCandidateSecondaryVertices"), cms.InputTag("inclusiveCandidateSecondaryVerticesCvsL"), cms.InputTag("generalV0Candidates","Kshort"), cms.InputTag("generalV0Candidates","Lambda")),
    storeHcalDepthEndcapOnly = cms.bool(False),
    storeTiming = cms.bool(False),
    timeMap = cms.InputTag(""),
    timeMapErr = cms.InputTag(""),
    vertexAssociator = cms.InputTag("primaryVertexAssociationCleaned","original")
)


process.packedPatJetsAK8 = cms.EDProducer("JetSubstructurePacker",
    algoLabels = cms.vstring('SoftDropPuppi'),
    algoTags = cms.VInputTag(cms.InputTag("slimmedJetsAK8PFPuppiSoftDropPacked")),
    distMax = cms.double(0.8),
    fixDaughters = cms.bool(True),
    jetSrc = cms.InputTag("selectedPatJetsAK8Puppi"),
    packedPFCandidates = cms.InputTag("packedPFCandidates")
)


process.packedpuppi = cms.EDProducer("PuppiProducer",
    DeltaZCut = cms.double(0.3),
    DeltaZCutForChargedFromPUVtxs = cms.double(0.2),
    EtaMaxCharged = cms.double(99999),
    EtaMaxPhotons = cms.double(2.5),
    EtaMinUseDeltaZ = cms.double(2.4),
    MinPuppiWeight = cms.double(0.01),
    NumOfPUVtxsForCharged = cms.uint32(2),
    PUProxyValue = cms.InputTag(""),
    PtMaxCharged = cms.double(20.0),
    PtMaxNeutrals = cms.double(200),
    PtMaxNeutralsStartSlope = cms.double(20.0),
    PtMaxPhotons = cms.double(20.0),
    UseDeltaZCut = cms.bool(True),
    UseDeltaZCutForPileup = cms.bool(False),
    UseFromPVLooseTight = cms.bool(False),
    algos = cms.VPSet(
        cms.PSet(
            EtaMaxExtrap = cms.double(2),
            MedEtaSF = cms.vdouble(1),
            MinNeutralPt = cms.vdouble(0.2),
            MinNeutralPtSlope = cms.vdouble(0.015),
            RMSEtaSF = cms.vdouble(1),
            etaMax = cms.vdouble(2.5),
            etaMin = cms.vdouble(0),
            ptMin = cms.vdouble(0),
            puppiAlgos = cms.VPSet(cms.PSet(
                algoId = cms.int32(5),
                applyLowPUCorr = cms.bool(True),
                combOpt = cms.int32(0),
                cone = cms.double(0.4),
                rmsPtMin = cms.double(0.1),
                rmsScaleFactor = cms.double(1.0),
                useCharged = cms.bool(True)
            ))
        ),
        cms.PSet(
            EtaMaxExtrap = cms.double(2.0),
            MedEtaSF = cms.vdouble(0.9, 0.75),
            MinNeutralPt = cms.vdouble(1.7, 2.0),
            MinNeutralPtSlope = cms.vdouble(0.08, 0.08),
            RMSEtaSF = cms.vdouble(1.2, 0.95),
            etaMax = cms.vdouble(3.0, 10.0),
            etaMin = cms.vdouble(2.5, 3.0),
            ptMin = cms.vdouble(0.0, 0.0),
            puppiAlgos = cms.VPSet(cms.PSet(
                algoId = cms.int32(5),
                applyLowPUCorr = cms.bool(True),
                combOpt = cms.int32(0),
                cone = cms.double(0.4),
                rmsPtMin = cms.double(0.5),
                rmsScaleFactor = cms.double(1.0),
                useCharged = cms.bool(False)
            ))
        )
    ),
    applyCHS = cms.bool(True),
    applyPhotonProtectionForExistingWeights = cms.bool(False),
    candName = cms.InputTag("packedPFCandidates"),
    clonePackedCands = cms.bool(False),
    invertPuppi = cms.bool(False),
    mightGet = cms.optional.untracked.vstring,
    puppiDiagnostics = cms.bool(False),
    puppiNoLep = cms.bool(False),
    useExistingWeights = cms.bool(True),
    useExp = cms.bool(False),
    usePUProxyValue = cms.bool(False),
    useVertexAssociation = cms.bool(False),
    vertexAssociation = cms.InputTag(""),
    vertexAssociationQuality = cms.int32(0),
    vertexName = cms.InputTag("offlineSlimmedPrimaryVertices"),
    vtxNdofCut = cms.int32(4),
    vtxZCut = cms.double(24)
)


process.particleFlowClusterECAL = cms.EDProducer("CorrectedECALPFClusterProducer",
    energyCorrector = cms.PSet(
        applyCrackCorrections = cms.bool(False),
        applyMVACorrections = cms.bool(True),
        autoDetectBunchSpacing = cms.bool(True),
        bunchSpacing = cms.int32(25),
        ebSrFlagLabel = cms.InputTag("ecalDigis"),
        eeSrFlagLabel = cms.InputTag("ecalDigis"),
        maxPtForMVAEvaluation = cms.double(300.0),
        recHitsEBLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        recHitsEELabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        setEnergyUncertainty = cms.bool(False),
        srfAwareCorrection = cms.bool(True)
    ),
    inputECAL = cms.InputTag("particleFlowClusterECALUncorrected"),
    inputPS = cms.InputTag("particleFlowClusterPS"),
    mightGet = cms.optional.untracked.vstring,
    minimumPSEnergy = cms.double(0),
    skipPS = cms.bool(False)
)


process.particleFlowClusterECALUncorrected = cms.EDProducer("PFClusterProducer",
    energyCorrector = cms.PSet(

    ),
    initialClusteringStep = cms.PSet(
        algoName = cms.string('Basic2DGenericTopoClusterizer'),
        thresholdsByDetector = cms.VPSet(
            cms.PSet(
                detector = cms.string('ECAL_BARREL'),
                gatheringThreshold = cms.double(0.08),
                gatheringThresholdPt = cms.double(0.0)
            ),
            cms.PSet(
                detector = cms.string('ECAL_ENDCAP'),
                gatheringThreshold = cms.double(0.3),
                gatheringThresholdPt = cms.double(0.0)
            )
        ),
        useCornerCells = cms.bool(True)
    ),
    pfClusterBuilder = cms.PSet(
        algoName = cms.string('Basic2DGenericPFlowClusterizer'),
        allCellsPositionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.08),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(-1),
            timeResolutionCalcBarrel = cms.PSet(
                constantTerm = cms.double(0.428192),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0510871),
                noiseTerm = cms.double(1.1088899999982),
                noiseTermLowE = cms.double(1.3188299999994002),
                threshHighE = cms.double(5.0),
                threshLowE = cms.double(0.5)
            ),
            timeResolutionCalcEndcap = cms.PSet(
                constantTerm = cms.double(0.0),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0),
                noiseTerm = cms.double(5.724899999994),
                noiseTermLowE = cms.double(6.926830000006),
                threshHighE = cms.double(10.0),
                threshLowE = cms.double(1.0)
            )
        ),
        excludeOtherSeeds = cms.bool(True),
        maxIterations = cms.uint32(50),
        minFracTot = cms.double(1e-20),
        minFractionToKeep = cms.double(1e-07),
        positionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.08),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(9),
            timeResolutionCalcBarrel = cms.PSet(
                constantTerm = cms.double(0.428192),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0510871),
                noiseTerm = cms.double(1.1088899999982),
                noiseTermLowE = cms.double(1.3188299999994002),
                threshHighE = cms.double(5.0),
                threshLowE = cms.double(0.5)
            ),
            timeResolutionCalcEndcap = cms.PSet(
                constantTerm = cms.double(0.0),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0),
                noiseTerm = cms.double(5.724899999994),
                noiseTermLowE = cms.double(6.926830000006),
                threshHighE = cms.double(10.0),
                threshLowE = cms.double(1.0)
            )
        ),
        positionCalcForConvergence = cms.PSet(
            T0_EB = cms.double(7.4),
            T0_EE = cms.double(3.1),
            T0_ES = cms.double(1.2),
            W0 = cms.double(4.2),
            X0 = cms.double(0.89),
            algoName = cms.string('ECAL2DPositionCalcWithDepthCorr'),
            minAllowedNormalization = cms.double(0.0),
            minFractionInCalc = cms.double(0.0)
        ),
        recHitEnergyNorms = cms.VPSet(
            cms.PSet(
                detector = cms.string('ECAL_BARREL'),
                recHitEnergyNorm = cms.double(0.08)
            ),
            cms.PSet(
                detector = cms.string('ECAL_ENDCAP'),
                recHitEnergyNorm = cms.double(0.3)
            )
        ),
        showerSigma = cms.double(1.5),
        stoppingTolerance = cms.double(1e-08)
    ),
    positionReCalc = cms.PSet(
        T0_EB = cms.double(7.4),
        T0_EE = cms.double(3.1),
        T0_ES = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89),
        algoName = cms.string('ECAL2DPositionCalcWithDepthCorr'),
        minAllowedNormalization = cms.double(0.0),
        minFractionInCalc = cms.double(0.0)
    ),
    recHitCleaners = cms.VPSet(),
    recHitsSource = cms.InputTag("particleFlowRecHitECAL"),
    seedCleaners = cms.VPSet(cms.PSet(
        RecHitFlagsToBeExcluded = cms.vstring(),
        algoName = cms.string('FlagsCleanerECAL')
    )),
    seedFinder = cms.PSet(
        algoName = cms.string('LocalMaximumSeedFinder'),
        nNeighbours = cms.int32(8),
        thresholdsByDetector = cms.VPSet(
            cms.PSet(
                detector = cms.string('ECAL_ENDCAP'),
                seedingThreshold = cms.double(0.6),
                seedingThresholdPt = cms.double(0.15)
            ),
            cms.PSet(
                detector = cms.string('ECAL_BARREL'),
                seedingThreshold = cms.double(0.23),
                seedingThresholdPt = cms.double(0.0)
            )
        )
    )
)


process.particleFlowClusterOOTECAL = cms.EDProducer("CorrectedECALPFClusterProducer",
    energyCorrector = cms.PSet(
        applyCrackCorrections = cms.bool(False),
        applyMVACorrections = cms.bool(True),
        autoDetectBunchSpacing = cms.bool(True),
        bunchSpacing = cms.int32(25),
        ebSrFlagLabel = cms.InputTag("ecalDigis"),
        eeSrFlagLabel = cms.InputTag("ecalDigis"),
        maxPtForMVAEvaluation = cms.double(300.0),
        recHitsEBLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        recHitsEELabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        setEnergyUncertainty = cms.bool(False),
        srfAwareCorrection = cms.bool(True)
    ),
    inputECAL = cms.InputTag("particleFlowClusterOOTECALUncorrected"),
    inputPS = cms.InputTag("particleFlowClusterPS"),
    mightGet = cms.optional.untracked.vstring,
    minimumPSEnergy = cms.double(0),
    skipPS = cms.bool(False)
)


process.particleFlowClusterOOTECALUncorrected = cms.EDProducer("PFClusterProducer",
    energyCorrector = cms.PSet(

    ),
    initialClusteringStep = cms.PSet(
        algoName = cms.string('Basic2DGenericTopoClusterizer'),
        thresholdsByDetector = cms.VPSet(
            cms.PSet(
                detector = cms.string('ECAL_BARREL'),
                gatheringThreshold = cms.double(0.08),
                gatheringThresholdPt = cms.double(0.0)
            ),
            cms.PSet(
                detector = cms.string('ECAL_ENDCAP'),
                gatheringThreshold = cms.double(0.3),
                gatheringThresholdPt = cms.double(0.0)
            )
        ),
        useCornerCells = cms.bool(True)
    ),
    pfClusterBuilder = cms.PSet(
        algoName = cms.string('Basic2DGenericPFlowClusterizer'),
        allCellsPositionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.08),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(-1),
            timeResolutionCalcBarrel = cms.PSet(
                constantTerm = cms.double(0.428192),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0510871),
                noiseTerm = cms.double(1.1088899999982),
                noiseTermLowE = cms.double(1.3188299999994002),
                threshHighE = cms.double(5.0),
                threshLowE = cms.double(0.5)
            ),
            timeResolutionCalcEndcap = cms.PSet(
                constantTerm = cms.double(0.0),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0),
                noiseTerm = cms.double(5.724899999994),
                noiseTermLowE = cms.double(6.926830000006),
                threshHighE = cms.double(10.0),
                threshLowE = cms.double(1.0)
            )
        ),
        excludeOtherSeeds = cms.bool(True),
        maxIterations = cms.uint32(50),
        minFracTot = cms.double(1e-20),
        minFractionToKeep = cms.double(1e-07),
        positionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.08),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(9),
            timeResolutionCalcBarrel = cms.PSet(
                constantTerm = cms.double(0.428192),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0510871),
                noiseTerm = cms.double(1.1088899999982),
                noiseTermLowE = cms.double(1.3188299999994002),
                threshHighE = cms.double(5.0),
                threshLowE = cms.double(0.5)
            ),
            timeResolutionCalcEndcap = cms.PSet(
                constantTerm = cms.double(0.0),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0),
                noiseTerm = cms.double(5.724899999994),
                noiseTermLowE = cms.double(6.926830000006),
                threshHighE = cms.double(10.0),
                threshLowE = cms.double(1.0)
            )
        ),
        positionCalcForConvergence = cms.PSet(
            T0_EB = cms.double(7.4),
            T0_EE = cms.double(3.1),
            T0_ES = cms.double(1.2),
            W0 = cms.double(4.2),
            X0 = cms.double(0.89),
            algoName = cms.string('ECAL2DPositionCalcWithDepthCorr'),
            minAllowedNormalization = cms.double(0.0),
            minFractionInCalc = cms.double(0.0)
        ),
        recHitEnergyNorms = cms.VPSet(
            cms.PSet(
                detector = cms.string('ECAL_BARREL'),
                recHitEnergyNorm = cms.double(0.08)
            ),
            cms.PSet(
                detector = cms.string('ECAL_ENDCAP'),
                recHitEnergyNorm = cms.double(0.3)
            )
        ),
        showerSigma = cms.double(1.5),
        stoppingTolerance = cms.double(1e-08)
    ),
    positionReCalc = cms.PSet(
        T0_EB = cms.double(7.4),
        T0_EE = cms.double(3.1),
        T0_ES = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89),
        algoName = cms.string('ECAL2DPositionCalcWithDepthCorr'),
        minAllowedNormalization = cms.double(0.0),
        minFractionInCalc = cms.double(0.0)
    ),
    recHitCleaners = cms.VPSet(),
    recHitsSource = cms.InputTag("particleFlowRecHitOOTECAL"),
    seedCleaners = cms.VPSet(cms.PSet(
        RecHitFlagsToBeExcluded = cms.vstring(),
        algoName = cms.string('FlagsCleanerECAL')
    )),
    seedFinder = cms.PSet(
        algoName = cms.string('LocalMaximumSeedFinder'),
        nNeighbours = cms.int32(8),
        thresholdsByDetector = cms.VPSet(
            cms.PSet(
                detector = cms.string('ECAL_ENDCAP'),
                seedingThreshold = cms.double(0.6),
                seedingThresholdPt = cms.double(0.15)
            ),
            cms.PSet(
                detector = cms.string('ECAL_BARREL'),
                seedingThreshold = cms.double(0.23),
                seedingThresholdPt = cms.double(0.0)
            )
        )
    )
)


process.particleFlowClusterPS = cms.EDProducer("PFClusterProducer",
    energyCorrector = cms.PSet(

    ),
    initialClusteringStep = cms.PSet(
        algoName = cms.string('Basic2DGenericTopoClusterizer'),
        thresholdsByDetector = cms.VPSet(
            cms.PSet(
                detector = cms.string('PS1'),
                gatheringThreshold = cms.double(6e-05),
                gatheringThresholdPt = cms.double(0.0)
            ),
            cms.PSet(
                detector = cms.string('PS2'),
                gatheringThreshold = cms.double(6e-05),
                gatheringThresholdPt = cms.double(0.0)
            )
        ),
        useCornerCells = cms.bool(False)
    ),
    pfClusterBuilder = cms.PSet(
        algoName = cms.string('Basic2DGenericPFlowClusterizer'),
        excludeOtherSeeds = cms.bool(True),
        maxIterations = cms.uint32(50),
        minFracTot = cms.double(1e-20),
        minFractionToKeep = cms.double(1e-07),
        positionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(6e-05),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(-1)
        ),
        recHitEnergyNorms = cms.VPSet(
            cms.PSet(
                detector = cms.string('PS1'),
                recHitEnergyNorm = cms.double(6e-05)
            ),
            cms.PSet(
                detector = cms.string('PS2'),
                recHitEnergyNorm = cms.double(6e-05)
            )
        ),
        showerSigma = cms.double(0.3),
        stoppingTolerance = cms.double(1e-08)
    ),
    positionReCalc = cms.PSet(

    ),
    recHitCleaners = cms.VPSet(),
    recHitsSource = cms.InputTag("particleFlowRecHitPS"),
    seedCleaners = cms.VPSet(),
    seedFinder = cms.PSet(
        algoName = cms.string('LocalMaximumSeedFinder'),
        nNeighbours = cms.int32(4),
        thresholdsByDetector = cms.VPSet(
            cms.PSet(
                detector = cms.string('PS1'),
                seedingThreshold = cms.double(0.00012),
                seedingThresholdPt = cms.double(0.0)
            ),
            cms.PSet(
                detector = cms.string('PS2'),
                seedingThreshold = cms.double(0.00012),
                seedingThresholdPt = cms.double(0.0)
            )
        )
    )
)


process.particleFlowDisplacedVertex = cms.EDProducer("PFDisplacedVertexProducer",
    avfParameters = cms.PSet(
        Tini = cms.double(256.0),
        ratio = cms.double(0.25),
        sigmacut = cms.double(6.0)
    ),
    debug = cms.untracked.bool(False),
    longSize = cms.double(5),
    mainVertexLabel = cms.InputTag("offlinePrimaryVertices"),
    minAdaptWeight = cms.double(0.5),
    offlineBeamSpotLabel = cms.InputTag("offlineBeamSpot"),
    primaryVertexCut = cms.double(1.8),
    switchOff2TrackVertex = cms.untracked.bool(True),
    tecCut = cms.double(220),
    tobCut = cms.double(100),
    tracksSelectorParameters = cms.PSet(
        bSelectTracks = cms.bool(True),
        dxy_min = cms.double(0.2),
        nChi2_max = cms.double(5.0),
        nChi2_min = cms.double(0.5),
        nHits_min = cms.int32(6),
        nOuterHits_max = cms.int32(9),
        pt_min = cms.double(0.2),
        quality = cms.string('HighPurity')
    ),
    transvSize = cms.double(1.0),
    verbose = cms.untracked.bool(False),
    vertexCandidatesLabel = cms.InputTag("particleFlowDisplacedVertexCandidate"),
    vertexIdentifierParameters = cms.PSet(
        angles = cms.vdouble(15, 15),
        bIdentifyVertices = cms.bool(True),
        logPrimSec_min = cms.double(0.0),
        looper_eta_max = cms.double(0.1),
        masses = cms.vdouble(
            0.05, 0.485, 0.515, 0.48, 0.52,
            1.107, 1.125, 0.2
        ),
        pt_kink_min = cms.double(3.0),
        pt_min = cms.double(0.5)
    )
)


process.particleFlowPtrs = cms.EDProducer("PFCandidateFwdPtrProducer",
    src = cms.InputTag("particleFlow")
)


process.particleFlowPtrsNoHF = cms.EDProducer("PFCandidateFwdPtrProducer",
    src = cms.InputTag("particleFlow")
)


process.particleFlowPtrsPuppi = cms.EDProducer("PFCandidateFwdPtrProducer",
    src = cms.InputTag("particleFlow")
)


process.particleFlowRecHitECAL = cms.EDProducer("PFRecHitProducer",
    navigator = cms.PSet(
        barrel = cms.PSet(

        ),
        endcap = cms.PSet(

        ),
        name = cms.string('PFRecHitECALNavigator')
    ),
    producers = cms.VPSet(
        cms.PSet(
            name = cms.string('PFEBRecHitCreator'),
            qualityTests = cms.VPSet(
                cms.PSet(
                    applySelectionsToAllCrystals = cms.bool(True),
                    name = cms.string('PFRecHitQTestDBThreshold')
                ),
                cms.PSet(
                    cleaningThreshold = cms.double(2.0),
                    name = cms.string('PFRecHitQTestECAL'),
                    skipTTRecoveredHits = cms.bool(True),
                    timingCleaning = cms.bool(True),
                    topologicalCleaning = cms.bool(True)
                )
            ),
            srFlags = cms.InputTag(""),
            src = cms.InputTag("ecalRecHit","EcalRecHitsEB")
        ),
        cms.PSet(
            name = cms.string('PFEERecHitCreator'),
            qualityTests = cms.VPSet(
                cms.PSet(
                    applySelectionsToAllCrystals = cms.bool(True),
                    name = cms.string('PFRecHitQTestDBThreshold')
                ),
                cms.PSet(
                    cleaningThreshold = cms.double(2.0),
                    name = cms.string('PFRecHitQTestECAL'),
                    skipTTRecoveredHits = cms.bool(True),
                    timingCleaning = cms.bool(True),
                    topologicalCleaning = cms.bool(True)
                )
            ),
            srFlags = cms.InputTag(""),
            src = cms.InputTag("ecalRecHit","EcalRecHitsEE")
        )
    )
)


process.particleFlowRecHitOOTECAL = cms.EDProducer("PFRecHitProducer",
    navigator = cms.PSet(
        barrel = cms.PSet(

        ),
        endcap = cms.PSet(

        ),
        name = cms.string('PFRecHitECALNavigator')
    ),
    producers = cms.VPSet(
        cms.PSet(
            name = cms.string('PFEBRecHitCreator'),
            qualityTests = cms.VPSet(
                cms.PSet(
                    applySelectionsToAllCrystals = cms.bool(True),
                    name = cms.string('PFRecHitQTestDBThreshold')
                ),
                cms.PSet(
                    cleaningThreshold = cms.double(2.0),
                    name = cms.string('PFRecHitQTestECAL'),
                    skipTTRecoveredHits = cms.bool(True),
                    timingCleaning = cms.bool(False),
                    topologicalCleaning = cms.bool(True)
                )
            ),
            srFlags = cms.InputTag(""),
            src = cms.InputTag("ecalRecHit","EcalRecHitsEB")
        ),
        cms.PSet(
            name = cms.string('PFEERecHitCreator'),
            qualityTests = cms.VPSet(
                cms.PSet(
                    applySelectionsToAllCrystals = cms.bool(True),
                    name = cms.string('PFRecHitQTestDBThreshold')
                ),
                cms.PSet(
                    cleaningThreshold = cms.double(2.0),
                    name = cms.string('PFRecHitQTestECAL'),
                    skipTTRecoveredHits = cms.bool(True),
                    timingCleaning = cms.bool(False),
                    topologicalCleaning = cms.bool(True)
                )
            ),
            srFlags = cms.InputTag(""),
            src = cms.InputTag("ecalRecHit","EcalRecHitsEE")
        )
    )
)


process.particleFlowRecHitPS = cms.EDProducer("PFRecHitProducer",
    navigator = cms.PSet(
        name = cms.string('PFRecHitPreshowerNavigator')
    ),
    producers = cms.VPSet(cms.PSet(
        name = cms.string('PFPSRecHitCreator'),
        qualityTests = cms.VPSet(
            cms.PSet(
                name = cms.string('PFRecHitQTestThreshold'),
                threshold = cms.double(0.0)
            ),
            cms.PSet(
                cleaningThreshold = cms.double(0.0),
                name = cms.string('PFRecHitQTestES'),
                topologicalCleaning = cms.bool(True)
            )
        ),
        src = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES")
    ))
)


process.particleFlowSuperClusterECAL = cms.EDProducer("PFECALSuperClusterProducer",
    BeamSpot = cms.InputTag("offlineBeamSpot"),
    ClusteringType = cms.string('Mustache'),
    ESAssociation = cms.InputTag("particleFlowClusterECAL"),
    EnergyWeight = cms.string('Raw'),
    PFBasicClusterCollectionBarrel = cms.string('particleFlowBasicClusterECALBarrel'),
    PFBasicClusterCollectionEndcap = cms.string('particleFlowBasicClusterECALEndcap'),
    PFBasicClusterCollectionPreshower = cms.string('particleFlowBasicClusterECALPreshower'),
    PFClusters = cms.InputTag("particleFlowClusterECAL"),
    PFSuperClusterCollectionBarrel = cms.string('particleFlowSuperClusterECALBarrel'),
    PFSuperClusterCollectionEndcap = cms.string('particleFlowSuperClusterECALEndcap'),
    PFSuperClusterCollectionEndcapWithPreshower = cms.string('particleFlowSuperClusterECALEndcapWithPreshower'),
    applyCrackCorrections = cms.bool(False),
    barrelRecHits = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    doSatelliteClusterMerge = cms.bool(False),
    dropUnseedable = cms.bool(False),
    endcapRecHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    etawidth_SuperClusterBarrel = cms.double(0.04),
    etawidth_SuperClusterEndcap = cms.double(0.04),
    isOOTCollection = cms.bool(False),
    mightGet = cms.optional.untracked.vstring,
    phiwidth_SuperClusterBarrel = cms.double(0.6),
    phiwidth_SuperClusterEndcap = cms.double(0.6),
    regressionConfig = cms.PSet(
        applySigmaIetaIphiBug = cms.bool(False),
        eRecHitThreshold = cms.double(1),
        ecalRecHitsEB = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        ecalRecHitsEE = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        hgcalCylinderR = cms.double(2.799999952316284),
        hgcalRecHits = cms.InputTag(""),
        isHLT = cms.bool(False),
        isPhaseII = cms.bool(False),
        regTrainedWithPS = cms.bool(True),
        regressionKeyEB = cms.string('pfscecal_EBCorrection_offline_v2'),
        regressionKeyEE = cms.string('pfscecal_EECorrection_offline_v2'),
        regressionMaxEB = cms.double(2),
        regressionMaxEE = cms.double(2),
        regressionMinEB = cms.double(0.2),
        regressionMinEE = cms.double(0.2),
        uncertaintyKeyEB = cms.string('pfscecal_EBUncertainty_offline_v2'),
        uncertaintyKeyEE = cms.string('pfscecal_EEUncertainty_offline_v2'),
        uncertaintyMaxEB = cms.double(0.5),
        uncertaintyMaxEE = cms.double(0.5),
        uncertaintyMinEB = cms.double(0.0002),
        uncertaintyMinEE = cms.double(0.0002),
        vertexCollection = cms.InputTag("offlinePrimaryVertices")
    ),
    satelliteClusterSeedThreshold = cms.double(50),
    satelliteMajorityFraction = cms.double(0.5),
    seedThresholdIsET = cms.bool(True),
    thresh_PFClusterBarrel = cms.double(0),
    thresh_PFClusterES = cms.double(0),
    thresh_PFClusterEndcap = cms.double(0),
    thresh_PFClusterSeedBarrel = cms.double(1),
    thresh_PFClusterSeedEndcap = cms.double(1),
    thresh_SCEt = cms.double(4),
    useDynamicDPhiWindow = cms.bool(True),
    useRegression = cms.bool(True),
    verbose = cms.untracked.bool(False)
)


process.particleFlowSuperClusterOOTECAL = cms.EDProducer("PFECALSuperClusterProducer",
    BeamSpot = cms.InputTag("offlineBeamSpot"),
    ClusteringType = cms.string('Mustache'),
    ESAssociation = cms.InputTag("particleFlowClusterOOTECAL"),
    EnergyWeight = cms.string('Raw'),
    PFBasicClusterCollectionBarrel = cms.string('particleFlowBasicClusterOOTECALBarrel'),
    PFBasicClusterCollectionEndcap = cms.string('particleFlowBasicClusterOOTECALEndcap'),
    PFBasicClusterCollectionPreshower = cms.string('particleFlowBasicClusterOOTECALPreshower'),
    PFClusters = cms.InputTag("particleFlowClusterOOTECAL"),
    PFSuperClusterCollectionBarrel = cms.string('particleFlowSuperClusterOOTECALBarrel'),
    PFSuperClusterCollectionEndcap = cms.string('particleFlowSuperClusterOOTECALEndcap'),
    PFSuperClusterCollectionEndcapWithPreshower = cms.string('particleFlowSuperClusterOOTECALEndcapWithPreshower'),
    applyCrackCorrections = cms.bool(False),
    barrelRecHits = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    doSatelliteClusterMerge = cms.bool(False),
    dropUnseedable = cms.bool(False),
    endcapRecHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    etawidth_SuperClusterBarrel = cms.double(0.04),
    etawidth_SuperClusterEndcap = cms.double(0.04),
    isOOTCollection = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    phiwidth_SuperClusterBarrel = cms.double(0.6),
    phiwidth_SuperClusterEndcap = cms.double(0.6),
    regressionConfig = cms.PSet(
        applySigmaIetaIphiBug = cms.bool(False),
        eRecHitThreshold = cms.double(1),
        ecalRecHitsEB = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        ecalRecHitsEE = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        hgcalCylinderR = cms.double(2.799999952316284),
        hgcalRecHits = cms.InputTag(""),
        isHLT = cms.bool(False),
        isPhaseII = cms.bool(False),
        regTrainedWithPS = cms.bool(True),
        regressionKeyEB = cms.string('pfscecal_EBCorrection_offline_v2'),
        regressionKeyEE = cms.string('pfscecal_EECorrection_offline_v2'),
        regressionMaxEB = cms.double(2),
        regressionMaxEE = cms.double(2),
        regressionMinEB = cms.double(0.2),
        regressionMinEE = cms.double(0.2),
        uncertaintyKeyEB = cms.string('pfscecal_EBUncertainty_offline_v2'),
        uncertaintyKeyEE = cms.string('pfscecal_EEUncertainty_offline_v2'),
        uncertaintyMaxEB = cms.double(0.5),
        uncertaintyMaxEE = cms.double(0.5),
        uncertaintyMinEB = cms.double(0.0002),
        uncertaintyMinEE = cms.double(0.0002),
        vertexCollection = cms.InputTag("offlinePrimaryVertices")
    ),
    satelliteClusterSeedThreshold = cms.double(50),
    satelliteMajorityFraction = cms.double(0.5),
    seedThresholdIsET = cms.bool(True),
    thresh_PFClusterBarrel = cms.double(0),
    thresh_PFClusterES = cms.double(0),
    thresh_PFClusterEndcap = cms.double(0),
    thresh_PFClusterSeedBarrel = cms.double(1),
    thresh_PFClusterSeedEndcap = cms.double(1),
    thresh_SCEt = cms.double(4),
    useDynamicDPhiWindow = cms.bool(True),
    useRegression = cms.bool(True),
    verbose = cms.untracked.bool(False)
)


process.patCHSMet = cms.EDProducer("PATMETProducer",
    addEfficiencies = cms.bool(False),
    addGenMET = cms.bool(True),
    addMuonCorrections = cms.bool(False),
    addResolutions = cms.bool(False),
    computeMETSignificance = cms.bool(False),
    efficiencies = cms.PSet(

    ),
    genMETSource = cms.InputTag("genMetTrue"),
    metSource = cms.InputTag("pfMetCHS"),
    muonSource = cms.InputTag("muons"),
    parameters = cms.PSet(
        dRMatch = cms.double(0.4),
        jetThreshold = cms.double(15),
        jeta = cms.vdouble(0.8, 1.3, 1.9, 2.5),
        jpar = cms.vdouble(1.39, 1.26, 1.21, 1.23, 1.28),
        pjpar = cms.vdouble(-0.2586, 0.6173)
    ),
    resolutions = cms.PSet(

    ),
    srcJetResPhi = cms.string('AK4PFchs_phi'),
    srcJetResPt = cms.string('AK4PFchs_pt'),
    srcJetSF = cms.string('AK4PFchs'),
    srcJets = cms.InputTag("cleanedPatJets"),
    srcLeptons = cms.VInputTag(cms.InputTag("pfeGammaToCandidate","electrons"), cms.InputTag("selectedPatMuons"), cms.InputTag("pfeGammaToCandidate","photons")),
    srcPFCands = cms.InputTag("particleFlow"),
    srcRho = cms.InputTag("fixedGridRhoAll"),
    srcWeights = cms.InputTag(""),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    )
)


process.patCaloMet = cms.EDProducer("PATMETProducer",
    addEfficiencies = cms.bool(False),
    addGenMET = cms.bool(True),
    addMuonCorrections = cms.bool(False),
    addResolutions = cms.bool(False),
    computeMETSignificance = cms.bool(False),
    efficiencies = cms.PSet(

    ),
    genMETSource = cms.InputTag("genMetTrue"),
    metSource = cms.InputTag("caloMetM"),
    muonSource = cms.InputTag("muons"),
    parameters = cms.PSet(
        dRMatch = cms.double(0.4),
        jetThreshold = cms.double(15),
        jeta = cms.vdouble(0.8, 1.3, 1.9, 2.5),
        jpar = cms.vdouble(1.39, 1.26, 1.21, 1.23, 1.28),
        pjpar = cms.vdouble(-0.2586, 0.6173)
    ),
    resolutions = cms.PSet(

    ),
    srcJetResPhi = cms.string('AK4PFchs_phi'),
    srcJetResPt = cms.string('AK4PFchs_pt'),
    srcJetSF = cms.string('AK4PFchs'),
    srcJets = cms.InputTag("cleanedPatJets"),
    srcLeptons = cms.VInputTag(cms.InputTag("pfeGammaToCandidate","electrons"), cms.InputTag("selectedPatMuons"), cms.InputTag("pfeGammaToCandidate","photons")),
    srcPFCands = cms.InputTag("particleFlow"),
    srcRho = cms.InputTag("fixedGridRhoAll"),
    srcWeights = cms.InputTag(""),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    )
)


process.patDisplacedMuons = cms.EDProducer("PATMuonProducer",
    addEfficiencies = cms.bool(False),
    addGenMatch = cms.bool(False),
    addInverseBeta = cms.bool(True),
    addPuppiIsolation = cms.bool(False),
    addResolutions = cms.bool(False),
    addTriggerMatching = cms.bool(False),
    beamLineSrc = cms.InputTag("offlineBeamSpot"),
    caloMETMuonCorrs = cms.InputTag("muonMETValueMapProducer","muCorrData"),
    computeMiniIso = cms.bool(False),
    computeMuonIDMVA = cms.bool(False),
    computePuppiCombinedIso = cms.bool(False),
    computeSoftMuonMVA = cms.bool(False),
    effectiveAreaVec = cms.vdouble(0.0566, 0.0562, 0.0363, 0.0119, 0.0064),
    efficiencies = cms.PSet(

    ),
    embedCaloMETMuonCorrs = cms.bool(False),
    embedCombinedMuon = cms.bool(True),
    embedDytMuon = cms.bool(False),
    embedGenMatch = cms.bool(False),
    embedHighLevelSelection = cms.bool(True),
    embedMuonBestTrack = cms.bool(True),
    embedPFCandidate = cms.bool(False),
    embedPfEcalEnergy = cms.bool(False),
    embedPickyMuon = cms.bool(False),
    embedStandAloneMuon = cms.bool(True),
    embedTcMETMuonCorrs = cms.bool(False),
    embedTpfmsMuon = cms.bool(False),
    embedTrack = cms.bool(True),
    embedTunePMuonBestTrack = cms.bool(True),
    forceBestTrackEmbedding = cms.bool(False),
    genParticleMatch = cms.InputTag("displacedMuonMatch"),
    hltCollectionFilters = cms.vstring('*'),
    isoDeposits = cms.PSet(

    ),
    isolationValues = cms.PSet(

    ),
    miniIsoParams = cms.vdouble(
        0.05, 0.2, 10.0, 0.5, 0.0001,
        0.01, 0.01, 0.01, 0.0
    ),
    muonSimInfo = cms.InputTag("displacedMuonSimClassifier"),
    muonSource = cms.InputTag("filteredDisplacedMuons"),
    mvaDrMax = cms.double(0.4),
    mvaIDTrainingFile = cms.FileInPath('RecoMuon/MuonIdentification/data/mvaID.onnx'),
    mvaJetTag = cms.InputTag("pfDeepCSVJetTags","probb"),
    mvaL1Corrector = cms.InputTag("ak4PFCHSL1FastjetCorrector"),
    mvaL1L2L3ResCorrector = cms.InputTag("ak4PFCHSL1FastL2L3Corrector"),
    pfCandsForMiniIso = cms.InputTag("packedPFCandidates"),
    pfMuonSource = cms.InputTag("particleFlow"),
    pvSrc = cms.InputTag("offlinePrimaryVertices"),
    recomputeBasicSelectors = cms.bool(False),
    resolutions = cms.PSet(

    ),
    rho = cms.InputTag("fixedGridRhoFastjetCentralNeutral"),
    softMvaTrainingFile = cms.FileInPath('RecoMuon/MuonIdentification/data/TMVA-muonid-bmm4-B-25.weights.xml'),
    sourceMuonTimeExtra = cms.InputTag("filteredDisplacedMuons","combined"),
    tcMETMuonCorrs = cms.InputTag("muonTCMETValueMapProducer","muCorrData"),
    triggerObjects = cms.InputTag("slimmedPatTrigger"),
    triggerResults = cms.InputTag("TriggerResults","","HLT"),
    useJec = cms.bool(False),
    useParticleFlow = cms.bool(False),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    ),
    userIsolation = cms.PSet(

    )
)


process.patElectrons = cms.EDProducer("PATElectronProducer",
    addEfficiencies = cms.bool(False),
    addElectronID = cms.bool(True),
    addGenMatch = cms.bool(True),
    addMVAVariables = cms.bool(True),
    addPFClusterIso = cms.bool(False),
    addPuppiIsolation = cms.bool(True),
    addResolutions = cms.bool(False),
    beamLineSrc = cms.InputTag("offlineBeamSpot"),
    computeMiniIso = cms.bool(True),
    ecalPFClusterIsoMap = cms.InputTag(""),
    efficiencies = cms.PSet(

    ),
    electronIDSources = cms.PSet(
        cutBasedElectronID_Fall17_94X_V1_loose = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V1-loose"),
        cutBasedElectronID_Fall17_94X_V1_medium = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V1-medium"),
        cutBasedElectronID_Fall17_94X_V1_tight = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V1-tight"),
        cutBasedElectronID_Fall17_94X_V1_veto = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V1-veto"),
        cutBasedElectronID_Fall17_94X_V2_loose = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V2-loose"),
        cutBasedElectronID_Fall17_94X_V2_medium = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V2-medium"),
        cutBasedElectronID_Fall17_94X_V2_tight = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V2-tight"),
        cutBasedElectronID_Fall17_94X_V2_veto = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V2-veto"),
        cutBasedElectronID_RunIIIWinter22_V1_loose = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-RunIIIWinter22-V1-loose"),
        cutBasedElectronID_RunIIIWinter22_V1_medium = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-RunIIIWinter22-V1-medium"),
        cutBasedElectronID_RunIIIWinter22_V1_tight = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-RunIIIWinter22-V1-tight"),
        cutBasedElectronID_RunIIIWinter22_V1_veto = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-RunIIIWinter22-V1-veto"),
        cutBasedElectronID_Summer16_80X_V1_loose = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Summer16-80X-V1-loose"),
        cutBasedElectronID_Summer16_80X_V1_medium = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Summer16-80X-V1-medium"),
        cutBasedElectronID_Summer16_80X_V1_tight = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Summer16-80X-V1-tight"),
        cutBasedElectronID_Summer16_80X_V1_veto = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Summer16-80X-V1-veto"),
        heepElectronID_HEEPV70 = cms.InputTag("egmGsfElectronIDs","heepElectronID-HEEPV70"),
        heepElectronID_HEEPV71 = cms.InputTag("egmGsfElectronIDs","heepElectronID-HEEPV71"),
        mvaEleID_Fall17_iso_V1_wp80 = cms.InputTag("egmGsfElectronIDs","mvaEleID-Fall17-iso-V1-wp80"),
        mvaEleID_Fall17_iso_V1_wp90 = cms.InputTag("egmGsfElectronIDs","mvaEleID-Fall17-iso-V1-wp90"),
        mvaEleID_Fall17_iso_V1_wpLoose = cms.InputTag("egmGsfElectronIDs","mvaEleID-Fall17-iso-V1-wpLoose"),
        mvaEleID_Fall17_iso_V2_wp80 = cms.InputTag("egmGsfElectronIDs","mvaEleID-Fall17-iso-V2-wp80"),
        mvaEleID_Fall17_iso_V2_wp90 = cms.InputTag("egmGsfElectronIDs","mvaEleID-Fall17-iso-V2-wp90"),
        mvaEleID_Fall17_iso_V2_wpHZZ = cms.InputTag("egmGsfElectronIDs","mvaEleID-Fall17-iso-V2-wpHZZ"),
        mvaEleID_Fall17_iso_V2_wpLoose = cms.InputTag("egmGsfElectronIDs","mvaEleID-Fall17-iso-V2-wpLoose"),
        mvaEleID_Fall17_noIso_V1_wp80 = cms.InputTag("egmGsfElectronIDs","mvaEleID-Fall17-noIso-V1-wp80"),
        mvaEleID_Fall17_noIso_V1_wp90 = cms.InputTag("egmGsfElectronIDs","mvaEleID-Fall17-noIso-V1-wp90"),
        mvaEleID_Fall17_noIso_V1_wpLoose = cms.InputTag("egmGsfElectronIDs","mvaEleID-Fall17-noIso-V1-wpLoose"),
        mvaEleID_Fall17_noIso_V2_wp80 = cms.InputTag("egmGsfElectronIDs","mvaEleID-Fall17-noIso-V2-wp80"),
        mvaEleID_Fall17_noIso_V2_wp90 = cms.InputTag("egmGsfElectronIDs","mvaEleID-Fall17-noIso-V2-wp90"),
        mvaEleID_Fall17_noIso_V2_wpLoose = cms.InputTag("egmGsfElectronIDs","mvaEleID-Fall17-noIso-V2-wpLoose"),
        mvaEleID_RunIIIWinter22_iso_V1_wp80 = cms.InputTag("egmGsfElectronIDs","mvaEleID-RunIIIWinter22-iso-V1-wp80"),
        mvaEleID_RunIIIWinter22_iso_V1_wp90 = cms.InputTag("egmGsfElectronIDs","mvaEleID-RunIIIWinter22-iso-V1-wp90"),
        mvaEleID_RunIIIWinter22_noIso_V1_wp80 = cms.InputTag("egmGsfElectronIDs","mvaEleID-RunIIIWinter22-noIso-V1-wp80"),
        mvaEleID_RunIIIWinter22_noIso_V1_wp90 = cms.InputTag("egmGsfElectronIDs","mvaEleID-RunIIIWinter22-noIso-V1-wp90"),
        mvaEleID_Spring16_GeneralPurpose_V1_wp80 = cms.InputTag("egmGsfElectronIDs","mvaEleID-Spring16-GeneralPurpose-V1-wp80"),
        mvaEleID_Spring16_GeneralPurpose_V1_wp90 = cms.InputTag("egmGsfElectronIDs","mvaEleID-Spring16-GeneralPurpose-V1-wp90"),
        mvaEleID_Spring16_HZZ_V1_wpLoose = cms.InputTag("egmGsfElectronIDs","mvaEleID-Spring16-HZZ-V1-wpLoose"),
        mvaEleID_Summer16UL_ID_ISO_HZZ = cms.InputTag("egmGsfElectronIDs","mvaEleID-Summer16UL-ID-ISO-HZZ"),
        mvaEleID_Summer17UL_ID_ISO_HZZ = cms.InputTag("egmGsfElectronIDs","mvaEleID-Summer17UL-ID-ISO-HZZ"),
        mvaEleID_Summer18UL_ID_ISO_HZZ = cms.InputTag("egmGsfElectronIDs","mvaEleID-Summer18UL-ID-ISO-HZZ")
    ),
    electronSource = cms.InputTag("reducedEgamma","reducedGedGsfElectrons"),
    embedBasicClusters = cms.bool(False),
    embedGenMatch = cms.bool(False),
    embedGsfElectronCore = cms.bool(False),
    embedGsfTrack = cms.bool(False),
    embedHighLevelSelection = cms.bool(True),
    embedPFCandidate = cms.bool(True),
    embedPflowBasicClusters = cms.bool(False),
    embedPflowPreshowerClusters = cms.bool(False),
    embedPflowSuperCluster = cms.bool(False),
    embedPreshowerClusters = cms.bool(False),
    embedRecHits = cms.bool(False),
    embedSeedCluster = cms.bool(False),
    embedSuperCluster = cms.bool(False),
    embedTrack = cms.bool(True),
    genParticleMatch = cms.InputTag("electronMatch"),
    hcalPFClusterIsoMap = cms.InputTag(""),
    isoDeposits = cms.PSet(

    ),
    isolationValues = cms.PSet(
        pfChargedAll = cms.InputTag("elPFIsoValueChargedAll04PFIdPAT"),
        pfChargedHadrons = cms.InputTag("elPFIsoValueCharged04PFIdPAT"),
        pfNeutralHadrons = cms.InputTag("elPFIsoValueNeutral04PFIdPAT"),
        pfPUChargedHadrons = cms.InputTag("elPFIsoValuePU04PFIdPAT"),
        pfPhotons = cms.InputTag("elPFIsoValueGamma04PFIdPAT")
    ),
    isolationValuesNoPFId = cms.PSet(
        pfChargedAll = cms.InputTag("elPFIsoValueChargedAll04NoPFIdPAT"),
        pfChargedHadrons = cms.InputTag("elPFIsoValueCharged04NoPFIdPAT"),
        pfNeutralHadrons = cms.InputTag("elPFIsoValueNeutral04NoPFIdPAT"),
        pfPUChargedHadrons = cms.InputTag("elPFIsoValuePU04NoPFIdPAT"),
        pfPhotons = cms.InputTag("elPFIsoValueGamma04NoPFIdPAT")
    ),
    mightGet = cms.optional.untracked.vstring,
    miniIsoParamsB = cms.vdouble(
        0.05, 0.2, 10.0, 0.0, 0.0,
        0.0, 0.0, 0.0, 0.0
    ),
    miniIsoParamsE = cms.vdouble(
        0.05, 0.2, 10.0, 0.0, 0.015,
        0.015, 0.08, 0.0, 0.0
    ),
    pfCandidateMap = cms.InputTag("particleFlow","electrons"),
    pfCandidateMultiMap = cms.InputTag("reducedEgamma","reducedGsfElectronPfCandMap"),
    pfCandsForMiniIso = cms.InputTag("packedPFCandidates"),
    pfElectronSource = cms.InputTag("particleFlow"),
    puppiIsolationChargedHadrons = cms.InputTag("egmElectronPUPPIIsolation","h+-DR030-BarVeto000-EndVeto001"),
    puppiIsolationNeutralHadrons = cms.InputTag("egmElectronPUPPIIsolation","h0-DR030-BarVeto000-EndVeto000"),
    puppiIsolationPhotons = cms.InputTag("egmElectronPUPPIIsolation","gamma-DR030-BarVeto000-EndVeto008"),
    puppiNoLeptonsIsolationChargedHadrons = cms.InputTag("egmElectronPUPPINoLeptonsIsolation","h+-DR030-BarVeto000-EndVeto001"),
    puppiNoLeptonsIsolationNeutralHadrons = cms.InputTag("egmElectronPUPPINoLeptonsIsolation","h0-DR030-BarVeto000-EndVeto000"),
    puppiNoLeptonsIsolationPhotons = cms.InputTag("egmElectronPUPPINoLeptonsIsolation","gamma-DR030-BarVeto000-EndVeto008"),
    pvSrc = cms.InputTag("offlinePrimaryVertices"),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    resolutions = cms.PSet(

    ),
    useParticleFlow = cms.bool(False),
    usePfCandidateMultiMap = cms.bool(True),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    ),
    userIsolation = cms.PSet(

    )
)


process.patElectronsHGC = cms.EDProducer("PATElectronProducer",
    addEfficiencies = cms.bool(False),
    addElectronID = cms.bool(False),
    addGenMatch = cms.bool(False),
    addMVAVariables = cms.bool(False),
    addPFClusterIso = cms.bool(False),
    addPuppiIsolation = cms.bool(False),
    addResolutions = cms.bool(False),
    beamLineSrc = cms.InputTag("offlineBeamSpot"),
    computeMiniIso = cms.bool(False),
    ecalPFClusterIsoMap = cms.InputTag(""),
    efficiencies = cms.PSet(

    ),
    electronIDSource = cms.InputTag(""),
    electronSource = cms.InputTag("cleanedEcalDrivenGsfElectronsHGC"),
    embedBasicClusters = cms.bool(False),
    embedGenMatch = cms.bool(False),
    embedGsfElectronCore = cms.bool(True),
    embedGsfTrack = cms.bool(True),
    embedHighLevelSelection = cms.bool(True),
    embedPFCandidate = cms.bool(False),
    embedPflowBasicClusters = cms.bool(False),
    embedPflowPreshowerClusters = cms.bool(False),
    embedPflowSuperCluster = cms.bool(False),
    embedPreshowerClusters = cms.bool(False),
    embedRecHits = cms.bool(False),
    embedSeedCluster = cms.bool(True),
    embedSuperCluster = cms.bool(True),
    embedTrack = cms.bool(True),
    genParticleMatch = cms.InputTag(""),
    hcalPFClusterIsoMap = cms.InputTag(""),
    isoDeposits = cms.PSet(
        ecal = cms.optional.InputTag,
        hcal = cms.optional.InputTag,
        pfAllParticles = cms.optional.InputTag,
        pfChargedAll = cms.optional.InputTag,
        pfChargedHadrons = cms.optional.InputTag,
        pfNeutralHadrons = cms.optional.InputTag,
        pfPUChargedHadrons = cms.optional.InputTag,
        pfPhotons = cms.optional.InputTag,
        tracker = cms.optional.InputTag,
        user = cms.optional.VInputTag
    ),
    isolationValues = cms.PSet(
        ecal = cms.optional.InputTag,
        hcal = cms.optional.InputTag,
        pfAllParticles = cms.optional.InputTag,
        pfChargedAll = cms.optional.InputTag,
        pfChargedHadrons = cms.optional.InputTag,
        pfNeutralHadrons = cms.optional.InputTag,
        pfPUChargedHadrons = cms.optional.InputTag,
        pfPhotons = cms.optional.InputTag,
        tracker = cms.optional.InputTag,
        user = cms.optional.VInputTag
    ),
    isolationValuesNoPFId = cms.PSet(
        ecal = cms.optional.InputTag,
        hcal = cms.optional.InputTag,
        pfAllParticles = cms.optional.InputTag,
        pfChargedAll = cms.optional.InputTag,
        pfChargedHadrons = cms.optional.InputTag,
        pfNeutralHadrons = cms.optional.InputTag,
        pfPUChargedHadrons = cms.optional.InputTag,
        pfPhotons = cms.optional.InputTag,
        tracker = cms.optional.InputTag,
        user = cms.optional.VInputTag
    ),
    mightGet = cms.optional.untracked.vstring,
    miniIsoParamsB = cms.vdouble(),
    miniIsoParamsE = cms.vdouble(),
    pfCandidateMap = cms.InputTag("no default"),
    pfCandsForMiniIso = cms.InputTag("packedPFCandidates"),
    pfElectronSource = cms.InputTag("pfElectrons"),
    pvSrc = cms.InputTag("offlinePrimaryVertices"),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    resolutions = cms.PSet(

    ),
    useParticleFlow = cms.bool(False),
    usePfCandidateMultiMap = cms.bool(False),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag(
                cms.InputTag("hgcElectronID","ecOrigEt"), cms.InputTag("hgcElectronID","ecOrigEnergy"), cms.InputTag("hgcElectronID","ecEt"), cms.InputTag("hgcElectronID","ecEnergy"), cms.InputTag("hgcElectronID","ecEnergyEE"),
                cms.InputTag("hgcElectronID","ecEnergyFH"), cms.InputTag("hgcElectronID","ecEnergyBH"), cms.InputTag("hgcElectronID","pcaEig1"), cms.InputTag("hgcElectronID","pcaEig2"), cms.InputTag("hgcElectronID","pcaEig3"),
                cms.InputTag("hgcElectronID","pcaSig1"), cms.InputTag("hgcElectronID","pcaSig2"), cms.InputTag("hgcElectronID","pcaSig3"), cms.InputTag("hgcElectronID","pcaAxisX"), cms.InputTag("hgcElectronID","pcaAxisY"),
                cms.InputTag("hgcElectronID","pcaAxisZ"), cms.InputTag("hgcElectronID","pcaPositionX"), cms.InputTag("hgcElectronID","pcaPositionY"), cms.InputTag("hgcElectronID","pcaPositionZ"), cms.InputTag("hgcElectronID","sigmaUU"),
                cms.InputTag("hgcElectronID","sigmaVV"), cms.InputTag("hgcElectronID","sigmaEE"), cms.InputTag("hgcElectronID","sigmaPP"), cms.InputTag("hgcElectronID","nLayers"), cms.InputTag("hgcElectronID","firstLayer"),
                cms.InputTag("hgcElectronID","lastLayer"), cms.InputTag("hgcElectronID","e4oEtot"), cms.InputTag("hgcElectronID","layerEfrac10"), cms.InputTag("hgcElectronID","layerEfrac90"), cms.InputTag("hgcElectronID","measuredDepth"),
                cms.InputTag("hgcElectronID","expectedDepth"), cms.InputTag("hgcElectronID","expectedSigma"), cms.InputTag("hgcElectronID","depthCompatibility"), cms.InputTag("hgcElectronID","caloIsoRing0"), cms.InputTag("hgcElectronID","caloIsoRing1"),
                cms.InputTag("hgcElectronID","caloIsoRing2"), cms.InputTag("hgcElectronID","caloIsoRing3"), cms.InputTag("hgcElectronID","caloIsoRing4")
            )
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    ),
    userIsolation = cms.PSet(

    )
)


process.patJetAK8PuppiCharge = cms.EDProducer("JetChargeProducer",
    exp = cms.double(1.0),
    src = cms.InputTag("ak8PFJetsPuppiTracksAssociatorAtVertex"),
    var = cms.string('Pt')
)


process.patJetCharge = cms.EDProducer("JetChargeProducer",
    exp = cms.double(1.0),
    src = cms.InputTag("ak4JetTracksAssociatorAtVertexPF"),
    var = cms.string('Pt')
)


process.patJetCorrFactors = cms.EDProducer("JetCorrFactorsProducer",
    emf = cms.bool(False),
    extraJPTOffset = cms.string('L1FastJet'),
    flavorType = cms.string('J'),
    levels = cms.vstring(
        'L1FastJet',
        'L2Relative',
        'L3Absolute'
    ),
    mightGet = cms.optional.untracked.vstring,
    payload = cms.string('AK4PFchs'),
    primaryVertices = cms.InputTag("offlinePrimaryVertices"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    src = cms.InputTag("ak4PFJetsCHS"),
    useNPV = cms.bool(True),
    useRho = cms.bool(True)
)


process.patJetCorrFactorsAK8PFPuppiSoftDrop = cms.EDProducer("JetCorrFactorsProducer",
    emf = cms.bool(False),
    extraJPTOffset = cms.string('L1FastJet'),
    flavorType = cms.string('J'),
    levels = cms.vstring(
        'L2Relative',
        'L3Absolute'
    ),
    mightGet = cms.optional.untracked.vstring,
    payload = cms.string('AK8PFPuppi'),
    primaryVertices = cms.InputTag("offlinePrimaryVertices"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    src = cms.InputTag("ak8PFJetsPuppiSoftDrop"),
    useNPV = cms.bool(True),
    useRho = cms.bool(True)
)


process.patJetCorrFactorsAK8PFPuppiSoftDropSubjets = cms.EDProducer("JetCorrFactorsProducer",
    emf = cms.bool(False),
    extraJPTOffset = cms.string('L1FastJet'),
    flavorType = cms.string('J'),
    levels = cms.vstring(
        'L2Relative',
        'L3Absolute'
    ),
    mightGet = cms.optional.untracked.vstring,
    payload = cms.string('AK4PFPuppi'),
    primaryVertices = cms.InputTag("offlinePrimaryVertices"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    src = cms.InputTag("ak8PFJetsPuppiSoftDrop","SubJets"),
    useNPV = cms.bool(True),
    useRho = cms.bool(True)
)


process.patJetCorrFactorsAK8Puppi = cms.EDProducer("JetCorrFactorsProducer",
    emf = cms.bool(False),
    extraJPTOffset = cms.string('L1FastJet'),
    flavorType = cms.string('J'),
    levels = cms.vstring(
        'L2Relative',
        'L3Absolute'
    ),
    mightGet = cms.optional.untracked.vstring,
    payload = cms.string('AK8PFPuppi'),
    primaryVertices = cms.InputTag("offlinePrimaryVertices"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    src = cms.InputTag("ak8PFJetsPuppi"),
    useNPV = cms.bool(True),
    useRho = cms.bool(True)
)


process.patJetCorrFactorsNoHF = cms.EDProducer("JetCorrFactorsProducer",
    emf = cms.bool(False),
    extraJPTOffset = cms.string('L1FastJet'),
    flavorType = cms.string('J'),
    levels = cms.vstring(
        'L1FastJet',
        'L2Relative',
        'L3Absolute'
    ),
    mightGet = cms.optional.untracked.vstring,
    payload = cms.string('AK4PFchs'),
    primaryVertices = cms.InputTag("offlineSlimmedPrimaryVertices"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    src = cms.InputTag("ak4PFJetsCHSNoHF"),
    useNPV = cms.bool(True),
    useRho = cms.bool(True)
)


process.patJetCorrFactorsPuppi = cms.EDProducer("JetCorrFactorsProducer",
    emf = cms.bool(False),
    extraJPTOffset = cms.string('L1FastJet'),
    flavorType = cms.string('J'),
    levels = cms.vstring(
        'L2Relative',
        'L3Absolute'
    ),
    mightGet = cms.optional.untracked.vstring,
    payload = cms.string('AK4PFPuppi'),
    primaryVertices = cms.InputTag("offlinePrimaryVertices"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    src = cms.InputTag("ak4PFJetsPuppi"),
    useNPV = cms.bool(True),
    useRho = cms.bool(True)
)


process.patJetCorrFactorsSlimmedAK8DeepTags = cms.EDProducer("JetCorrFactorsProducer",
    emf = cms.bool(False),
    extraJPTOffset = cms.string('L1FastJet'),
    flavorType = cms.string('J'),
    levels = cms.vstring(),
    mightGet = cms.optional.untracked.vstring,
    payload = cms.string('AK4PFchs'),
    primaryVertices = cms.InputTag("offlineSlimmedPrimaryVertices"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    src = cms.InputTag("slimmedJetsAK8NoDeepTags"),
    useNPV = cms.bool(True),
    useRho = cms.bool(True)
)


process.patJetCorrFactorsSlimmedDeepFlavour = cms.EDProducer("JetCorrFactorsProducer",
    emf = cms.bool(False),
    extraJPTOffset = cms.string('L1FastJet'),
    flavorType = cms.string('J'),
    levels = cms.vstring(),
    mightGet = cms.optional.untracked.vstring,
    payload = cms.string('AK4PFchs'),
    primaryVertices = cms.InputTag("offlineSlimmedPrimaryVertices"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    src = cms.InputTag("slimmedJetsNoDeepFlavour"),
    useNPV = cms.bool(True),
    useRho = cms.bool(True)
)


process.patJetCorrFactorsSlimmedPuppiWithDeepTags = cms.EDProducer("JetCorrFactorsProducer",
    emf = cms.bool(False),
    extraJPTOffset = cms.string('L1FastJet'),
    flavorType = cms.string('J'),
    levels = cms.vstring(),
    mightGet = cms.optional.untracked.vstring,
    payload = cms.string('AK4PFchs'),
    primaryVertices = cms.InputTag("offlineSlimmedPrimaryVertices"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    src = cms.InputTag("slimmedJetsPuppiNoDeepTags"),
    useNPV = cms.bool(True),
    useRho = cms.bool(True)
)


process.patJetCorrFactorsTransientCorrectedSlimmedAK8DeepTags = cms.EDProducer("JetCorrFactorsProducer",
    emf = cms.bool(False),
    extraJPTOffset = cms.string('L1FastJet'),
    flavorType = cms.string('J'),
    levels = cms.vstring(
        'L2Relative',
        'L3Absolute'
    ),
    mightGet = cms.optional.untracked.vstring,
    payload = cms.string('AK8PFPuppi'),
    primaryVertices = cms.InputTag("offlineSlimmedPrimaryVertices"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    src = cms.InputTag("updatedPatJetsSlimmedAK8DeepTags"),
    useNPV = cms.bool(True),
    useRho = cms.bool(True)
)


process.patJetCorrFactorsTransientCorrectedSlimmedDeepFlavour = cms.EDProducer("JetCorrFactorsProducer",
    emf = cms.bool(False),
    extraJPTOffset = cms.string('L1FastJet'),
    flavorType = cms.string('J'),
    levels = cms.vstring(
        'L1FastJet',
        'L2Relative',
        'L3Absolute'
    ),
    mightGet = cms.optional.untracked.vstring,
    payload = cms.string('AK4PFchs'),
    primaryVertices = cms.InputTag("offlineSlimmedPrimaryVertices"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    src = cms.InputTag("updatedPatJetsSlimmedDeepFlavour"),
    useNPV = cms.bool(True),
    useRho = cms.bool(True)
)


process.patJetCorrFactorsTransientCorrectedSlimmedPuppiWithDeepTags = cms.EDProducer("JetCorrFactorsProducer",
    emf = cms.bool(False),
    extraJPTOffset = cms.string('L1FastJet'),
    flavorType = cms.string('J'),
    levels = cms.vstring(
        'L2Relative',
        'L3Absolute'
    ),
    mightGet = cms.optional.untracked.vstring,
    payload = cms.string('AK4PFPuppi'),
    primaryVertices = cms.InputTag("offlineSlimmedPrimaryVertices"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    src = cms.InputTag("updatedPatJetsSlimmedPuppiWithDeepTags"),
    useNPV = cms.bool(True),
    useRho = cms.bool(True)
)


process.patJetFlavourAssociation = cms.EDProducer("JetFlavourClustering",
    bHadrons = cms.InputTag("patJetPartons","bHadrons"),
    cHadrons = cms.InputTag("patJetPartons","cHadrons"),
    ghostRescaling = cms.double(1e-18),
    hadronFlavourHasPriority = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    jets = cms.InputTag("ak4PFJetsCHS"),
    leptons = cms.InputTag("patJetPartons","leptons"),
    partons = cms.InputTag("patJetPartons","physicsPartons"),
    rParam = cms.double(0.4)
)


process.patJetFlavourAssociationAK8PFPuppiSoftDropSubjets = cms.EDProducer("JetFlavourClustering",
    bHadrons = cms.InputTag("patJetPartons","bHadrons"),
    cHadrons = cms.InputTag("patJetPartons","cHadrons"),
    ghostRescaling = cms.double(1e-18),
    groomedJets = cms.InputTag("ak8PFJetsPuppiSoftDrop"),
    hadronFlavourHasPriority = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    jets = cms.InputTag("ak8PFJetsPuppi"),
    leptons = cms.InputTag("patJetPartons","leptons"),
    partons = cms.InputTag("patJetPartons","physicsPartons"),
    rParam = cms.double(0.8),
    subjets = cms.InputTag("ak8PFJetsPuppiSoftDrop","SubJets"),
    weights = cms.InputTag("puppi")
)


process.patJetFlavourAssociationAK8Puppi = cms.EDProducer("JetFlavourClustering",
    bHadrons = cms.InputTag("patJetPartons","bHadrons"),
    cHadrons = cms.InputTag("patJetPartons","cHadrons"),
    ghostRescaling = cms.double(1e-18),
    hadronFlavourHasPriority = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    jets = cms.InputTag("ak8PFJetsPuppi"),
    leptons = cms.InputTag("patJetPartons","leptons"),
    partons = cms.InputTag("patJetPartons","physicsPartons"),
    rParam = cms.double(0.8),
    weights = cms.InputTag("puppi")
)


process.patJetFlavourAssociationLegacy = cms.EDProducer("JetFlavourIdentifier",
    physicsDefinition = cms.bool(False),
    srcByReference = cms.InputTag("patJetPartonAssociationLegacy")
)


process.patJetFlavourAssociationLegacyAK8PFPuppiSoftDropSubjets = cms.EDProducer("JetFlavourIdentifier",
    physicsDefinition = cms.bool(False),
    srcByReference = cms.InputTag("patJetPartonAssociationLegacyAK8PFPuppiSoftDropSubjets")
)


process.patJetFlavourAssociationLegacyAK8Puppi = cms.EDProducer("JetFlavourIdentifier",
    physicsDefinition = cms.bool(False),
    srcByReference = cms.InputTag("patJetPartonAssociationLegacyAK8Puppi")
)


process.patJetFlavourAssociationLegacyNoHF = cms.EDProducer("JetFlavourIdentifier",
    physicsDefinition = cms.bool(False),
    srcByReference = cms.InputTag("patJetPartonAssociationLegacyNoHF")
)


process.patJetFlavourAssociationLegacyPuppi = cms.EDProducer("JetFlavourIdentifier",
    physicsDefinition = cms.bool(False),
    srcByReference = cms.InputTag("patJetPartonAssociationLegacyPuppi")
)


process.patJetFlavourAssociationNoHF = cms.EDProducer("JetFlavourClustering",
    bHadrons = cms.InputTag("patJetPartonsNoHF","bHadrons"),
    cHadrons = cms.InputTag("patJetPartonsNoHF","cHadrons"),
    ghostRescaling = cms.double(1e-18),
    hadronFlavourHasPriority = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    jets = cms.InputTag("ak4PFJetsCHSNoHF"),
    leptons = cms.InputTag("patJetPartonsNoHF","leptons"),
    partons = cms.InputTag("patJetPartonsNoHF","physicsPartons"),
    rParam = cms.double(0.4)
)


process.patJetFlavourAssociationPuppi = cms.EDProducer("JetFlavourClustering",
    bHadrons = cms.InputTag("patJetPartons","bHadrons"),
    cHadrons = cms.InputTag("patJetPartons","cHadrons"),
    ghostRescaling = cms.double(1e-18),
    hadronFlavourHasPriority = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    jets = cms.InputTag("ak4PFJetsPuppi"),
    leptons = cms.InputTag("patJetPartons","leptons"),
    partons = cms.InputTag("patJetPartons","physicsPartons"),
    rParam = cms.double(0.4),
    weights = cms.InputTag("puppi")
)


process.patJetGenJetMatch = cms.EDProducer("GenJetMatcher",
    checkCharge = cms.bool(False),
    matched = cms.InputTag("slimmedGenJets"),
    maxDeltaR = cms.double(0.4),
    mcPdgId = cms.vint32(),
    mcStatus = cms.vint32(),
    resolveAmbiguities = cms.bool(True),
    resolveByMatchQuality = cms.bool(False),
    src = cms.InputTag("ak4PFJetsCHS")
)


process.patJetGenJetMatchAK8PFPuppiSoftDrop = cms.EDProducer("GenJetMatcher",
    checkCharge = cms.bool(False),
    matched = cms.InputTag("slimmedGenJetsAK8"),
    maxDeltaR = cms.double(0.4),
    mcPdgId = cms.vint32(),
    mcStatus = cms.vint32(),
    resolveAmbiguities = cms.bool(True),
    resolveByMatchQuality = cms.bool(False),
    src = cms.InputTag("ak8PFJetsPuppiSoftDrop")
)


process.patJetGenJetMatchAK8PFPuppiSoftDropSubjets = cms.EDProducer("GenJetMatcher",
    checkCharge = cms.bool(False),
    matched = cms.InputTag("slimmedGenJetsAK8SoftDropSubJets"),
    maxDeltaR = cms.double(0.8),
    mcPdgId = cms.vint32(),
    mcStatus = cms.vint32(),
    resolveAmbiguities = cms.bool(True),
    resolveByMatchQuality = cms.bool(False),
    src = cms.InputTag("ak8PFJetsPuppiSoftDrop","SubJets")
)


process.patJetGenJetMatchAK8Puppi = cms.EDProducer("GenJetMatcher",
    checkCharge = cms.bool(False),
    matched = cms.InputTag("slimmedGenJetsAK8"),
    maxDeltaR = cms.double(0.8),
    mcPdgId = cms.vint32(),
    mcStatus = cms.vint32(),
    resolveAmbiguities = cms.bool(True),
    resolveByMatchQuality = cms.bool(False),
    src = cms.InputTag("ak8PFJetsPuppi")
)


process.patJetGenJetMatchNoHF = cms.EDProducer("GenJetMatcher",
    checkCharge = cms.bool(False),
    matched = cms.InputTag("ak4GenJets"),
    maxDeltaR = cms.double(0.4),
    mcPdgId = cms.vint32(),
    mcStatus = cms.vint32(),
    resolveAmbiguities = cms.bool(True),
    resolveByMatchQuality = cms.bool(False),
    src = cms.InputTag("ak4PFJetsCHSNoHF")
)


process.patJetGenJetMatchPuppi = cms.EDProducer("GenJetMatcher",
    checkCharge = cms.bool(False),
    matched = cms.InputTag("slimmedGenJets"),
    maxDeltaR = cms.double(0.4),
    mcPdgId = cms.vint32(),
    mcStatus = cms.vint32(),
    resolveAmbiguities = cms.bool(True),
    resolveByMatchQuality = cms.bool(False),
    src = cms.InputTag("ak4PFJetsPuppi")
)


process.patJetPartonAssociationLegacy = cms.EDProducer("JetPartonMatcher",
    coneSizeToAssociate = cms.double(0.3),
    jets = cms.InputTag("ak4PFJetsCHS"),
    partons = cms.InputTag("patJetPartonsLegacy")
)


process.patJetPartonAssociationLegacyAK8PFPuppiSoftDropSubjets = cms.EDProducer("JetPartonMatcher",
    coneSizeToAssociate = cms.double(0.3),
    jets = cms.InputTag("ak8PFJetsPuppiSoftDrop","SubJets"),
    partons = cms.InputTag("patJetPartonsLegacy")
)


process.patJetPartonAssociationLegacyAK8Puppi = cms.EDProducer("JetPartonMatcher",
    coneSizeToAssociate = cms.double(0.3),
    jets = cms.InputTag("ak8PFJetsPuppi"),
    partons = cms.InputTag("patJetPartonsLegacy")
)


process.patJetPartonAssociationLegacyNoHF = cms.EDProducer("JetPartonMatcher",
    coneSizeToAssociate = cms.double(0.3),
    jets = cms.InputTag("ak4PFJetsCHSNoHF"),
    partons = cms.InputTag("patJetPartonsLegacy")
)


process.patJetPartonAssociationLegacyPuppi = cms.EDProducer("JetPartonMatcher",
    coneSizeToAssociate = cms.double(0.3),
    jets = cms.InputTag("ak4PFJetsPuppi"),
    partons = cms.InputTag("patJetPartonsLegacy")
)


process.patJetPartonMatch = cms.EDProducer("MCMatcher",
    checkCharge = cms.bool(False),
    matched = cms.InputTag("prunedGenParticles"),
    maxDPtRel = cms.double(3.0),
    maxDeltaR = cms.double(0.4),
    mcPdgId = cms.vint32(
        1, 2, 3, 4, 5,
        21
    ),
    mcStatus = cms.vint32(3, 23),
    resolveAmbiguities = cms.bool(True),
    resolveByMatchQuality = cms.bool(False),
    src = cms.InputTag("ak4PFJetsCHS")
)


process.patJetPartonMatchAK8PFPuppiSoftDrop = cms.EDProducer("MCMatcher",
    checkCharge = cms.bool(False),
    matched = cms.InputTag("genParticles"),
    maxDPtRel = cms.double(3.0),
    maxDeltaR = cms.double(0.4),
    mcPdgId = cms.vint32(
        1, 2, 3, 4, 5,
        21
    ),
    mcStatus = cms.vint32(3, 23),
    resolveAmbiguities = cms.bool(True),
    resolveByMatchQuality = cms.bool(False),
    src = cms.InputTag("ak8PFJetsPuppiSoftDrop")
)


process.patJetPartonMatchAK8PFPuppiSoftDropSubjets = cms.EDProducer("MCMatcher",
    checkCharge = cms.bool(False),
    matched = cms.InputTag("genParticles"),
    maxDPtRel = cms.double(3.0),
    maxDeltaR = cms.double(0.4),
    mcPdgId = cms.vint32(
        1, 2, 3, 4, 5,
        21
    ),
    mcStatus = cms.vint32(3, 23),
    resolveAmbiguities = cms.bool(True),
    resolveByMatchQuality = cms.bool(False),
    src = cms.InputTag("ak8PFJetsPuppiSoftDrop","SubJets")
)


process.patJetPartonMatchAK8Puppi = cms.EDProducer("MCMatcher",
    checkCharge = cms.bool(False),
    matched = cms.InputTag("genParticles"),
    maxDPtRel = cms.double(3.0),
    maxDeltaR = cms.double(0.4),
    mcPdgId = cms.vint32(
        1, 2, 3, 4, 5,
        21
    ),
    mcStatus = cms.vint32(3, 23),
    resolveAmbiguities = cms.bool(True),
    resolveByMatchQuality = cms.bool(False),
    src = cms.InputTag("ak8PFJetsPuppi")
)


process.patJetPartonMatchNoHF = cms.EDProducer("MCMatcher",
    checkCharge = cms.bool(False),
    matched = cms.InputTag("genParticles"),
    maxDPtRel = cms.double(3.0),
    maxDeltaR = cms.double(0.4),
    mcPdgId = cms.vint32(
        1, 2, 3, 4, 5,
        21
    ),
    mcStatus = cms.vint32(3, 23),
    resolveAmbiguities = cms.bool(True),
    resolveByMatchQuality = cms.bool(False),
    src = cms.InputTag("ak4PFJetsCHSNoHF")
)


process.patJetPartonMatchPuppi = cms.EDProducer("MCMatcher",
    checkCharge = cms.bool(False),
    matched = cms.InputTag("genParticles"),
    maxDPtRel = cms.double(3.0),
    maxDeltaR = cms.double(0.4),
    mcPdgId = cms.vint32(
        1, 2, 3, 4, 5,
        21
    ),
    mcStatus = cms.vint32(3, 23),
    resolveAmbiguities = cms.bool(True),
    resolveByMatchQuality = cms.bool(False),
    src = cms.InputTag("ak4PFJetsPuppi")
)


process.patJetPartons = cms.EDProducer("HadronAndPartonSelector",
    fullChainPhysPartons = cms.bool(True),
    particles = cms.InputTag("genParticles"),
    partonMode = cms.string('Auto'),
    src = cms.InputTag("generator")
)


process.patJetPartonsLegacy = cms.EDProducer("PartonSelector",
    src = cms.InputTag("genParticles"),
    withLeptons = cms.bool(False)
)


process.patJetPartonsLegacyNoHF = cms.EDProducer("PartonSelector",
    src = cms.InputTag("genParticles"),
    withLeptons = cms.bool(False)
)


process.patJetPartonsNoHF = cms.EDProducer("HadronAndPartonSelector",
    fullChainPhysPartons = cms.bool(True),
    particles = cms.InputTag("genParticles"),
    partonMode = cms.string('Auto'),
    src = cms.InputTag("generator")
)


process.patJetPuppiCharge = cms.EDProducer("JetChargeProducer",
    exp = cms.double(1.0),
    src = cms.InputTag("ak4PFJetsPuppiTracksAssociatorAtVertex"),
    var = cms.string('Pt')
)


process.patJets = cms.EDProducer("PATJetProducer",
    JetFlavourInfoSource = cms.InputTag("patJetFlavourAssociation"),
    JetPartonMapSource = cms.InputTag("patJetFlavourAssociationLegacy"),
    addAssociatedTracks = cms.bool(True),
    addBTagInfo = cms.bool(True),
    addDiscriminators = cms.bool(True),
    addEfficiencies = cms.bool(False),
    addGenJetMatch = cms.bool(True),
    addGenPartonMatch = cms.bool(True),
    addJetCharge = cms.bool(True),
    addJetCorrFactors = cms.bool(True),
    addJetFlavourInfo = cms.bool(True),
    addJetID = cms.bool(False),
    addPartonJetMatch = cms.bool(False),
    addResolutions = cms.bool(False),
    addTagInfos = cms.bool(True),
    discriminatorSources = cms.VInputTag(
        "pfJetBProbabilityBJetTags", "pfJetProbabilityBJetTags", "pfTrackCountingHighEffBJetTags", "pfDeepCSVJetTags:probb", "pfDeepCSVJetTags:probc",
        "pfDeepCSVJetTags:probudsg", "pfDeepCSVJetTags:probbb", "pfDeepCSVDiscriminatorsJetTags:BvsAll", "pfDeepCSVDiscriminatorsJetTags:CvsB", "pfDeepCSVDiscriminatorsJetTags:CvsL"
    ),
    efficiencies = cms.PSet(

    ),
    embedCaloTowers = cms.bool(False),
    embedGenJetMatch = cms.bool(True),
    embedGenPartonMatch = cms.bool(False),
    embedPFCandidates = cms.bool(False),
    genJetMatch = cms.InputTag("patJetGenJetMatch"),
    genPartonMatch = cms.InputTag("patJetPartonMatch"),
    getJetMCFlavour = cms.bool(True),
    jetChargeSource = cms.InputTag("patJetCharge"),
    jetCorrFactorsSource = cms.VInputTag("patJetCorrFactors"),
    jetIDMap = cms.InputTag("ak4JetID"),
    jetSource = cms.InputTag("ak4PFJetsCHS"),
    mightGet = cms.optional.untracked.vstring,
    partonJetSource = cms.InputTag("NOT_IMPLEMENTED"),
    resolutions = cms.PSet(

    ),
    tagInfoSources = cms.VInputTag("pixelClusterTagInfos"),
    trackAssociationSource = cms.InputTag("ak4JetTracksAssociatorAtVertexPF"),
    useLegacyJetMCFlavour = cms.bool(False),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag(
                cms.InputTag("pileupJetId","fullDiscriminant"), "QGTagger:qgLikelihood", "hfJetShowerShape:sigmaEtaEta", "hfJetShowerShape:sigmaPhiPhi", "caloJetMap:pt",
                "caloJetMap:emEnergyFraction"
            )
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag(cms.InputTag("pileupJetId","fullId"), "hfJetShowerShape:centralEtaStripSize", "hfJetShowerShape:adjacentEtaStripsSize")
        )
    )
)


process.patJetsAK8PFPuppiSoftDrop = cms.EDProducer("PATJetProducer",
    JetFlavourInfoSource = cms.InputTag("patJetFlavourAssociation"),
    JetPartonMapSource = cms.InputTag("patJetFlavourAssociationLegacy"),
    addAssociatedTracks = cms.bool(False),
    addBTagInfo = cms.bool(False),
    addDiscriminators = cms.bool(True),
    addEfficiencies = cms.bool(False),
    addGenJetMatch = cms.bool(True),
    addGenPartonMatch = cms.bool(True),
    addJetCharge = cms.bool(False),
    addJetCorrFactors = cms.bool(True),
    addJetFlavourInfo = cms.bool(False),
    addJetID = cms.bool(False),
    addPartonJetMatch = cms.bool(False),
    addResolutions = cms.bool(False),
    addTagInfos = cms.bool(False),
    discriminatorSources = cms.VInputTag(
        "pfJetBProbabilityBJetTags", "pfJetProbabilityBJetTags", "pfTrackCountingHighEffBJetTags", "pfDeepCSVJetTags:probb", "pfDeepCSVJetTags:probc",
        "pfDeepCSVJetTags:probudsg", "pfDeepCSVJetTags:probbb"
    ),
    efficiencies = cms.PSet(

    ),
    embedCaloTowers = cms.bool(False),
    embedGenJetMatch = cms.bool(True),
    embedGenPartonMatch = cms.bool(True),
    embedPFCandidates = cms.bool(False),
    genJetMatch = cms.InputTag("patJetGenJetMatchAK8PFPuppiSoftDrop"),
    genPartonMatch = cms.InputTag("patJetPartonMatchAK8PFPuppiSoftDrop"),
    getJetMCFlavour = cms.bool(False),
    jetChargeSource = cms.InputTag(""),
    jetCorrFactorsSource = cms.VInputTag(cms.InputTag("patJetCorrFactorsAK8PFPuppiSoftDrop")),
    jetIDMap = cms.InputTag("ak4JetID"),
    jetSource = cms.InputTag("ak8PFJetsPuppiSoftDrop"),
    mightGet = cms.optional.untracked.vstring,
    partonJetSource = cms.InputTag("NOT_IMPLEMENTED"),
    resolutions = cms.PSet(

    ),
    tagInfoSources = cms.VInputTag(),
    trackAssociationSource = cms.InputTag(""),
    useLegacyJetMCFlavour = cms.bool(False),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("", "nb1AK8PuppiSoftDrop:ecfN2", "nb1AK8PuppiSoftDrop:ecfN3", "nb2AK8PuppiSoftDrop:ecfN2", "nb2AK8PuppiSoftDrop:ecfN3")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    )
)


process.patJetsAK8PFPuppiSoftDropSubjets = cms.EDProducer("PATJetProducer",
    JetFlavourInfoSource = cms.InputTag("patJetFlavourAssociationAK8PFPuppiSoftDropSubjets","SubJets"),
    JetPartonMapSource = cms.InputTag("patJetFlavourAssociationLegacyAK8PFPuppiSoftDropSubjets"),
    addAssociatedTracks = cms.bool(False),
    addBTagInfo = cms.bool(True),
    addDiscriminators = cms.bool(True),
    addEfficiencies = cms.bool(False),
    addGenJetMatch = cms.bool(True),
    addGenPartonMatch = cms.bool(True),
    addJetCharge = cms.bool(False),
    addJetCorrFactors = cms.bool(True),
    addJetFlavourInfo = cms.bool(True),
    addJetID = cms.bool(False),
    addPartonJetMatch = cms.bool(False),
    addResolutions = cms.bool(False),
    addTagInfos = cms.bool(False),
    discriminatorSources = cms.VInputTag(cms.InputTag("pfDeepCSVJetTagsAK8PFPuppiSoftDropSubjets","probb"), cms.InputTag("pfDeepCSVJetTagsAK8PFPuppiSoftDropSubjets","probbb")),
    efficiencies = cms.PSet(

    ),
    embedCaloTowers = cms.bool(False),
    embedGenJetMatch = cms.bool(True),
    embedGenPartonMatch = cms.bool(True),
    embedPFCandidates = cms.bool(False),
    genJetMatch = cms.InputTag("patJetGenJetMatchAK8PFPuppiSoftDropSubjets"),
    genPartonMatch = cms.InputTag("patJetPartonMatchAK8PFPuppiSoftDropSubjets"),
    getJetMCFlavour = cms.bool(True),
    jetChargeSource = cms.InputTag(""),
    jetCorrFactorsSource = cms.VInputTag(cms.InputTag("patJetCorrFactorsAK8PFPuppiSoftDropSubjets")),
    jetIDMap = cms.InputTag("ak4JetID"),
    jetSource = cms.InputTag("ak8PFJetsPuppiSoftDrop","SubJets"),
    mightGet = cms.optional.untracked.vstring,
    partonJetSource = cms.InputTag("NOT_IMPLEMENTED"),
    resolutions = cms.PSet(

    ),
    tagInfoSources = cms.VInputTag(
        cms.InputTag("pfImpactParameterTagInfosAK8PFPuppiSoftDropSubjets"), cms.InputTag("pfInclusiveSecondaryVertexFinderTagInfosAK8PFPuppiSoftDropSubjets"), cms.InputTag("pfSecondaryVertexTagInfosAK8PFPuppiSoftDropSubjets"), cms.InputTag("softPFMuonsTagInfosAK8PFPuppiSoftDropSubjets"), cms.InputTag("softPFElectronsTagInfosAK8PFPuppiSoftDropSubjets"),
        cms.InputTag("pfDeepCSVTagInfosAK8PFPuppiSoftDropSubjets")
    ),
    trackAssociationSource = cms.InputTag(""),
    useLegacyJetMCFlavour = cms.bool(False),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag(
                "", "nb1AK8PuppiSoftDropSubjets:ecfN2", "nb1AK8PuppiSoftDropSubjets:ecfN3", "nb2AK8PuppiSoftDropSubjets:ecfN2", "nb2AK8PuppiSoftDropSubjets:ecfN3",
                "NjettinessAK8Subjets:tau1", "NjettinessAK8Subjets:tau2", "NjettinessAK8Subjets:tau3", "NjettinessAK8Subjets:tau4"
            )
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    )
)


process.patJetsAK8Puppi = cms.EDProducer("PATJetProducer",
    JetFlavourInfoSource = cms.InputTag("patJetFlavourAssociationAK8Puppi"),
    JetPartonMapSource = cms.InputTag("patJetFlavourAssociationLegacyAK8Puppi"),
    addAssociatedTracks = cms.bool(False),
    addBTagInfo = cms.bool(True),
    addDiscriminators = cms.bool(True),
    addEfficiencies = cms.bool(False),
    addGenJetMatch = cms.bool(True),
    addGenPartonMatch = cms.bool(True),
    addJetCharge = cms.bool(False),
    addJetCorrFactors = cms.bool(True),
    addJetFlavourInfo = cms.bool(True),
    addJetID = cms.bool(False),
    addPartonJetMatch = cms.bool(False),
    addResolutions = cms.bool(False),
    addTagInfos = cms.bool(False),
    discriminatorSources = cms.VInputTag(cms.InputTag("pfDeepCSVJetTagsAK8Puppi","probb"), cms.InputTag("pfDeepCSVJetTagsAK8Puppi","probc"), cms.InputTag("pfDeepCSVJetTagsAK8Puppi","probudsg"), cms.InputTag("pfDeepCSVJetTagsAK8Puppi","probbb")),
    efficiencies = cms.PSet(

    ),
    embedCaloTowers = cms.bool(False),
    embedGenJetMatch = cms.bool(True),
    embedGenPartonMatch = cms.bool(True),
    embedPFCandidates = cms.bool(False),
    genJetMatch = cms.InputTag("patJetGenJetMatchAK8Puppi"),
    genPartonMatch = cms.InputTag("patJetPartonMatchAK8Puppi"),
    getJetMCFlavour = cms.bool(True),
    jetChargeSource = cms.InputTag(""),
    jetCorrFactorsSource = cms.VInputTag(cms.InputTag("patJetCorrFactorsAK8Puppi")),
    jetIDMap = cms.InputTag("ak4JetID"),
    jetSource = cms.InputTag("ak8PFJetsPuppi"),
    mightGet = cms.optional.untracked.vstring,
    partonJetSource = cms.InputTag("NOT_IMPLEMENTED"),
    resolutions = cms.PSet(

    ),
    tagInfoSources = cms.VInputTag(
        cms.InputTag("pfBoostedDoubleSVAK8TagInfosAK8Puppi"), cms.InputTag("pfImpactParameterAK8TagInfosAK8Puppi"), cms.InputTag("pfInclusiveSecondaryVertexFinderAK8TagInfosAK8Puppi"), cms.InputTag("pfImpactParameterTagInfosAK8Puppi"), cms.InputTag("pfInclusiveSecondaryVertexFinderTagInfosAK8Puppi"),
        cms.InputTag("pfSecondaryVertexTagInfosAK8Puppi"), cms.InputTag("softPFMuonsTagInfosAK8Puppi"), cms.InputTag("softPFElectronsTagInfosAK8Puppi"), cms.InputTag("pfDeepCSVTagInfosAK8Puppi")
    ),
    trackAssociationSource = cms.InputTag(""),
    useLegacyJetMCFlavour = cms.bool(False),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("ak8PFJetsPuppiSoftDropMass", "NjettinessAK8Puppi:tau1", "NjettinessAK8Puppi:tau2", "NjettinessAK8Puppi:tau3", "NjettinessAK8Puppi:tau4")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    )
)


process.patJetsNoHF = cms.EDProducer("PATJetProducer",
    JetFlavourInfoSource = cms.InputTag("patJetFlavourAssociationNoHF"),
    JetPartonMapSource = cms.InputTag("patJetFlavourAssociationLegacyNoHF"),
    addAssociatedTracks = cms.bool(False),
    addBTagInfo = cms.bool(False),
    addDiscriminators = cms.bool(True),
    addEfficiencies = cms.bool(False),
    addGenJetMatch = cms.bool(False),
    addGenPartonMatch = cms.bool(False),
    addJetCharge = cms.bool(False),
    addJetCorrFactors = cms.bool(True),
    addJetFlavourInfo = cms.bool(True),
    addJetID = cms.bool(False),
    addPartonJetMatch = cms.bool(False),
    addResolutions = cms.bool(False),
    addTagInfos = cms.bool(False),
    discriminatorSources = cms.VInputTag(
        "pfJetBProbabilityBJetTags", "pfJetProbabilityBJetTags", "pfTrackCountingHighEffBJetTags", "pfDeepCSVJetTags:probb", "pfDeepCSVJetTags:probc",
        "pfDeepCSVJetTags:probudsg", "pfDeepCSVJetTags:probbb"
    ),
    efficiencies = cms.PSet(

    ),
    embedCaloTowers = cms.bool(False),
    embedGenJetMatch = cms.bool(False),
    embedGenPartonMatch = cms.bool(False),
    embedPFCandidates = cms.bool(False),
    genJetMatch = cms.InputTag("patJetGenJetMatchNoHF"),
    genPartonMatch = cms.InputTag("patJetPartonMatchNoHF"),
    getJetMCFlavour = cms.bool(False),
    jetChargeSource = cms.InputTag(""),
    jetCorrFactorsSource = cms.VInputTag(cms.InputTag("patJetCorrFactorsNoHF")),
    jetIDMap = cms.InputTag("ak4JetID"),
    jetSource = cms.InputTag("ak4PFJetsCHSNoHF"),
    mightGet = cms.optional.untracked.vstring,
    partonJetSource = cms.InputTag("NOT_IMPLEMENTED"),
    resolutions = cms.PSet(

    ),
    tagInfoSources = cms.VInputTag(),
    trackAssociationSource = cms.InputTag(""),
    useLegacyJetMCFlavour = cms.bool(False),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    )
)


process.patJetsPuppi = cms.EDProducer("PATJetProducer",
    JetFlavourInfoSource = cms.InputTag("patJetFlavourAssociationPuppi"),
    JetPartonMapSource = cms.InputTag("patJetFlavourAssociationLegacyPuppi"),
    addAssociatedTracks = cms.bool(False),
    addBTagInfo = cms.bool(True),
    addDiscriminators = cms.bool(True),
    addEfficiencies = cms.bool(False),
    addGenJetMatch = cms.bool(True),
    addGenPartonMatch = cms.bool(True),
    addJetCharge = cms.bool(False),
    addJetCorrFactors = cms.bool(True),
    addJetFlavourInfo = cms.bool(True),
    addJetID = cms.bool(False),
    addPartonJetMatch = cms.bool(False),
    addResolutions = cms.bool(False),
    addTagInfos = cms.bool(False),
    discriminatorSources = cms.VInputTag(
        cms.InputTag("pfDeepCSVJetTagsPuppi","probb"), cms.InputTag("pfDeepCSVJetTagsPuppi","probbb"), cms.InputTag("pfDeepCSVJetTagsPuppi","probc"), cms.InputTag("pfDeepCSVJetTagsPuppi","probudsg"), cms.InputTag("pfJetBProbabilityBJetTagsPuppi"),
        cms.InputTag("pfJetProbabilityBJetTagsPuppi"), cms.InputTag("pfTrackCountingHighEffBJetTagsPuppi"), cms.InputTag("pfDeepCSVDiscriminatorsJetTagsPuppi","BvsAll"), cms.InputTag("pfDeepCSVDiscriminatorsJetTagsPuppi","CvsB"), cms.InputTag("pfDeepCSVDiscriminatorsJetTagsPuppi","CvsL")
    ),
    efficiencies = cms.PSet(

    ),
    embedCaloTowers = cms.bool(False),
    embedGenJetMatch = cms.bool(True),
    embedGenPartonMatch = cms.bool(True),
    embedPFCandidates = cms.bool(False),
    genJetMatch = cms.InputTag("patJetGenJetMatchPuppi"),
    genPartonMatch = cms.InputTag("patJetPartonMatchPuppi"),
    getJetMCFlavour = cms.bool(True),
    jetChargeSource = cms.InputTag("patJetPuppiCharge"),
    jetCorrFactorsSource = cms.VInputTag(cms.InputTag("patJetCorrFactorsPuppi")),
    jetIDMap = cms.InputTag("ak4JetID"),
    jetSource = cms.InputTag("ak4PFJetsPuppi"),
    mightGet = cms.optional.untracked.vstring,
    partonJetSource = cms.InputTag("NOT_IMPLEMENTED"),
    resolutions = cms.PSet(

    ),
    tagInfoSources = cms.VInputTag(cms.InputTag("pfDeepCSVTagInfosPuppi"), cms.InputTag("pfImpactParameterTagInfosPuppi"), cms.InputTag("pfInclusiveSecondaryVertexFinderTagInfosPuppi")),
    trackAssociationSource = cms.InputTag(""),
    useLegacyJetMCFlavour = cms.bool(False),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    )
)


process.patLowPtElectrons = cms.EDProducer("PATElectronProducer",
    addEfficiencies = cms.bool(False),
    addElectronID = cms.bool(True),
    addGenMatch = cms.bool(True),
    addMVAVariables = cms.bool(False),
    addPFClusterIso = cms.bool(False),
    addPuppiIsolation = cms.bool(False),
    addResolutions = cms.bool(False),
    beamLineSrc = cms.InputTag("offlineBeamSpot"),
    computeMiniIso = cms.bool(False),
    ecalPFClusterIsoMap = cms.InputTag(""),
    efficiencies = cms.PSet(

    ),
    electronIDSources = cms.PSet(
        ID = cms.InputTag("lowPtGsfElectronID"),
        ptbiased = cms.InputTag("rekeyLowPtGsfElectronSeedValueMaps","ptbiased"),
        unbiased = cms.InputTag("rekeyLowPtGsfElectronSeedValueMaps","unbiased")
    ),
    electronSource = cms.InputTag("lowPtGsfElectrons"),
    embedBasicClusters = cms.bool(True),
    embedGenMatch = cms.bool(True),
    embedGsfElectronCore = cms.bool(True),
    embedGsfTrack = cms.bool(True),
    embedHighLevelSelection = cms.bool(False),
    embedPFCandidate = cms.bool(False),
    embedPflowBasicClusters = cms.bool(False),
    embedPflowPreshowerClusters = cms.bool(False),
    embedPflowSuperCluster = cms.bool(False),
    embedPreshowerClusters = cms.bool(False),
    embedRecHits = cms.bool(False),
    embedSeedCluster = cms.bool(True),
    embedSuperCluster = cms.bool(True),
    embedTrack = cms.bool(True),
    genParticleMatch = cms.InputTag("lowPtElectronMatch"),
    hcalPFClusterIsoMap = cms.InputTag(""),
    isoDeposits = cms.PSet(

    ),
    isolationValues = cms.PSet(

    ),
    isolationValuesNoPFId = cms.PSet(

    ),
    mightGet = cms.optional.untracked.vstring,
    miniIsoParamsB = cms.vdouble(
        0.05, 0.2, 10.0, 0.0, 0.0,
        0.0, 0.0, 0.0, 0.0
    ),
    miniIsoParamsE = cms.vdouble(
        0.05, 0.2, 10.0, 0.0, 0.015,
        0.015, 0.08, 0.0, 0.0
    ),
    pfCandidateMap = cms.InputTag("particleFlow","electrons"),
    pfCandsForMiniIso = cms.InputTag("packedPFCandidates"),
    pfElectronSource = cms.InputTag("particleFlow"),
    pvSrc = cms.InputTag("offlinePrimaryVertices"),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    resolutions = cms.PSet(

    ),
    useParticleFlow = cms.bool(False),
    usePfCandidateMultiMap = cms.bool(False),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    ),
    userIsolation = cms.PSet(

    )
)


process.patMETs = cms.EDProducer("PATMETProducer",
    addEfficiencies = cms.bool(False),
    addGenMET = cms.bool(True),
    addMuonCorrections = cms.bool(False),
    addResolutions = cms.bool(False),
    computeMETSignificance = cms.bool(True),
    efficiencies = cms.PSet(

    ),
    genMETSource = cms.InputTag("genMetTrue"),
    metSource = cms.InputTag("pfMetT1"),
    muonSource = cms.InputTag("muons"),
    parameters = cms.PSet(
        dRMatch = cms.double(0.4),
        jetThreshold = cms.double(15),
        jeta = cms.vdouble(0.8, 1.3, 1.9, 2.5),
        jpar = cms.vdouble(1.39, 1.26, 1.21, 1.23, 1.28),
        pjpar = cms.vdouble(-0.2586, 0.6173)
    ),
    resolutions = cms.PSet(

    ),
    srcJetResPhi = cms.string('AK4PFchs_phi'),
    srcJetResPt = cms.string('AK4PFchs_pt'),
    srcJetSF = cms.string('AK4PFchs'),
    srcJets = cms.InputTag("cleanedPatJets"),
    srcLeptons = cms.VInputTag(cms.InputTag("pfeGammaToCandidate","electrons"), cms.InputTag("selectedPatMuons"), cms.InputTag("pfeGammaToCandidate","photons")),
    srcPFCands = cms.InputTag("particleFlow"),
    srcRho = cms.InputTag("fixedGridRhoAll"),
    srcWeights = cms.InputTag(""),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    )
)


process.patMETsNoHF = cms.EDProducer("PATMETProducer",
    addEfficiencies = cms.bool(False),
    addGenMET = cms.bool(True),
    addMuonCorrections = cms.bool(False),
    addResolutions = cms.bool(False),
    computeMETSignificance = cms.bool(False),
    efficiencies = cms.PSet(

    ),
    genMETSource = cms.InputTag("genMetTrue"),
    metSource = cms.InputTag("pfMetT1NoHF"),
    muonSource = cms.InputTag("muons"),
    parameters = cms.PSet(
        dRMatch = cms.double(0.4),
        jetThreshold = cms.double(15),
        jeta = cms.vdouble(0.8, 1.3, 1.9, 2.5),
        jpar = cms.vdouble(1.39, 1.26, 1.21, 1.23, 1.28),
        pjpar = cms.vdouble(-0.2586, 0.6173)
    ),
    resolutions = cms.PSet(

    ),
    srcJetResPhi = cms.string('AK4PFchs_phi'),
    srcJetResPt = cms.string('AK4PFchs_pt'),
    srcJetSF = cms.string('AK4PFchs'),
    srcJets = cms.InputTag("cleanedPatJets"),
    srcLeptons = cms.VInputTag(cms.InputTag("pfeGammaToCandidate","electrons"), cms.InputTag("selectedPatMuons"), cms.InputTag("pfeGammaToCandidate","photons")),
    srcPFCands = cms.InputTag("particleFlow"),
    srcRho = cms.InputTag("fixedGridRhoAll"),
    srcWeights = cms.InputTag(""),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    )
)


process.patMETsPuppi = cms.EDProducer("PATMETProducer",
    addEfficiencies = cms.bool(False),
    addGenMET = cms.bool(True),
    addMuonCorrections = cms.bool(False),
    addResolutions = cms.bool(False),
    computeMETSignificance = cms.bool(True),
    efficiencies = cms.PSet(

    ),
    genMETSource = cms.InputTag("genMetTrue"),
    metSource = cms.InputTag("pfMetT1Puppi"),
    muonSource = cms.InputTag("muons"),
    parameters = cms.PSet(
        dRMatch = cms.double(0.4),
        jetThreshold = cms.double(15),
        jeta = cms.vdouble(0.8, 1.3, 1.9, 2.5),
        jpar = cms.vdouble(1.39, 1.26, 1.21, 1.23, 1.28),
        pjpar = cms.vdouble(-0.2586, 0.6173)
    ),
    resolutions = cms.PSet(

    ),
    srcJetResPhi = cms.string('AK4PFPuppi_phi'),
    srcJetResPt = cms.string('AK4PFPuppi_pt'),
    srcJetSF = cms.string('AK4PFPuppi'),
    srcJets = cms.InputTag("cleanedPatJetsPuppi"),
    srcLeptons = cms.VInputTag(cms.InputTag("pfeGammaToCandidate","electrons"), cms.InputTag("selectedPatMuons"), cms.InputTag("pfeGammaToCandidate","photons")),
    srcPFCands = cms.InputTag("particleFlow"),
    srcRho = cms.InputTag("fixedGridRhoAll"),
    srcWeights = cms.InputTag("puppiNoLep"),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    )
)


process.patMuons = cms.EDProducer("PATMuonProducer",
    addEfficiencies = cms.bool(False),
    addGenMatch = cms.bool(True),
    addInverseBeta = cms.bool(True),
    addPuppiIsolation = cms.bool(True),
    addResolutions = cms.bool(False),
    addTriggerMatching = cms.bool(True),
    beamLineSrc = cms.InputTag("offlineBeamSpot"),
    caloMETMuonCorrs = cms.InputTag("muonMETValueMapProducer","muCorrData"),
    computeMiniIso = cms.bool(True),
    computeMuonIDMVA = cms.bool(True),
    computePuppiCombinedIso = cms.bool(True),
    computeSoftMuonMVA = cms.bool(True),
    effectiveAreaVec = cms.vdouble(0.0566, 0.0562, 0.0363, 0.0119, 0.0064),
    efficiencies = cms.PSet(

    ),
    embedCaloMETMuonCorrs = cms.bool(True),
    embedCombinedMuon = cms.bool(True),
    embedDytMuon = cms.bool(False),
    embedGenMatch = cms.bool(False),
    embedHighLevelSelection = cms.bool(True),
    embedMuonBestTrack = cms.bool(True),
    embedPFCandidate = cms.bool(True),
    embedPfEcalEnergy = cms.bool(True),
    embedPickyMuon = cms.bool(False),
    embedStandAloneMuon = cms.bool(True),
    embedTcMETMuonCorrs = cms.bool(False),
    embedTpfmsMuon = cms.bool(False),
    embedTrack = cms.bool(True),
    embedTunePMuonBestTrack = cms.bool(True),
    forceBestTrackEmbedding = cms.bool(False),
    genParticleMatch = cms.InputTag("muonMatch"),
    hltCollectionFilters = cms.vstring('*'),
    isoDeposits = cms.PSet(

    ),
    isolationValues = cms.PSet(
        pfChargedAll = cms.InputTag("muPFIsoValueChargedAll04PAT"),
        pfChargedHadrons = cms.InputTag("muPFIsoValueCharged04PAT"),
        pfNeutralHadrons = cms.InputTag("muPFIsoValueNeutral04PAT"),
        pfPUChargedHadrons = cms.InputTag("muPFIsoValuePU04PAT"),
        pfPhotons = cms.InputTag("muPFIsoValueGamma04PAT")
    ),
    miniIsoParams = cms.vdouble(
        0.05, 0.2, 10.0, 0.5, 0.0001,
        0.01, 0.01, 0.01, 0.0
    ),
    muonSimInfo = cms.InputTag("muonSimClassifier"),
    muonSource = cms.InputTag("muons"),
    mvaDrMax = cms.double(0.4),
    mvaIDTrainingFile = cms.FileInPath('RecoMuon/MuonIdentification/data/mvaID.onnx'),
    mvaJetTag = cms.InputTag("pfDeepCSVJetTags","probb"),
    mvaL1Corrector = cms.InputTag("ak4PFCHSL1FastjetCorrector"),
    mvaL1L2L3ResCorrector = cms.InputTag("ak4PFCHSL1FastL2L3Corrector"),
    pfCandsForMiniIso = cms.InputTag("packedPFCandidates"),
    pfMuonSource = cms.InputTag("particleFlow"),
    puppiIsolationChargedHadrons = cms.InputTag("muonPUPPIIsolation","h+-DR040-ThresholdVeto000-ConeVeto000"),
    puppiIsolationNeutralHadrons = cms.InputTag("muonPUPPIIsolation","h0-DR040-ThresholdVeto000-ConeVeto001"),
    puppiIsolationPhotons = cms.InputTag("muonPUPPIIsolation","gamma-DR040-ThresholdVeto000-ConeVeto001"),
    puppiNoLeptonsIsolationChargedHadrons = cms.InputTag("muonPUPPINoLeptonsIsolation","h+-DR040-ThresholdVeto000-ConeVeto000"),
    puppiNoLeptonsIsolationNeutralHadrons = cms.InputTag("muonPUPPINoLeptonsIsolation","h0-DR040-ThresholdVeto000-ConeVeto001"),
    puppiNoLeptonsIsolationPhotons = cms.InputTag("muonPUPPINoLeptonsIsolation","gamma-DR040-ThresholdVeto000-ConeVeto001"),
    pvSrc = cms.InputTag("offlinePrimaryVertices"),
    recomputeBasicSelectors = cms.bool(True),
    resolutions = cms.PSet(

    ),
    rho = cms.InputTag("fixedGridRhoFastjetCentralNeutral"),
    softMvaTrainingFile = cms.FileInPath('RecoMuon/MuonIdentification/data/TMVA-muonid-bmm4-B-25.weights.xml'),
    sourceMuonTimeExtra = cms.InputTag("muons","combined"),
    tcMETMuonCorrs = cms.InputTag("muonTCMETValueMapProducer","muCorrData"),
    triggerObjects = cms.InputTag("slimmedPatTrigger"),
    triggerResults = cms.InputTag("TriggerResults","","HLT"),
    useJec = cms.bool(True),
    useParticleFlow = cms.bool(False),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    ),
    userIsolation = cms.PSet(

    )
)


process.patOOTPhotons = cms.EDProducer("PATPhotonProducer",
    addEfficiencies = cms.bool(False),
    addGenMatch = cms.bool(True),
    addPFClusterIso = cms.bool(False),
    addPhotonID = cms.bool(False),
    addPuppiIsolation = cms.bool(False),
    addResolutions = cms.bool(False),
    beamLineSrc = cms.InputTag("offlineBeamSpot"),
    conversionSource = cms.InputTag("allConversions"),
    ecalPFClusterIsoMap = cms.InputTag(""),
    efficiencies = cms.PSet(

    ),
    electronSource = cms.InputTag("reducedEgamma","reducedGedGsfElectrons"),
    embedBasicClusters = cms.bool(False),
    embedGenMatch = cms.bool(False),
    embedPreshowerClusters = cms.bool(False),
    embedRecHits = cms.bool(False),
    embedSeedCluster = cms.bool(False),
    embedSuperCluster = cms.bool(False),
    genParticleMatch = cms.InputTag("ootPhotonMatch"),
    hcalPFClusterIsoMap = cms.InputTag(""),
    isoDeposits = cms.PSet(

    ),
    isolationValues = cms.PSet(

    ),
    mightGet = cms.optional.untracked.vstring,
    photonIDSources = cms.PSet(

    ),
    photonSource = cms.InputTag("reducedEgamma","reducedOOTPhotons"),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    resolutions = cms.PSet(

    ),
    saveRegressionData = cms.bool(True),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    ),
    userIsolation = cms.PSet(

    )
)


process.patPFMet = cms.EDProducer("PATMETProducer",
    addEfficiencies = cms.bool(False),
    addGenMET = cms.bool(True),
    addMuonCorrections = cms.bool(False),
    addResolutions = cms.bool(False),
    computeMETSignificance = cms.bool(True),
    efficiencies = cms.PSet(

    ),
    genMETSource = cms.InputTag("genMetTrue"),
    metSource = cms.InputTag("pfMet"),
    muonSource = cms.InputTag("muons"),
    parameters = cms.PSet(
        dRMatch = cms.double(0.4),
        jetThreshold = cms.double(15),
        jeta = cms.vdouble(0.8, 1.3, 1.9, 2.5),
        jpar = cms.vdouble(1.39, 1.26, 1.21, 1.23, 1.28),
        pjpar = cms.vdouble(-0.2586, 0.6173)
    ),
    resolutions = cms.PSet(

    ),
    srcJetResPhi = cms.string('AK4PFchs_phi'),
    srcJetResPt = cms.string('AK4PFchs_pt'),
    srcJetSF = cms.string('AK4PFchs'),
    srcJets = cms.InputTag("cleanedPatJets"),
    srcLeptons = cms.VInputTag(cms.InputTag("pfeGammaToCandidate","electrons"), cms.InputTag("selectedPatMuons"), cms.InputTag("pfeGammaToCandidate","photons")),
    srcPFCands = cms.InputTag("particleFlow"),
    srcRho = cms.InputTag("fixedGridRhoAll"),
    srcWeights = cms.InputTag(""),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    )
)


process.patPFMetNoHF = cms.EDProducer("PATMETProducer",
    addEfficiencies = cms.bool(False),
    addGenMET = cms.bool(True),
    addMuonCorrections = cms.bool(False),
    addResolutions = cms.bool(False),
    computeMETSignificance = cms.bool(False),
    efficiencies = cms.PSet(

    ),
    genMETSource = cms.InputTag("genMetTrue"),
    metSource = cms.InputTag("pfMetNoHF"),
    muonSource = cms.InputTag("muons"),
    parameters = cms.PSet(
        dRMatch = cms.double(0.4),
        jetThreshold = cms.double(15),
        jeta = cms.vdouble(0.8, 1.3, 1.9, 2.5),
        jpar = cms.vdouble(1.39, 1.26, 1.21, 1.23, 1.28),
        pjpar = cms.vdouble(-0.2586, 0.6173)
    ),
    resolutions = cms.PSet(

    ),
    srcJetResPhi = cms.string('AK4PFchs_phi'),
    srcJetResPt = cms.string('AK4PFchs_pt'),
    srcJetSF = cms.string('AK4PFchs'),
    srcJets = cms.InputTag("cleanedPatJets"),
    srcLeptons = cms.VInputTag(cms.InputTag("pfeGammaToCandidate","electrons"), cms.InputTag("selectedPatMuons"), cms.InputTag("pfeGammaToCandidate","photons")),
    srcPFCands = cms.InputTag("noHFCands"),
    srcRho = cms.InputTag("fixedGridRhoAll"),
    srcWeights = cms.InputTag(""),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    )
)


process.patPFMetPuppi = cms.EDProducer("PATMETProducer",
    addEfficiencies = cms.bool(False),
    addGenMET = cms.bool(True),
    addMuonCorrections = cms.bool(False),
    addResolutions = cms.bool(False),
    computeMETSignificance = cms.bool(True),
    efficiencies = cms.PSet(

    ),
    genMETSource = cms.InputTag("genMetTrue"),
    metSource = cms.InputTag("pfMetPuppi"),
    muonSource = cms.InputTag("muons"),
    parameters = cms.PSet(
        dRMatch = cms.double(0.4),
        jetThreshold = cms.double(15),
        jeta = cms.vdouble(0.8, 1.3, 1.9, 2.5),
        jpar = cms.vdouble(1.39, 1.26, 1.21, 1.23, 1.28),
        pjpar = cms.vdouble(-0.2586, 0.6173)
    ),
    resolutions = cms.PSet(

    ),
    srcJetResPhi = cms.string('AK4PFPuppi_phi'),
    srcJetResPt = cms.string('AK4PFPuppi_pt'),
    srcJetSF = cms.string('AK4PFPuppi'),
    srcJets = cms.InputTag("cleanedPatJetsPuppi"),
    srcLeptons = cms.VInputTag(cms.InputTag("pfeGammaToCandidate","electrons"), cms.InputTag("selectedPatMuons"), cms.InputTag("pfeGammaToCandidate","photons")),
    srcPFCands = cms.InputTag("particleFlow"),
    srcRho = cms.InputTag("fixedGridRhoAll"),
    srcWeights = cms.InputTag("puppiNoLep"),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    )
)


process.patPFMetSmear = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2SmearCorr","type1"))
)


process.patPFMetSmearNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2SmearCorrNoHF","type1"))
)


process.patPFMetSmearPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2SmearCorrPuppi","type1"))
)


process.patPFMetSmearTxy = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2SmearCorr","type1"), cms.InputTag("patPFMetTxyCorr"))
)


process.patPFMetSmearTxyNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2SmearCorrNoHF","type1"), cms.InputTag("patPFMetTxyCorrNoHF"))
)


process.patPFMetSmearTxyPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2SmearCorrPuppi","type1"), cms.InputTag("patPFMetTxyCorrPuppi"))
)


process.patPFMetT0Corr = cms.EDProducer("Type0PFMETcorrInputProducer",
    correction = cms.PSet(
        formula = cms.string('(x<35)?(-( [0]+x*[1]+pow(x, 2)*[2]+pow(x, 3)*[3] )):(-( [0]+35*[1]+pow(35, 2)*[2]+pow(35, 3)*[3] ))'),
        par0 = cms.double(-0.181414),
        par1 = cms.double(-0.476934),
        par2 = cms.double(0.00863564),
        par3 = cms.double(-4.94181e-05)
    ),
    minDz = cms.double(0.2),
    srcHardScatterVertex = cms.InputTag("selectedPrimaryVertexHighestPtTrackSumForPFMEtCorrType0"),
    srcPFCandidateToVertexAssociations = cms.InputTag("pfCandidateToVertexAssociation")
)


process.patPFMetT0CorrNoHF = cms.EDProducer("Type0PFMETcorrInputProducer",
    correction = cms.PSet(
        formula = cms.string('(x<35)?(-( [0]+x*[1]+pow(x, 2)*[2]+pow(x, 3)*[3] )):(-( [0]+35*[1]+pow(35, 2)*[2]+pow(35, 3)*[3] ))'),
        par0 = cms.double(-0.181414),
        par1 = cms.double(-0.476934),
        par2 = cms.double(0.00863564),
        par3 = cms.double(-4.94181e-05)
    ),
    minDz = cms.double(0.2),
    srcHardScatterVertex = cms.InputTag("selectedPrimaryVertexHighestPtTrackSumForPFMEtCorrType0NoHF"),
    srcPFCandidateToVertexAssociations = cms.InputTag("pfCandidateToVertexAssociation")
)


process.patPFMetT0CorrPuppi = cms.EDProducer("Type0PFMETcorrInputProducer",
    correction = cms.PSet(
        formula = cms.string('(x<35)?(-( [0]+x*[1]+pow(x, 2)*[2]+pow(x, 3)*[3] )):(-( [0]+35*[1]+pow(35, 2)*[2]+pow(35, 3)*[3] ))'),
        par0 = cms.double(-0.181414),
        par1 = cms.double(-0.476934),
        par2 = cms.double(0.00863564),
        par3 = cms.double(-4.94181e-05)
    ),
    minDz = cms.double(0.2),
    srcHardScatterVertex = cms.InputTag("selectedPrimaryVertexHighestPtTrackSumForPFMEtCorrType0Puppi"),
    srcPFCandidateToVertexAssociations = cms.InputTag("pfCandidateToVertexAssociation")
)


process.patPFMetT0pc = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0Corr"))
)


process.patPFMetT0pcNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrNoHF"))
)


process.patPFMetT0pcPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrPuppi"))
)


process.patPFMetT0pcSmear = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0Corr"), cms.InputTag("patPFMetT1T2SmearCorr","type1"))
)


process.patPFMetT0pcSmearNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrNoHF"), cms.InputTag("patPFMetT1T2SmearCorrNoHF","type1"))
)


process.patPFMetT0pcSmearPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrPuppi"), cms.InputTag("patPFMetT1T2SmearCorrPuppi","type1"))
)


process.patPFMetT0pcSmearTxy = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0Corr"), cms.InputTag("patPFMetT1T2SmearCorr","type1"), cms.InputTag("patPFMetTxyCorr"))
)


process.patPFMetT0pcSmearTxyNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrNoHF"), cms.InputTag("patPFMetT1T2SmearCorrNoHF","type1"), cms.InputTag("patPFMetTxyCorrNoHF"))
)


process.patPFMetT0pcSmearTxyPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrPuppi"), cms.InputTag("patPFMetT1T2SmearCorrPuppi","type1"), cms.InputTag("patPFMetTxyCorrPuppi"))
)


process.patPFMetT0pcT1 = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2Corr","type1"), cms.InputTag("patPFMetT0Corr"))
)


process.patPFMetT0pcT1NoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrNoHF"), cms.InputTag("patPFMetT1T2CorrNoHF","type1"))
)


process.patPFMetT0pcT1Puppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrPuppi"), cms.InputTag("patPFMetT1T2CorrPuppi","type1"))
)


process.patPFMetT0pcT1Smear = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0Corr"), cms.InputTag("patPFMetT1T2Corr","type1"), cms.InputTag("patPFMetT1T2SmearCorr","type1"))
)


process.patPFMetT0pcT1SmearNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrNoHF"), cms.InputTag("patPFMetT1T2CorrNoHF","type1"), cms.InputTag("patPFMetT1T2SmearCorrNoHF","type1"))
)


process.patPFMetT0pcT1SmearPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrPuppi"), cms.InputTag("patPFMetT1T2CorrPuppi","type1"), cms.InputTag("patPFMetT1T2SmearCorrPuppi","type1"))
)


process.patPFMetT0pcT1SmearTxy = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0Corr"), cms.InputTag("patPFMetT1T2Corr","type1"), cms.InputTag("patPFMetT1T2SmearCorr","type1"), cms.InputTag("patPFMetTxyCorr"))
)


process.patPFMetT0pcT1SmearTxyNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrNoHF"), cms.InputTag("patPFMetT1T2CorrNoHF","type1"), cms.InputTag("patPFMetT1T2SmearCorrNoHF","type1"), cms.InputTag("patPFMetTxyCorrNoHF"))
)


process.patPFMetT0pcT1SmearTxyPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrPuppi"), cms.InputTag("patPFMetT1T2CorrPuppi","type1"), cms.InputTag("patPFMetT1T2SmearCorrPuppi","type1"), cms.InputTag("patPFMetTxyCorrPuppi"))
)


process.patPFMetT0pcT1T2 = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2Corr","type1"), cms.InputTag("patPFMetT2Corr","type2"), cms.InputTag("patPFMetT0Corr"))
)


process.patPFMetT0pcT1T2NoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrNoHF"), cms.InputTag("patPFMetT1T2CorrNoHF","type1"), cms.InputTag("patPFMetT2CorrNoHF","type2"))
)


process.patPFMetT0pcT1T2Puppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrPuppi"), cms.InputTag("patPFMetT1T2CorrPuppi","type1"), cms.InputTag("patPFMetT2CorrPuppi","type2"))
)


process.patPFMetT0pcT1T2Smear = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag("patPFMetT1T2SmearCorr:type1", cms.InputTag("patPFMetT2SmearCorr","type2"), cms.InputTag("patPFMetT0Corr"))
)


process.patPFMetT0pcT1T2SmearNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrNoHF"), cms.InputTag("patPFMetT1T2CorrNoHF","type1"), cms.InputTag("patPFMetT2CorrNoHF","type2"), cms.InputTag("patPFMetT1T2SmearCorrNoHF","type1"))
)


process.patPFMetT0pcT1T2SmearPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrPuppi"), cms.InputTag("patPFMetT1T2CorrPuppi","type1"), cms.InputTag("patPFMetT2CorrPuppi","type2"), cms.InputTag("patPFMetT1T2SmearCorrPuppi","type1"))
)


process.patPFMetT0pcT1T2SmearTxy = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0Corr"), cms.InputTag("patPFMetT2Corr","type2"), cms.InputTag("patPFMetT1T2SmearCorr","type1"), cms.InputTag("patPFMetTxyCorr"), cms.InputTag("patPFMetT2SmearCorr","type2"))
)


process.patPFMetT0pcT1T2SmearTxyNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrNoHF"), cms.InputTag("patPFMetT2CorrNoHF","type2"), cms.InputTag("patPFMetT1T2SmearCorrNoHF","type1"), cms.InputTag("patPFMetTxyCorrNoHF"), cms.InputTag("patPFMetT2SmearCorrNoHF","type2"))
)


process.patPFMetT0pcT1T2SmearTxyPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrPuppi"), cms.InputTag("patPFMetT2CorrPuppi","type2"), cms.InputTag("patPFMetT1T2SmearCorrPuppi","type1"), cms.InputTag("patPFMetTxyCorrPuppi"), cms.InputTag("patPFMetT2SmearCorrPuppi","type2"))
)


process.patPFMetT0pcT1T2Txy = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0Corr"), cms.InputTag("patPFMetT1T2Corr","type1"), cms.InputTag("patPFMetT2Corr","type2"), cms.InputTag("patPFMetTxyCorr"))
)


process.patPFMetT0pcT1T2TxyNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrNoHF"), cms.InputTag("patPFMetT1T2CorrNoHF","type1"), cms.InputTag("patPFMetT2CorrNoHF","type2"), cms.InputTag("patPFMetTxyCorrNoHF"))
)


process.patPFMetT0pcT1T2TxyPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrPuppi"), cms.InputTag("patPFMetT1T2CorrPuppi","type1"), cms.InputTag("patPFMetT2CorrPuppi","type2"), cms.InputTag("patPFMetTxyCorrPuppi"))
)


process.patPFMetT0pcT1T2TxySmear = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag("patPFMetT1T2SmearCorr:type1", cms.InputTag("patPFMetT2SmearCorr","type2"), cms.InputTag("patPFMetT0Corr"), cms.InputTag("patPFMetTxyCorr"))
)


process.patPFMetT0pcT1Txy = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0Corr"), cms.InputTag("patPFMetT1T2Corr","type1"), cms.InputTag("patPFMetTxyCorr"))
)


process.patPFMetT0pcT1TxyNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrNoHF"), cms.InputTag("patPFMetT1T2CorrNoHF","type1"), cms.InputTag("patPFMetTxyCorrNoHF"))
)


process.patPFMetT0pcT1TxyPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrPuppi"), cms.InputTag("patPFMetT1T2CorrPuppi","type1"), cms.InputTag("patPFMetTxyCorrPuppi"))
)


process.patPFMetT0pcT1TxySmear = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag("patPFMetT1T2SmearCorr:type1", cms.InputTag("patPFMetT0Corr"), cms.InputTag("patPFMetTxyCorr"))
)


process.patPFMetT0pcT2 = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0Corr"), cms.InputTag("patPFMetT2Corr","type2"))
)


process.patPFMetT0pcT2NoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrNoHF"), cms.InputTag("patPFMetT2CorrNoHF","type2"))
)


process.patPFMetT0pcT2Puppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrPuppi"), cms.InputTag("patPFMetT2CorrPuppi","type2"))
)


process.patPFMetT0pcT2Smear = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0Corr"), cms.InputTag("patPFMetT2Corr","type2"), cms.InputTag("patPFMetT1T2SmearCorr","type1"))
)


process.patPFMetT0pcT2SmearNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrNoHF"), cms.InputTag("patPFMetT2CorrNoHF","type2"), cms.InputTag("patPFMetT1T2SmearCorrNoHF","type1"))
)


process.patPFMetT0pcT2SmearPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrPuppi"), cms.InputTag("patPFMetT2CorrPuppi","type2"), cms.InputTag("patPFMetT1T2SmearCorrPuppi","type1"))
)


process.patPFMetT0pcT2SmearTxy = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0Corr"), cms.InputTag("patPFMetT2Corr","type2"), cms.InputTag("patPFMetT1T2SmearCorr","type1"), cms.InputTag("patPFMetTxyCorr"))
)


process.patPFMetT0pcT2SmearTxyNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrNoHF"), cms.InputTag("patPFMetT2CorrNoHF","type2"), cms.InputTag("patPFMetT1T2SmearCorrNoHF","type1"), cms.InputTag("patPFMetTxyCorrNoHF"))
)


process.patPFMetT0pcT2SmearTxyPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrPuppi"), cms.InputTag("patPFMetT2CorrPuppi","type2"), cms.InputTag("patPFMetT1T2SmearCorrPuppi","type1"), cms.InputTag("patPFMetTxyCorrPuppi"))
)


process.patPFMetT0pcT2Txy = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0Corr"), cms.InputTag("patPFMetT2Corr","type2"), cms.InputTag("patPFMetTxyCorr"))
)


process.patPFMetT0pcT2TxyNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrNoHF"), cms.InputTag("patPFMetT2CorrNoHF","type2"), cms.InputTag("patPFMetTxyCorrNoHF"))
)


process.patPFMetT0pcT2TxyPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrPuppi"), cms.InputTag("patPFMetT2CorrPuppi","type2"), cms.InputTag("patPFMetTxyCorrPuppi"))
)


process.patPFMetT0pcTxy = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0Corr"), cms.InputTag("patPFMetTxyCorr"))
)


process.patPFMetT0pcTxyNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrNoHF"), cms.InputTag("patPFMetTxyCorrNoHF"))
)


process.patPFMetT0pcTxyPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT0CorrPuppi"), cms.InputTag("patPFMetTxyCorrPuppi"))
)


process.patPFMetT1 = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2Corr","type1"))
)


process.patPFMetT1ElectronEnDown = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrElectronEnDown"))
)


process.patPFMetT1ElectronEnDownNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1NoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrElectronEnDownNoHF"))
)


process.patPFMetT1ElectronEnDownPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Puppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrElectronEnDownPuppi"))
)


process.patPFMetT1ElectronEnUp = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrElectronEnUp"))
)


process.patPFMetT1ElectronEnUpNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1NoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrElectronEnUpNoHF"))
)


process.patPFMetT1ElectronEnUpPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Puppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrElectronEnUpPuppi"))
)


process.patPFMetT1JetEnDown = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrJetEnDown"))
)


process.patPFMetT1JetEnDownNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1NoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrJetEnDownNoHF"))
)


process.patPFMetT1JetEnDownPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Puppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrJetEnDownPuppi"))
)


process.patPFMetT1JetEnUp = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrJetEnUp"))
)


process.patPFMetT1JetEnUpNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1NoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrJetEnUpNoHF"))
)


process.patPFMetT1JetEnUpPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Puppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrJetEnUpPuppi"))
)


process.patPFMetT1JetResDown = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrJetResDown"))
)


process.patPFMetT1JetResDownNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1NoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrJetResDownNoHF"))
)


process.patPFMetT1JetResDownPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Puppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrJetResDownPuppi"))
)


process.patPFMetT1JetResUp = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrJetResUp"))
)


process.patPFMetT1JetResUpNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1NoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrJetResUpNoHF"))
)


process.patPFMetT1JetResUpPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Puppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrJetResUpPuppi"))
)


process.patPFMetT1MuonEnDown = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrMuonEnDown"))
)


process.patPFMetT1MuonEnDownNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1NoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrMuonEnDownNoHF"))
)


process.patPFMetT1MuonEnDownPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Puppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrMuonEnDownPuppi"))
)


process.patPFMetT1MuonEnUp = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrMuonEnUp"))
)


process.patPFMetT1MuonEnUpNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1NoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrMuonEnUpNoHF"))
)


process.patPFMetT1MuonEnUpPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Puppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrMuonEnUpPuppi"))
)


process.patPFMetT1NoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2CorrNoHF","type1"))
)


process.patPFMetT1PhotonEnDown = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrPhotonEnDown"))
)


process.patPFMetT1PhotonEnDownNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1NoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrPhotonEnDownNoHF"))
)


process.patPFMetT1PhotonEnDownPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Puppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrPhotonEnDownPuppi"))
)


process.patPFMetT1PhotonEnUp = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrPhotonEnUp"))
)


process.patPFMetT1PhotonEnUpNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1NoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrPhotonEnUpNoHF"))
)


process.patPFMetT1PhotonEnUpPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Puppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrPhotonEnUpPuppi"))
)


process.patPFMetT1Puppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2CorrPuppi","type1"))
)


process.patPFMetT1Smear = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2SmearCorr","type1"))
)


process.patPFMetT1SmearElectronEnDown = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Smear"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrElectronEnDown"))
)


process.patPFMetT1SmearElectronEnDownNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrElectronEnDownNoHF"))
)


process.patPFMetT1SmearElectronEnDownPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrElectronEnDownPuppi"))
)


process.patPFMetT1SmearElectronEnUp = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Smear"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrElectronEnUp"))
)


process.patPFMetT1SmearElectronEnUpNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrElectronEnUpNoHF"))
)


process.patPFMetT1SmearElectronEnUpPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrElectronEnUpPuppi"))
)


process.patPFMetT1SmearJetEnDown = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Smear"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrJetEnDown"))
)


process.patPFMetT1SmearJetEnDownNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrJetEnDownNoHF"))
)


process.patPFMetT1SmearJetEnDownPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrJetEnDownPuppi"))
)


process.patPFMetT1SmearJetEnUp = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Smear"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrJetEnUp"))
)


process.patPFMetT1SmearJetEnUpNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrJetEnUpNoHF"))
)


process.patPFMetT1SmearJetEnUpPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrJetEnUpPuppi"))
)


process.patPFMetT1SmearJetResDown = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Smear"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrSmearedJetResDown"))
)


process.patPFMetT1SmearJetResDownNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrSmearedJetResDownNoHF"))
)


process.patPFMetT1SmearJetResDownPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrSmearedJetResDownPuppi"))
)


process.patPFMetT1SmearJetResUp = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Smear"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrSmearedJetResUp"))
)


process.patPFMetT1SmearJetResUpNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrSmearedJetResUpNoHF"))
)


process.patPFMetT1SmearJetResUpPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrSmearedJetResUpPuppi"))
)


process.patPFMetT1SmearMuonEnDown = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Smear"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrMuonEnDown"))
)


process.patPFMetT1SmearMuonEnDownNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrMuonEnDownNoHF"))
)


process.patPFMetT1SmearMuonEnDownPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrMuonEnDownPuppi"))
)


process.patPFMetT1SmearMuonEnUp = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Smear"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrMuonEnUp"))
)


process.patPFMetT1SmearMuonEnUpNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrMuonEnUpNoHF"))
)


process.patPFMetT1SmearMuonEnUpPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrMuonEnUpPuppi"))
)


process.patPFMetT1SmearNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2SmearCorrNoHF","type1"))
)


process.patPFMetT1SmearPhotonEnDown = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Smear"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrPhotonEnDown"))
)


process.patPFMetT1SmearPhotonEnDownNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrPhotonEnDownNoHF"))
)


process.patPFMetT1SmearPhotonEnDownPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrPhotonEnDownPuppi"))
)


process.patPFMetT1SmearPhotonEnUp = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Smear"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrPhotonEnUp"))
)


process.patPFMetT1SmearPhotonEnUpNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrPhotonEnUpNoHF"))
)


process.patPFMetT1SmearPhotonEnUpPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrPhotonEnUpPuppi"))
)


process.patPFMetT1SmearPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2SmearCorrPuppi","type1"))
)


process.patPFMetT1SmearTauEnDown = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Smear"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrTauEnDown"))
)


process.patPFMetT1SmearTauEnDownNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrTauEnDownNoHF"))
)


process.patPFMetT1SmearTauEnDownPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrTauEnDownPuppi"))
)


process.patPFMetT1SmearTauEnUp = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Smear"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrTauEnUp"))
)


process.patPFMetT1SmearTauEnUpNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrTauEnUpNoHF"))
)


process.patPFMetT1SmearTauEnUpPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrTauEnUpPuppi"))
)


process.patPFMetT1SmearTxy = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2Corr","type1"), cms.InputTag("patPFMetT1T2SmearCorr","type1"), cms.InputTag("patPFMetTxyCorr"))
)


process.patPFMetT1SmearTxyNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2CorrNoHF","type1"), cms.InputTag("patPFMetT1T2SmearCorrNoHF","type1"), cms.InputTag("patPFMetTxyCorrNoHF"))
)


process.patPFMetT1SmearTxyPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2CorrPuppi","type1"), cms.InputTag("patPFMetT1T2SmearCorrPuppi","type1"), cms.InputTag("patPFMetTxyCorrPuppi"))
)


process.patPFMetT1SmearUnclusteredEnDown = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Smear"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrUnclusteredEnDown"))
)


process.patPFMetT1SmearUnclusteredEnDownNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrUnclusteredEnDownNoHF"))
)


process.patPFMetT1SmearUnclusteredEnDownPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrUnclusteredEnDownPuppi"))
)


process.patPFMetT1SmearUnclusteredEnUp = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Smear"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrUnclusteredEnUp"))
)


process.patPFMetT1SmearUnclusteredEnUpNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrUnclusteredEnUpNoHF"))
)


process.patPFMetT1SmearUnclusteredEnUpPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1SmearPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrUnclusteredEnUpPuppi"))
)


process.patPFMetT1T2 = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2Corr","type1"), cms.InputTag("patPFMetT2Corr","type2"))
)


process.patPFMetT1T2Corr = cms.EDProducer("PATPFJetMETcorrInputProducer",
    jetCorrEtaMax = cms.double(9.9),
    jetCorrLabel = cms.InputTag("L3Absolute"),
    jetCorrLabelRes = cms.InputTag("L2L3Residual"),
    mightGet = cms.optional.untracked.vstring,
    offsetCorrLabel = cms.InputTag("L1FastJet"),
    skipEM = cms.bool(True),
    skipEMfractionThreshold = cms.double(0.9),
    skipMuonSelection = cms.string('isGlobalMuon | isStandAloneMuon'),
    skipMuons = cms.bool(True),
    src = cms.InputTag("cleanedPatJets"),
    type1JetPtThreshold = cms.double(15)
)


process.patPFMetT1T2CorrNoHF = cms.EDProducer("PATPFJetMETcorrInputProducer",
    jetCorrEtaMax = cms.double(9.9),
    jetCorrLabel = cms.InputTag("L3Absolute"),
    jetCorrLabelRes = cms.InputTag("L2L3Residual"),
    mightGet = cms.optional.untracked.vstring,
    offsetCorrLabel = cms.InputTag("L1FastJet"),
    skipEM = cms.bool(True),
    skipEMfractionThreshold = cms.double(0.9),
    skipMuonSelection = cms.string('isGlobalMuon | isStandAloneMuon'),
    skipMuons = cms.bool(True),
    src = cms.InputTag("cleanedPatJetsNoHF"),
    type1JetPtThreshold = cms.double(15)
)


process.patPFMetT1T2CorrPuppi = cms.EDProducer("PATPFJetMETcorrInputProducer",
    jetCorrEtaMax = cms.double(9.9),
    jetCorrLabel = cms.InputTag("L3Absolute"),
    jetCorrLabelRes = cms.InputTag("L2L3Residual"),
    mightGet = cms.optional.untracked.vstring,
    offsetCorrLabel = cms.InputTag(""),
    skipEM = cms.bool(True),
    skipEMfractionThreshold = cms.double(0.9),
    skipMuonSelection = cms.string('isGlobalMuon | isStandAloneMuon'),
    skipMuons = cms.bool(True),
    src = cms.InputTag("cleanedPatJetsPuppi"),
    type1JetPtThreshold = cms.double(15)
)


process.patPFMetT1T2NoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2CorrNoHF","type1"), cms.InputTag("patPFMetT2CorrNoHF","type2"))
)


process.patPFMetT1T2Puppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2CorrPuppi","type1"), cms.InputTag("patPFMetT2CorrPuppi","type2"))
)


process.patPFMetT1T2Smear = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag("patPFMetT1T2SmearCorr:type1", cms.InputTag("patPFMetT2SmearCorr","type2"))
)


process.patPFMetT1T2SmearCorr = cms.EDProducer("PATPFJetMETcorrInputProducer",
    jetCorrEtaMax = cms.double(9.9),
    jetCorrLabel = cms.InputTag("L3Absolute"),
    jetCorrLabelRes = cms.InputTag("L2L3Residual"),
    mightGet = cms.optional.untracked.vstring,
    offsetCorrLabel = cms.InputTag("L1FastJet"),
    skipEM = cms.bool(True),
    skipEMfractionThreshold = cms.double(0.9),
    skipMuonSelection = cms.string('isGlobalMuon | isStandAloneMuon'),
    skipMuons = cms.bool(True),
    src = cms.InputTag("selectedPatJetsForMetT1T2SmearCorr"),
    type1JetPtThreshold = cms.double(15)
)


process.patPFMetT1T2SmearCorrNoHF = cms.EDProducer("PATPFJetMETcorrInputProducer",
    jetCorrEtaMax = cms.double(9.9),
    jetCorrLabel = cms.InputTag("L3Absolute"),
    jetCorrLabelRes = cms.InputTag("L2L3Residual"),
    mightGet = cms.optional.untracked.vstring,
    offsetCorrLabel = cms.InputTag("L1FastJet"),
    skipEM = cms.bool(True),
    skipEMfractionThreshold = cms.double(0.9),
    skipMuonSelection = cms.string('isGlobalMuon | isStandAloneMuon'),
    skipMuons = cms.bool(True),
    src = cms.InputTag("selectedPatJetsForMetT1T2SmearCorrNoHF"),
    type1JetPtThreshold = cms.double(15)
)


process.patPFMetT1T2SmearCorrPuppi = cms.EDProducer("PATPFJetMETcorrInputProducer",
    jetCorrEtaMax = cms.double(9.9),
    jetCorrLabel = cms.InputTag("L3Absolute"),
    jetCorrLabelRes = cms.InputTag("L2L3Residual"),
    mightGet = cms.optional.untracked.vstring,
    offsetCorrLabel = cms.InputTag(""),
    skipEM = cms.bool(True),
    skipEMfractionThreshold = cms.double(0.9),
    skipMuonSelection = cms.string('isGlobalMuon | isStandAloneMuon'),
    skipMuons = cms.bool(True),
    src = cms.InputTag("selectedPatJetsForMetT1T2SmearCorrPuppi"),
    type1JetPtThreshold = cms.double(15)
)


process.patPFMetT1T2SmearNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2CorrNoHF","type1"), cms.InputTag("patPFMetT2CorrNoHF","type2"), cms.InputTag("patPFMetT1T2SmearCorrNoHF","type1"))
)


process.patPFMetT1T2SmearPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2CorrPuppi","type1"), cms.InputTag("patPFMetT2CorrPuppi","type2"), cms.InputTag("patPFMetT1T2SmearCorrPuppi","type1"))
)


process.patPFMetT1T2SmearTxy = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2Corr","type1"), cms.InputTag("patPFMetT2Corr","type2"), cms.InputTag("patPFMetT1T2SmearCorr","type1"), cms.InputTag("patPFMetTxyCorr"))
)


process.patPFMetT1T2SmearTxyNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2CorrNoHF","type1"), cms.InputTag("patPFMetT2CorrNoHF","type2"), cms.InputTag("patPFMetT1T2SmearCorrNoHF","type1"), cms.InputTag("patPFMetTxyCorrNoHF"))
)


process.patPFMetT1T2SmearTxyPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2CorrPuppi","type1"), cms.InputTag("patPFMetT2CorrPuppi","type2"), cms.InputTag("patPFMetT1T2SmearCorrPuppi","type1"), cms.InputTag("patPFMetTxyCorrPuppi"))
)


process.patPFMetT1T2Txy = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2Corr","type1"), cms.InputTag("patPFMetT2Corr","type2"), cms.InputTag("patPFMetTxyCorr"))
)


process.patPFMetT1T2TxyNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2CorrNoHF","type1"), cms.InputTag("patPFMetT2CorrNoHF","type2"), cms.InputTag("patPFMetTxyCorrNoHF"))
)


process.patPFMetT1T2TxyPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2CorrPuppi","type1"), cms.InputTag("patPFMetT2CorrPuppi","type2"), cms.InputTag("patPFMetTxyCorrPuppi"))
)


process.patPFMetT1T2TxySmear = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag("patPFMetT1T2SmearCorr:type1", cms.InputTag("patPFMetT2SmearCorr","type2"), cms.InputTag("patPFMetTxyCorr"))
)


process.patPFMetT1TauEnDown = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrTauEnDown"))
)


process.patPFMetT1TauEnDownNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1NoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrTauEnDownNoHF"))
)


process.patPFMetT1TauEnDownPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Puppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrTauEnDownPuppi"))
)


process.patPFMetT1TauEnUp = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrTauEnUp"))
)


process.patPFMetT1TauEnUpNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1NoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrTauEnUpNoHF"))
)


process.patPFMetT1TauEnUpPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Puppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrTauEnUpPuppi"))
)


process.patPFMetT1Txy = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2Corr","type1"), cms.InputTag("patPFMetTxyCorr"))
)


process.patPFMetT1TxyNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2CorrNoHF","type1"), cms.InputTag("patPFMetTxyCorrNoHF"))
)


process.patPFMetT1TxyPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT1T2CorrPuppi","type1"), cms.InputTag("patPFMetTxyCorrPuppi"))
)


process.patPFMetT1TxySmear = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag("patPFMetT1T2SmearCorr:type1", cms.InputTag("patPFMetTxyCorr"))
)


process.patPFMetT1UnclusteredEnDown = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrUnclusteredEnDown"))
)


process.patPFMetT1UnclusteredEnDownNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1NoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrUnclusteredEnDownNoHF"))
)


process.patPFMetT1UnclusteredEnDownPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Puppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrUnclusteredEnDownPuppi"))
)


process.patPFMetT1UnclusteredEnUp = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrUnclusteredEnUp"))
)


process.patPFMetT1UnclusteredEnUpNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1NoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrUnclusteredEnUpNoHF"))
)


process.patPFMetT1UnclusteredEnUpPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetT1Puppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("shiftedPatMETCorrUnclusteredEnUpPuppi"))
)


process.patPFMetT2 = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT2Corr","type2"))
)


process.patPFMetT2Corr = cms.EDProducer("PATPFJetMETcorrInputProducer",
    jetCorrEtaMax = cms.double(9.9),
    jetCorrLabel = cms.InputTag("L3Absolute"),
    jetCorrLabelRes = cms.InputTag("L2L3Residual"),
    mightGet = cms.optional.untracked.vstring,
    offsetCorrLabel = cms.InputTag("L1FastJet"),
    skipEM = cms.bool(True),
    skipEMfractionThreshold = cms.double(0.9),
    skipMuonSelection = cms.string('isGlobalMuon | isStandAloneMuon'),
    skipMuons = cms.bool(True),
    src = cms.InputTag("cleanedPatJets"),
    type1JetPtThreshold = cms.double(15)
)


process.patPFMetT2CorrNoHF = cms.EDProducer("PATPFJetMETcorrInputProducer",
    jetCorrEtaMax = cms.double(9.9),
    jetCorrLabel = cms.InputTag("L3Absolute"),
    jetCorrLabelRes = cms.InputTag("L2L3Residual"),
    mightGet = cms.optional.untracked.vstring,
    offsetCorrLabel = cms.InputTag("L1FastJet"),
    skipEM = cms.bool(True),
    skipEMfractionThreshold = cms.double(0.9),
    skipMuonSelection = cms.string('isGlobalMuon | isStandAloneMuon'),
    skipMuons = cms.bool(True),
    src = cms.InputTag("cleanedPatJetsNoHF"),
    type1JetPtThreshold = cms.double(15)
)


process.patPFMetT2CorrPuppi = cms.EDProducer("PATPFJetMETcorrInputProducer",
    jetCorrEtaMax = cms.double(9.9),
    jetCorrLabel = cms.InputTag("L3Absolute"),
    jetCorrLabelRes = cms.InputTag("L2L3Residual"),
    mightGet = cms.optional.untracked.vstring,
    offsetCorrLabel = cms.InputTag(""),
    skipEM = cms.bool(True),
    skipEMfractionThreshold = cms.double(0.9),
    skipMuonSelection = cms.string('isGlobalMuon | isStandAloneMuon'),
    skipMuons = cms.bool(True),
    src = cms.InputTag("cleanedPatJetsPuppi"),
    type1JetPtThreshold = cms.double(15)
)


process.patPFMetT2NoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT2CorrNoHF","type2"))
)


process.patPFMetT2Puppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT2CorrPuppi","type2"))
)


process.patPFMetT2Smear = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT2Corr","type2"), cms.InputTag("patPFMetT1T2SmearCorr","type1"))
)


process.patPFMetT2SmearCorr = cms.EDProducer("PATPFJetMETcorrInputProducer",
    jetCorrEtaMax = cms.double(9.9),
    jetCorrLabel = cms.InputTag("L3Absolute"),
    jetCorrLabelRes = cms.InputTag("L2L3Residual"),
    mightGet = cms.optional.untracked.vstring,
    offsetCorrLabel = cms.InputTag("L1FastJet"),
    skipEM = cms.bool(True),
    skipEMfractionThreshold = cms.double(0.9),
    skipMuonSelection = cms.string('isGlobalMuon | isStandAloneMuon'),
    skipMuons = cms.bool(True),
    src = cms.InputTag("selectedPatJetsForMetT2SmearCorr"),
    type1JetPtThreshold = cms.double(15)
)


process.patPFMetT2SmearCorrNoHF = cms.EDProducer("PATPFJetMETcorrInputProducer",
    jetCorrEtaMax = cms.double(9.9),
    jetCorrLabel = cms.InputTag("L3Absolute"),
    jetCorrLabelRes = cms.InputTag("L2L3Residual"),
    mightGet = cms.optional.untracked.vstring,
    offsetCorrLabel = cms.InputTag("L1FastJet"),
    skipEM = cms.bool(True),
    skipEMfractionThreshold = cms.double(0.9),
    skipMuonSelection = cms.string('isGlobalMuon | isStandAloneMuon'),
    skipMuons = cms.bool(True),
    src = cms.InputTag("selectedPatJetsForMetT2SmearCorrNoHF"),
    type1JetPtThreshold = cms.double(15)
)


process.patPFMetT2SmearCorrPuppi = cms.EDProducer("PATPFJetMETcorrInputProducer",
    jetCorrEtaMax = cms.double(9.9),
    jetCorrLabel = cms.InputTag("L3Absolute"),
    jetCorrLabelRes = cms.InputTag("L2L3Residual"),
    mightGet = cms.optional.untracked.vstring,
    offsetCorrLabel = cms.InputTag("L1FastJet"),
    skipEM = cms.bool(True),
    skipEMfractionThreshold = cms.double(0.9),
    skipMuonSelection = cms.string('isGlobalMuon | isStandAloneMuon'),
    skipMuons = cms.bool(True),
    src = cms.InputTag("selectedPatJetsForMetT2SmearCorrPuppi"),
    type1JetPtThreshold = cms.double(15)
)


process.patPFMetT2SmearNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT2CorrNoHF","type2"), cms.InputTag("patPFMetT1T2SmearCorrNoHF","type1"))
)


process.patPFMetT2SmearPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT2CorrPuppi","type2"), cms.InputTag("patPFMetT1T2SmearCorrPuppi","type1"))
)


process.patPFMetT2SmearTxy = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT2Corr","type2"), cms.InputTag("patPFMetT1T2SmearCorr","type1"), cms.InputTag("patPFMetTxyCorr"))
)


process.patPFMetT2SmearTxyNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT2CorrNoHF","type2"), cms.InputTag("patPFMetT1T2SmearCorrNoHF","type1"), cms.InputTag("patPFMetTxyCorrNoHF"))
)


process.patPFMetT2SmearTxyPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT2CorrPuppi","type2"), cms.InputTag("patPFMetT1T2SmearCorrPuppi","type1"), cms.InputTag("patPFMetTxyCorrPuppi"))
)


process.patPFMetT2Txy = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT2Corr","type2"), cms.InputTag("patPFMetTxyCorr"))
)


process.patPFMetT2TxyNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT2CorrNoHF","type2"), cms.InputTag("patPFMetTxyCorrNoHF"))
)


process.patPFMetT2TxyPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetT2CorrPuppi","type2"), cms.InputTag("patPFMetTxyCorrPuppi"))
)


process.patPFMetTxy = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetTxyCorr"))
)


process.patPFMetTxyCorr = cms.EDProducer("MultShiftMETcorrInputProducer",
    parameters = cms.VPSet(
        cms.PSet(
            etaMax = cms.double(2.7),
            etaMin = cms.double(0),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('hEtaPlus'),
            px = cms.vdouble(-0.00229295500096, 3.15487850373e-07),
            py = cms.vdouble(0.000114282381437, -1.58467325852e-08),
            type = cms.int32(1),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(0),
            etaMin = cms.double(-2.7),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('hEtaMinus'),
            px = cms.vdouble(-0.000198571488347, -1.94054852726e-07),
            py = cms.vdouble(-0.00137832489313, -2.02238617742e-06),
            type = cms.int32(1),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(1.392),
            etaMin = cms.double(-1.392),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('h0Barrel'),
            px = cms.vdouble(-0.0153652906396, -3.80210366974e-05),
            py = cms.vdouble(0.00798098092474, -0.000103998219585),
            type = cms.int32(5),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(3),
            etaMin = cms.double(1.392),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('h0EndcapPlus'),
            px = cms.vdouble(-0.00305719113962, -0.00032676418359),
            py = cms.vdouble(-0.00345131507897, 0.000164816815994),
            type = cms.int32(5),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(-1.392),
            etaMin = cms.double(-3.0),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('h0EndcapMinus'),
            px = cms.vdouble(-0.000159031461755, 0.00012231873804),
            py = cms.vdouble(0.0260436390996, -8.17994745657e-05),
            type = cms.int32(5),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(1.479),
            etaMin = cms.double(-1.479),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('gammaBarrel'),
            px = cms.vdouble(-0.00163144589987, 3.17557692226e-06),
            py = cms.vdouble(-0.000710945802217, 6.45810884842e-06),
            type = cms.int32(4),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(3.0),
            etaMin = cms.double(1.479),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('gammaEndcapPlus'),
            px = cms.vdouble(-0.00108893779312, -2.53584544941e-05),
            py = cms.vdouble(0.00188026342884, 8.15028097381e-05),
            type = cms.int32(4),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(-1.479),
            etaMin = cms.double(-3.0),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('gammaEndcapMinus'),
            px = cms.vdouble(-0.00130486432072, 1.72313009972e-05),
            py = cms.vdouble(-0.00367119684052, -1.63143116342e-05),
            type = cms.int32(4),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(5.2),
            etaMin = cms.double(2.901376),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('hHFPlus'),
            px = cms.vdouble(-0.000218928792083, -1.0492437382e-06),
            py = cms.vdouble(2.7982430778e-05, -6.87804028426e-08),
            type = cms.int32(6),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(-2.901376),
            etaMin = cms.double(-5.2),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('hHFMinus'),
            px = cms.vdouble(-0.000851170798547, 3.18768998961e-07),
            py = cms.vdouble(6.10447368609e-05, -5.92655106387e-07),
            type = cms.int32(6),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(5.2),
            etaMin = cms.double(2.901376),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('egammaHFPlus'),
            px = cms.vdouble(0.00138084425101, -6.39459000901e-06),
            py = cms.vdouble(-0.000532336534523, 2.21305870813e-06),
            type = cms.int32(7),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(-2.901376),
            etaMin = cms.double(-5.2),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('egammaHFMinus'),
            px = cms.vdouble(0.00102598393499, -3.37284909389e-06),
            py = cms.vdouble(0.000439449053802, -2.3750891943e-06),
            type = cms.int32(7),
            varType = cms.int32(0)
        )
    ),
    srcPFlow = cms.InputTag("particleFlow"),
    srcWeights = cms.InputTag(""),
    vertexCollection = cms.InputTag("offlineSlimmedPrimaryVertices")
)


process.patPFMetTxyCorrNoHF = cms.EDProducer("MultShiftMETcorrInputProducer",
    parameters = cms.VPSet(
        cms.PSet(
            etaMax = cms.double(2.7),
            etaMin = cms.double(0),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('hEtaPlus'),
            px = cms.vdouble(-0.00229295500096, 3.15487850373e-07),
            py = cms.vdouble(0.000114282381437, -1.58467325852e-08),
            type = cms.int32(1),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(0),
            etaMin = cms.double(-2.7),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('hEtaMinus'),
            px = cms.vdouble(-0.000198571488347, -1.94054852726e-07),
            py = cms.vdouble(-0.00137832489313, -2.02238617742e-06),
            type = cms.int32(1),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(1.392),
            etaMin = cms.double(-1.392),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('h0Barrel'),
            px = cms.vdouble(-0.0153652906396, -3.80210366974e-05),
            py = cms.vdouble(0.00798098092474, -0.000103998219585),
            type = cms.int32(5),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(3),
            etaMin = cms.double(1.392),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('h0EndcapPlus'),
            px = cms.vdouble(-0.00305719113962, -0.00032676418359),
            py = cms.vdouble(-0.00345131507897, 0.000164816815994),
            type = cms.int32(5),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(-1.392),
            etaMin = cms.double(-3.0),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('h0EndcapMinus'),
            px = cms.vdouble(-0.000159031461755, 0.00012231873804),
            py = cms.vdouble(0.0260436390996, -8.17994745657e-05),
            type = cms.int32(5),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(1.479),
            etaMin = cms.double(-1.479),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('gammaBarrel'),
            px = cms.vdouble(-0.00163144589987, 3.17557692226e-06),
            py = cms.vdouble(-0.000710945802217, 6.45810884842e-06),
            type = cms.int32(4),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(3.0),
            etaMin = cms.double(1.479),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('gammaEndcapPlus'),
            px = cms.vdouble(-0.00108893779312, -2.53584544941e-05),
            py = cms.vdouble(0.00188026342884, 8.15028097381e-05),
            type = cms.int32(4),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(-1.479),
            etaMin = cms.double(-3.0),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('gammaEndcapMinus'),
            px = cms.vdouble(-0.00130486432072, 1.72313009972e-05),
            py = cms.vdouble(-0.00367119684052, -1.63143116342e-05),
            type = cms.int32(4),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(5.2),
            etaMin = cms.double(2.901376),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('hHFPlus'),
            px = cms.vdouble(-0.000218928792083, -1.0492437382e-06),
            py = cms.vdouble(2.7982430778e-05, -6.87804028426e-08),
            type = cms.int32(6),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(-2.901376),
            etaMin = cms.double(-5.2),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('hHFMinus'),
            px = cms.vdouble(-0.000851170798547, 3.18768998961e-07),
            py = cms.vdouble(6.10447368609e-05, -5.92655106387e-07),
            type = cms.int32(6),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(5.2),
            etaMin = cms.double(2.901376),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('egammaHFPlus'),
            px = cms.vdouble(0.00138084425101, -6.39459000901e-06),
            py = cms.vdouble(-0.000532336534523, 2.21305870813e-06),
            type = cms.int32(7),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(-2.901376),
            etaMin = cms.double(-5.2),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('egammaHFMinus'),
            px = cms.vdouble(0.00102598393499, -3.37284909389e-06),
            py = cms.vdouble(0.000439449053802, -2.3750891943e-06),
            type = cms.int32(7),
            varType = cms.int32(0)
        )
    ),
    srcPFlow = cms.InputTag("noHFCands"),
    srcWeights = cms.InputTag(""),
    vertexCollection = cms.InputTag("offlineSlimmedPrimaryVertices")
)


process.patPFMetTxyCorrPuppi = cms.EDProducer("MultShiftMETcorrInputProducer",
    parameters = cms.VPSet(
        cms.PSet(
            etaMax = cms.double(2.7),
            etaMin = cms.double(0),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('hEtaPlus'),
            px = cms.vdouble(-0.00229295500096, 3.15487850373e-07),
            py = cms.vdouble(0.000114282381437, -1.58467325852e-08),
            type = cms.int32(1),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(0),
            etaMin = cms.double(-2.7),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('hEtaMinus'),
            px = cms.vdouble(-0.000198571488347, -1.94054852726e-07),
            py = cms.vdouble(-0.00137832489313, -2.02238617742e-06),
            type = cms.int32(1),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(1.392),
            etaMin = cms.double(-1.392),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('h0Barrel'),
            px = cms.vdouble(-0.0153652906396, -3.80210366974e-05),
            py = cms.vdouble(0.00798098092474, -0.000103998219585),
            type = cms.int32(5),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(3),
            etaMin = cms.double(1.392),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('h0EndcapPlus'),
            px = cms.vdouble(-0.00305719113962, -0.00032676418359),
            py = cms.vdouble(-0.00345131507897, 0.000164816815994),
            type = cms.int32(5),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(-1.392),
            etaMin = cms.double(-3.0),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('h0EndcapMinus'),
            px = cms.vdouble(-0.000159031461755, 0.00012231873804),
            py = cms.vdouble(0.0260436390996, -8.17994745657e-05),
            type = cms.int32(5),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(1.479),
            etaMin = cms.double(-1.479),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('gammaBarrel'),
            px = cms.vdouble(-0.00163144589987, 3.17557692226e-06),
            py = cms.vdouble(-0.000710945802217, 6.45810884842e-06),
            type = cms.int32(4),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(3.0),
            etaMin = cms.double(1.479),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('gammaEndcapPlus'),
            px = cms.vdouble(-0.00108893779312, -2.53584544941e-05),
            py = cms.vdouble(0.00188026342884, 8.15028097381e-05),
            type = cms.int32(4),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(-1.479),
            etaMin = cms.double(-3.0),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('gammaEndcapMinus'),
            px = cms.vdouble(-0.00130486432072, 1.72313009972e-05),
            py = cms.vdouble(-0.00367119684052, -1.63143116342e-05),
            type = cms.int32(4),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(5.2),
            etaMin = cms.double(2.901376),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('hHFPlus'),
            px = cms.vdouble(-0.000218928792083, -1.0492437382e-06),
            py = cms.vdouble(2.7982430778e-05, -6.87804028426e-08),
            type = cms.int32(6),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(-2.901376),
            etaMin = cms.double(-5.2),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('hHFMinus'),
            px = cms.vdouble(-0.000851170798547, 3.18768998961e-07),
            py = cms.vdouble(6.10447368609e-05, -5.92655106387e-07),
            type = cms.int32(6),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(5.2),
            etaMin = cms.double(2.901376),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('egammaHFPlus'),
            px = cms.vdouble(0.00138084425101, -6.39459000901e-06),
            py = cms.vdouble(-0.000532336534523, 2.21305870813e-06),
            type = cms.int32(7),
            varType = cms.int32(0)
        ),
        cms.PSet(
            etaMax = cms.double(-2.901376),
            etaMin = cms.double(-5.2),
            fx = cms.string('(x*[0])+(sq(x)*[1])'),
            fy = cms.string('(x*[0])+(sq(x)*[1])'),
            name = cms.string('egammaHFMinus'),
            px = cms.vdouble(0.00102598393499, -3.37284909389e-06),
            py = cms.vdouble(0.000439449053802, -2.3750891943e-06),
            type = cms.int32(7),
            varType = cms.int32(0)
        )
    ),
    srcPFlow = cms.InputTag("particleFlow"),
    srcWeights = cms.InputTag("puppiNoLep"),
    vertexCollection = cms.InputTag("offlineSlimmedPrimaryVertices")
)


process.patPFMetTxyNoHF = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetTxyCorrNoHF"))
)


process.patPFMetTxyPuppi = cms.EDProducer("CorrectedPATMETProducer",
    src = cms.InputTag("patPFMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("patPFMetTxyCorrPuppi"))
)


process.patPhotons = cms.EDProducer("PATPhotonProducer",
    addEfficiencies = cms.bool(False),
    addGenMatch = cms.bool(True),
    addPFClusterIso = cms.bool(False),
    addPhotonID = cms.bool(True),
    addPuppiIsolation = cms.bool(True),
    addResolutions = cms.bool(False),
    beamLineSrc = cms.InputTag("offlineBeamSpot"),
    conversionSource = cms.InputTag("allConversions"),
    ecalPFClusterIsoMap = cms.InputTag(""),
    efficiencies = cms.PSet(

    ),
    electronSource = cms.InputTag("reducedEgamma","reducedGedGsfElectrons"),
    embedBasicClusters = cms.bool(False),
    embedGenMatch = cms.bool(False),
    embedPreshowerClusters = cms.bool(False),
    embedRecHits = cms.bool(False),
    embedSeedCluster = cms.bool(False),
    embedSuperCluster = cms.bool(False),
    genParticleMatch = cms.InputTag("photonMatch"),
    hcalPFClusterIsoMap = cms.InputTag(""),
    isoDeposits = cms.PSet(

    ),
    isolationValues = cms.PSet(
        pfChargedAll = cms.InputTag("phPFIsoValueChargedAll04PFIdPAT"),
        pfChargedHadrons = cms.InputTag("phPFIsoValueCharged04PFIdPAT"),
        pfNeutralHadrons = cms.InputTag("phPFIsoValueNeutral04PFIdPAT"),
        pfPUChargedHadrons = cms.InputTag("phPFIsoValuePU04PFIdPAT"),
        pfPhotons = cms.InputTag("phPFIsoValueGamma04PFIdPAT")
    ),
    mightGet = cms.optional.untracked.vstring,
    photonIDSources = cms.PSet(
        cutBasedPhotonID_Fall17_94X_V1_loose = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V1-loose"),
        cutBasedPhotonID_Fall17_94X_V1_medium = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V1-medium"),
        cutBasedPhotonID_Fall17_94X_V1_tight = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V1-tight"),
        cutBasedPhotonID_Fall17_94X_V2_loose = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V2-loose"),
        cutBasedPhotonID_Fall17_94X_V2_medium = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V2-medium"),
        cutBasedPhotonID_Fall17_94X_V2_tight = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V2-tight"),
        cutBasedPhotonID_RunIIIWinter22_122X_V1_loose = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-RunIIIWinter22-122X-V1-loose"),
        cutBasedPhotonID_RunIIIWinter22_122X_V1_medium = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-RunIIIWinter22-122X-V1-medium"),
        cutBasedPhotonID_RunIIIWinter22_122X_V1_tight = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-RunIIIWinter22-122X-V1-tight"),
        cutBasedPhotonID_Spring16_V2p2_loose = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Spring16-V2p2-loose"),
        cutBasedPhotonID_Spring16_V2p2_medium = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Spring16-V2p2-medium"),
        cutBasedPhotonID_Spring16_V2p2_tight = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Spring16-V2p2-tight"),
        mvaPhoID_RunIIFall17_v1p1_wp80 = cms.InputTag("egmPhotonIDs","mvaPhoID-RunIIFall17-v1p1-wp80"),
        mvaPhoID_RunIIFall17_v1p1_wp90 = cms.InputTag("egmPhotonIDs","mvaPhoID-RunIIFall17-v1p1-wp90"),
        mvaPhoID_RunIIFall17_v2_wp80 = cms.InputTag("egmPhotonIDs","mvaPhoID-RunIIFall17-v2-wp80"),
        mvaPhoID_RunIIFall17_v2_wp90 = cms.InputTag("egmPhotonIDs","mvaPhoID-RunIIFall17-v2-wp90"),
        mvaPhoID_RunIIIWinter22_v1_wp80 = cms.InputTag("egmPhotonIDs","mvaPhoID-RunIIIWinter22-v1-wp80"),
        mvaPhoID_RunIIIWinter22_v1_wp90 = cms.InputTag("egmPhotonIDs","mvaPhoID-RunIIIWinter22-v1-wp90"),
        mvaPhoID_Spring16_nonTrig_V1_wp80 = cms.InputTag("egmPhotonIDs","mvaPhoID-Spring16-nonTrig-V1-wp80"),
        mvaPhoID_Spring16_nonTrig_V1_wp90 = cms.InputTag("egmPhotonIDs","mvaPhoID-Spring16-nonTrig-V1-wp90")
    ),
    photonSource = cms.InputTag("reducedEgamma","reducedGedPhotons"),
    puppiIsolationChargedHadrons = cms.InputTag("egmPhotonPUPPIIsolation","h+-DR030-"),
    puppiIsolationNeutralHadrons = cms.InputTag("egmPhotonPUPPIIsolation","h0-DR030-"),
    puppiIsolationPhotons = cms.InputTag("egmPhotonPUPPIIsolation","gamma-DR030-"),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    resolutions = cms.PSet(

    ),
    saveRegressionData = cms.bool(True),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    ),
    userIsolation = cms.PSet(

    )
)


process.patPhotonsDRN = cms.EDProducer("PatPhotonDRNCorrectionProducer",
    Client = cms.PSet(
        allowedTries = cms.untracked.uint32(1),
        compression = cms.untracked.string(''),
        mode = cms.string('Async'),
        modelConfigPath = cms.FileInPath('RecoEgamma/EgammaPhotonProducers/data/models/photonObjectEnsemble/config.pbtxt'),
        modelName = cms.string('photonObjectEnsemble'),
        modelVersion = cms.string(''),
        outputs = cms.untracked.vstring(),
        preferredServer = cms.untracked.string(''),
        timeout = cms.untracked.uint32(10),
        useSharedMemory = cms.untracked.bool(True),
        verbose = cms.untracked.bool(False)
    ),
    mightGet = cms.optional.untracked.vstring,
    particleSource = cms.InputTag("selectedPatPhotons"),
    reducedEcalRecHitsEB = cms.InputTag("reducedEcalRecHitsEB"),
    reducedEcalRecHitsEE = cms.InputTag("reducedEcalRecHitsEE"),
    reducedEcalRecHitsES = cms.InputTag("reducedEcalRecHitsES"),
    rhoName = cms.InputTag("fixedGridRhoFastjetAll")
)


process.patPhotonsHGC = cms.EDProducer("PATPhotonProducer",
    addEfficiencies = cms.bool(False),
    addGenMatch = cms.bool(False),
    addPFClusterIso = cms.bool(False),
    addPhotonID = cms.bool(False),
    addPuppiIsolation = cms.bool(False),
    addResolutions = cms.bool(False),
    beamLineSrc = cms.InputTag("offlineBeamSpot"),
    conversionSource = cms.InputTag("allConversions"),
    ecalPFClusterIsoMap = cms.InputTag(""),
    efficiencies = cms.PSet(

    ),
    electronSource = cms.InputTag("ecalDrivenGsfElectronsHGC"),
    embedBasicClusters = cms.bool(False),
    embedGenMatch = cms.bool(False),
    embedPreshowerClusters = cms.bool(False),
    embedRecHits = cms.bool(False),
    embedSeedCluster = cms.bool(True),
    embedSuperCluster = cms.bool(True),
    genParticleMatch = cms.InputTag(""),
    hcalPFClusterIsoMap = cms.InputTag(""),
    isoDeposits = cms.PSet(
        ecal = cms.optional.InputTag,
        hcal = cms.optional.InputTag,
        pfAllParticles = cms.optional.InputTag,
        pfChargedAll = cms.optional.InputTag,
        pfChargedHadrons = cms.optional.InputTag,
        pfNeutralHadrons = cms.optional.InputTag,
        pfPUChargedHadrons = cms.optional.InputTag,
        pfPhotons = cms.optional.InputTag,
        tracker = cms.optional.InputTag,
        user = cms.optional.VInputTag
    ),
    isolationValues = cms.PSet(

    ),
    mightGet = cms.optional.untracked.vstring,
    photonIDSource = cms.InputTag(""),
    photonSource = cms.InputTag("photonsHGC"),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    resolutions = cms.PSet(

    ),
    saveRegressionData = cms.bool(False),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag(
                cms.InputTag("hgcPhotonID","seedEt"), cms.InputTag("hgcPhotonID","seedEnergy"), cms.InputTag("hgcPhotonID","seedEnergyEE"), cms.InputTag("hgcPhotonID","seedEnergyFH"), cms.InputTag("hgcPhotonID","seedEnergyBH"),
                cms.InputTag("hgcPhotonID","pcaEig1"), cms.InputTag("hgcPhotonID","pcaEig2"), cms.InputTag("hgcPhotonID","pcaEig3"), cms.InputTag("hgcPhotonID","pcaSig1"), cms.InputTag("hgcPhotonID","pcaSig2"),
                cms.InputTag("hgcPhotonID","pcaSig3"), cms.InputTag("hgcPhotonID","sigmaUU"), cms.InputTag("hgcPhotonID","sigmaVV"), cms.InputTag("hgcPhotonID","sigmaEE"), cms.InputTag("hgcPhotonID","sigmaPP"),
                cms.InputTag("hgcPhotonID","nLayers"), cms.InputTag("hgcPhotonID","firstLayer"), cms.InputTag("hgcPhotonID","lastLayer"), cms.InputTag("hgcPhotonID","e4oEtot"), cms.InputTag("hgcPhotonID","layerEfrac10"),
                cms.InputTag("hgcPhotonID","layerEfrac90"), cms.InputTag("hgcPhotonID","measuredDepth"), cms.InputTag("hgcPhotonID","expectedDepth"), cms.InputTag("hgcPhotonID","expectedSigma"), cms.InputTag("hgcPhotonID","depthCompatibility"),
                cms.InputTag("hgcPhotonID","caloIsoRing0"), cms.InputTag("hgcPhotonID","caloIsoRing1"), cms.InputTag("hgcPhotonID","caloIsoRing2"), cms.InputTag("hgcPhotonID","caloIsoRing3"), cms.InputTag("hgcPhotonID","caloIsoRing4")
            )
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    ),
    userIsolation = cms.PSet(

    )
)


process.patSmearedJets = cms.EDProducer("SmearedPATJetProducer",
    algo = cms.string('AK4PFchs'),
    algopt = cms.string('AK4PFchs_pt'),
    dPtMaxFactor = cms.double(3),
    dRMax = cms.double(0.2),
    debug = cms.untracked.bool(False),
    enabled = cms.bool(True),
    genJets = cms.InputTag("ak4GenJetsNoNu"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    seed = cms.uint32(37428479),
    skipGenMatching = cms.bool(False),
    src = cms.InputTag("cleanedPatJets"),
    useDeterministicSeed = cms.bool(True),
    variation = cms.int32(0)
)


process.patSmearedJetsNoHF = cms.EDProducer("SmearedPATJetProducer",
    algo = cms.string('AK4PFchs'),
    algopt = cms.string('AK4PFchs_pt'),
    dPtMaxFactor = cms.double(3),
    dRMax = cms.double(0.2),
    debug = cms.untracked.bool(False),
    enabled = cms.bool(True),
    genJets = cms.InputTag("ak4GenJetsNoNu"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    seed = cms.uint32(37428479),
    skipGenMatching = cms.bool(False),
    src = cms.InputTag("cleanedPatJetsNoHF"),
    useDeterministicSeed = cms.bool(True),
    variation = cms.int32(0)
)


process.patSmearedJetsPuppi = cms.EDProducer("SmearedPATJetProducer",
    algo = cms.string('AK4PFPuppi'),
    algopt = cms.string('AK4PFPuppi_pt'),
    dPtMaxFactor = cms.double(3),
    dRMax = cms.double(0.2),
    debug = cms.untracked.bool(False),
    enabled = cms.bool(True),
    genJets = cms.InputTag("ak4GenJetsNoNu"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    seed = cms.uint32(37428479),
    skipGenMatching = cms.bool(False),
    src = cms.InputTag("cleanedPatJetsPuppi"),
    useDeterministicSeed = cms.bool(True),
    variation = cms.int32(0)
)


process.patTaus = cms.EDProducer("PATTauProducer",
    addEfficiencies = cms.bool(False),
    addGenJetMatch = cms.bool(True),
    addGenMatch = cms.bool(True),
    addResolutions = cms.bool(False),
    addTauID = cms.bool(True),
    addTauJetCorrFactors = cms.bool(False),
    efficiencies = cms.PSet(

    ),
    embedGenJetMatch = cms.bool(True),
    embedGenMatch = cms.bool(False),
    embedIsolationPFCands = cms.bool(False),
    embedIsolationPFChargedHadrCands = cms.bool(False),
    embedIsolationPFGammaCands = cms.bool(False),
    embedIsolationPFNeutralHadrCands = cms.bool(False),
    embedIsolationTracks = cms.bool(False),
    embedLeadPFCand = cms.bool(False),
    embedLeadPFChargedHadrCand = cms.bool(False),
    embedLeadPFNeutralCand = cms.bool(False),
    embedLeadTrack = cms.bool(False),
    embedSignalPFCands = cms.bool(False),
    embedSignalPFChargedHadrCands = cms.bool(False),
    embedSignalPFGammaCands = cms.bool(False),
    embedSignalPFNeutralHadrCands = cms.bool(False),
    embedSignalTracks = cms.bool(False),
    genJetMatch = cms.InputTag("tauGenJetMatch"),
    genParticleMatch = cms.InputTag("tauMatch"),
    isoDeposits = cms.PSet(

    ),
    resolutions = cms.PSet(

    ),
    skipMissingTauID = cms.bool(False),
    tauIDSources = cms.PSet(
        againstElectronDeadECAL = cms.PSet(
            idLabel = cms.string(''),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByDeadECALElectronRejection"),
            provenanceConfigLabel = cms.string('')
        ),
        againstMuonLoose3 = cms.PSet(
            idLabel = cms.string('ByLooseMuonRejection3'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByMuonRejection3"),
            provenanceConfigLabel = cms.string('IDWPdefinitions')
        ),
        againstMuonTight3 = cms.PSet(
            idLabel = cms.string('ByTightMuonRejection3'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByMuonRejection3"),
            provenanceConfigLabel = cms.string('IDWPdefinitions')
        ),
        byCombinedIsolationDeltaBetaCorrRaw3Hits = cms.PSet(
            idLabel = cms.string('ByRawCombinedIsolationDBSumPtCorr3Hits'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminators"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        ),
        byLooseCombinedIsolationDeltaBetaCorr3Hits = cms.PSet(
            idLabel = cms.string('ByLooseCombinedIsolationDBSumPtCorr3Hits'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminators"),
            provenanceConfigLabel = cms.string('IDWPdefinitions')
        ),
        byMediumCombinedIsolationDeltaBetaCorr3Hits = cms.PSet(
            idLabel = cms.string('ByMediumCombinedIsolationDBSumPtCorr3Hits'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminators"),
            provenanceConfigLabel = cms.string('IDWPdefinitions')
        ),
        byPhotonPtSumOutsideSignalCone = cms.PSet(
            idLabel = cms.string('ByPhotonPtSumOutsideSignalCone'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminators"),
            provenanceConfigLabel = cms.string('IDWPdefinitions')
        ),
        byTightCombinedIsolationDeltaBetaCorr3Hits = cms.PSet(
            idLabel = cms.string('ByTightCombinedIsolationDBSumPtCorr3Hits'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminators"),
            provenanceConfigLabel = cms.string('IDWPdefinitions')
        ),
        chargedIsoPtSum = cms.PSet(
            idLabel = cms.string('ChargedIsoPtSum'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminators"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        ),
        chargedIsoPtSumdR03 = cms.PSet(
            idLabel = cms.string('ChargedIsoPtSumdR03'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminatorsdR03"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        ),
        decayModeFinding = cms.PSet(
            idLabel = cms.string(''),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding"),
            provenanceConfigLabel = cms.string('')
        ),
        decayModeFindingNewDMs = cms.PSet(
            idLabel = cms.string(''),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMs"),
            provenanceConfigLabel = cms.string('')
        ),
        footprintCorrection = cms.PSet(
            idLabel = cms.string('TauFootprintCorrection'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminators"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        ),
        footprintCorrectiondR03 = cms.PSet(
            idLabel = cms.string('TauFootprintCorrectiondR03'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminatorsdR03"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        ),
        neutralIsoPtSum = cms.PSet(
            idLabel = cms.string('NeutralIsoPtSum'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminators"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        ),
        neutralIsoPtSumWeight = cms.PSet(
            idLabel = cms.string('NeutralIsoPtSumWeight'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminators"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        ),
        neutralIsoPtSumWeightdR03 = cms.PSet(
            idLabel = cms.string('NeutralIsoPtSumWeightdR03'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminatorsdR03"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        ),
        neutralIsoPtSumdR03 = cms.PSet(
            idLabel = cms.string('NeutralIsoPtSumdR03'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminatorsdR03"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        ),
        photonPtSumOutsideSignalCone = cms.PSet(
            idLabel = cms.string('PhotonPtSumOutsideSignalCone'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminators"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        ),
        photonPtSumOutsideSignalConedR03 = cms.PSet(
            idLabel = cms.string('PhotonPtSumOutsideSignalConedR03'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminatorsdR03"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        ),
        puCorrPtSum = cms.PSet(
            idLabel = cms.string('PUcorrPtSum'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminators"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        )
    ),
    tauJetCorrFactorsSource = cms.VInputTag(cms.InputTag("patTauJetCorrFactors")),
    tauSource = cms.InputTag("hpsPFTauProducer"),
    tauTransverseImpactParameterSource = cms.InputTag("hpsPFTauTransverseImpactParameters"),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    ),
    userIsolation = cms.PSet(

    )
)


process.patTausBoosted = cms.EDProducer("PATTauProducer",
    addEfficiencies = cms.bool(False),
    addGenJetMatch = cms.bool(True),
    addGenMatch = cms.bool(True),
    addResolutions = cms.bool(False),
    addTauID = cms.bool(True),
    addTauJetCorrFactors = cms.bool(False),
    efficiencies = cms.PSet(

    ),
    embedGenJetMatch = cms.bool(True),
    embedGenMatch = cms.bool(False),
    embedIsolationPFCands = cms.bool(False),
    embedIsolationPFChargedHadrCands = cms.bool(False),
    embedIsolationPFGammaCands = cms.bool(False),
    embedIsolationPFNeutralHadrCands = cms.bool(False),
    embedIsolationTracks = cms.bool(False),
    embedLeadPFCand = cms.bool(False),
    embedLeadPFChargedHadrCand = cms.bool(False),
    embedLeadPFNeutralCand = cms.bool(False),
    embedLeadTrack = cms.bool(False),
    embedSignalPFCands = cms.bool(False),
    embedSignalPFChargedHadrCands = cms.bool(False),
    embedSignalPFGammaCands = cms.bool(False),
    embedSignalPFNeutralHadrCands = cms.bool(False),
    embedSignalTracks = cms.bool(False),
    genJetMatch = cms.InputTag("tauGenJetMatchBoosted"),
    genParticleMatch = cms.InputTag("tauMatchBoosted"),
    isoDeposits = cms.PSet(

    ),
    resolutions = cms.PSet(

    ),
    skipMissingTauID = cms.bool(False),
    tauIDSources = cms.PSet(
        againstElectronDeadECAL = cms.PSet(
            idLabel = cms.string(''),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByDeadECALElectronRejectionBoosted"),
            provenanceConfigLabel = cms.string('')
        ),
        againstElectronLooseMVA6 = cms.PSet(
            idLabel = cms.string('_Loose'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByMVA6ElectronRejectionBoosted"),
            provenanceConfigLabel = cms.string('workingPoints')
        ),
        againstElectronMVA6Raw = cms.PSet(
            idLabel = cms.string('discriminator'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByMVA6ElectronRejectionBoosted"),
            provenanceConfigLabel = cms.string('rawValues')
        ),
        againstElectronMVA6category = cms.PSet(
            idLabel = cms.string('category'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByMVA6ElectronRejectionBoosted"),
            provenanceConfigLabel = cms.string('rawValues')
        ),
        againstElectronMediumMVA6 = cms.PSet(
            idLabel = cms.string('_Medium'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByMVA6ElectronRejectionBoosted"),
            provenanceConfigLabel = cms.string('workingPoints')
        ),
        againstElectronTightMVA6 = cms.PSet(
            idLabel = cms.string('_Tight'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByMVA6ElectronRejectionBoosted"),
            provenanceConfigLabel = cms.string('workingPoints')
        ),
        againstElectronVLooseMVA6 = cms.PSet(
            idLabel = cms.string('_VLoose'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByMVA6ElectronRejectionBoosted"),
            provenanceConfigLabel = cms.string('workingPoints')
        ),
        againstElectronVTightMVA6 = cms.PSet(
            idLabel = cms.string('_VTight'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByMVA6ElectronRejectionBoosted"),
            provenanceConfigLabel = cms.string('workingPoints')
        ),
        againstMuonLoose3 = cms.PSet(
            idLabel = cms.string('ByLooseMuonRejection3'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByMuonRejection3Boosted"),
            provenanceConfigLabel = cms.string('IDWPdefinitions')
        ),
        againstMuonTight3 = cms.PSet(
            idLabel = cms.string('ByTightMuonRejection3'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByMuonRejection3Boosted"),
            provenanceConfigLabel = cms.string('IDWPdefinitions')
        ),
        byCombinedIsolationDeltaBetaCorrRaw3Hits = cms.PSet(
            idLabel = cms.string('ByRawCombinedIsolationDBSumPtCorr3Hits'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminatorsBoosted"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        ),
        byIsolationMVArun2DBnewDMwLTraw = cms.PSet(
            idLabel = cms.string('discriminator'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTBoosted"),
            provenanceConfigLabel = cms.string('rawValues')
        ),
        byIsolationMVArun2DBoldDMwLTraw = cms.PSet(
            idLabel = cms.string('discriminator'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTBoosted"),
            provenanceConfigLabel = cms.string('rawValues')
        ),
        byLooseCombinedIsolationDeltaBetaCorr3Hits = cms.PSet(
            idLabel = cms.string('ByLooseCombinedIsolationDBSumPtCorr3Hits'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminatorsBoosted"),
            provenanceConfigLabel = cms.string('IDWPdefinitions')
        ),
        byLooseIsolationMVArun2DBnewDMwLT = cms.PSet(
            idLabel = cms.string('_Loose'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTBoosted"),
            provenanceConfigLabel = cms.string('workingPoints')
        ),
        byLooseIsolationMVArun2DBoldDMwLT = cms.PSet(
            idLabel = cms.string('_Loose'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTBoosted"),
            provenanceConfigLabel = cms.string('workingPoints')
        ),
        byMediumCombinedIsolationDeltaBetaCorr3Hits = cms.PSet(
            idLabel = cms.string('ByMediumCombinedIsolationDBSumPtCorr3Hits'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminatorsBoosted"),
            provenanceConfigLabel = cms.string('IDWPdefinitions')
        ),
        byMediumIsolationMVArun2DBnewDMwLT = cms.PSet(
            idLabel = cms.string('_Medium'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTBoosted"),
            provenanceConfigLabel = cms.string('workingPoints')
        ),
        byMediumIsolationMVArun2DBoldDMwLT = cms.PSet(
            idLabel = cms.string('_Medium'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTBoosted"),
            provenanceConfigLabel = cms.string('workingPoints')
        ),
        byPhotonPtSumOutsideSignalCone = cms.PSet(
            idLabel = cms.string('ByPhotonPtSumOutsideSignalCone'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminatorsBoosted"),
            provenanceConfigLabel = cms.string('IDWPdefinitions')
        ),
        byTightCombinedIsolationDeltaBetaCorr3Hits = cms.PSet(
            idLabel = cms.string('ByTightCombinedIsolationDBSumPtCorr3Hits'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminatorsBoosted"),
            provenanceConfigLabel = cms.string('IDWPdefinitions')
        ),
        byTightIsolationMVArun2DBnewDMwLT = cms.PSet(
            idLabel = cms.string('_Tight'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTBoosted"),
            provenanceConfigLabel = cms.string('workingPoints')
        ),
        byTightIsolationMVArun2DBoldDMwLT = cms.PSet(
            idLabel = cms.string('_Tight'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTBoosted"),
            provenanceConfigLabel = cms.string('workingPoints')
        ),
        byVLooseIsolationMVArun2DBnewDMwLT = cms.PSet(
            idLabel = cms.string('_VLoose'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTBoosted"),
            provenanceConfigLabel = cms.string('workingPoints')
        ),
        byVLooseIsolationMVArun2DBoldDMwLT = cms.PSet(
            idLabel = cms.string('_VLoose'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTBoosted"),
            provenanceConfigLabel = cms.string('workingPoints')
        ),
        byVTightIsolationMVArun2DBnewDMwLT = cms.PSet(
            idLabel = cms.string('_VTight'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTBoosted"),
            provenanceConfigLabel = cms.string('workingPoints')
        ),
        byVTightIsolationMVArun2DBoldDMwLT = cms.PSet(
            idLabel = cms.string('_VTight'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTBoosted"),
            provenanceConfigLabel = cms.string('workingPoints')
        ),
        byVVLooseIsolationMVArun2DBnewDMwLT = cms.PSet(
            idLabel = cms.string('_VVLoose'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTBoosted"),
            provenanceConfigLabel = cms.string('workingPoints')
        ),
        byVVLooseIsolationMVArun2DBoldDMwLT = cms.PSet(
            idLabel = cms.string('_VVLoose'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTBoosted"),
            provenanceConfigLabel = cms.string('workingPoints')
        ),
        byVVTightIsolationMVArun2DBnewDMwLT = cms.PSet(
            idLabel = cms.string('_VVTight'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTBoosted"),
            provenanceConfigLabel = cms.string('workingPoints')
        ),
        byVVTightIsolationMVArun2DBoldDMwLT = cms.PSet(
            idLabel = cms.string('_VVTight'),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTBoosted"),
            provenanceConfigLabel = cms.string('workingPoints')
        ),
        chargedIsoPtSum = cms.PSet(
            idLabel = cms.string('ChargedIsoPtSum'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminatorsBoosted"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        ),
        chargedIsoPtSumdR03 = cms.PSet(
            idLabel = cms.string('ChargedIsoPtSumdR03'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminatorsdR03Boosted"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        ),
        decayModeFinding = cms.PSet(
            idLabel = cms.string(''),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingBoosted"),
            provenanceConfigLabel = cms.string('')
        ),
        decayModeFindingNewDMs = cms.PSet(
            idLabel = cms.string(''),
            inputTag = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMsBoosted"),
            provenanceConfigLabel = cms.string('')
        ),
        footprintCorrection = cms.PSet(
            idLabel = cms.string('TauFootprintCorrection'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminatorsBoosted"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        ),
        footprintCorrectiondR03 = cms.PSet(
            idLabel = cms.string('TauFootprintCorrectiondR03'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminatorsdR03Boosted"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        ),
        neutralIsoPtSum = cms.PSet(
            idLabel = cms.string('NeutralIsoPtSum'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminatorsBoosted"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        ),
        neutralIsoPtSumWeight = cms.PSet(
            idLabel = cms.string('NeutralIsoPtSumWeight'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminatorsBoosted"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        ),
        neutralIsoPtSumWeightdR03 = cms.PSet(
            idLabel = cms.string('NeutralIsoPtSumWeightdR03'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminatorsdR03Boosted"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        ),
        neutralIsoPtSumdR03 = cms.PSet(
            idLabel = cms.string('NeutralIsoPtSumdR03'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminatorsdR03Boosted"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        ),
        photonPtSumOutsideSignalCone = cms.PSet(
            idLabel = cms.string('PhotonPtSumOutsideSignalCone'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminatorsBoosted"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        ),
        photonPtSumOutsideSignalConedR03 = cms.PSet(
            idLabel = cms.string('PhotonPtSumOutsideSignalConedR03'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminatorsdR03Boosted"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        ),
        puCorrPtSum = cms.PSet(
            idLabel = cms.string('PUcorrPtSum'),
            inputTag = cms.InputTag("hpsPFTauBasicDiscriminatorsBoosted"),
            provenanceConfigLabel = cms.string('IDdefinitions')
        )
    ),
    tauJetCorrFactorsSource = cms.VInputTag(cms.InputTag("patTauJetCorrFactors")),
    tauSource = cms.InputTag("hpsPFTauProducerBoosted"),
    tauTransverseImpactParameterSource = cms.InputTag("hpsPFTauTransverseImpactParametersBoosted"),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    ),
    userIsolation = cms.PSet(

    )
)


process.patTrigger = cms.EDProducer("PATTriggerProducer",
    ReadPrescalesFromFile = cms.bool(False),
    l1GtReadoutRecordInputTag = cms.InputTag("gtDigis"),
    l1GtRecordInputTag = cms.InputTag("gtDigis"),
    l1GtTriggerMenuLiteInputTag = cms.InputTag("gtDigis"),
    l1tAlgBlkInputTag = cms.InputTag("gtStage2Digis"),
    l1tExtBlkInputTag = cms.InputTag("gtStage2Digis"),
    onlyStandAlone = cms.bool(True),
    packTriggerLabels = cms.bool(False),
    packTriggerPathNames = cms.bool(True),
    processName = cms.string('HLT'),
    stageL1Trigger = cms.uint32(2)
)


process.patTrkMet = cms.EDProducer("PATMETProducer",
    addEfficiencies = cms.bool(False),
    addGenMET = cms.bool(True),
    addMuonCorrections = cms.bool(False),
    addResolutions = cms.bool(False),
    computeMETSignificance = cms.bool(False),
    efficiencies = cms.PSet(

    ),
    genMETSource = cms.InputTag("genMetTrue"),
    metSource = cms.InputTag("pfMetTrk"),
    muonSource = cms.InputTag("muons"),
    parameters = cms.PSet(
        dRMatch = cms.double(0.4),
        jetThreshold = cms.double(15),
        jeta = cms.vdouble(0.8, 1.3, 1.9, 2.5),
        jpar = cms.vdouble(1.39, 1.26, 1.21, 1.23, 1.28),
        pjpar = cms.vdouble(-0.2586, 0.6173)
    ),
    resolutions = cms.PSet(

    ),
    srcJetResPhi = cms.string('AK4PFchs_phi'),
    srcJetResPt = cms.string('AK4PFchs_pt'),
    srcJetSF = cms.string('AK4PFchs'),
    srcJets = cms.InputTag("cleanedPatJets"),
    srcLeptons = cms.VInputTag(cms.InputTag("pfeGammaToCandidate","electrons"), cms.InputTag("selectedPatMuons"), cms.InputTag("pfeGammaToCandidate","photons")),
    srcPFCands = cms.InputTag("particleFlow"),
    srcRho = cms.InputTag("fixedGridRhoAll"),
    srcWeights = cms.InputTag(""),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    )
)


process.pfBoostedDoubleSVAK8TagInfosAK8Puppi = cms.EDProducer("BoostedDoubleSVProducer",
    R0 = cms.double(0.8),
    beta = cms.double(1.0),
    maxSVDeltaRToJet = cms.double(0.7),
    svTagInfos = cms.InputTag("pfInclusiveSecondaryVertexFinderAK8TagInfosAK8Puppi"),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.8),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    weights = cms.InputTag("puppi")
)


process.pfBoostedDoubleSVAK8TagInfosSlimmedAK8DeepTags = cms.EDProducer("BoostedDoubleSVProducer",
    R0 = cms.double(0.8),
    beta = cms.double(1.0),
    maxSVDeltaRToJet = cms.double(0.7),
    svTagInfos = cms.InputTag("pfInclusiveSecondaryVertexFinderAK8TagInfosSlimmedAK8DeepTags"),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.8),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    weights = cms.InputTag("packedpuppi")
)


process.pfBoostedDoubleSecondaryVertexAK8BJetTagsAK8Puppi = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('candidateBoostedDoubleSecondaryVertexAK8Computer'),
    tagInfos = cms.VInputTag(cms.InputTag("pfBoostedDoubleSVAK8TagInfosAK8Puppi"))
)


process.pfCandMETcorr = cms.EDProducer("PFCandMETcorrInputProducer",
    src = cms.InputTag("pfCandsNotInJetsForMetCorr"),
    srcWeights = cms.InputTag("")
)


process.pfCandMETcorrNoHF = cms.EDProducer("PFCandMETcorrInputProducer",
    src = cms.InputTag("pfCandsNotInJetsForMetCorrNoHF"),
    srcWeights = cms.InputTag("")
)


process.pfCandMETcorrPuppi = cms.EDProducer("PFCandMETcorrInputProducer",
    src = cms.InputTag("pfCandsNotInJetsForMetCorrPuppi"),
    srcWeights = cms.InputTag("")
)


process.pfCandidateToVertexAssociation = cms.EDProducer("PFCand_AssoMap",
    AssociationType = cms.InputTag("Both"),
    BeamSpot = cms.InputTag("offlineBeamSpot"),
    ConversionsCollection = cms.InputTag("allConversions"),
    FinalAssociation = cms.untracked.int32(1),
    GetCleanedCollections = cms.bool(False),
    MaxNumberOfAssociations = cms.int32(1),
    NIVertexCollection = cms.InputTag("particleFlowDisplacedVertex"),
    PFCandidateCollection = cms.InputTag("particleFlow"),
    UseBeamSpotCompatibility = cms.untracked.bool(True),
    V0KshortCollection = cms.InputTag("generalV0Candidates","Kshort"),
    V0LambdaCollection = cms.InputTag("generalV0Candidates","Lambda"),
    VertexCollection = cms.InputTag("offlinePrimaryVertices"),
    doReassociation = cms.bool(True),
    ignoreMissingCollection = cms.bool(True),
    nTrackWeight = cms.double(0.001)
)


process.pfCandsForUnclusteredUnc = cms.EDProducer("CandPtrProjector",
    extendVetoBySingleSourcePtr = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("pfCandsNoJetsNoEleNoMuNoTau"),
    useDeltaRforFootprint = cms.bool(False),
    veto = cms.InputTag("pfeGammaToCandidate","photons")
)


process.pfCandsForUnclusteredUncNoHF = cms.EDProducer("CandPtrProjector",
    extendVetoBySingleSourcePtr = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("pfCandsNoJetsNoEleNoMuNoTauNoHF"),
    useDeltaRforFootprint = cms.bool(False),
    veto = cms.InputTag("pfeGammaToCandidate","photons")
)


process.pfCandsForUnclusteredUncPuppi = cms.EDProducer("CandPtrProjector",
    extendVetoBySingleSourcePtr = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("pfCandsNoJetsNoEleNoMuNoTauPuppi"),
    useDeltaRforFootprint = cms.bool(False),
    veto = cms.InputTag("pfeGammaToCandidate","photons")
)


process.pfCandsNoJets = cms.EDProducer("CandPtrProjector",
    extendVetoBySingleSourcePtr = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("particleFlow"),
    useDeltaRforFootprint = cms.bool(False),
    veto = cms.InputTag("cleanedPatJets")
)


process.pfCandsNoJetsNoEle = cms.EDProducer("CandPtrProjector",
    extendVetoBySingleSourcePtr = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("pfCandsNoJets"),
    useDeltaRforFootprint = cms.bool(False),
    veto = cms.InputTag("pfeGammaToCandidate","electrons")
)


process.pfCandsNoJetsNoEleNoHF = cms.EDProducer("CandPtrProjector",
    extendVetoBySingleSourcePtr = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("pfCandsNoJetsNoHF"),
    useDeltaRforFootprint = cms.bool(False),
    veto = cms.InputTag("pfeGammaToCandidate","electrons")
)


process.pfCandsNoJetsNoEleNoMu = cms.EDProducer("CandPtrProjector",
    extendVetoBySingleSourcePtr = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("pfCandsNoJetsNoEle"),
    useDeltaRforFootprint = cms.bool(False),
    veto = cms.InputTag("selectedPatMuons")
)


process.pfCandsNoJetsNoEleNoMuNoHF = cms.EDProducer("CandPtrProjector",
    extendVetoBySingleSourcePtr = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("pfCandsNoJetsNoEleNoHF"),
    useDeltaRforFootprint = cms.bool(False),
    veto = cms.InputTag("selectedPatMuons")
)


process.pfCandsNoJetsNoEleNoMuNoTau = cms.EDProducer("CandPtrProjector",
    extendVetoBySingleSourcePtr = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("pfCandsNoJetsNoEleNoMu"),
    useDeltaRforFootprint = cms.bool(False),
    veto = cms.InputTag("selectedPatTaus")
)


process.pfCandsNoJetsNoEleNoMuNoTauNoHF = cms.EDProducer("CandPtrProjector",
    extendVetoBySingleSourcePtr = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("pfCandsNoJetsNoEleNoMuNoHF"),
    useDeltaRforFootprint = cms.bool(False),
    veto = cms.InputTag("selectedPatTaus")
)


process.pfCandsNoJetsNoEleNoMuNoTauPuppi = cms.EDProducer("CandPtrProjector",
    extendVetoBySingleSourcePtr = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("pfCandsNoJetsNoEleNoMuPuppi"),
    useDeltaRforFootprint = cms.bool(False),
    veto = cms.InputTag("selectedPatTaus")
)


process.pfCandsNoJetsNoEleNoMuPuppi = cms.EDProducer("CandPtrProjector",
    extendVetoBySingleSourcePtr = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("pfCandsNoJetsNoElePuppi"),
    useDeltaRforFootprint = cms.bool(False),
    veto = cms.InputTag("selectedPatMuons")
)


process.pfCandsNoJetsNoElePuppi = cms.EDProducer("CandPtrProjector",
    extendVetoBySingleSourcePtr = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("pfCandsNoJetsPuppi"),
    useDeltaRforFootprint = cms.bool(False),
    veto = cms.InputTag("pfeGammaToCandidate","electrons")
)


process.pfCandsNoJetsNoHF = cms.EDProducer("CandPtrProjector",
    extendVetoBySingleSourcePtr = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("noHFCands"),
    useDeltaRforFootprint = cms.bool(False),
    veto = cms.InputTag("cleanedPatJetsNoHF")
)


process.pfCandsNoJetsPuppi = cms.EDProducer("CandPtrProjector",
    extendVetoBySingleSourcePtr = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    src = cms.InputTag("particleFlow"),
    useDeltaRforFootprint = cms.bool(False),
    veto = cms.InputTag("cleanedPatJetsPuppi")
)


process.pfCandsNotInJetsForMetCorr = cms.EDProducer("PFCandidateFromFwdPtrProducer",
    src = cms.InputTag("pfCandsNotInJetsPtrForMetCorr")
)


process.pfCandsNotInJetsForMetCorrNoHF = cms.EDProducer("PFCandidateFromFwdPtrProducer",
    src = cms.InputTag("pfCandsNotInJetsPtrForMetCorr")
)


process.pfCandsNotInJetsForMetCorrPuppi = cms.EDProducer("PFCandidateFromFwdPtrProducer",
    src = cms.InputTag("pfCandsNotInJetsPtrForMetCorr")
)


process.pfCandsNotInJetsPtrForMetCorr = cms.EDProducer("TPPFJetsOnPFCandidates",
    bottomCollection = cms.InputTag("particleFlowPtrs"),
    enable = cms.bool(True),
    matchByPtrDirect = cms.bool(False),
    mightGet = cms.optional.untracked.vstring,
    name = cms.untracked.string('noJet'),
    topCollection = cms.InputTag("pfJetsPtrForMetCorr")
)


process.pfCandsNotInJetsPtrForMetCorrNoHF = cms.EDProducer("TPPFJetsOnPFCandidates",
    bottomCollection = cms.InputTag("particleFlowPtrsNoHF"),
    enable = cms.bool(True),
    matchByPtrDirect = cms.bool(False),
    mightGet = cms.optional.untracked.vstring,
    name = cms.untracked.string('noJet'),
    topCollection = cms.InputTag("pfJetsPtrForMetCorrNoHF")
)


process.pfCandsNotInJetsPtrForMetCorrPuppi = cms.EDProducer("TPPFJetsOnPFCandidates",
    bottomCollection = cms.InputTag("particleFlowPtrsPuppi"),
    enable = cms.bool(True),
    matchByPtrDirect = cms.bool(False),
    mightGet = cms.optional.untracked.vstring,
    name = cms.untracked.string('noJet'),
    topCollection = cms.InputTag("pfJetsPtrForMetCorrPuppi")
)


process.pfCombinedInclusiveSecondaryVertexV2BJetTagsAK8PFPuppiSoftDropSubjets = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('candidateCombinedSecondaryVertexV2Computer'),
    tagInfos = cms.VInputTag(cms.InputTag("pfImpactParameterTagInfosAK8PFPuppiSoftDropSubjets"), cms.InputTag("pfInclusiveSecondaryVertexFinderTagInfosAK8PFPuppiSoftDropSubjets"))
)


process.pfCombinedInclusiveSecondaryVertexV2BJetTagsAK8Puppi = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('candidateCombinedSecondaryVertexV2Computer'),
    tagInfos = cms.VInputTag(cms.InputTag("pfImpactParameterTagInfosAK8Puppi"), cms.InputTag("pfInclusiveSecondaryVertexFinderTagInfosAK8Puppi"))
)


process.pfCombinedMVAV2BJetTagsAK8PFPuppiSoftDropSubjets = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('candidateCombinedMVAV2Computer'),
    tagInfos = cms.VInputTag(cms.InputTag("pfImpactParameterTagInfosAK8PFPuppiSoftDropSubjets"), cms.InputTag("pfSecondaryVertexTagInfosAK8PFPuppiSoftDropSubjets"), cms.InputTag("pfInclusiveSecondaryVertexFinderTagInfosAK8PFPuppiSoftDropSubjets"), cms.InputTag("softPFMuonsTagInfosAK8PFPuppiSoftDropSubjets"), cms.InputTag("softPFElectronsTagInfosAK8PFPuppiSoftDropSubjets"))
)


process.pfCombinedMVAV2BJetTagsAK8Puppi = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('candidateCombinedMVAV2Computer'),
    tagInfos = cms.VInputTag(cms.InputTag("pfImpactParameterTagInfosAK8Puppi"), cms.InputTag("pfSecondaryVertexTagInfosAK8Puppi"), cms.InputTag("pfInclusiveSecondaryVertexFinderTagInfosAK8Puppi"), cms.InputTag("softPFMuonsTagInfosAK8Puppi"), cms.InputTag("softPFElectronsTagInfosAK8Puppi"))
)


process.pfCombinedSecondaryVertexV2BJetTagsAK8Puppi = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('candidateCombinedSecondaryVertexV2Computer'),
    tagInfos = cms.VInputTag(cms.InputTag("pfImpactParameterTagInfosAK8Puppi"), cms.InputTag("pfSecondaryVertexTagInfosAK8Puppi"))
)


process.pfDeepCMVADiscriminatorsJetTags = cms.EDProducer("BTagProbabilityToDiscriminator",
    discriminators = cms.VPSet(
        cms.PSet(
            denominator = cms.VInputTag(),
            name = cms.string('BvsAll'),
            numerator = cms.VInputTag(cms.InputTag("pfDeepCMVAJetTags","probb"), cms.InputTag("pfDeepCMVAJetTags","probbb"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfDeepCMVAJetTags","probc"), cms.InputTag("pfDeepCMVAJetTags","probb"), cms.InputTag("pfDeepCMVAJetTags","probbb")),
            name = cms.string('CvsB'),
            numerator = cms.VInputTag(cms.InputTag("pfDeepCMVAJetTags","probc"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfDeepCMVAJetTags","probc"), cms.InputTag("pfDeepCMVAJetTags","probudsg")),
            name = cms.string('CvsL'),
            numerator = cms.VInputTag(cms.InputTag("pfDeepCMVAJetTags","probc"))
        )
    )
)


process.pfDeepCMVAJetTags = cms.EDProducer("DeepFlavourJetTagsProducer",
    NNConfig = cms.FileInPath('RecoBTag/Combined/data/Model_DeepCMVA.json'),
    checkSVForDefaults = cms.bool(False),
    meanPadding = cms.bool(False),
    src = cms.InputTag("pfDeepCMVATagInfos"),
    toAdd = cms.PSet(

    )
)


process.pfDeepCMVANegativeTagInfos = cms.EDProducer("DeepCMVATagInfoProducer",
    cMVAPtThreshold = cms.double(200),
    deepNNTagInfos = cms.InputTag("pfDeepCSVNegativeTagInfos"),
    elInfoSrc = cms.InputTag("softPFElectronsTagInfos"),
    ipInfoSrc = cms.InputTag("pfImpactParameterTagInfos"),
    jpComputerSrc = cms.string('candidateJetProbabilityComputer'),
    jpbComputerSrc = cms.string('candidateJetBProbabilityComputer'),
    muInfoSrc = cms.InputTag("softPFMuonsTagInfos"),
    softelComputerSrc = cms.string('softPFElectronComputer'),
    softmuComputerSrc = cms.string('softPFMuonComputer')
)


process.pfDeepCMVAPositiveTagInfos = cms.EDProducer("DeepCMVATagInfoProducer",
    cMVAPtThreshold = cms.double(200),
    deepNNTagInfos = cms.InputTag("pfDeepCSVPositiveTagInfos"),
    elInfoSrc = cms.InputTag("softPFElectronsTagInfos"),
    ipInfoSrc = cms.InputTag("pfImpactParameterTagInfos"),
    jpComputerSrc = cms.string('candidateJetProbabilityComputer'),
    jpbComputerSrc = cms.string('candidateJetBProbabilityComputer'),
    muInfoSrc = cms.InputTag("softPFMuonsTagInfos"),
    softelComputerSrc = cms.string('softPFElectronComputer'),
    softmuComputerSrc = cms.string('softPFMuonComputer')
)


process.pfDeepCMVATagInfos = cms.EDProducer("DeepCMVATagInfoProducer",
    cMVAPtThreshold = cms.double(200),
    deepNNTagInfos = cms.InputTag("pfDeepCSVTagInfos"),
    elInfoSrc = cms.InputTag("softPFElectronsTagInfos"),
    ipInfoSrc = cms.InputTag("pfImpactParameterTagInfos"),
    jpComputerSrc = cms.string('candidateJetProbabilityComputer'),
    jpbComputerSrc = cms.string('candidateJetBProbabilityComputer'),
    muInfoSrc = cms.InputTag("softPFMuonsTagInfos"),
    softelComputerSrc = cms.string('softPFElectronComputer'),
    softmuComputerSrc = cms.string('softPFMuonComputer')
)


process.pfDeepCSVDiscriminatorsJetTags = cms.EDProducer("BTagProbabilityToDiscriminator",
    discriminators = cms.VPSet(
        cms.PSet(
            denominator = cms.VInputTag(),
            name = cms.string('BvsAll'),
            numerator = cms.VInputTag(cms.InputTag("pfDeepCSVJetTags","probb"), cms.InputTag("pfDeepCSVJetTags","probbb"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfDeepCSVJetTags","probc"), cms.InputTag("pfDeepCSVJetTags","probb"), cms.InputTag("pfDeepCSVJetTags","probbb")),
            name = cms.string('CvsB'),
            numerator = cms.VInputTag(cms.InputTag("pfDeepCSVJetTags","probc"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfDeepCSVJetTags","probudsg"), cms.InputTag("pfDeepCSVJetTags","probc")),
            name = cms.string('CvsL'),
            numerator = cms.VInputTag(cms.InputTag("pfDeepCSVJetTags","probc"))
        )
    )
)


process.pfDeepCSVDiscriminatorsJetTagsPuppi = cms.EDProducer("BTagProbabilityToDiscriminator",
    discriminators = cms.VPSet(
        cms.PSet(
            denominator = cms.VInputTag(),
            name = cms.string('BvsAll'),
            numerator = cms.VInputTag(cms.InputTag("pfDeepCSVJetTagsPuppi","probb"), cms.InputTag("pfDeepCSVJetTagsPuppi","probbb"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfDeepCSVJetTagsPuppi","probc"), cms.InputTag("pfDeepCSVJetTagsPuppi","probb"), cms.InputTag("pfDeepCSVJetTagsPuppi","probbb")),
            name = cms.string('CvsB'),
            numerator = cms.VInputTag(cms.InputTag("pfDeepCSVJetTagsPuppi","probc"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfDeepCSVJetTagsPuppi","probudsg"), cms.InputTag("pfDeepCSVJetTagsPuppi","probc")),
            name = cms.string('CvsL'),
            numerator = cms.VInputTag(cms.InputTag("pfDeepCSVJetTagsPuppi","probc"))
        )
    )
)


process.pfDeepCSVJetTags = cms.EDProducer("DeepFlavourJetTagsProducer",
    NNConfig = cms.FileInPath('RecoBTag/Combined/data/DeepCSV_PhaseI.json'),
    checkSVForDefaults = cms.bool(True),
    meanPadding = cms.bool(True),
    src = cms.InputTag("pfDeepCSVTagInfos"),
    toAdd = cms.PSet(

    )
)


process.pfDeepCSVJetTagsAK8PFPuppiSoftDropSubjets = cms.EDProducer("DeepFlavourJetTagsProducer",
    NNConfig = cms.FileInPath('RecoBTag/Combined/data/DeepCSV_PhaseI.json'),
    checkSVForDefaults = cms.bool(True),
    meanPadding = cms.bool(True),
    src = cms.InputTag("pfDeepCSVTagInfosAK8PFPuppiSoftDropSubjets"),
    toAdd = cms.PSet(

    )
)


process.pfDeepCSVJetTagsAK8Puppi = cms.EDProducer("DeepFlavourJetTagsProducer",
    NNConfig = cms.FileInPath('RecoBTag/Combined/data/DeepCSV_PhaseI.json'),
    checkSVForDefaults = cms.bool(True),
    meanPadding = cms.bool(True),
    src = cms.InputTag("pfDeepCSVTagInfosAK8Puppi"),
    toAdd = cms.PSet(

    )
)


process.pfDeepCSVJetTagsPuppi = cms.EDProducer("DeepFlavourJetTagsProducer",
    NNConfig = cms.FileInPath('RecoBTag/Combined/data/DeepCSV_PhaseI.json'),
    checkSVForDefaults = cms.bool(True),
    meanPadding = cms.bool(True),
    src = cms.InputTag("pfDeepCSVTagInfosPuppi"),
    toAdd = cms.PSet(

    )
)


process.pfDeepCSVNegativeTagInfos = cms.EDProducer("DeepNNTagInfoProducer",
    computer = cms.PSet(
        SoftLeptonFlip = cms.bool(False),
        charmCut = cms.double(1.5),
        correctVertexMass = cms.bool(True),
        minimumTrackWeight = cms.double(0.5),
        pseudoMultiplicityMin = cms.uint32(2),
        pseudoVertexV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        trackFlip = cms.bool(True),
        trackMultiplicityMin = cms.uint32(2),
        trackPairV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.03)
        ),
        trackPseudoSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(-2.0),
            sip2dSigMin = cms.double(-99999.9),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(10.0),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(-99999.9),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(10.0),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSort = cms.string('sip2dSig'),
        useTrackWeights = cms.bool(True),
        vertexFlip = cms.bool(True)
    ),
    svTagInfos = cms.InputTag("pfInclusiveSecondaryVertexFinderNegativeTagInfos")
)


process.pfDeepCSVPositiveTagInfos = cms.EDProducer("DeepNNTagInfoProducer",
    computer = cms.PSet(
        SoftLeptonFlip = cms.bool(False),
        charmCut = cms.double(1.5),
        correctVertexMass = cms.bool(True),
        minimumTrackWeight = cms.double(0.5),
        pseudoMultiplicityMin = cms.uint32(2),
        pseudoVertexV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        trackFlip = cms.bool(False),
        trackMultiplicityMin = cms.uint32(2),
        trackPairV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.03)
        ),
        trackPseudoSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(2.0),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(0),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(-99999.9),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(0),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSort = cms.string('sip2dSig'),
        useTrackWeights = cms.bool(True),
        vertexFlip = cms.bool(False)
    ),
    svTagInfos = cms.InputTag("pfInclusiveSecondaryVertexFinderTagInfos")
)


process.pfDeepCSVTagInfos = cms.EDProducer("DeepNNTagInfoProducer",
    computer = cms.PSet(
        SoftLeptonFlip = cms.bool(False),
        charmCut = cms.double(1.5),
        correctVertexMass = cms.bool(True),
        minimumTrackWeight = cms.double(0.5),
        pseudoMultiplicityMin = cms.uint32(2),
        pseudoVertexV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        trackFlip = cms.bool(False),
        trackMultiplicityMin = cms.uint32(2),
        trackPairV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.03)
        ),
        trackPseudoSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(2.0),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(-99999.9),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSort = cms.string('sip2dSig'),
        useTrackWeights = cms.bool(True),
        vertexFlip = cms.bool(False)
    ),
    svTagInfos = cms.InputTag("pfInclusiveSecondaryVertexFinderTagInfos")
)


process.pfDeepCSVTagInfosAK8PFPuppiSoftDropSubjets = cms.EDProducer("DeepNNTagInfoProducer",
    computer = cms.PSet(
        SoftLeptonFlip = cms.bool(False),
        charmCut = cms.double(1.5),
        correctVertexMass = cms.bool(True),
        minimumTrackWeight = cms.double(0.5),
        pseudoMultiplicityMin = cms.uint32(2),
        pseudoVertexV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        trackFlip = cms.bool(False),
        trackMultiplicityMin = cms.uint32(2),
        trackPairV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.03)
        ),
        trackPseudoSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(2.0),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(-99999.9),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSort = cms.string('sip2dSig'),
        useTrackWeights = cms.bool(True),
        vertexFlip = cms.bool(False)
    ),
    fatJets = cms.InputTag("ak8PFJetsPuppi"),
    groomedFatJets = cms.InputTag("ak8PFJetsPuppiSoftDrop"),
    jetAlgorithm = cms.string('AntiKt'),
    rParam = cms.double(0.8),
    svTagInfos = cms.InputTag("pfInclusiveSecondaryVertexFinderTagInfosAK8PFPuppiSoftDropSubjets"),
    useSVClustering = cms.bool(True)
)


process.pfDeepCSVTagInfosAK8Puppi = cms.EDProducer("DeepNNTagInfoProducer",
    computer = cms.PSet(
        SoftLeptonFlip = cms.bool(False),
        charmCut = cms.double(1.5),
        correctVertexMass = cms.bool(True),
        minimumTrackWeight = cms.double(0.5),
        pseudoMultiplicityMin = cms.uint32(2),
        pseudoVertexV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        trackFlip = cms.bool(False),
        trackMultiplicityMin = cms.uint32(2),
        trackPairV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.03)
        ),
        trackPseudoSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(2.0),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(-99999.9),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSort = cms.string('sip2dSig'),
        useTrackWeights = cms.bool(True),
        vertexFlip = cms.bool(False)
    ),
    svTagInfos = cms.InputTag("pfInclusiveSecondaryVertexFinderTagInfosAK8Puppi")
)


process.pfDeepCSVTagInfosPuppi = cms.EDProducer("DeepNNTagInfoProducer",
    computer = cms.PSet(
        SoftLeptonFlip = cms.bool(False),
        charmCut = cms.double(1.5),
        correctVertexMass = cms.bool(True),
        minimumTrackWeight = cms.double(0.5),
        pseudoMultiplicityMin = cms.uint32(2),
        pseudoVertexV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        trackFlip = cms.bool(False),
        trackMultiplicityMin = cms.uint32(2),
        trackPairV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.03)
        ),
        trackPseudoSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(2.0),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(-99999.9),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSort = cms.string('sip2dSig'),
        useTrackWeights = cms.bool(True),
        vertexFlip = cms.bool(False)
    ),
    svTagInfos = cms.InputTag("pfInclusiveSecondaryVertexFinderTagInfosPuppi")
)


process.pfDeepCSVTagInfosSlimmedDeepFlavour = cms.EDProducer("DeepNNTagInfoProducer",
    computer = cms.PSet(
        SoftLeptonFlip = cms.bool(False),
        charmCut = cms.double(1.5),
        correctVertexMass = cms.bool(True),
        minimumTrackWeight = cms.double(0.5),
        pseudoMultiplicityMin = cms.uint32(2),
        pseudoVertexV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        trackFlip = cms.bool(False),
        trackMultiplicityMin = cms.uint32(2),
        trackPairV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.03)
        ),
        trackPseudoSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(2.0),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(-99999.9),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSort = cms.string('sip2dSig'),
        useTrackWeights = cms.bool(True),
        vertexFlip = cms.bool(False)
    ),
    svTagInfos = cms.InputTag("pfInclusiveSecondaryVertexFinderTagInfosSlimmedDeepFlavour")
)


process.pfDeepCSVTagInfosSlimmedPuppiWithDeepTags = cms.EDProducer("DeepNNTagInfoProducer",
    computer = cms.PSet(
        SoftLeptonFlip = cms.bool(False),
        charmCut = cms.double(1.5),
        correctVertexMass = cms.bool(True),
        minimumTrackWeight = cms.double(0.5),
        pseudoMultiplicityMin = cms.uint32(2),
        pseudoVertexV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        trackFlip = cms.bool(False),
        trackMultiplicityMin = cms.uint32(2),
        trackPairV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.03)
        ),
        trackPseudoSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(2.0),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(-99999.9),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSort = cms.string('sip2dSig'),
        useTrackWeights = cms.bool(True),
        vertexFlip = cms.bool(False)
    ),
    svTagInfos = cms.InputTag("pfInclusiveSecondaryVertexFinderTagInfosSlimmedPuppiWithDeepTags")
)


process.pfDeepDoubleXTagInfosSlimmedAK8DeepTags = cms.EDProducer("DeepDoubleXTagInfoProducer",
    fallback_puppi_weight = cms.bool(False),
    is_weighted_jet = cms.bool(True),
    jet_radius = cms.double(0.8),
    jets = cms.InputTag("updatedPatJetsSlimmedAK8DeepTags"),
    mightGet = cms.optional.untracked.vstring,
    min_candidate_pt = cms.double(0.95),
    min_jet_pt = cms.double(150),
    puppi_value_map = cms.InputTag("packedpuppi"),
    secondary_vertices = cms.InputTag("slimmedSecondaryVertices"),
    shallow_tag_infos = cms.InputTag("pfBoostedDoubleSVAK8TagInfosSlimmedAK8DeepTags"),
    vertices = cms.InputTag("offlineSlimmedPrimaryVertices")
)


process.pfDeepFlavourJetTagsSlimmedDeepFlavour = cms.EDProducer("DeepFlavourONNXJetTagsProducer",
    flav_names = cms.vstring(
        'probb',
        'probbb',
        'problepb',
        'probc',
        'probuds',
        'probg'
    ),
    input_names = cms.vstring(
        'input_1',
        'input_2',
        'input_3',
        'input_4',
        'input_5'
    ),
    mightGet = cms.optional.untracked.vstring,
    model_path = cms.FileInPath('RecoBTag/Combined/data/DeepFlavourV04_12X_training/DeepJet_Run3_122X.onnx'),
    output_names = cms.vstring('ID_pred/Softmax:0'),
    src = cms.InputTag("pfDeepFlavourTagInfosSlimmedDeepFlavour")
)


process.pfDeepFlavourJetTagsSlimmedPuppiWithDeepTags = cms.EDProducer("DeepFlavourONNXJetTagsProducer",
    flav_names = cms.vstring(
        'probb',
        'probbb',
        'problepb',
        'probc',
        'probuds',
        'probg'
    ),
    input_names = cms.vstring(
        'input_1',
        'input_2',
        'input_3',
        'input_4',
        'input_5'
    ),
    mightGet = cms.optional.untracked.vstring,
    model_path = cms.FileInPath('RecoBTag/Combined/data/DeepFlavourV04_12X_training/DeepJet_Run3_122X.onnx'),
    output_names = cms.vstring('ID_pred/Softmax:0'),
    src = cms.InputTag("pfDeepFlavourTagInfosSlimmedPuppiWithDeepTags")
)


process.pfDeepFlavourTagInfosSlimmedDeepFlavour = cms.EDProducer("DeepFlavourTagInfoProducer",
    candidates = cms.InputTag("packedPFCandidates"),
    compute_probabilities = cms.bool(False),
    fallback_puppi_weight = cms.bool(False),
    fallback_vertex_association = cms.bool(False),
    flip = cms.bool(False),
    is_weighted_jet = cms.bool(False),
    jet_radius = cms.double(0.4),
    jets = cms.InputTag("updatedPatJetsSlimmedDeepFlavour"),
    max_jet_eta = cms.double(2.5),
    mightGet = cms.optional.untracked.vstring,
    min_candidate_pt = cms.double(0.95),
    min_jet_pt = cms.double(15),
    puppi_value_map = cms.InputTag("packedpuppi"),
    run_deepVertex = cms.bool(False),
    secondary_vertices = cms.InputTag("slimmedSecondaryVertices"),
    shallow_tag_infos = cms.InputTag("pfDeepCSVTagInfosSlimmedDeepFlavour"),
    vertex_associator = cms.InputTag(""),
    vertices = cms.InputTag("offlineSlimmedPrimaryVertices")
)


process.pfDeepFlavourTagInfosSlimmedPuppiWithDeepTags = cms.EDProducer("DeepFlavourTagInfoProducer",
    candidates = cms.InputTag("packedPFCandidates"),
    compute_probabilities = cms.bool(False),
    fallback_puppi_weight = cms.bool(False),
    fallback_vertex_association = cms.bool(False),
    flip = cms.bool(False),
    is_weighted_jet = cms.bool(True),
    jet_radius = cms.double(0.4),
    jets = cms.InputTag("updatedPatJetsSlimmedPuppiWithDeepTags"),
    max_jet_eta = cms.double(2.5),
    mightGet = cms.optional.untracked.vstring,
    min_candidate_pt = cms.double(0.95),
    min_jet_pt = cms.double(15),
    puppi_value_map = cms.InputTag("packedpuppi"),
    run_deepVertex = cms.bool(False),
    secondary_vertices = cms.InputTag("slimmedSecondaryVertices"),
    shallow_tag_infos = cms.InputTag("pfDeepCSVTagInfosSlimmedPuppiWithDeepTags"),
    vertex_associator = cms.InputTag(""),
    vertices = cms.InputTag("offlineSlimmedPrimaryVertices")
)


process.pfEGammaToCandidateRemapper = cms.EDProducer("PFEGammaToCandidateRemapper",
    electron2pf = cms.InputTag("particleBasedIsolation","gedGsfElectrons"),
    electrons = cms.InputTag("gedGsfElectrons"),
    pf2pf = cms.InputTag("FILLME"),
    photon2pf = cms.InputTag("particleBasedIsolation","gedPhotons"),
    photons = cms.InputTag("gedPhotons")
)


process.pfEGammaToCandidateRemapperCleaned = cms.EDProducer("PFEGammaToCandidateRemapper",
    electron2pf = cms.InputTag("particleBasedIsolation","gedGsfElectrons"),
    electrons = cms.InputTag("gedGsfElectrons"),
    pf2pf = cms.InputTag("cleanedParticleFlow"),
    photon2pf = cms.InputTag("particleBasedIsolation","gedPhotons"),
    photons = cms.InputTag("gedPhotons")
)


process.pfHiggsInteractionNetTagInfosSlimmedAK8DeepTags = cms.EDProducer("DeepBoostedJetTagInfoProducer",
    flip_ip_sign = cms.bool(False),
    include_neutrals = cms.bool(False),
    jet_radius = cms.double(0.8),
    jets = cms.InputTag("updatedPatJetsSlimmedAK8DeepTags"),
    max_jet_eta = cms.double(99),
    mightGet = cms.optional.untracked.vstring,
    min_jet_pt = cms.double(150),
    min_pt_for_pfcandidates = cms.double(-1),
    min_pt_for_track_properties = cms.double(0.95),
    min_puppi_wgt = cms.double(-1),
    pf_candidates = cms.InputTag("packedPFCandidates"),
    puppi_value_map = cms.InputTag("packedpuppi"),
    secondary_vertices = cms.InputTag("slimmedSecondaryVertices"),
    sip3dSigMax = cms.double(-1),
    sort_by_sip2dsig = cms.bool(True),
    use_hlt_features = cms.bool(False),
    use_puppiP4 = cms.bool(False),
    vertex_associator = cms.InputTag("primaryVertexAssociation","original"),
    vertices = cms.InputTag("offlineSlimmedPrimaryVertices")
)


process.pfHiggsInteractionNetTagsSlimmedAK8DeepTags = cms.EDProducer("BoostedJetONNXJetTagsProducer",
    debugMode = cms.untracked.bool(False),
    flav_names = cms.vstring(
        'probQCD',
        'probHbb'
    ),
    mightGet = cms.optional.untracked.vstring,
    model_path = cms.FileInPath('RecoBTag/Combined/data/HiggsInteractionNet/V00/IN.onnx'),
    preprocessParams = cms.PSet(
        input_cpf = cms.PSet(
            input_shape = cms.vuint32(1, 30, 60),
            var_infos = cms.PSet(
                pfcand_btagEtaRel = cms.PSet(
                    lower_bound = cms.double(-5),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(15)
                ),
                pfcand_btagJetDistVal = cms.PSet(
                    lower_bound = cms.double(-20),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1)
                ),
                pfcand_btagPParRatio = cms.PSet(
                    lower_bound = cms.double(-10),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(100)
                ),
                pfcand_btagPtRatio = cms.PSet(
                    lower_bound = cms.double(-1),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(10)
                ),
                pfcand_btagSip2dSig = cms.PSet(
                    lower_bound = cms.double(-1),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(40000.0)
                ),
                pfcand_btagSip2dVal = cms.PSet(
                    lower_bound = cms.double(-1),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(70)
                ),
                pfcand_btagSip3dSig = cms.PSet(
                    lower_bound = cms.double(-1),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(40000.0)
                ),
                pfcand_btagSip3dVal = cms.PSet(
                    lower_bound = cms.double(-1),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(100000.0)
                ),
                pfcand_deltaR = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                pfcand_detadeta = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                pfcand_dlambdadz = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                pfcand_dphidphi = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                pfcand_dphidxy = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                pfcand_dptdpt = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                pfcand_drminsv = cms.PSet(
                    lower_bound = cms.double(-0.8),
                    median = cms.double(0.8),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.8),
                    upper_bound = cms.double(0)
                ),
                pfcand_drsubjet1 = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                pfcand_drsubjet2 = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                pfcand_dxy = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                pfcand_dxydxy = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                pfcand_dxydz = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                pfcand_dxysig = cms.PSet(
                    lower_bound = cms.double(-2000),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(2000)
                ),
                pfcand_dz = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                pfcand_dzdz = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                pfcand_dzsig = cms.PSet(
                    lower_bound = cms.double(-2000),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(2000)
                ),
                pfcand_erel = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                pfcand_etarel = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                pfcand_normchi2 = cms.PSet(
                    lower_bound = cms.double(-1),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(300),
                    upper_bound = cms.double(300)
                ),
                pfcand_phirel = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                pfcand_ptrel = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                pfcand_quality = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                )
            ),
            var_length = cms.uint32(60),
            var_names = cms.vstring(
                'pfcand_ptrel',
                'pfcand_erel',
                'pfcand_phirel',
                'pfcand_etarel',
                'pfcand_deltaR',
                'pfcand_drminsv',
                'pfcand_drsubjet1',
                'pfcand_drsubjet2',
                'pfcand_dz',
                'pfcand_dzsig',
                'pfcand_dxy',
                'pfcand_dxysig',
                'pfcand_normchi2',
                'pfcand_quality',
                'pfcand_dptdpt',
                'pfcand_detadeta',
                'pfcand_dphidphi',
                'pfcand_dxydxy',
                'pfcand_dzdz',
                'pfcand_dxydz',
                'pfcand_dphidxy',
                'pfcand_dlambdadz',
                'pfcand_btagEtaRel',
                'pfcand_btagPtRatio',
                'pfcand_btagPParRatio',
                'pfcand_btagSip2dVal',
                'pfcand_btagSip2dSig',
                'pfcand_btagSip3dVal',
                'pfcand_btagSip3dSig',
                'pfcand_btagJetDistVal'
            )
        ),
        input_names = cms.vstring(
            'input_cpf',
            'input_sv'
        ),
        input_sv = cms.PSet(
            input_shape = cms.vuint32(1, 14, 5),
            var_infos = cms.PSet(
                sv_costhetasvpv = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                sv_d3d = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                sv_d3dsig = cms.PSet(
                    lower_bound = cms.double(-1),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(800)
                ),
                sv_deltaR = cms.PSet(
                    lower_bound = cms.double(-2),
                    median = cms.double(0.5),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(0)
                ),
                sv_dxy = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                sv_dxysig = cms.PSet(
                    lower_bound = cms.double(-1),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(800)
                ),
                sv_erel = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                sv_etarel = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                sv_mass = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                sv_normchi2 = cms.PSet(
                    lower_bound = cms.double(-1000),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(1000),
                    upper_bound = cms.double(1000)
                ),
                sv_ntracks = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                sv_phirel = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                sv_pt = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                ),
                sv_ptrel = cms.PSet(
                    lower_bound = cms.double(-1e+32),
                    median = cms.double(0.0),
                    norm_factor = cms.double(1.0),
                    replace_inf_value = cms.double(0.0),
                    upper_bound = cms.double(1e+32)
                )
            ),
            var_length = cms.uint32(5),
            var_names = cms.vstring(
                'sv_ptrel',
                'sv_erel',
                'sv_phirel',
                'sv_etarel',
                'sv_deltaR',
                'sv_pt',
                'sv_mass',
                'sv_ntracks',
                'sv_normchi2',
                'sv_dxy',
                'sv_dxysig',
                'sv_d3d',
                'sv_d3dsig',
                'sv_costhetasvpv'
            )
        )
    ),
    preprocess_json = cms.string(''),
    src = cms.InputTag("pfHiggsInteractionNetTagInfosSlimmedAK8DeepTags")
)


process.pfImpactParameterAK8TagInfosAK8Puppi = cms.EDProducer("CandIPProducer",
    candidates = cms.InputTag("particleFlow"),
    computeGhostTrack = cms.bool(False),
    computeProbabilities = cms.bool(False),
    ghostTrackPriorDeltaR = cms.double(0.03),
    jetDirectionUsingGhostTrack = cms.bool(False),
    jetDirectionUsingTracks = cms.bool(False),
    jets = cms.InputTag("ak8PFJetsPuppi"),
    maxDeltaR = cms.double(0.8),
    maximumChiSquared = cms.double(5.0),
    maximumLongitudinalImpactParameter = cms.double(17.0),
    maximumTransverseImpactParameter = cms.double(0.2),
    minimumNumberOfHits = cms.int32(0),
    minimumNumberOfPixelHits = cms.int32(1),
    minimumTransverseMomentum = cms.double(1.0),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    useTrackQuality = cms.bool(False)
)


process.pfImpactParameterAK8TagInfosSlimmedAK8DeepTags = cms.EDProducer("CandIPProducer",
    candidates = cms.InputTag("packedPFCandidates"),
    computeGhostTrack = cms.bool(False),
    computeProbabilities = cms.bool(False),
    ghostTrackPriorDeltaR = cms.double(0.03),
    jetDirectionUsingGhostTrack = cms.bool(False),
    jetDirectionUsingTracks = cms.bool(False),
    jets = cms.InputTag("updatedPatJetsSlimmedAK8DeepTags"),
    maxDeltaR = cms.double(0.8),
    maximumChiSquared = cms.double(5.0),
    maximumLongitudinalImpactParameter = cms.double(17.0),
    maximumTransverseImpactParameter = cms.double(0.2),
    minimumNumberOfHits = cms.int32(0),
    minimumNumberOfPixelHits = cms.int32(1),
    minimumTransverseMomentum = cms.double(1.0),
    primaryVertex = cms.InputTag("offlineSlimmedPrimaryVertices"),
    useTrackQuality = cms.bool(False)
)


process.pfImpactParameterTagInfos = cms.EDProducer("CandIPProducer",
    candidates = cms.InputTag("particleFlow"),
    computeGhostTrack = cms.bool(True),
    computeProbabilities = cms.bool(True),
    ghostTrackPriorDeltaR = cms.double(0.03),
    jetDirectionUsingGhostTrack = cms.bool(False),
    jetDirectionUsingTracks = cms.bool(False),
    jets = cms.InputTag("ak4PFJetsCHS"),
    maxDeltaR = cms.double(0.4),
    maximumChiSquared = cms.double(5.0),
    maximumLongitudinalImpactParameter = cms.double(17.0),
    maximumTransverseImpactParameter = cms.double(0.2),
    minimumNumberOfHits = cms.int32(0),
    minimumNumberOfPixelHits = cms.int32(1),
    minimumTransverseMomentum = cms.double(1.0),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    useTrackQuality = cms.bool(False)
)


process.pfImpactParameterTagInfosAK8PFPuppiSoftDropSubjets = cms.EDProducer("CandIPProducer",
    candidates = cms.InputTag("particleFlow"),
    computeGhostTrack = cms.bool(True),
    computeProbabilities = cms.bool(True),
    explicitJTA = cms.bool(True),
    ghostTrackPriorDeltaR = cms.double(0.03),
    jetDirectionUsingGhostTrack = cms.bool(False),
    jetDirectionUsingTracks = cms.bool(False),
    jets = cms.InputTag("ak8PFJetsPuppiSoftDrop","SubJets"),
    maxDeltaR = cms.double(0.4),
    maximumChiSquared = cms.double(5.0),
    maximumLongitudinalImpactParameter = cms.double(17.0),
    maximumTransverseImpactParameter = cms.double(0.2),
    minimumNumberOfHits = cms.int32(0),
    minimumNumberOfPixelHits = cms.int32(1),
    minimumTransverseMomentum = cms.double(1.0),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    useTrackQuality = cms.bool(False)
)


process.pfImpactParameterTagInfosAK8Puppi = cms.EDProducer("CandIPProducer",
    candidates = cms.InputTag("particleFlow"),
    computeGhostTrack = cms.bool(True),
    computeProbabilities = cms.bool(True),
    ghostTrackPriorDeltaR = cms.double(0.03),
    jetDirectionUsingGhostTrack = cms.bool(False),
    jetDirectionUsingTracks = cms.bool(False),
    jets = cms.InputTag("ak8PFJetsPuppi"),
    maxDeltaR = cms.double(0.4),
    maximumChiSquared = cms.double(5.0),
    maximumLongitudinalImpactParameter = cms.double(17.0),
    maximumTransverseImpactParameter = cms.double(0.2),
    minimumNumberOfHits = cms.int32(0),
    minimumNumberOfPixelHits = cms.int32(1),
    minimumTransverseMomentum = cms.double(1.0),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    useTrackQuality = cms.bool(False)
)


process.pfImpactParameterTagInfosPuppi = cms.EDProducer("CandIPProducer",
    candidates = cms.InputTag("particleFlow"),
    computeGhostTrack = cms.bool(True),
    computeProbabilities = cms.bool(True),
    ghostTrackPriorDeltaR = cms.double(0.03),
    jetDirectionUsingGhostTrack = cms.bool(False),
    jetDirectionUsingTracks = cms.bool(False),
    jets = cms.InputTag("ak4PFJetsPuppi"),
    maxDeltaR = cms.double(0.4),
    maximumChiSquared = cms.double(5.0),
    maximumLongitudinalImpactParameter = cms.double(17.0),
    maximumTransverseImpactParameter = cms.double(0.2),
    minimumNumberOfHits = cms.int32(0),
    minimumNumberOfPixelHits = cms.int32(1),
    minimumTransverseMomentum = cms.double(1.0),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    useTrackQuality = cms.bool(False)
)


process.pfImpactParameterTagInfosSlimmedDeepFlavour = cms.EDProducer("CandIPProducer",
    candidates = cms.InputTag("packedPFCandidates"),
    computeGhostTrack = cms.bool(True),
    computeProbabilities = cms.bool(True),
    ghostTrackPriorDeltaR = cms.double(0.03),
    jetDirectionUsingGhostTrack = cms.bool(False),
    jetDirectionUsingTracks = cms.bool(False),
    jets = cms.InputTag("updatedPatJetsSlimmedDeepFlavour"),
    maxDeltaR = cms.double(0.4),
    maximumChiSquared = cms.double(5.0),
    maximumLongitudinalImpactParameter = cms.double(17.0),
    maximumTransverseImpactParameter = cms.double(0.2),
    minimumNumberOfHits = cms.int32(0),
    minimumNumberOfPixelHits = cms.int32(1),
    minimumTransverseMomentum = cms.double(1.0),
    primaryVertex = cms.InputTag("offlineSlimmedPrimaryVertices"),
    useTrackQuality = cms.bool(False)
)


process.pfImpactParameterTagInfosSlimmedPuppiWithDeepTags = cms.EDProducer("CandIPProducer",
    candidates = cms.InputTag("packedPFCandidates"),
    computeGhostTrack = cms.bool(True),
    computeProbabilities = cms.bool(True),
    ghostTrackPriorDeltaR = cms.double(0.03),
    jetDirectionUsingGhostTrack = cms.bool(False),
    jetDirectionUsingTracks = cms.bool(False),
    jets = cms.InputTag("updatedPatJetsSlimmedPuppiWithDeepTags"),
    maxDeltaR = cms.double(0.4),
    maximumChiSquared = cms.double(5.0),
    maximumLongitudinalImpactParameter = cms.double(17.0),
    maximumTransverseImpactParameter = cms.double(0.2),
    minimumNumberOfHits = cms.int32(0),
    minimumNumberOfPixelHits = cms.int32(1),
    minimumTransverseMomentum = cms.double(1.0),
    primaryVertex = cms.InputTag("offlineSlimmedPrimaryVertices"),
    useTrackQuality = cms.bool(False)
)


process.pfInclusiveSecondaryVertexFinderAK8TagInfosAK8Puppi = cms.EDProducer("CandSecondaryVertexProducer",
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    constraint = cms.string('BeamSpot'),
    extSVCollection = cms.InputTag("inclusiveCandidateSecondaryVertices"),
    extSVDeltaRToJet = cms.double(0.8),
    minimumTrackWeight = cms.double(0.5),
    trackIPTagInfos = cms.InputTag("pfImpactParameterAK8TagInfosAK8Puppi"),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.8),
        maxDecayLen = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(1),
        ptMin = cms.double(1.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip3dSig'),
    useExternalSV = cms.bool(True),
    usePVError = cms.bool(True),
    vertexCuts = cms.PSet(
        distSig2dMax = cms.double(99999.9),
        distSig2dMin = cms.double(2.0),
        distSig3dMax = cms.double(99999.9),
        distSig3dMin = cms.double(-99999.9),
        distVal2dMax = cms.double(2.5),
        distVal2dMin = cms.double(0.01),
        distVal3dMax = cms.double(99999.9),
        distVal3dMin = cms.double(-99999.9),
        fracPV = cms.double(0.79),
        massMax = cms.double(6.5),
        maxDeltaRToJetAxis = cms.double(0.8),
        minimumTrackWeight = cms.double(0.5),
        multiplicityMin = cms.uint32(2),
        useTrackWeights = cms.bool(True),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        )
    ),
    vertexReco = cms.PSet(
        finder = cms.string('avr'),
        minweight = cms.double(0.5),
        primcut = cms.double(1.8),
        seccut = cms.double(6.0),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001)
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    ),
    weights = cms.InputTag("puppi")
)


process.pfInclusiveSecondaryVertexFinderAK8TagInfosSlimmedAK8DeepTags = cms.EDProducer("CandSecondaryVertexProducer",
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    constraint = cms.string('BeamSpot'),
    extSVCollection = cms.InputTag("slimmedSecondaryVertices"),
    extSVDeltaRToJet = cms.double(0.8),
    minimumTrackWeight = cms.double(0.5),
    trackIPTagInfos = cms.InputTag("pfImpactParameterAK8TagInfosSlimmedAK8DeepTags"),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.8),
        maxDecayLen = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(1),
        ptMin = cms.double(1.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip3dSig'),
    useExternalSV = cms.bool(True),
    usePVError = cms.bool(True),
    vertexCuts = cms.PSet(
        distSig2dMax = cms.double(99999.9),
        distSig2dMin = cms.double(2.0),
        distSig3dMax = cms.double(99999.9),
        distSig3dMin = cms.double(-99999.9),
        distVal2dMax = cms.double(2.5),
        distVal2dMin = cms.double(0.01),
        distVal3dMax = cms.double(99999.9),
        distVal3dMin = cms.double(-99999.9),
        fracPV = cms.double(0.79),
        massMax = cms.double(6.5),
        maxDeltaRToJetAxis = cms.double(0.8),
        minimumTrackWeight = cms.double(0.5),
        multiplicityMin = cms.uint32(2),
        useTrackWeights = cms.bool(True),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        )
    ),
    vertexReco = cms.PSet(
        finder = cms.string('avr'),
        minweight = cms.double(0.5),
        primcut = cms.double(1.8),
        seccut = cms.double(6.0),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001)
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    ),
    weights = cms.InputTag("packedpuppi")
)


process.pfInclusiveSecondaryVertexFinderTagInfos = cms.EDProducer("CandSecondaryVertexProducer",
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    constraint = cms.string('BeamSpot'),
    extSVCollection = cms.InputTag("inclusiveCandidateSecondaryVertices"),
    extSVDeltaRToJet = cms.double(0.3),
    minimumTrackWeight = cms.double(0.5),
    trackIPTagInfos = cms.InputTag("pfImpactParameterTagInfos"),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(1),
        ptMin = cms.double(1.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip3dSig'),
    useExternalSV = cms.bool(True),
    usePVError = cms.bool(True),
    vertexCuts = cms.PSet(
        distSig2dMax = cms.double(99999.9),
        distSig2dMin = cms.double(2.0),
        distSig3dMax = cms.double(99999.9),
        distSig3dMin = cms.double(-99999.9),
        distVal2dMax = cms.double(2.5),
        distVal2dMin = cms.double(0.01),
        distVal3dMax = cms.double(99999.9),
        distVal3dMin = cms.double(-99999.9),
        fracPV = cms.double(0.79),
        massMax = cms.double(6.5),
        maxDeltaRToJetAxis = cms.double(0.4),
        minimumTrackWeight = cms.double(0.5),
        multiplicityMin = cms.uint32(2),
        useTrackWeights = cms.bool(True),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        )
    ),
    vertexReco = cms.PSet(
        finder = cms.string('avr'),
        minweight = cms.double(0.5),
        primcut = cms.double(1.8),
        seccut = cms.double(6.0),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001)
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    )
)


process.pfInclusiveSecondaryVertexFinderTagInfosAK8PFPuppiSoftDropSubjets = cms.EDProducer("CandSecondaryVertexProducer",
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    constraint = cms.string('BeamSpot'),
    extSVCollection = cms.InputTag("inclusiveCandidateSecondaryVertices"),
    extSVDeltaRToJet = cms.double(0.3),
    fatJets = cms.InputTag("ak8PFJetsPuppi"),
    groomedFatJets = cms.InputTag("ak8PFJetsPuppiSoftDrop"),
    jetAlgorithm = cms.string('AntiKt'),
    minimumTrackWeight = cms.double(0.5),
    rParam = cms.double(0.8),
    trackIPTagInfos = cms.InputTag("pfImpactParameterTagInfosAK8PFPuppiSoftDropSubjets"),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(1),
        ptMin = cms.double(1.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip3dSig'),
    useExternalSV = cms.bool(True),
    usePVError = cms.bool(True),
    useSVClustering = cms.bool(True),
    vertexCuts = cms.PSet(
        distSig2dMax = cms.double(99999.9),
        distSig2dMin = cms.double(2.0),
        distSig3dMax = cms.double(99999.9),
        distSig3dMin = cms.double(-99999.9),
        distVal2dMax = cms.double(2.5),
        distVal2dMin = cms.double(0.01),
        distVal3dMax = cms.double(99999.9),
        distVal3dMin = cms.double(-99999.9),
        fracPV = cms.double(0.79),
        massMax = cms.double(6.5),
        maxDeltaRToJetAxis = cms.double(0.4),
        minimumTrackWeight = cms.double(0.5),
        multiplicityMin = cms.uint32(2),
        useTrackWeights = cms.bool(True),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        )
    ),
    vertexReco = cms.PSet(
        finder = cms.string('avr'),
        minweight = cms.double(0.5),
        primcut = cms.double(1.8),
        seccut = cms.double(6.0),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001)
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    ),
    weights = cms.InputTag("puppi")
)


process.pfInclusiveSecondaryVertexFinderTagInfosAK8Puppi = cms.EDProducer("CandSecondaryVertexProducer",
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    constraint = cms.string('BeamSpot'),
    extSVCollection = cms.InputTag("inclusiveCandidateSecondaryVertices"),
    extSVDeltaRToJet = cms.double(0.3),
    minimumTrackWeight = cms.double(0.5),
    trackIPTagInfos = cms.InputTag("pfImpactParameterTagInfosAK8Puppi"),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(1),
        ptMin = cms.double(1.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip3dSig'),
    useExternalSV = cms.bool(True),
    usePVError = cms.bool(True),
    vertexCuts = cms.PSet(
        distSig2dMax = cms.double(99999.9),
        distSig2dMin = cms.double(2.0),
        distSig3dMax = cms.double(99999.9),
        distSig3dMin = cms.double(-99999.9),
        distVal2dMax = cms.double(2.5),
        distVal2dMin = cms.double(0.01),
        distVal3dMax = cms.double(99999.9),
        distVal3dMin = cms.double(-99999.9),
        fracPV = cms.double(0.79),
        massMax = cms.double(6.5),
        maxDeltaRToJetAxis = cms.double(0.4),
        minimumTrackWeight = cms.double(0.5),
        multiplicityMin = cms.uint32(2),
        useTrackWeights = cms.bool(True),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        )
    ),
    vertexReco = cms.PSet(
        finder = cms.string('avr'),
        minweight = cms.double(0.5),
        primcut = cms.double(1.8),
        seccut = cms.double(6.0),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001)
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    ),
    weights = cms.InputTag("puppi")
)


process.pfInclusiveSecondaryVertexFinderTagInfosPuppi = cms.EDProducer("CandSecondaryVertexProducer",
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    constraint = cms.string('BeamSpot'),
    extSVCollection = cms.InputTag("inclusiveCandidateSecondaryVertices"),
    extSVDeltaRToJet = cms.double(0.3),
    minimumTrackWeight = cms.double(0.5),
    trackIPTagInfos = cms.InputTag("pfImpactParameterTagInfosPuppi"),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(1),
        ptMin = cms.double(1.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip3dSig'),
    useExternalSV = cms.bool(True),
    usePVError = cms.bool(True),
    vertexCuts = cms.PSet(
        distSig2dMax = cms.double(99999.9),
        distSig2dMin = cms.double(2.0),
        distSig3dMax = cms.double(99999.9),
        distSig3dMin = cms.double(-99999.9),
        distVal2dMax = cms.double(2.5),
        distVal2dMin = cms.double(0.01),
        distVal3dMax = cms.double(99999.9),
        distVal3dMin = cms.double(-99999.9),
        fracPV = cms.double(0.79),
        massMax = cms.double(6.5),
        maxDeltaRToJetAxis = cms.double(0.4),
        minimumTrackWeight = cms.double(0.5),
        multiplicityMin = cms.uint32(2),
        useTrackWeights = cms.bool(True),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        )
    ),
    vertexReco = cms.PSet(
        finder = cms.string('avr'),
        minweight = cms.double(0.5),
        primcut = cms.double(1.8),
        seccut = cms.double(6.0),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001)
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    ),
    weights = cms.InputTag("puppi")
)


process.pfInclusiveSecondaryVertexFinderTagInfosSlimmedDeepFlavour = cms.EDProducer("CandSecondaryVertexProducer",
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    constraint = cms.string('BeamSpot'),
    extSVCollection = cms.InputTag("slimmedSecondaryVertices"),
    extSVDeltaRToJet = cms.double(0.3),
    minimumTrackWeight = cms.double(0.5),
    trackIPTagInfos = cms.InputTag("pfImpactParameterTagInfosSlimmedDeepFlavour"),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(1),
        ptMin = cms.double(1.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip3dSig'),
    useExternalSV = cms.bool(True),
    usePVError = cms.bool(True),
    vertexCuts = cms.PSet(
        distSig2dMax = cms.double(99999.9),
        distSig2dMin = cms.double(2.0),
        distSig3dMax = cms.double(99999.9),
        distSig3dMin = cms.double(-99999.9),
        distVal2dMax = cms.double(2.5),
        distVal2dMin = cms.double(0.01),
        distVal3dMax = cms.double(99999.9),
        distVal3dMin = cms.double(-99999.9),
        fracPV = cms.double(0.79),
        massMax = cms.double(6.5),
        maxDeltaRToJetAxis = cms.double(0.4),
        minimumTrackWeight = cms.double(0.5),
        multiplicityMin = cms.uint32(2),
        useTrackWeights = cms.bool(True),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        )
    ),
    vertexReco = cms.PSet(
        finder = cms.string('avr'),
        minweight = cms.double(0.5),
        primcut = cms.double(1.8),
        seccut = cms.double(6.0),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001)
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    ),
    weights = cms.InputTag("packedpuppi")
)


process.pfInclusiveSecondaryVertexFinderTagInfosSlimmedPuppiWithDeepTags = cms.EDProducer("CandSecondaryVertexProducer",
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    constraint = cms.string('BeamSpot'),
    extSVCollection = cms.InputTag("slimmedSecondaryVertices"),
    extSVDeltaRToJet = cms.double(0.3),
    minimumTrackWeight = cms.double(0.5),
    trackIPTagInfos = cms.InputTag("pfImpactParameterTagInfosSlimmedPuppiWithDeepTags"),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(1),
        ptMin = cms.double(1.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip3dSig'),
    useExternalSV = cms.bool(True),
    usePVError = cms.bool(True),
    vertexCuts = cms.PSet(
        distSig2dMax = cms.double(99999.9),
        distSig2dMin = cms.double(2.0),
        distSig3dMax = cms.double(99999.9),
        distSig3dMin = cms.double(-99999.9),
        distVal2dMax = cms.double(2.5),
        distVal2dMin = cms.double(0.01),
        distVal3dMax = cms.double(99999.9),
        distVal3dMin = cms.double(-99999.9),
        fracPV = cms.double(0.79),
        massMax = cms.double(6.5),
        maxDeltaRToJetAxis = cms.double(0.4),
        minimumTrackWeight = cms.double(0.5),
        multiplicityMin = cms.uint32(2),
        useTrackWeights = cms.bool(True),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        )
    ),
    vertexReco = cms.PSet(
        finder = cms.string('avr'),
        minweight = cms.double(0.5),
        primcut = cms.double(1.8),
        seccut = cms.double(6.0),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001)
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    ),
    weights = cms.InputTag("packedpuppi")
)


process.pfJetBProbabilityBJetTagsPuppi = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('candidateJetBProbabilityComputer'),
    tagInfos = cms.VInputTag(cms.InputTag("pfImpactParameterTagInfosPuppi"))
)


process.pfJetProbabilityBJetTagsPuppi = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('candidateJetProbabilityComputer'),
    tagInfos = cms.VInputTag(cms.InputTag("pfImpactParameterTagInfosPuppi"))
)


process.pfJetsPtrForMetCorr = cms.EDProducer("PFJetFwdPtrProducer",
    src = cms.InputTag("ak4PFJets")
)


process.pfJetsPtrForMetCorrNoHF = cms.EDProducer("PFJetFwdPtrProducer",
    src = cms.InputTag("ak4PFJets")
)


process.pfJetsPtrForMetCorrPuppi = cms.EDProducer("PFJetFwdPtrProducer",
    src = cms.InputTag("ak4PFJets")
)


process.pfMETcorrType0 = cms.EDProducer("Type0PFMETcorrInputProducer",
    correction = cms.PSet(
        formula = cms.string('(x<35)?(-( [0]+x*[1]+pow(x, 2)*[2]+pow(x, 3)*[3] )):(-( [0]+35*[1]+pow(35, 2)*[2]+pow(35, 3)*[3] ))'),
        par0 = cms.double(-0.181414),
        par1 = cms.double(-0.476934),
        par2 = cms.double(0.00863564),
        par3 = cms.double(-4.94181e-05)
    ),
    minDz = cms.double(0.2),
    srcHardScatterVertex = cms.InputTag("selectedPrimaryVertexHighestPtTrackSumForPFMEtCorrType0"),
    srcPFCandidateToVertexAssociations = cms.InputTag("pfCandidateToVertexAssociation")
)


process.pfMassIndependentDeepDoubleBvLV2JetTagsSlimmedAK8DeepTags = cms.EDProducer("DeepDoubleXONNXJetTagsProducer",
    flav_names = cms.vstring(
        'probQCD',
        'probHbb'
    ),
    flavor = cms.string('BvL'),
    input_names = cms.vstring(
        'input_1',
        'input_2',
        'input_3',
        'input_4'
    ),
    mightGet = cms.optional.untracked.vstring,
    model_path = cms.FileInPath('RecoBTag/Combined/data/DeepDoubleX/102X/V02/BvL.onnx'),
    output_names = cms.vstring(),
    src = cms.InputTag("pfDeepDoubleXTagInfosSlimmedAK8DeepTags"),
    version = cms.string('V2')
)


process.pfMassIndependentDeepDoubleCvBV2JetTagsSlimmedAK8DeepTags = cms.EDProducer("DeepDoubleXONNXJetTagsProducer",
    flav_names = cms.vstring(
        'probHbb',
        'probHcc'
    ),
    flavor = cms.string('CvB'),
    input_names = cms.vstring(
        'input_1',
        'input_2',
        'input_3',
        'input_4'
    ),
    mightGet = cms.optional.untracked.vstring,
    model_path = cms.FileInPath('RecoBTag/Combined/data/DeepDoubleX/102X/V02/CvB.onnx'),
    output_names = cms.vstring(),
    src = cms.InputTag("pfDeepDoubleXTagInfosSlimmedAK8DeepTags"),
    version = cms.string('V2')
)


process.pfMassIndependentDeepDoubleCvLV2JetTagsSlimmedAK8DeepTags = cms.EDProducer("DeepDoubleXONNXJetTagsProducer",
    flav_names = cms.vstring(
        'probQCD',
        'probHcc'
    ),
    flavor = cms.string('CvL'),
    input_names = cms.vstring(
        'input_1',
        'input_2',
        'input_3',
        'input_4'
    ),
    mightGet = cms.optional.untracked.vstring,
    model_path = cms.FileInPath('RecoBTag/Combined/data/DeepDoubleX/102X/V02/CvL.onnx'),
    output_names = cms.vstring(),
    src = cms.InputTag("pfDeepDoubleXTagInfosSlimmedAK8DeepTags"),
    version = cms.string('V2')
)


process.pfMetCHS = cms.EDProducer("PFMETProducer",
    alias = cms.string('@module_label'),
    applyWeight = cms.bool(False),
    calculateSignificance = cms.bool(False),
    globalThreshold = cms.double(0),
    mightGet = cms.optional.untracked.vstring,
    parameters = cms.PSet(

    ),
    src = cms.InputTag("pfCHS"),
    srcJetResPhi = cms.optional.string,
    srcJetResPt = cms.optional.string,
    srcJetSF = cms.optional.string,
    srcJets = cms.optional.InputTag,
    srcLeptons = cms.optional.VInputTag,
    srcRho = cms.optional.InputTag,
    srcWeights = cms.InputTag("")
)


process.pfMetNoHF = cms.EDProducer("PFMETProducer",
    alias = cms.string('@module_label'),
    applyWeight = cms.bool(False),
    calculateSignificance = cms.bool(False),
    globalThreshold = cms.double(0),
    mightGet = cms.optional.untracked.vstring,
    parameters = cms.PSet(

    ),
    src = cms.InputTag("noHFCands"),
    srcJetResPhi = cms.optional.string,
    srcJetResPt = cms.optional.string,
    srcJetSF = cms.optional.string,
    srcJets = cms.optional.InputTag,
    srcLeptons = cms.optional.VInputTag,
    srcRho = cms.optional.InputTag,
    srcWeights = cms.InputTag("")
)


process.pfMetPuppi = cms.EDProducer("PFMETProducer",
    alias = cms.string('@module_label'),
    applyWeight = cms.bool(True),
    calculateSignificance = cms.bool(False),
    globalThreshold = cms.double(0),
    mightGet = cms.optional.untracked.vstring,
    parameters = cms.PSet(

    ),
    src = cms.InputTag("particleFlow"),
    srcJetResPhi = cms.optional.string,
    srcJetResPt = cms.optional.string,
    srcJetSF = cms.optional.string,
    srcJets = cms.optional.InputTag,
    srcLeptons = cms.optional.VInputTag,
    srcRho = cms.optional.InputTag,
    srcWeights = cms.InputTag("puppiNoLep")
)


process.pfMetT1 = cms.EDProducer("CorrectedPFMETProducer",
    src = cms.InputTag("pfMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("corrPfMetType1","type1"))
)


process.pfMetT1NoHF = cms.EDProducer("CorrectedPFMETProducer",
    src = cms.InputTag("pfMetNoHF"),
    srcCorrections = cms.VInputTag(cms.InputTag("corrPfMetType1NoHF","type1"))
)


process.pfMetT1Puppi = cms.EDProducer("CorrectedPFMETProducer",
    src = cms.InputTag("pfMetPuppi"),
    srcCorrections = cms.VInputTag(cms.InputTag("corrPfMetType1Puppi","type1"))
)


process.pfMetT1T2 = cms.EDProducer("CorrectedPFMETProducer",
    src = cms.InputTag("pfMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("corrPfMetType1","type1"), cms.InputTag("corrPfMetType2"))
)


process.pfMetT1T2NoHF = cms.EDProducer("CorrectedPFMETProducer",
    src = cms.InputTag("pfMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("corrPfMetType1NoHF","type1"), cms.InputTag("corrPfMetType2NoHF"))
)


process.pfMetT1T2Puppi = cms.EDProducer("CorrectedPFMETProducer",
    src = cms.InputTag("pfMet"),
    srcCorrections = cms.VInputTag(cms.InputTag("corrPfMetType1Puppi","type1"), cms.InputTag("corrPfMetType2Puppi"))
)


process.pfMetTrk = cms.EDProducer("PFMETProducer",
    alias = cms.string('@module_label'),
    applyWeight = cms.bool(False),
    calculateSignificance = cms.bool(False),
    globalThreshold = cms.double(0),
    mightGet = cms.optional.untracked.vstring,
    parameters = cms.PSet(

    ),
    src = cms.InputTag("TrkCands"),
    srcJetResPhi = cms.optional.string,
    srcJetResPt = cms.optional.string,
    srcJetSF = cms.optional.string,
    srcJets = cms.optional.InputTag,
    srcLeptons = cms.optional.VInputTag,
    srcRho = cms.optional.InputTag,
    srcWeights = cms.InputTag("")
)


process.pfNegativeDeepCMVAJetTags = cms.EDProducer("DeepFlavourJetTagsProducer",
    NNConfig = cms.FileInPath('RecoBTag/Combined/data/Model_DeepCMVA.json'),
    checkSVForDefaults = cms.bool(False),
    meanPadding = cms.bool(False),
    src = cms.InputTag("pfDeepCMVANegativeTagInfos"),
    toAdd = cms.PSet(

    )
)


process.pfNegativeDeepCSVJetTags = cms.EDProducer("DeepFlavourJetTagsProducer",
    NNConfig = cms.FileInPath('RecoBTag/Combined/data/DeepCSV_PhaseI.json'),
    checkSVForDefaults = cms.bool(True),
    meanPadding = cms.bool(True),
    src = cms.InputTag("pfDeepCSVNegativeTagInfos"),
    toAdd = cms.PSet(

    )
)


process.pfNoPileUpForBoostedTaus = cms.EDProducer("TPPFCandidatesOnPFCandidates",
    bottomCollection = cms.InputTag("particleFlow"),
    enable = cms.bool(True),
    matchByPtrDirect = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    name = cms.untracked.string('pileUpOnPFCandidates'),
    topCollection = cms.InputTag("pfPileUpForBoostedTaus")
)


process.pfNoPileUpIsoPFBRECO = cms.EDProducer("TPPFCandidatesOnPFCandidates",
    bottomCollection = cms.InputTag("particleFlowPtrs"),
    enable = cms.bool(True),
    matchByPtrDirect = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    name = cms.untracked.string('pileUpOnPFCandidates'),
    topCollection = cms.InputTag("pfPileUpIsoPFBRECO")
)


process.pfNoPileUpIsoPFBRECOBoosted = cms.EDProducer("TPPFCandidatesOnPFCandidates",
    bottomCollection = cms.InputTag("particleFlowPtrs"),
    enable = cms.bool(True),
    matchByPtrDirect = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    name = cms.untracked.string('pileUpOnPFCandidates'),
    topCollection = cms.InputTag("pfPileUpIsoPFBRECOBoosted")
)


process.pfNoPileUpJME = cms.EDProducer("TPPFCandidatesOnPFCandidates",
    bottomCollection = cms.InputTag("particleFlowPtrs"),
    enable = cms.bool(True),
    matchByPtrDirect = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    name = cms.untracked.string('pileUpOnPFCandidates'),
    topCollection = cms.InputTag("pfPileUpJME")
)


process.pfNoPileUpJMENoHF = cms.EDProducer("TPPFCandidatesOnPFCandidates",
    bottomCollection = cms.InputTag("tmpPFCandCollPtrNoHF"),
    enable = cms.bool(True),
    matchByPtrDirect = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    name = cms.untracked.string('pileUpOnPFCandidates'),
    topCollection = cms.InputTag("pfPileUpJMENoHF")
)


process.pfNoPileUpPFBRECO = cms.EDProducer("TPPFCandidatesOnPFCandidates",
    bottomCollection = cms.InputTag("particleFlowPtrs"),
    enable = cms.bool(True),
    matchByPtrDirect = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    name = cms.untracked.string('pileUpOnPFCandidates'),
    topCollection = cms.InputTag("pfPileUpPFBRECO")
)


process.pfParticleNetDiscriminatorsJetTagsSlimmedAK8DeepTags = cms.EDProducer("BTagProbabilityToDiscriminator",
    discriminators = cms.VPSet(
        cms.PSet(
            denominator = cms.VInputTag(
                cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probTbcq"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probTbqq"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDbb"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDcc"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDb"),
                cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDc"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDothers")
            ),
            name = cms.string('TvsQCD'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probTbcq"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probTbqq"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(
                cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probWcq"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probWqq"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDbb"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDcc"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDb"),
                cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDc"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDothers")
            ),
            name = cms.string('WvsQCD'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probWcq"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probWqq"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(
                cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probZbb"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probZcc"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probZqq"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDbb"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDcc"),
                cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDb"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDc"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDothers")
            ),
            name = cms.string('ZvsQCD'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probZbb"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probZcc"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probZqq"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(
                cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probZbb"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDbb"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDcc"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDb"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDc"),
                cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDothers")
            ),
            name = cms.string('ZbbvsQCD'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probZbb"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(
                cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probZcc"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDbb"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDcc"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDb"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDc"),
                cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDothers")
            ),
            name = cms.string('ZccvsQCD'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probZcc"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(
                cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probHbb"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDbb"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDcc"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDb"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDc"),
                cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDothers")
            ),
            name = cms.string('HbbvsQCD'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probHbb"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(
                cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probHcc"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDbb"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDcc"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDb"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDc"),
                cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDothers")
            ),
            name = cms.string('HccvsQCD'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probHcc"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(
                cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probHqqqq"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDbb"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDcc"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDb"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDc"),
                cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDothers")
            ),
            name = cms.string('H4qvsQCD'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probHqqqq"))
        )
    )
)


process.pfParticleNetFromMiniAODAK4CHSCentralDiscriminatorsJetTagsSlimmedDeepFlavour = cms.EDProducer("BTagProbabilityToDiscriminator",
    discriminators = cms.VPSet(
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probb"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probc"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probuds"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probg")),
            name = cms.string('BvsAll'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probb"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probc"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probuds"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probg")),
            name = cms.string('CvsL'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probc"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probc"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probb")),
            name = cms.string('CvsB'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probc"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probuds"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probg")),
            name = cms.string('QvsG'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probuds"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(
                cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probb"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probc"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probuds"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probg"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup1h0p"),
                cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup3h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup3h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum1h0p"),
                cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum3h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum3h1p")
            ),
            name = cms.string('TauVsJet'),
            numerator = cms.VInputTag(
                cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup3h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup3h1p"),
                cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum3h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum3h1p")
            )
        ),
        cms.PSet(
            denominator = cms.VInputTag(
                cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probele"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup3h0p"),
                cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup3h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum3h0p"),
                cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum3h1p")
            ),
            name = cms.string('TauVsEle'),
            numerator = cms.VInputTag(
                cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup3h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup3h1p"),
                cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum3h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum3h1p")
            )
        ),
        cms.PSet(
            denominator = cms.VInputTag(
                cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probmu"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup3h0p"),
                cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup3h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum3h0p"),
                cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum3h1p")
            ),
            name = cms.string('TauVsMu'),
            numerator = cms.VInputTag(
                cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup3h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup3h1p"),
                cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum3h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum3h1p")
            )
        )
    )
)


process.pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour = cms.EDProducer("BoostedJetONNXJetTagsProducer",
    debugMode = cms.untracked.bool(False),
    flav_names = cms.vstring(
        'probmu',
        'probele',
        'probtaup1h0p',
        'probtaup1h1p',
        'probtaup1h2p',
        'probtaup3h0p',
        'probtaup3h1p',
        'probtaum1h0p',
        'probtaum1h1p',
        'probtaum1h2p',
        'probtaum3h0p',
        'probtaum3h1p',
        'probb',
        'probc',
        'probuds',
        'probg',
        'ptcorr',
        'ptreshigh',
        'ptreslow',
        'ptnu'
    ),
    mightGet = cms.optional.untracked.vstring,
    model_path = cms.FileInPath('RecoBTag/Combined/data/ParticleNetFromMiniAODAK4/CHS/Central/particle-net.onnx'),
    preprocessParams = cms.PSet(

    ),
    preprocess_json = cms.string('RecoBTag/Combined/data/ParticleNetFromMiniAODAK4/CHS/Central/preprocess.json'),
    src = cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralTagInfosSlimmedDeepFlavour")
)


process.pfParticleNetFromMiniAODAK4CHSCentralTagInfosSlimmedDeepFlavour = cms.EDProducer("ParticleNetFeatureEvaluator",
    electrons = cms.InputTag("slimmedElectrons"),
    include_neutrals = cms.bool(True),
    jet_radius = cms.double(0.4),
    jets = cms.InputTag("updatedPatJetsSlimmedDeepFlavour"),
    losttracks = cms.InputTag("lostTracks"),
    max_dr_for_losttrack = cms.double(0.4),
    max_eta_for_taus = cms.double(2.5),
    max_jet_eta = cms.double(2.5),
    mightGet = cms.optional.untracked.vstring,
    min_jet_eta = cms.double(0),
    min_jet_pt = cms.double(15),
    min_pt_for_losttrack = cms.double(1),
    min_pt_for_pfcandidates = cms.double(-1),
    min_pt_for_taus = cms.double(20),
    min_pt_for_track_properties = cms.double(-1),
    muons = cms.InputTag("slimmedMuons"),
    pf_candidates = cms.InputTag("packedPFCandidates"),
    photons = cms.InputTag("slimmedPhotons"),
    secondary_vertices = cms.InputTag("slimmedSecondaryVertices"),
    taus = cms.InputTag("slimmedTaus"),
    vertices = cms.InputTag("offlineSlimmedPrimaryVertices")
)


process.pfParticleNetFromMiniAODAK4CHSForwardDiscriminatorsJetTagsSlimmedDeepFlavour = cms.EDProducer("BTagProbabilityToDiscriminator",
    discriminators = cms.VPSet(cms.PSet(
        denominator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK4CHSForwardJetTagsSlimmedDeepFlavour","probq"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSForwardJetTagsSlimmedDeepFlavour","probg")),
        name = cms.string('QvsG'),
        numerator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK4CHSForwardJetTagsSlimmedDeepFlavour","probq"))
    ))
)


process.pfParticleNetFromMiniAODAK4CHSForwardJetTagsSlimmedDeepFlavour = cms.EDProducer("BoostedJetONNXJetTagsProducer",
    debugMode = cms.untracked.bool(False),
    flav_names = cms.vstring(
        'probq',
        'probg',
        'ptcorr',
        'ptreshigh',
        'ptreslow',
        'ptnu'
    ),
    mightGet = cms.optional.untracked.vstring,
    model_path = cms.FileInPath('RecoBTag/Combined/data/ParticleNetFromMiniAODAK4/CHS/Forward/particle-net.onnx'),
    preprocessParams = cms.PSet(

    ),
    preprocess_json = cms.string('RecoBTag/Combined/data/ParticleNetFromMiniAODAK4/CHS/Forward/preprocess.json'),
    src = cms.InputTag("pfParticleNetFromMiniAODAK4CHSForwardTagInfosSlimmedDeepFlavour")
)


process.pfParticleNetFromMiniAODAK4CHSForwardTagInfosSlimmedDeepFlavour = cms.EDProducer("ParticleNetFeatureEvaluator",
    electrons = cms.InputTag("slimmedElectrons"),
    include_neutrals = cms.bool(True),
    jet_radius = cms.double(0.4),
    jets = cms.InputTag("updatedPatJetsSlimmedDeepFlavour"),
    losttracks = cms.InputTag("lostTracks"),
    max_dr_for_losttrack = cms.double(0.4),
    max_eta_for_taus = cms.double(2.5),
    max_jet_eta = cms.double(4.7),
    mightGet = cms.optional.untracked.vstring,
    min_jet_eta = cms.double(2.5),
    min_jet_pt = cms.double(15),
    min_pt_for_losttrack = cms.double(1),
    min_pt_for_pfcandidates = cms.double(-1),
    min_pt_for_taus = cms.double(20),
    min_pt_for_track_properties = cms.double(-1),
    muons = cms.InputTag("slimmedMuons"),
    pf_candidates = cms.InputTag("packedPFCandidates"),
    photons = cms.InputTag("slimmedPhotons"),
    secondary_vertices = cms.InputTag("slimmedSecondaryVertices"),
    taus = cms.InputTag("slimmedTaus"),
    vertices = cms.InputTag("offlineSlimmedPrimaryVertices")
)


process.pfParticleNetFromMiniAODAK4PuppiCentralDiscriminatorsJetTagsSlimmedPuppiWithDeepTags = cms.EDProducer("BTagProbabilityToDiscriminator",
    discriminators = cms.VPSet(
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probb"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probc"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probuds"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probg")),
            name = cms.string('BvsAll'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probb"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probc"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probuds"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probg")),
            name = cms.string('CvsL'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probc"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probc"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probb")),
            name = cms.string('CvsB'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probc"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probuds"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probg")),
            name = cms.string('QvsG'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probuds"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(
                cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probb"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probc"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probuds"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probg"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup1h0p"),
                cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup3h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup3h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum1h0p"),
                cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum3h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum3h1p")
            ),
            name = cms.string('TauVsJet'),
            numerator = cms.VInputTag(
                cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup3h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup3h1p"),
                cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum3h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum3h1p")
            )
        ),
        cms.PSet(
            denominator = cms.VInputTag(
                cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probele"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup3h0p"),
                cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup3h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum3h0p"),
                cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum3h1p")
            ),
            name = cms.string('TauVsEle'),
            numerator = cms.VInputTag(
                cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup3h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup3h1p"),
                cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum3h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum3h1p")
            )
        ),
        cms.PSet(
            denominator = cms.VInputTag(
                cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probmu"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup3h0p"),
                cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup3h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum3h0p"),
                cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum3h1p")
            ),
            name = cms.string('TauVsMu'),
            numerator = cms.VInputTag(
                cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup3h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup3h1p"),
                cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum3h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum3h1p")
            )
        )
    )
)


process.pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags = cms.EDProducer("BoostedJetONNXJetTagsProducer",
    debugMode = cms.untracked.bool(False),
    flav_names = cms.vstring(
        'probmu',
        'probele',
        'probtaup1h0p',
        'probtaup1h1p',
        'probtaup1h2p',
        'probtaup3h0p',
        'probtaup3h1p',
        'probtaum1h0p',
        'probtaum1h1p',
        'probtaum1h2p',
        'probtaum3h0p',
        'probtaum3h1p',
        'probb',
        'probc',
        'probuds',
        'probg',
        'ptcorr',
        'ptreshigh',
        'ptreslow',
        'ptnu'
    ),
    mightGet = cms.optional.untracked.vstring,
    model_path = cms.FileInPath('RecoBTag/Combined/data/ParticleNetFromMiniAODAK4/PUPPI/Central/particle-net.onnx'),
    preprocessParams = cms.PSet(

    ),
    preprocess_json = cms.string('RecoBTag/Combined/data/ParticleNetFromMiniAODAK4/PUPPI/Central/preprocess.json'),
    src = cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralTagInfosSlimmedPuppiWithDeepTags")
)


process.pfParticleNetFromMiniAODAK4PuppiCentralTagInfosSlimmedPuppiWithDeepTags = cms.EDProducer("ParticleNetFeatureEvaluator",
    electrons = cms.InputTag("slimmedElectrons"),
    include_neutrals = cms.bool(True),
    jet_radius = cms.double(0.4),
    jets = cms.InputTag("updatedPatJetsSlimmedPuppiWithDeepTags"),
    losttracks = cms.InputTag("lostTracks"),
    max_dr_for_losttrack = cms.double(0.4),
    max_eta_for_taus = cms.double(2.5),
    max_jet_eta = cms.double(2.5),
    mightGet = cms.optional.untracked.vstring,
    min_jet_eta = cms.double(0),
    min_jet_pt = cms.double(15),
    min_pt_for_losttrack = cms.double(1),
    min_pt_for_pfcandidates = cms.double(-1),
    min_pt_for_taus = cms.double(20),
    min_pt_for_track_properties = cms.double(-1),
    muons = cms.InputTag("slimmedMuons"),
    pf_candidates = cms.InputTag("packedPFCandidates"),
    photons = cms.InputTag("slimmedPhotons"),
    secondary_vertices = cms.InputTag("slimmedSecondaryVertices"),
    taus = cms.InputTag("slimmedTaus"),
    vertices = cms.InputTag("offlineSlimmedPrimaryVertices")
)


process.pfParticleNetFromMiniAODAK4PuppiForwardDiscriminatorsJetTagsSlimmedPuppiWithDeepTags = cms.EDProducer("BTagProbabilityToDiscriminator",
    discriminators = cms.VPSet(cms.PSet(
        denominator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK4PuppiForwardJetTagsSlimmedPuppiWithDeepTags","probq"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiForwardJetTagsSlimmedPuppiWithDeepTags","probg")),
        name = cms.string('QvsG'),
        numerator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK4PuppiForwardJetTagsSlimmedPuppiWithDeepTags","probq"))
    ))
)


process.pfParticleNetFromMiniAODAK4PuppiForwardJetTagsSlimmedPuppiWithDeepTags = cms.EDProducer("BoostedJetONNXJetTagsProducer",
    debugMode = cms.untracked.bool(False),
    flav_names = cms.vstring(
        'probq',
        'probg',
        'ptcorr',
        'ptreshigh',
        'ptreslow',
        'ptnu'
    ),
    mightGet = cms.optional.untracked.vstring,
    model_path = cms.FileInPath('RecoBTag/Combined/data/ParticleNetFromMiniAODAK4/PUPPI/Forward/particle-net.onnx'),
    preprocessParams = cms.PSet(

    ),
    preprocess_json = cms.string('RecoBTag/Combined/data/ParticleNetFromMiniAODAK4/PUPPI/Forward/preprocess.json'),
    src = cms.InputTag("pfParticleNetFromMiniAODAK4PuppiForwardTagInfosSlimmedPuppiWithDeepTags")
)


process.pfParticleNetFromMiniAODAK4PuppiForwardTagInfosSlimmedPuppiWithDeepTags = cms.EDProducer("ParticleNetFeatureEvaluator",
    electrons = cms.InputTag("slimmedElectrons"),
    include_neutrals = cms.bool(True),
    jet_radius = cms.double(0.4),
    jets = cms.InputTag("updatedPatJetsSlimmedPuppiWithDeepTags"),
    losttracks = cms.InputTag("lostTracks"),
    max_dr_for_losttrack = cms.double(0.4),
    max_eta_for_taus = cms.double(2.5),
    max_jet_eta = cms.double(4.7),
    mightGet = cms.optional.untracked.vstring,
    min_jet_eta = cms.double(2.5),
    min_jet_pt = cms.double(15),
    min_pt_for_losttrack = cms.double(1),
    min_pt_for_pfcandidates = cms.double(-1),
    min_pt_for_taus = cms.double(20),
    min_pt_for_track_properties = cms.double(-1),
    muons = cms.InputTag("slimmedMuons"),
    pf_candidates = cms.InputTag("packedPFCandidates"),
    photons = cms.InputTag("slimmedPhotons"),
    secondary_vertices = cms.InputTag("slimmedSecondaryVertices"),
    taus = cms.InputTag("slimmedTaus"),
    vertices = cms.InputTag("offlineSlimmedPrimaryVertices")
)


process.pfParticleNetFromMiniAODAK8DiscriminatorsJetTagsSlimmedAK8DeepTags = cms.EDProducer("BTagProbabilityToDiscriminator",
    discriminators = cms.VPSet(
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probHbb"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD2hf"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD1hf"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD0hf")),
            name = cms.string('HbbvsQCD'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probHbb"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probHcc"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD2hf"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD1hf"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD0hf")),
            name = cms.string('HccvsQCD'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probHcc"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probHtt"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD2hf"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD1hf"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD0hf")),
            name = cms.string('HttvsQCD'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probHtt"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probHtm"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD2hf"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD1hf"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD0hf")),
            name = cms.string('HtmvsQCD'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probHtm"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probHte"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD2hf"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD1hf"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD0hf")),
            name = cms.string('HtevsQCD'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probHte"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probHqq"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD2hf"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD1hf"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD0hf")),
            name = cms.string('HqqvsQCD'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probHqq"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probHgg"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD2hf"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD1hf"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD0hf")),
            name = cms.string('HggvsQCD'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probHgg"))
        )
    )
)


process.pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags = cms.EDProducer("BoostedJetONNXJetTagsProducer",
    debugMode = cms.untracked.bool(False),
    flav_names = cms.vstring(
        'probHtt',
        'probHtm',
        'probHte',
        'probHbb',
        'probHcc',
        'probHqq',
        'probHgg',
        'probQCD2hf',
        'probQCD1hf',
        'probQCD0hf',
        'masscorr'
    ),
    mightGet = cms.optional.untracked.vstring,
    model_path = cms.FileInPath('RecoBTag/Combined/data/ParticleNetFromMiniAODAK8/particle-net.onnx'),
    preprocessParams = cms.PSet(

    ),
    preprocess_json = cms.string('RecoBTag/Combined/data/ParticleNetFromMiniAODAK8/preprocess.json'),
    src = cms.InputTag("pfParticleNetFromMiniAODAK8TagInfosSlimmedAK8DeepTags")
)


process.pfParticleNetFromMiniAODAK8TagInfosSlimmedAK8DeepTags = cms.EDProducer("ParticleNetFeatureEvaluator",
    electrons = cms.InputTag("slimmedElectrons"),
    include_neutrals = cms.bool(True),
    jet_radius = cms.double(0.8),
    jets = cms.InputTag("updatedPatJetsSlimmedAK8DeepTags"),
    losttracks = cms.InputTag("lostTracks"),
    max_dr_for_losttrack = cms.double(0.4),
    max_eta_for_taus = cms.double(2.5),
    max_jet_eta = cms.double(2.5),
    mightGet = cms.optional.untracked.vstring,
    min_jet_eta = cms.double(0),
    min_jet_pt = cms.double(180),
    min_pt_for_losttrack = cms.double(1),
    min_pt_for_pfcandidates = cms.double(-1),
    min_pt_for_taus = cms.double(20),
    min_pt_for_track_properties = cms.double(-1),
    muons = cms.InputTag("slimmedMuons"),
    pf_candidates = cms.InputTag("packedPFCandidates"),
    photons = cms.InputTag("slimmedPhotons"),
    secondary_vertices = cms.InputTag("slimmedSecondaryVertices"),
    taus = cms.InputTag("slimmedTaus"),
    vertices = cms.InputTag("offlineSlimmedPrimaryVertices")
)


process.pfParticleNetJetTagsSlimmedAK8DeepTags = cms.EDProducer("BoostedJetONNXJetTagsProducer",
    debugMode = cms.untracked.bool(False),
    flav_names = cms.vstring(
        'probTbcq',
        'probTbqq',
        'probTbc',
        'probTbq',
        'probTbel',
        'probTbmu',
        'probTbta',
        'probWcq',
        'probWqq',
        'probZbb',
        'probZcc',
        'probZqq',
        'probHbb',
        'probHcc',
        'probHqqqq',
        'probQCDbb',
        'probQCDcc',
        'probQCDb',
        'probQCDc',
        'probQCDothers'
    ),
    mightGet = cms.optional.untracked.vstring,
    model_path = cms.FileInPath('RecoBTag/Combined/data/ParticleNetAK8/General/V01/modelfile/model.onnx'),
    preprocessParams = cms.PSet(

    ),
    preprocess_json = cms.string('RecoBTag/Combined/data/ParticleNetAK8/General/V01/preprocess.json'),
    src = cms.InputTag("pfParticleNetTagInfosSlimmedAK8DeepTags")
)


process.pfParticleNetTagInfosSlimmedAK8DeepTags = cms.EDProducer("DeepBoostedJetTagInfoProducer",
    flip_ip_sign = cms.bool(False),
    include_neutrals = cms.bool(True),
    jet_radius = cms.double(0.8),
    jets = cms.InputTag("updatedPatJetsSlimmedAK8DeepTags"),
    max_jet_eta = cms.double(99),
    mightGet = cms.optional.untracked.vstring,
    min_jet_pt = cms.double(150),
    min_pt_for_pfcandidates = cms.double(-1),
    min_pt_for_track_properties = cms.double(-1),
    min_puppi_wgt = cms.double(0.01),
    pf_candidates = cms.InputTag("packedPFCandidates"),
    puppi_value_map = cms.InputTag("packedpuppi"),
    secondary_vertices = cms.InputTag("slimmedSecondaryVertices"),
    sip3dSigMax = cms.double(-1),
    sort_by_sip2dsig = cms.bool(False),
    use_hlt_features = cms.bool(False),
    use_puppiP4 = cms.bool(False),
    vertex_associator = cms.InputTag(""),
    vertices = cms.InputTag("offlineSlimmedPrimaryVertices")
)


process.pfParticleTransformerAK4DiscriminatorsJetTagsSlimmedDeepFlavour = cms.EDProducer("BTagProbabilityToDiscriminator",
    discriminators = cms.VPSet(
        cms.PSet(
            denominator = cms.VInputTag(
                cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probbb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","problepb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probc"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probuds"),
                cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probg")
            ),
            name = cms.string('BvsAll'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probbb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","problepb"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probbb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","problepb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probuds"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probg")),
            name = cms.string('BvsL'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probbb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","problepb"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probc"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probuds"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probg")),
            name = cms.string('CvsL'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probc"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probc"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probbb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","problepb")),
            name = cms.string('CvsB'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probc"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probuds"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probg")),
            name = cms.string('QvsG'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probuds"))
        )
    )
)


process.pfParticleTransformerAK4DiscriminatorsJetTagsSlimmedPuppiWithDeepTags = cms.EDProducer("BTagProbabilityToDiscriminator",
    discriminators = cms.VPSet(
        cms.PSet(
            denominator = cms.VInputTag(
                cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probbb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","problepb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probc"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probuds"),
                cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probg")
            ),
            name = cms.string('BvsAll'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probbb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","problepb"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probbb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","problepb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probuds"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probg")),
            name = cms.string('BvsL'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probbb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","problepb"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probc"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probuds"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probg")),
            name = cms.string('CvsL'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probc"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probc"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probbb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","problepb")),
            name = cms.string('CvsB'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probc"))
        ),
        cms.PSet(
            denominator = cms.VInputTag(cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probuds"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probg")),
            name = cms.string('QvsG'),
            numerator = cms.VInputTag(cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probuds"))
        )
    )
)


process.pfParticleTransformerAK4JetTagsSlimmedDeepFlavour = cms.EDProducer("ParticleTransformerAK4ONNXJetTagsProducer",
    flav_names = cms.vstring(
        'probb',
        'probbb',
        'problepb',
        'probc',
        'probuds',
        'probg'
    ),
    input_names = cms.vstring(
        'input_1',
        'input_2',
        'input_3',
        'input_4',
        'input_5',
        'input_6'
    ),
    mightGet = cms.optional.untracked.vstring,
    model_path = cms.FileInPath('RecoBTag/Combined/data/RobustParTAK4/PUPPI/V00/RobustParTAK4.onnx'),
    output_names = cms.vstring('softmax'),
    src = cms.InputTag("pfParticleTransformerAK4TagInfosSlimmedDeepFlavour")
)


process.pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags = cms.EDProducer("ParticleTransformerAK4ONNXJetTagsProducer",
    flav_names = cms.vstring(
        'probb',
        'probbb',
        'problepb',
        'probc',
        'probuds',
        'probg'
    ),
    input_names = cms.vstring(
        'input_1',
        'input_2',
        'input_3',
        'input_4',
        'input_5',
        'input_6'
    ),
    mightGet = cms.optional.untracked.vstring,
    model_path = cms.FileInPath('RecoBTag/Combined/data/RobustParTAK4/PUPPI/V00/RobustParTAK4.onnx'),
    output_names = cms.vstring('softmax'),
    src = cms.InputTag("pfParticleTransformerAK4TagInfosSlimmedPuppiWithDeepTags")
)


process.pfParticleTransformerAK4TagInfosSlimmedDeepFlavour = cms.EDProducer("ParticleTransformerAK4TagInfoProducer",
    candidates = cms.InputTag("packedPFCandidates"),
    fallback_puppi_weight = cms.bool(False),
    fallback_vertex_association = cms.bool(False),
    flip = cms.bool(False),
    is_weighted_jet = cms.bool(False),
    jet_radius = cms.double(0.4),
    jets = cms.InputTag("updatedPatJetsSlimmedDeepFlavour"),
    max_jet_eta = cms.double(2.5),
    mightGet = cms.optional.untracked.vstring,
    min_candidate_pt = cms.double(0.95),
    min_jet_pt = cms.double(15),
    puppi_value_map = cms.InputTag("packedpuppi"),
    secondary_vertices = cms.InputTag("slimmedSecondaryVertices"),
    vertex_associator = cms.InputTag(""),
    vertices = cms.InputTag("offlineSlimmedPrimaryVertices")
)


process.pfParticleTransformerAK4TagInfosSlimmedPuppiWithDeepTags = cms.EDProducer("ParticleTransformerAK4TagInfoProducer",
    candidates = cms.InputTag("packedPFCandidates"),
    fallback_puppi_weight = cms.bool(False),
    fallback_vertex_association = cms.bool(False),
    flip = cms.bool(False),
    is_weighted_jet = cms.bool(True),
    jet_radius = cms.double(0.4),
    jets = cms.InputTag("updatedPatJetsSlimmedPuppiWithDeepTags"),
    max_jet_eta = cms.double(2.5),
    mightGet = cms.optional.untracked.vstring,
    min_candidate_pt = cms.double(0.95),
    min_jet_pt = cms.double(15),
    puppi_value_map = cms.InputTag("packedpuppi"),
    secondary_vertices = cms.InputTag("slimmedSecondaryVertices"),
    vertex_associator = cms.InputTag(""),
    vertices = cms.InputTag("offlineSlimmedPrimaryVertices")
)


process.pfPileUpForBoostedTaus = cms.EDProducer("PFPileUp",
    DzCutForChargedFromPUVtxs = cms.double(0.2),
    NumOfPUVtxsForCharged = cms.uint32(0),
    PFCandidates = cms.InputTag("particleFlow"),
    Vertices = cms.InputTag("offlinePrimaryVertices"),
    checkClosestZVertex = cms.bool(False),
    enable = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    useVertexAssociation = cms.bool(False),
    verbose = cms.untracked.bool(False),
    vertexAssociation = cms.InputTag(""),
    vertexAssociationQuality = cms.int32(0)
)


process.pfPileUpIsoPFBRECO = cms.EDProducer("PFPileUp",
    DzCutForChargedFromPUVtxs = cms.double(0.2),
    NumOfPUVtxsForCharged = cms.uint32(0),
    PFCandidates = cms.InputTag("particleFlowPtrs"),
    Vertices = cms.InputTag("offlinePrimaryVertices"),
    checkClosestZVertex = cms.bool(True),
    enable = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    useVertexAssociation = cms.bool(False),
    verbose = cms.untracked.bool(False),
    vertexAssociation = cms.InputTag(""),
    vertexAssociationQuality = cms.int32(0)
)


process.pfPileUpIsoPFBRECOBoosted = cms.EDProducer("PFPileUp",
    DzCutForChargedFromPUVtxs = cms.double(0.2),
    NumOfPUVtxsForCharged = cms.uint32(0),
    PFCandidates = cms.InputTag("particleFlowPtrs"),
    Vertices = cms.InputTag("offlinePrimaryVertices"),
    checkClosestZVertex = cms.bool(True),
    enable = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    useVertexAssociation = cms.bool(False),
    verbose = cms.untracked.bool(False),
    vertexAssociation = cms.InputTag(""),
    vertexAssociationQuality = cms.int32(0)
)


process.pfPileUpJME = cms.EDProducer("PFPileUp",
    DzCutForChargedFromPUVtxs = cms.double(0.2),
    NumOfPUVtxsForCharged = cms.uint32(2),
    PFCandidates = cms.InputTag("particleFlowPtrs"),
    Vertices = cms.InputTag("goodOfflinePrimaryVertices"),
    checkClosestZVertex = cms.bool(False),
    enable = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    useVertexAssociation = cms.bool(False),
    verbose = cms.untracked.bool(False),
    vertexAssociation = cms.InputTag(""),
    vertexAssociationQuality = cms.int32(0)
)


process.pfPileUpJMENoHF = cms.EDProducer("PFPileUp",
    DzCutForChargedFromPUVtxs = cms.double(0.2),
    NumOfPUVtxsForCharged = cms.uint32(2),
    PFCandidates = cms.InputTag("tmpPFCandCollPtrNoHF"),
    Vertices = cms.InputTag("goodOfflinePrimaryVerticesNoHF"),
    checkClosestZVertex = cms.bool(False),
    enable = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    useVertexAssociation = cms.bool(False),
    verbose = cms.untracked.bool(False),
    vertexAssociation = cms.InputTag(""),
    vertexAssociationQuality = cms.int32(0)
)


process.pfPileUpPFBRECO = cms.EDProducer("PFPileUp",
    DzCutForChargedFromPUVtxs = cms.double(0.2),
    NumOfPUVtxsForCharged = cms.uint32(0),
    PFCandidates = cms.InputTag("particleFlowPtrs"),
    Vertices = cms.InputTag("offlinePrimaryVertices"),
    checkClosestZVertex = cms.bool(True),
    enable = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    useVertexAssociation = cms.bool(False),
    verbose = cms.untracked.bool(False),
    vertexAssociation = cms.InputTag(""),
    vertexAssociationQuality = cms.int32(0)
)


process.pfPositiveDeepCMVAJetTags = cms.EDProducer("DeepFlavourJetTagsProducer",
    NNConfig = cms.FileInPath('RecoBTag/Combined/data/Model_DeepCMVA.json'),
    checkSVForDefaults = cms.bool(False),
    meanPadding = cms.bool(False),
    src = cms.InputTag("pfDeepCMVAPositiveTagInfos"),
    toAdd = cms.PSet(

    )
)


process.pfPositiveDeepCSVJetTags = cms.EDProducer("DeepFlavourJetTagsProducer",
    NNConfig = cms.FileInPath('RecoBTag/Combined/data/DeepCSV_PhaseI.json'),
    checkSVForDefaults = cms.bool(True),
    meanPadding = cms.bool(True),
    src = cms.InputTag("pfDeepCSVPositiveTagInfos"),
    toAdd = cms.PSet(

    )
)


process.pfRecoTauDiscriminationAgainstElectron = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_BremCombined = cms.bool(False),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    ApplyCut_EcalCrackCut = cms.bool(False),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ApplyCut_EmFraction = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    ApplyCut_PFElectronMVA = cms.bool(True),
    BremCombined_Fraction = cms.double(0.99),
    BremCombined_HOP = cms.double(0.1),
    BremCombined_Mass = cms.double(0.55),
    BremCombined_StripSize = cms.double(0.03),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    EOverPLead_maxValue = cms.double(1.8),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    EmFraction_maxValue = cms.double(0.9),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    HcalTotOverPLead_minValue = cms.double(0.1),
    PFElectronMVA_maxValue = cms.double(-0.1),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding"),
            cut = cms.double(0.5)
        )
    )
)


process.pfRecoTauDiscriminationAgainstElectronDeadECAL = cms.EDProducer("PFRecoTauDiscriminationAgainstElectronDeadECAL",
    PFTauProducer = cms.InputTag("fixme"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('AND'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("fixme"),
            cut = cms.double(0)
        ),
        leadTrack = cms.PSet(
            Producer = cms.InputTag("fixme"),
            cut = cms.double(0)
        )
    ),
    dR = cms.double(0.08),
    extrapolateToECalEntrance = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    minStatus = cms.uint32(12),
    verbosity = cms.int32(0)
)


process.pfRecoTauDiscriminationAgainstElectronMVA6 = cms.EDProducer("PFRecoTauDiscriminationAgainstElectronMVA6",
    PFTauProducer = cms.InputTag("fixme"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('AND'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("fixme"),
            cut = cms.double(0)
        ),
        leadTrack = cms.PSet(
            Producer = cms.InputTag("fixme"),
            cut = cms.double(0)
        )
    ),
    hgcalElectronIDs = cms.VInputTag(),
    isPhase2 = cms.bool(False),
    loadMVAfromDB = cms.bool(True),
    method = cms.string('BDTG'),
    mightGet = cms.optional.untracked.vstring,
    minMVANoEleMatchWOgWOgsfBL = cms.double(0),
    minMVANoEleMatchWOgWOgsfEC = cms.double(0),
    minMVANoEleMatchWgWOgsfBL = cms.double(0),
    minMVANoEleMatchWgWOgsfEC = cms.double(0),
    minMVAWOgWgsfBL = cms.double(0),
    minMVAWOgWgsfEC = cms.double(0),
    minMVAWgWgsfBL = cms.double(0),
    minMVAWgWgsfEC = cms.double(0),
    mvaName_NoEleMatch_wGwoGSF_BL = cms.string('gbr_NoEleMatch_wGwoGSF_BL'),
    mvaName_NoEleMatch_wGwoGSF_EC = cms.string('gbr_NoEleMatch_wGwoGSF_EC'),
    mvaName_NoEleMatch_woGwoGSF_BL = cms.string('gbr_NoEleMatch_woGwoGSF_BL'),
    mvaName_NoEleMatch_woGwoGSF_EC = cms.string('gbr_NoEleMatch_woGwoGSF_EC'),
    mvaName_wGwGSF_BL = cms.string('gbr_wGwGSF_BL'),
    mvaName_wGwGSF_EC = cms.string('gbr_wGwGSF_EC'),
    mvaName_woGwGSF_BL = cms.string('gbr_woGwGSF_BL'),
    mvaName_woGwGSF_EC = cms.string('gbr_woGwGSF_EC'),
    returnMVA = cms.bool(True),
    srcElectrons = cms.InputTag("fixme"),
    usePhiAtEcalEntranceExtrapolation = cms.bool(False),
    verbosity = cms.int32(0),
    vetoEcalCracks = cms.bool(True)
)


process.pfRecoTauDiscriminationAgainstMuon = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    HoPMin = cms.double(0.2),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding"),
            cut = cms.double(0.5)
        )
    ),
    a = cms.double(0.5),
    b = cms.double(0.5),
    c = cms.double(0.0),
    checkNumMatches = cms.bool(False),
    discriminatorOption = cms.string('noSegMatch'),
    maxNumberOfMatches = cms.int32(0)
)


process.pfRecoTauDiscriminationAgainstMuon2Container = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon2Container",
    IDWPdefinitions = cms.VPSet(cms.PSet(
        HoPMin = cms.double(0.2),
        IDname = cms.string('pfRecoTauDiscriminationAgainstMuon2Container'),
        discriminatorOption = cms.string('loose'),
        doCaloMuonVeto = cms.bool(False),
        maxNumberOfHitsLast2Stations = cms.int32(0),
        maxNumberOfMatches = cms.int32(0)
    )),
    IDdefinitions = cms.VPSet(),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding"),
            cut = cms.double(0.5)
        )
    ),
    dRmuonMatch = cms.double(0.3),
    dRmuonMatchLimitedToJetArea = cms.bool(False),
    maskHitsCSC = cms.vint32(0, 0, 0, 0),
    maskHitsDT = cms.vint32(0, 0, 0, 0),
    maskHitsRPC = cms.vint32(0, 0, 0, 0),
    maskMatchesCSC = cms.vint32(1, 0, 0, 0),
    maskMatchesDT = cms.vint32(0, 0, 0, 0),
    maskMatchesRPC = cms.vint32(0, 0, 0, 0),
    mightGet = cms.optional.untracked.vstring,
    minPtMatchedMuon = cms.double(5),
    srcMuons = cms.InputTag("muons"),
    verbosity = cms.int32(0)
)


process.pfRecoTauDiscriminationAgainstMuonMVA = cms.EDProducer("PFRecoTauDiscriminationAgainstMuonMVA",
    PFTauProducer = cms.InputTag("pfTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding"),
            cut = cms.double(0.5)
        )
    ),
    dRmuonMatch = cms.double(0.3),
    inputFileName = cms.FileInPath('RecoTauTag/RecoTau/data/emptyMVAinputFile'),
    loadMVAfromDB = cms.bool(True),
    mvaMin = cms.double(0.0),
    mvaName = cms.string('againstMuonMVA'),
    returnMVA = cms.bool(True),
    srcMuons = cms.InputTag("muons"),
    verbosity = cms.int32(0)
)


process.pfRecoTauDiscriminationByIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolationContainer",
    IDWPdefinitions = cms.VPSet(),
    IDdefinitions = cms.VPSet(),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding"),
            cut = cms.double(0.5)
        )
    ),
    WeightECALIsolation = cms.double(1),
    applyFootprintCorrection = cms.bool(False),
    applyRhoCorrection = cms.bool(False),
    customOuterCone = cms.double(-1),
    deltaBetaFactor = cms.string('0.38'),
    deltaBetaPUTrackPtCutOverride = cms.bool(False),
    deltaBetaPUTrackPtCutOverride_val = cms.double(-1.5),
    footprintCorrections = cms.VPSet(
        cms.PSet(
            offset = cms.string('0.0'),
            selection = cms.string('decayMode() = 0')
        ),
        cms.PSet(
            offset = cms.string('0.0'),
            selection = cms.string('decayMode() = 1 || decayMode() = 2')
        ),
        cms.PSet(
            offset = cms.string('2.7'),
            selection = cms.string('decayMode() = 5')
        ),
        cms.PSet(
            offset = cms.string('0.0'),
            selection = cms.string('decayMode() = 6')
        ),
        cms.PSet(
            offset = cms.string('max(2.0, 0.22*pt() - 2.0)'),
            selection = cms.string('decayMode() = 10')
        )
    ),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    mightGet = cms.optional.untracked.vstring,
    minTauPtForNoIso = cms.double(-99),
    particleFlowSrc = cms.InputTag("particleFlow"),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            maxDeltaZ = cms.double(0.2),
            maxDeltaZToLeadTrack = cms.double(-1.0),
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.03),
            minGammaEt = cms.double(1.5),
            minTrackHits = cms.uint32(8),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(1.0),
            minTrackVertexWeight = cms.double(-1.0)
        ),
        leadingTrkOrPFCandOption = cms.string('leadPFCand'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        pvFindingAlgo = cms.string('closestInDeltaZ'),
        recoverLeadingTrk = cms.bool(False),
        signalQualityCuts = cms.PSet(
            maxDeltaZ = cms.double(0.4),
            maxDeltaZToLeadTrack = cms.double(-1.0),
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.1),
            minGammaEt = cms.double(1.0),
            minNeutralHadronEt = cms.double(30.0),
            minTrackHits = cms.uint32(3),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(0.5),
            minTrackVertexWeight = cms.double(-1.0)
        ),
        vertexTrackFiltering = cms.bool(False),
        vxAssocQualityCuts = cms.PSet(
            maxTrackChi2 = cms.double(100.0),
            maxTransverseImpactParameter = cms.double(0.1),
            minGammaEt = cms.double(1.0),
            minTrackHits = cms.uint32(3),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(0.5),
            minTrackVertexWeight = cms.double(-1.0)
        )
    ),
    rhoConeSize = cms.double(0.5),
    rhoProducer = cms.InputTag("fixedGridRhoFastjetAll"),
    rhoUEOffsetCorrection = cms.double(1),
    verbosity = cms.int32(0),
    vertexSrc = cms.InputTag("offlinePrimaryVertices")
)


process.pfRecoTauDiscriminationByIsolationContainer = cms.EDProducer("PFRecoTauDiscriminationByIsolationContainer",
    IDWPdefinitions = cms.VPSet(),
    IDdefinitions = cms.VPSet(),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFindingNewDMs"),
            cut = cms.double(0.5)
        ),
        leadTrack = cms.PSet(
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding"),
            cut = cms.double(0.5)
        ),
        preIso = cms.PSet(
            Producer = cms.InputTag("hpsPFTauDiscriminationByLooseChargedIsolation"),
            cut = cms.double(0.5)
        )
    ),
    WeightECALIsolation = cms.double(1),
    applyFootprintCorrection = cms.bool(False),
    applyRhoCorrection = cms.bool(False),
    customOuterCone = cms.double(-1),
    deltaBetaFactor = cms.string('0.38'),
    deltaBetaPUTrackPtCutOverride = cms.bool(False),
    deltaBetaPUTrackPtCutOverride_val = cms.double(-1.5),
    footprintCorrections = cms.VPSet(),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    mightGet = cms.optional.untracked.vstring,
    minTauPtForNoIso = cms.double(-99),
    particleFlowSrc = cms.InputTag("particleFlow"),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            maxDeltaZ = cms.double(0.2),
            maxDeltaZToLeadTrack = cms.double(-1),
            maxTrackChi2 = cms.double(100),
            maxTransverseImpactParameter = cms.double(0.03),
            minGammaEt = cms.double(1.5),
            minTrackHits = cms.uint32(8),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(1),
            minTrackVertexWeight = cms.double(-1),
            useTracksInsteadOfPFHadrons = cms.optional.bool
        ),
        leadingTrkOrPFCandOption = cms.string('leadPFCand'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        pvFindingAlgo = cms.string('closestInDeltaZ'),
        recoverLeadingTrk = cms.bool(False),
        signalQualityCuts = cms.PSet(
            maxDeltaZ = cms.double(0.4),
            maxDeltaZToLeadTrack = cms.double(-1),
            maxTrackChi2 = cms.double(100),
            maxTransverseImpactParameter = cms.double(0.1),
            minGammaEt = cms.double(1),
            minNeutralHadronEt = cms.double(30),
            minTrackHits = cms.uint32(3),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(0.5),
            minTrackVertexWeight = cms.double(-1),
            useTracksInsteadOfPFHadrons = cms.optional.bool
        ),
        vertexTrackFiltering = cms.bool(False),
        vxAssocQualityCuts = cms.PSet(
            maxTrackChi2 = cms.double(100),
            maxTransverseImpactParameter = cms.double(0.1),
            minGammaEt = cms.double(1),
            minTrackHits = cms.uint32(3),
            minTrackPixelHits = cms.uint32(0),
            minTrackPt = cms.double(0.5),
            minTrackVertexWeight = cms.double(-1),
            useTracksInsteadOfPFHadrons = cms.optional.bool
        )
    ),
    rhoConeSize = cms.double(0.5),
    rhoProducer = cms.InputTag("fixedGridRhoFastjetAll"),
    rhoUEOffsetCorrection = cms.double(1),
    verbosity = cms.int32(0),
    vertexSrc = cms.InputTag("offlinePrimaryVertices")
)


process.pfRecoTauDiscriminationByLeadingObjectPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    UseOnlyChargedHadrons = cms.bool(False)
)


process.pfRecoTauDiscriminationByLeadingTrackFinding = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.pfRecoTauDiscriminationByMVAIsolationRun2 = cms.EDProducer("PFRecoTauDiscriminationByMVAIsolationRun2",
    PFTauProducer = cms.InputTag("fixme"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('AND'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("fixme"),
            cut = cms.double(0)
        ),
        leadTrack = cms.PSet(
            Producer = cms.InputTag("fixme"),
            cut = cms.double(0)
        )
    ),
    inputFileName = cms.optional.FileInPath,
    inputIDNameSuffix = cms.string(''),
    loadMVAfromDB = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    mvaName = cms.string('tauIdMVAnewDMwLT'),
    mvaOpt = cms.string('newDMwLT'),
    srcBasicTauDiscriminators = cms.InputTag("hpsPFTauBasicDiscriminators"),
    srcTauTransverseImpactParameters = cms.InputTag(""),
    verbosity = cms.int32(0)
)


process.pfRecoTauTagInfoProducer = cms.EDProducer("PFRecoTauTagInfoProducer",
    ChargedHadrCand_AssociationCone = cms.double(0.8),
    ChargedHadrCand_tkPVmaxDZ = cms.double(0.2),
    ChargedHadrCand_tkmaxChi2 = cms.double(100),
    ChargedHadrCand_tkmaxipt = cms.double(0.03),
    ChargedHadrCand_tkminPixelHitsn = cms.int32(0),
    ChargedHadrCand_tkminPt = cms.double(0.5),
    ChargedHadrCand_tkminTrackerHitsn = cms.int32(3),
    GammaCand_EcalclusMinEt = cms.double(1),
    NeutrHadrCand_HcalclusMinEt = cms.double(1),
    PFCandidateProducer = cms.InputTag("particleFlow"),
    PFJetTracksAssociatorProducer = cms.InputTag("ak4PFJetTracksAssociatorAtVertex"),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    UsePVconstraint = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    smearedPVsigmaX = cms.double(0.0015),
    smearedPVsigmaY = cms.double(0.0015),
    smearedPVsigmaZ = cms.double(0.005),
    tkPVmaxDZ = cms.double(0.2),
    tkmaxChi2 = cms.double(100),
    tkmaxipt = cms.double(0.03),
    tkminPixelHitsn = cms.int32(0),
    tkminPt = cms.double(0.5),
    tkminTrackerHitsn = cms.int32(3)
)


process.pfRecoTauTagInfoProducerBoosted = cms.EDProducer("PFRecoTauTagInfoProducer",
    ChargedHadrCand_AssociationCone = cms.double(0.8),
    ChargedHadrCand_tkPVmaxDZ = cms.double(0.2),
    ChargedHadrCand_tkmaxChi2 = cms.double(100),
    ChargedHadrCand_tkmaxipt = cms.double(0.03),
    ChargedHadrCand_tkminPixelHitsn = cms.int32(0),
    ChargedHadrCand_tkminPt = cms.double(0.5),
    ChargedHadrCand_tkminTrackerHitsn = cms.int32(3),
    GammaCand_EcalclusMinEt = cms.double(1),
    NeutrHadrCand_HcalclusMinEt = cms.double(1),
    PFCandidateProducer = cms.InputTag("particleFlow"),
    PFJetTracksAssociatorProducer = cms.InputTag("ak4PFJetTracksAssociatorAtVertexBoosted"),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    UsePVconstraint = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    smearedPVsigmaX = cms.double(0.0015),
    smearedPVsigmaY = cms.double(0.0015),
    smearedPVsigmaZ = cms.double(0.005),
    tkPVmaxDZ = cms.double(0.2),
    tkmaxChi2 = cms.double(100),
    tkmaxipt = cms.double(0.03),
    tkminPixelHitsn = cms.int32(0),
    tkminPt = cms.double(0.5),
    tkminTrackerHitsn = cms.int32(3)
)


process.pfSecondaryVertexTagInfos = cms.EDProducer("CandSecondaryVertexProducer",
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    constraint = cms.string('BeamSpot'),
    extSVCollection = cms.InputTag("secondaryVertices"),
    extSVDeltaRToJet = cms.double(0.3),
    minimumTrackWeight = cms.double(0.5),
    trackIPTagInfos = cms.InputTag("pfImpactParameterTagInfos"),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(1),
        ptMin = cms.double(1.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip3dSig'),
    useExternalSV = cms.bool(False),
    usePVError = cms.bool(True),
    vertexCuts = cms.PSet(
        distSig2dMax = cms.double(99999.9),
        distSig2dMin = cms.double(3.0),
        distSig3dMax = cms.double(99999.9),
        distSig3dMin = cms.double(-99999.9),
        distVal2dMax = cms.double(2.5),
        distVal2dMin = cms.double(0.01),
        distVal3dMax = cms.double(99999.9),
        distVal3dMin = cms.double(-99999.9),
        fracPV = cms.double(0.65),
        massMax = cms.double(6.5),
        maxDeltaRToJetAxis = cms.double(0.4),
        minimumTrackWeight = cms.double(0.5),
        multiplicityMin = cms.uint32(2),
        useTrackWeights = cms.bool(True),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        )
    ),
    vertexReco = cms.PSet(
        finder = cms.string('avr'),
        minweight = cms.double(0.5),
        primcut = cms.double(1.8),
        seccut = cms.double(6.0),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001)
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    )
)


process.pfSecondaryVertexTagInfosAK8PFPuppiSoftDropSubjets = cms.EDProducer("CandSecondaryVertexProducer",
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    constraint = cms.string('BeamSpot'),
    extSVCollection = cms.InputTag("secondaryVertices"),
    extSVDeltaRToJet = cms.double(0.3),
    minimumTrackWeight = cms.double(0.5),
    trackIPTagInfos = cms.InputTag("pfImpactParameterTagInfosAK8PFPuppiSoftDropSubjets"),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(1),
        ptMin = cms.double(1.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip3dSig'),
    useExternalSV = cms.bool(False),
    usePVError = cms.bool(True),
    vertexCuts = cms.PSet(
        distSig2dMax = cms.double(99999.9),
        distSig2dMin = cms.double(3.0),
        distSig3dMax = cms.double(99999.9),
        distSig3dMin = cms.double(-99999.9),
        distVal2dMax = cms.double(2.5),
        distVal2dMin = cms.double(0.01),
        distVal3dMax = cms.double(99999.9),
        distVal3dMin = cms.double(-99999.9),
        fracPV = cms.double(0.65),
        massMax = cms.double(6.5),
        maxDeltaRToJetAxis = cms.double(0.4),
        minimumTrackWeight = cms.double(0.5),
        multiplicityMin = cms.uint32(2),
        useTrackWeights = cms.bool(True),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        )
    ),
    vertexReco = cms.PSet(
        finder = cms.string('avr'),
        minweight = cms.double(0.5),
        primcut = cms.double(1.8),
        seccut = cms.double(6.0),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001)
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    ),
    weights = cms.InputTag("puppi")
)


process.pfSecondaryVertexTagInfosAK8Puppi = cms.EDProducer("CandSecondaryVertexProducer",
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    constraint = cms.string('BeamSpot'),
    extSVCollection = cms.InputTag("secondaryVertices"),
    extSVDeltaRToJet = cms.double(0.3),
    minimumTrackWeight = cms.double(0.5),
    trackIPTagInfos = cms.InputTag("pfImpactParameterTagInfosAK8Puppi"),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(1),
        ptMin = cms.double(1.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip3dSig'),
    useExternalSV = cms.bool(False),
    usePVError = cms.bool(True),
    vertexCuts = cms.PSet(
        distSig2dMax = cms.double(99999.9),
        distSig2dMin = cms.double(3.0),
        distSig3dMax = cms.double(99999.9),
        distSig3dMin = cms.double(-99999.9),
        distVal2dMax = cms.double(2.5),
        distVal2dMin = cms.double(0.01),
        distVal3dMax = cms.double(99999.9),
        distVal3dMin = cms.double(-99999.9),
        fracPV = cms.double(0.65),
        massMax = cms.double(6.5),
        maxDeltaRToJetAxis = cms.double(0.4),
        minimumTrackWeight = cms.double(0.5),
        multiplicityMin = cms.uint32(2),
        useTrackWeights = cms.bool(True),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        )
    ),
    vertexReco = cms.PSet(
        finder = cms.string('avr'),
        minweight = cms.double(0.5),
        primcut = cms.double(1.8),
        seccut = cms.double(6.0),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001)
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    ),
    weights = cms.InputTag("puppi")
)


process.pfTrackCountingHighEffBJetTagsPuppi = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('candidateTrackCounting3D2ndComputer'),
    tagInfos = cms.VInputTag(cms.InputTag("pfImpactParameterTagInfosPuppi"))
)


process.pfeGammaToCandidate = cms.EDProducer("PFEGammaToCandidate",
    electron2pf = cms.InputTag("reducedEgamma","reducedGsfElectronPfCandMap"),
    electrons = cms.InputTag("selectedPatElectrons"),
    mightGet = cms.optional.untracked.vstring,
    photon2pf = cms.InputTag("reducedEgamma","reducedPhotonPfCandMap"),
    photons = cms.InputTag("selectedPatPhotons")
)


process.phPFIsoDepositChargedAllPAT = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(0),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedParticlesPFBRECO")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("reducedEgamma","reducedGedPhotons"),
    trackType = cms.string('candidate')
)


process.phPFIsoDepositChargedPAT = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(0),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedHadronsPFBRECO")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("reducedEgamma","reducedGedPhotons"),
    trackType = cms.string('candidate')
)


process.phPFIsoDepositGammaPAT = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('PFCandWithSuperClusterExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(0),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        MissHitSCMatch_Veto = cms.bool(False),
        SCMatch_Veto = cms.bool(True),
        inputCandView = cms.InputTag("pfAllPhotonsPFBRECO")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("reducedEgamma","reducedGedPhotons"),
    trackType = cms.string('candidate')
)


process.phPFIsoDepositNeutralPAT = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(0),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllNeutralHadronsPFBRECO")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("reducedEgamma","reducedGedPhotons"),
    trackType = cms.string('candidate')
)


process.phPFIsoDepositPUPAT = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(0),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfPileUpAllChargedParticlesPFBRECO")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("reducedEgamma","reducedGedPhotons"),
    trackType = cms.string('candidate')
)


process.phPFIsoValueCharged03PFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("phPFIsoDepositChargedPAT"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    ))
)


process.phPFIsoValueCharged04PFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("phPFIsoDepositChargedPAT"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    ))
)


process.phPFIsoValueChargedAll03PFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("phPFIsoDepositChargedAllPAT"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    ))
)


process.phPFIsoValueChargedAll04PFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("phPFIsoDepositChargedAllPAT"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    ))
)


process.phPFIsoValueGamma03PFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("phPFIsoDepositGammaPAT"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.05)'),
        weight = cms.string('1')
    ))
)


process.phPFIsoValueGamma04PFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("phPFIsoDepositGammaPAT"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.05)'),
        weight = cms.string('1')
    ))
)


process.phPFIsoValueNeutral03PFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("phPFIsoDepositNeutralPAT"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    ))
)


process.phPFIsoValueNeutral04PFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("phPFIsoDepositNeutralPAT"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    ))
)


process.phPFIsoValuePU03PFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("phPFIsoDepositPUPAT"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    ))
)


process.phPFIsoValuePU04PFIdPAT = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("phPFIsoDepositPUPAT"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    ))
)


process.photonCore = cms.EDProducer("PhotonCoreProducer",
    conversionProducer = cms.InputTag(""),
    endcapOnly = cms.bool(False),
    minSCEt = cms.double(10.0),
    photonCoreCollection = cms.string(''),
    pixelSeedProducer = cms.InputTag("electronMergedSeeds"),
    risolveConversionAmbiguity = cms.bool(True),
    scHybridBarrelProducer = cms.InputTag("correctedHybridSuperClusters"),
    scIslandEndcapProducer = cms.InputTag("correctedMulti5x5SuperClustersWithPreshower")
)


process.photonCoreHGC = cms.EDProducer("PhotonCoreProducer",
    conversionProducer = cms.InputTag(""),
    endcapOnly = cms.bool(True),
    minSCEt = cms.double(10.0),
    photonCoreCollection = cms.string(''),
    pixelSeedProducer = cms.InputTag("electronMergedSeeds"),
    risolveConversionAmbiguity = cms.bool(True),
    scHybridBarrelProducer = cms.InputTag(""),
    scIslandEndcapProducer = cms.InputTag("particleFlowSuperClusterHGCal")
)


process.photonMVAValueMapProducer = cms.EDProducer("PhotonMVAValueMapProducer",
    mvaConfigurations = cms.VPSet(
        cms.PSet(
            categoryCuts = cms.vstring(
                'abs(superCluster.eta) <  1.479',
                'abs(superCluster.eta) >= 1.479'
            ),
            effAreasConfigFile = cms.FileInPath('RecoEgamma/PhotonIdentification/data/Spring16/effAreaPhotons_cone03_pfPhotons_90percentBased_3bins.txt'),
            mvaName = cms.string('PhotonMVAEstimator'),
            mvaTag = cms.string('Run2Spring16NonTrigV1'),
            nCategories = cms.int32(2),
            phoIsoCutoff = cms.double(2.5),
            phoIsoPtScalingCoeff = cms.vdouble(0.0053, 0.0034),
            variableDefinition = cms.string('RecoEgamma/PhotonIdentification/data/PhotonMVAEstimatorRun2VariablesSpring16.txt'),
            weightFileNames = cms.vstring(
                'RecoEgamma/PhotonIdentification/data/MVA/Spring16/EB_V1.weights.xml.gz',
                'RecoEgamma/PhotonIdentification/data/MVA/Spring16/EE_V1.weights.xml.gz'
            )
        ),
        cms.PSet(
            categoryCuts = cms.vstring(
                'abs(superCluster.eta) <  1.479',
                'abs(superCluster.eta) >= 1.479'
            ),
            mvaName = cms.string('PhotonMVAEstimator'),
            mvaTag = cms.string('RunIIFall17v1p1'),
            nCategories = cms.int32(2),
            variableDefinition = cms.string('RecoEgamma/PhotonIdentification/data/PhotonMVAEstimatorRun2VariablesFall17V1p1.txt'),
            weightFileNames = cms.vstring(
                'RecoEgamma/PhotonIdentification/data/MVA/Fall17/EB_V1.weights.root',
                'RecoEgamma/PhotonIdentification/data/MVA/Fall17/EE_V1.weights.root'
            )
        ),
        cms.PSet(
            categoryCuts = cms.vstring(
                'abs(superCluster.eta) <  1.479',
                'abs(superCluster.eta) >= 1.479'
            ),
            mvaName = cms.string('PhotonMVAEstimator'),
            mvaTag = cms.string('RunIIFall17v2'),
            nCategories = cms.int32(2),
            variableDefinition = cms.string('RecoEgamma/PhotonIdentification/data/PhotonMVAEstimatorRun2VariablesFall17V1p1.txt'),
            weightFileNames = cms.vstring(
                'RecoEgamma/PhotonIdentification/data/MVA/Fall17/EB_V2.weights.root',
                'RecoEgamma/PhotonIdentification/data/MVA/Fall17/EE_V2.weights.root'
            )
        ),
        cms.PSet(
            categoryCuts = cms.vstring(
                'abs(superCluster.eta) <  1.479',
                'abs(superCluster.eta) >= 1.479'
            ),
            mvaName = cms.string('PhotonMVAEstimator'),
            mvaTag = cms.string('RunIIIWinter22v1'),
            nCategories = cms.int32(2),
            variableDefinition = cms.string('RecoEgamma/PhotonIdentification/data/PhotonMVAEstimatorRun3VariablesWinter22V1.txt'),
            weightFileNames = cms.vstring(
                'RecoEgamma/PhotonIdentification/data/MVA/RunIII_Winter22/PhoMVA_ID_EB_V1.weights.root',
                'RecoEgamma/PhotonIdentification/data/MVA/RunIII_Winter22/PhoMVA_ID_EE_V1.weights.root'
            )
        ),
        cms.PSet(
            categoryCuts = cms.vstring(
                'abs(superCluster.eta) <  1.479',
                'abs(superCluster.eta) >= 1.479'
            ),
            mvaName = cms.string('PhotonMVAEstimator'),
            mvaTag = cms.string('PhaseIISummer20v0'),
            nCategories = cms.int32(2),
            variableDefinition = cms.string('RecoEgamma/PhotonIdentification/data/PhotonMVAEstimatorRun2VariablesFall17V1p1.txt'),
            weightFileNames = cms.vstring(
                'RecoEgamma/PhotonIdentification/data/MVA/PhaseII/PhotonID_MVA_barrel_Egamma_PhaseII_weight.xml.gz',
                'RecoEgamma/PhotonIdentification/data/MVA/PhaseII/PhotonID_MVA_barrel_Egamma_PhaseII_weight.xml.gz'
            )
        )
    ),
    src = cms.InputTag("reducedEgamma","reducedGedPhotons")
)


process.photonMatch = cms.EDProducer("MCMatcher",
    checkCharge = cms.bool(True),
    matched = cms.InputTag("prunedGenParticles"),
    maxDPtRel = cms.double(1.0),
    maxDeltaR = cms.double(0.2),
    mcPdgId = cms.vint32(22),
    mcStatus = cms.vint32(1),
    resolveAmbiguities = cms.bool(True),
    resolveByMatchQuality = cms.bool(False),
    src = cms.InputTag("reducedEgamma","reducedGedPhotons")
)


process.pileupJetId = cms.EDProducer("PileupJetIdProducer",
    algos = cms.VPSet(
        cms.PSet(
            JetIdParams = cms.PSet(
                Pt010_Loose = cms.vdouble(-0.95, -0.72, -0.68, -0.47),
                Pt010_Medium = cms.vdouble(0.26, -0.33, -0.54, -0.37),
                Pt010_Tight = cms.vdouble(0.77, 0.38, -0.31, -0.21),
                Pt1020_Loose = cms.vdouble(-0.95, -0.72, -0.68, -0.47),
                Pt1020_Medium = cms.vdouble(0.26, -0.33, -0.54, -0.37),
                Pt1020_Tight = cms.vdouble(0.77, 0.38, -0.31, -0.21),
                Pt2030_Loose = cms.vdouble(-0.88, -0.55, -0.6, -0.43),
                Pt2030_Medium = cms.vdouble(0.68, -0.04, -0.43, -0.3),
                Pt2030_Tight = cms.vdouble(0.9, 0.6, -0.12, -0.13),
                Pt3040_Loose = cms.vdouble(-0.63, -0.18, -0.43, -0.24),
                Pt3040_Medium = cms.vdouble(0.9, 0.36, -0.16, -0.09),
                Pt3040_Tight = cms.vdouble(0.96, 0.82, 0.2, 0.09),
                Pt4050_Loose = cms.vdouble(-0.19, 0.22, -0.13, -0.03),
                Pt4050_Medium = cms.vdouble(0.96, 0.61, 0.14, 0.12),
                Pt4050_Tight = cms.vdouble(0.98, 0.92, 0.47, 0.29)
            ),
            cutBased = cms.bool(False),
            etaBinnedWeights = cms.bool(True),
            impactParTkThreshold = cms.double(1.0),
            label = cms.string('full'),
            nEtaBins = cms.int32(4),
            tmvaMethod = cms.string('JetIDMVAHighPt'),
            tmvaSpectators = cms.vstring(
                'jetPt',
                'jetEta'
            ),
            trainings = cms.VPSet(
                cms.PSet(
                    jEtaMax = cms.double(2.5),
                    jEtaMin = cms.double(0.0),
                    tmvaVariables = cms.vstring(
                        'nvtx',
                        'beta',
                        'dR2Mean',
                        'frac01',
                        'frac02',
                        'frac03',
                        'frac04',
                        'majW',
                        'minW',
                        'jetR',
                        'jetRchg',
                        'nParticles',
                        'nCharged',
                        'ptD',
                        'pull'
                    ),
                    tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL18_Eta0p0To2p5_chs_BDT.weights.xml.gz')
                ),
                cms.PSet(
                    jEtaMax = cms.double(2.75),
                    jEtaMin = cms.double(2.5),
                    tmvaVariables = cms.vstring(
                        'nvtx',
                        'beta',
                        'dR2Mean',
                        'frac01',
                        'frac02',
                        'frac03',
                        'frac04',
                        'majW',
                        'minW',
                        'jetR',
                        'jetRchg',
                        'nParticles',
                        'nCharged',
                        'ptD',
                        'pull'
                    ),
                    tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL18_Eta2p5To2p75_chs_BDT.weights.xml.gz')
                ),
                cms.PSet(
                    jEtaMax = cms.double(3.0),
                    jEtaMin = cms.double(2.75),
                    tmvaVariables = cms.vstring(
                        'nvtx',
                        'beta',
                        'dR2Mean',
                        'frac01',
                        'frac02',
                        'frac03',
                        'frac04',
                        'majW',
                        'minW',
                        'jetR',
                        'jetRchg',
                        'nParticles',
                        'nCharged',
                        'ptD',
                        'pull'
                    ),
                    tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL18_Eta2p75To3p0_chs_BDT.weights.xml.gz')
                ),
                cms.PSet(
                    jEtaMax = cms.double(5.0),
                    jEtaMin = cms.double(3.0),
                    tmvaVariables = cms.vstring(
                        'nvtx',
                        'dR2Mean',
                        'frac01',
                        'frac02',
                        'frac03',
                        'frac04',
                        'majW',
                        'minW',
                        'jetR',
                        'nParticles',
                        'ptD',
                        'pull'
                    ),
                    tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL18_Eta3p0To5p0_chs_BDT.weights.xml.gz')
                )
            ),
            version = cms.int32(-1)
        ),
        cms.PSet(
            JetIdParams = cms.PSet(
                Pt010_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt010_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt010_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt010_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt010_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt010_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt1020_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt1020_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt1020_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt1020_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt1020_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt1020_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt2030_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt2030_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt2030_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt2030_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt2030_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt2030_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt3040_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt3040_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt3040_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt3040_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt3040_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt3040_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt4050_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt4050_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt4050_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt4050_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt4050_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt4050_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0)
            ),
            cutBased = cms.bool(True),
            impactParTkThreshold = cms.double(1.0),
            label = cms.string('cutbased')
        )
    ),
    applyJec = cms.bool(True),
    inputIsCorrected = cms.bool(False),
    jec = cms.string('AK4PFchs'),
    jetids = cms.InputTag(""),
    jets = cms.InputTag("ak4PFJetsCHS"),
    produceJetIds = cms.bool(True),
    residualsFromTxt = cms.bool(False),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    runMvas = cms.bool(True),
    srcConstituentWeights = cms.InputTag(""),
    vertexes = cms.InputTag("offlinePrimaryVertices")
)


process.pileupJetIdCalculator = cms.EDProducer("PileupJetIdProducer",
    algos = cms.VPSet(cms.PSet(
        JetIdParams = cms.PSet(
            Pt010_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt010_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt010_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt010_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt010_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt010_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt1020_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt1020_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt1020_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt1020_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt1020_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt1020_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt2030_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt2030_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt2030_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt2030_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt2030_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt2030_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt3040_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt3040_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt3040_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt3040_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt3040_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt3040_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt4050_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt4050_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt4050_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt4050_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt4050_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
            Pt4050_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0)
        ),
        cutBased = cms.bool(True),
        impactParTkThreshold = cms.double(1.0),
        label = cms.string('cutbased')
    )),
    applyJec = cms.bool(True),
    inputIsCorrected = cms.bool(False),
    jec = cms.string('AK4PFchs'),
    jetids = cms.InputTag(""),
    jets = cms.InputTag("ak4PFJetsCHS"),
    produceJetIds = cms.bool(True),
    residualsFromTxt = cms.bool(False),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    runMvas = cms.bool(False),
    srcConstituentWeights = cms.InputTag(""),
    vertexes = cms.InputTag("offlinePrimaryVertices")
)


process.pileupJetIdEvaluator = cms.EDProducer("PileupJetIdProducer",
    algos = cms.VPSet(
        cms.PSet(
            JetIdParams = cms.PSet(
                Pt010_Loose = cms.vdouble(-0.95, -0.72, -0.68, -0.47),
                Pt010_Medium = cms.vdouble(0.26, -0.33, -0.54, -0.37),
                Pt010_Tight = cms.vdouble(0.77, 0.38, -0.31, -0.21),
                Pt1020_Loose = cms.vdouble(-0.95, -0.72, -0.68, -0.47),
                Pt1020_Medium = cms.vdouble(0.26, -0.33, -0.54, -0.37),
                Pt1020_Tight = cms.vdouble(0.77, 0.38, -0.31, -0.21),
                Pt2030_Loose = cms.vdouble(-0.88, -0.55, -0.6, -0.43),
                Pt2030_Medium = cms.vdouble(0.68, -0.04, -0.43, -0.3),
                Pt2030_Tight = cms.vdouble(0.9, 0.6, -0.12, -0.13),
                Pt3040_Loose = cms.vdouble(-0.63, -0.18, -0.43, -0.24),
                Pt3040_Medium = cms.vdouble(0.9, 0.36, -0.16, -0.09),
                Pt3040_Tight = cms.vdouble(0.96, 0.82, 0.2, 0.09),
                Pt4050_Loose = cms.vdouble(-0.19, 0.22, -0.13, -0.03),
                Pt4050_Medium = cms.vdouble(0.96, 0.61, 0.14, 0.12),
                Pt4050_Tight = cms.vdouble(0.98, 0.92, 0.47, 0.29)
            ),
            cutBased = cms.bool(False),
            etaBinnedWeights = cms.bool(True),
            impactParTkThreshold = cms.double(1.0),
            label = cms.string('full'),
            nEtaBins = cms.int32(4),
            tmvaMethod = cms.string('JetIDMVAHighPt'),
            tmvaSpectators = cms.vstring(
                'jetPt',
                'jetEta'
            ),
            trainings = cms.VPSet(
                cms.PSet(
                    jEtaMax = cms.double(2.5),
                    jEtaMin = cms.double(0.0),
                    tmvaVariables = cms.vstring(
                        'nvtx',
                        'beta',
                        'dR2Mean',
                        'frac01',
                        'frac02',
                        'frac03',
                        'frac04',
                        'majW',
                        'minW',
                        'jetR',
                        'jetRchg',
                        'nParticles',
                        'nCharged',
                        'ptD',
                        'pull'
                    ),
                    tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL18_Eta0p0To2p5_chs_BDT.weights.xml.gz')
                ),
                cms.PSet(
                    jEtaMax = cms.double(2.75),
                    jEtaMin = cms.double(2.5),
                    tmvaVariables = cms.vstring(
                        'nvtx',
                        'beta',
                        'dR2Mean',
                        'frac01',
                        'frac02',
                        'frac03',
                        'frac04',
                        'majW',
                        'minW',
                        'jetR',
                        'jetRchg',
                        'nParticles',
                        'nCharged',
                        'ptD',
                        'pull'
                    ),
                    tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL18_Eta2p5To2p75_chs_BDT.weights.xml.gz')
                ),
                cms.PSet(
                    jEtaMax = cms.double(3.0),
                    jEtaMin = cms.double(2.75),
                    tmvaVariables = cms.vstring(
                        'nvtx',
                        'beta',
                        'dR2Mean',
                        'frac01',
                        'frac02',
                        'frac03',
                        'frac04',
                        'majW',
                        'minW',
                        'jetR',
                        'jetRchg',
                        'nParticles',
                        'nCharged',
                        'ptD',
                        'pull'
                    ),
                    tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL18_Eta2p75To3p0_chs_BDT.weights.xml.gz')
                ),
                cms.PSet(
                    jEtaMax = cms.double(5.0),
                    jEtaMin = cms.double(3.0),
                    tmvaVariables = cms.vstring(
                        'nvtx',
                        'dR2Mean',
                        'frac01',
                        'frac02',
                        'frac03',
                        'frac04',
                        'majW',
                        'minW',
                        'jetR',
                        'nParticles',
                        'ptD',
                        'pull'
                    ),
                    tmvaWeights = cms.FileInPath('RecoJets/JetProducers/data/pileupJetId_UL18_Eta3p0To5p0_chs_BDT.weights.xml.gz')
                )
            ),
            version = cms.int32(-1)
        ),
        cms.PSet(
            JetIdParams = cms.PSet(
                Pt010_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt010_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt010_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt010_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt010_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt010_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt1020_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt1020_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt1020_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt1020_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt1020_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt1020_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt2030_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt2030_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt2030_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt2030_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt2030_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt2030_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt3040_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt3040_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt3040_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt3040_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt3040_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt3040_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt4050_BetaStarLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt4050_BetaStarMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt4050_BetaStarTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt4050_RMSLoose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt4050_RMSMedium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
                Pt4050_RMSTight = cms.vdouble(-999.0, -999.0, -999.0, -999.0)
            ),
            cutBased = cms.bool(True),
            impactParTkThreshold = cms.double(1.0),
            label = cms.string('cutbased')
        )
    ),
    applyJec = cms.bool(True),
    inputIsCorrected = cms.bool(False),
    jec = cms.string('AK4PFchs'),
    jetids = cms.InputTag("pileupJetIdCalculator"),
    jets = cms.InputTag("ak4PFJetsCHS"),
    produceJetIds = cms.bool(False),
    residualsFromTxt = cms.bool(False),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    runMvas = cms.bool(True),
    srcConstituentWeights = cms.InputTag(""),
    vertexes = cms.InputTag("offlinePrimaryVertices")
)


process.prefiringweight = cms.EDProducer("L1PrefiringWeightProducer",
    DataEraECAL = cms.string('None'),
    DataEraMuon = cms.string('20172018'),
    JetMaxMuonFraction = cms.double(0.5),
    L1Maps = cms.string('L1PrefiringMaps.root'),
    L1MuonParametrizations = cms.string('L1MuonPrefiringParametriations.root'),
    PrefiringRateSystematicUnctyECAL = cms.double(0.2),
    PrefiringRateSystematicUnctyMuon = cms.double(0.2),
    TheJets = cms.InputTag("slimmedJets"),
    TheMuons = cms.InputTag("slimmedMuons"),
    ThePhotons = cms.InputTag("slimmedPhotons"),
    UseJetEMPt = cms.bool(False),
    mightGet = cms.optional.untracked.vstring
)


process.primaryVertexAssociation = cms.EDProducer("PFCandidatePrimaryVertexSorter",
    assignment = cms.PSet(
        DzCutForChargedFromPUVtxs = cms.double(0.2),
        EtaMinUseDz = cms.double(-1),
        NumOfPUVtxsForCharged = cms.uint32(0),
        OnlyUseFirstDz = cms.bool(False),
        PtMaxCharged = cms.double(-1),
        maxDistanceToJetAxis = cms.double(0.07),
        maxDtSigForPrimaryAssignment = cms.double(3),
        maxDxyForJetAxisAssigment = cms.double(0.1),
        maxDxyForNotReconstructedPrimary = cms.double(0.01),
        maxDxySigForNotReconstructedPrimary = cms.double(2),
        maxDzErrorForPrimaryAssignment = cms.double(0.05),
        maxDzForJetAxisAssigment = cms.double(0.1),
        maxDzForPrimaryAssignment = cms.double(0.1),
        maxDzSigForPrimaryAssignment = cms.double(5),
        maxJetDeltaR = cms.double(0.5),
        minJetPt = cms.double(25),
        preferHighRanked = cms.bool(False),
        useTiming = cms.bool(False),
        useVertexFit = cms.bool(True)
    ),
    jets = cms.InputTag("ak4PFJets"),
    mightGet = cms.optional.untracked.vstring,
    particles = cms.InputTag("particleFlow"),
    produceAssociationToOriginalVertices = cms.bool(True),
    produceNoPileUpCollection = cms.bool(False),
    producePileUpCollection = cms.bool(False),
    produceSortedVertices = cms.bool(False),
    qualityForPrimary = cms.int32(2),
    sorting = cms.PSet(

    ),
    usePVMET = cms.bool(True),
    vertices = cms.InputTag("offlinePrimaryVertices")
)


process.primaryVertexAssociationCleaned = cms.EDProducer("PFCandidatePrimaryVertexSorter",
    assignment = cms.PSet(
        DzCutForChargedFromPUVtxs = cms.double(0.2),
        EtaMinUseDz = cms.double(-1),
        NumOfPUVtxsForCharged = cms.uint32(0),
        OnlyUseFirstDz = cms.bool(False),
        PtMaxCharged = cms.double(-1),
        maxDistanceToJetAxis = cms.double(0.07),
        maxDtSigForPrimaryAssignment = cms.double(3),
        maxDxyForJetAxisAssigment = cms.double(0.1),
        maxDxyForNotReconstructedPrimary = cms.double(0.01),
        maxDxySigForNotReconstructedPrimary = cms.double(2),
        maxDzErrorForPrimaryAssignment = cms.double(0.05),
        maxDzForJetAxisAssigment = cms.double(0.1),
        maxDzForPrimaryAssignment = cms.double(0.1),
        maxDzSigForPrimaryAssignment = cms.double(5),
        maxJetDeltaR = cms.double(0.5),
        minJetPt = cms.double(25),
        preferHighRanked = cms.bool(False),
        useTiming = cms.bool(False),
        useVertexFit = cms.bool(True)
    ),
    jets = cms.InputTag("ak4PFJets"),
    mightGet = cms.optional.untracked.vstring,
    particles = cms.InputTag("cleanedParticleFlow","removed"),
    produceAssociationToOriginalVertices = cms.bool(True),
    produceNoPileUpCollection = cms.bool(False),
    producePileUpCollection = cms.bool(False),
    produceSortedVertices = cms.bool(False),
    qualityForPrimary = cms.int32(2),
    sorting = cms.PSet(

    ),
    usePVMET = cms.bool(True),
    vertices = cms.InputTag("offlinePrimaryVertices")
)


process.primaryVertexAssociationJME = cms.EDProducer("PFCandidatePrimaryVertexSorter",
    assignment = cms.PSet(
        DzCutForChargedFromPUVtxs = cms.double(0.2),
        EtaMinUseDz = cms.double(2.4),
        NumOfPUVtxsForCharged = cms.uint32(2),
        OnlyUseFirstDz = cms.bool(True),
        PtMaxCharged = cms.double(20.0),
        maxDistanceToJetAxis = cms.double(0.07),
        maxDtSigForPrimaryAssignment = cms.double(3),
        maxDxyForJetAxisAssigment = cms.double(0.1),
        maxDxyForNotReconstructedPrimary = cms.double(0.01),
        maxDxySigForNotReconstructedPrimary = cms.double(2),
        maxDzErrorForPrimaryAssignment = cms.double(10000000000.0),
        maxDzForJetAxisAssigment = cms.double(0.1),
        maxDzForPrimaryAssignment = cms.double(0.3),
        maxDzSigForPrimaryAssignment = cms.double(10000000000.0),
        maxJetDeltaR = cms.double(0.5),
        minJetPt = cms.double(25),
        preferHighRanked = cms.bool(False),
        useTiming = cms.bool(False),
        useVertexFit = cms.bool(True)
    ),
    jets = cms.InputTag("ak4PFJets"),
    mightGet = cms.optional.untracked.vstring,
    particles = cms.InputTag("particleFlow"),
    produceAssociationToOriginalVertices = cms.bool(True),
    produceNoPileUpCollection = cms.bool(False),
    producePileUpCollection = cms.bool(False),
    produceSortedVertices = cms.bool(False),
    qualityForPrimary = cms.int32(2),
    sorting = cms.PSet(

    ),
    usePVMET = cms.bool(True),
    vertices = cms.InputTag("goodOfflinePrimaryVertices")
)


process.primaryVertexWithBSAssociation = cms.EDProducer("PFCandidatePrimaryVertexSorter",
    assignment = cms.PSet(
        DzCutForChargedFromPUVtxs = cms.double(0.2),
        EtaMinUseDz = cms.double(-1),
        NumOfPUVtxsForCharged = cms.uint32(0),
        OnlyUseFirstDz = cms.bool(False),
        PtMaxCharged = cms.double(-1),
        maxDistanceToJetAxis = cms.double(0.07),
        maxDtSigForPrimaryAssignment = cms.double(3),
        maxDxyForJetAxisAssigment = cms.double(0.1),
        maxDxyForNotReconstructedPrimary = cms.double(0.01),
        maxDxySigForNotReconstructedPrimary = cms.double(2),
        maxDzErrorForPrimaryAssignment = cms.double(0.05),
        maxDzForJetAxisAssigment = cms.double(0.1),
        maxDzForPrimaryAssignment = cms.double(0.1),
        maxDzSigForPrimaryAssignment = cms.double(5),
        maxJetDeltaR = cms.double(0.5),
        minJetPt = cms.double(25),
        preferHighRanked = cms.bool(False),
        useTiming = cms.bool(False),
        useVertexFit = cms.bool(True)
    ),
    jets = cms.InputTag("ak4PFJets"),
    mightGet = cms.optional.untracked.vstring,
    particles = cms.InputTag("particleFlow"),
    produceAssociationToOriginalVertices = cms.bool(True),
    produceNoPileUpCollection = cms.bool(False),
    producePileUpCollection = cms.bool(False),
    produceSortedVertices = cms.bool(False),
    qualityForPrimary = cms.int32(2),
    sorting = cms.PSet(

    ),
    usePVMET = cms.bool(True),
    vertices = cms.InputTag("offlinePrimaryVerticesWithBS")
)


process.primaryVertexWithBSAssociationCleaned = cms.EDProducer("PFCandidatePrimaryVertexSorter",
    assignment = cms.PSet(
        DzCutForChargedFromPUVtxs = cms.double(0.2),
        EtaMinUseDz = cms.double(-1),
        NumOfPUVtxsForCharged = cms.uint32(0),
        OnlyUseFirstDz = cms.bool(False),
        PtMaxCharged = cms.double(-1),
        maxDistanceToJetAxis = cms.double(0.07),
        maxDtSigForPrimaryAssignment = cms.double(3),
        maxDxyForJetAxisAssigment = cms.double(0.1),
        maxDxyForNotReconstructedPrimary = cms.double(0.01),
        maxDxySigForNotReconstructedPrimary = cms.double(2),
        maxDzErrorForPrimaryAssignment = cms.double(0.05),
        maxDzForJetAxisAssigment = cms.double(0.1),
        maxDzForPrimaryAssignment = cms.double(0.1),
        maxDzSigForPrimaryAssignment = cms.double(5),
        maxJetDeltaR = cms.double(0.5),
        minJetPt = cms.double(25),
        preferHighRanked = cms.bool(False),
        useTiming = cms.bool(False),
        useVertexFit = cms.bool(True)
    ),
    jets = cms.InputTag("ak4PFJets"),
    mightGet = cms.optional.untracked.vstring,
    particles = cms.InputTag("cleanedParticleFlow","removed"),
    produceAssociationToOriginalVertices = cms.bool(True),
    produceNoPileUpCollection = cms.bool(False),
    producePileUpCollection = cms.bool(False),
    produceSortedVertices = cms.bool(False),
    qualityForPrimary = cms.int32(2),
    sorting = cms.PSet(

    ),
    usePVMET = cms.bool(True),
    vertices = cms.InputTag("offlinePrimaryVerticesWithBS")
)


process.prunedGenParticles = cms.EDProducer("GenParticlePruner",
    select = cms.vstring(
        'drop  *',
        '++keep abs(pdgId) == 11 || abs(pdgId) == 13 || abs(pdgId) == 15',
        'drop   status == 2',
        'keep++ (400 < abs(pdgId) < 600) || (4000 < abs(pdgId) < 6000)',
        'drop status == 1',
        'keep+ (400 < abs(pdgId) < 600) || (4000 < abs(pdgId) < 6000)',
        'keep abs(pdgId) == 11 || abs(pdgId) == 13 || abs(pdgId) == 15',
        'keep abs(pdgId) == 12 || abs(pdgId) == 14 || abs(pdgId) == 16',
        '+keep pdgId == 22 && status == 1 && (pt > 10 || isPromptFinalState())',
        '+keep abs(pdgId) == 11 && status == 1 && (pt > 3 || isPromptFinalState())',
        'keep++ abs(pdgId) == 15',
        'drop  status > 30 && status < 70 ',
        'drop  pdgId == 21 && pt < 5',
        'drop   status == 2 && abs(pdgId) == 21',
        'keep abs(pdgId) == 23 || abs(pdgId) == 24 || abs(pdgId) == 25 || abs(pdgId) == 6 || abs(pdgId) == 37 ',
        'keep++ abs(pdgId) == 310 || abs(pdgId) == 3122',
        'keep+ abs(pdgId) == 310 || abs(pdgId) == 3122',
        '+keep abs(pdgId) == 13 && status == 1',
        'keep (4 <= abs(pdgId) <= 5)',
        'keep (1 <= abs(pdgId) <= 3 || pdgId = 21) & (status = 2 || status = 11 || status = 71 || status = 72) && pt>5',
        'keep  abs(pdgId) == 323  && abs(eta) < 2.5 && pt > 1',
        'keep+ abs(pdgId) == 333',
        'keep+ abs(pdgId) == 9920443 || abs(pdgId) == 9042413 || abs(pdgId) == 9000443 || abs(pdgId) == 100541 || abs(pdgId) == 100543',
        'keep+ abs(pdgId) == 443 || abs(pdgId) == 100443 || abs(pdgId) == 10441 || abs(pdgId) == 20443 || abs(pdgId) == 445 || abs(pdgId) == 30443',
        'keep+ abs(pdgId) == 553 || abs(pdgId) == 100553 || abs(pdgId) == 200553 || abs(pdgId) == 10551 || abs(pdgId) == 20553 || abs(pdgId) == 555',
        'keep abs(pdgId) = 10411 || abs(pdgId) = 10421 || abs(pdgId) = 10413 || abs(pdgId) = 10423 || abs(pdgId) = 20413 || abs(pdgId) = 20423 || abs(pdgId) = 10431 || abs(pdgId) = 10433 || abs(pdgId) = 20433',
        'keep abs(pdgId) = 10511 || abs(pdgId) = 10521 || abs(pdgId) = 10513 || abs(pdgId) = 10523 || abs(pdgId) = 20513 || abs(pdgId) = 20523 || abs(pdgId) = 10531 || abs(pdgId) = 10533 || abs(pdgId) = 20533 || abs(pdgId) = 10541 || abs(pdgId) = 10543 || abs(pdgId) = 20543',
        'keep (1000001 <= abs(pdgId) <= 1000039 ) || ( 2000001 <= abs(pdgId) <= 2000015)',
        'keep (4900001 <= abs(pdgId) <= 4900991)',
        'keep (51 <= abs(pdgId) <= 53)',
        'keep pdgId = 2212',
        'keep status == 3 || ( 21 <= status <= 29) || ( 11 <= status <= 19)',
        'keep isHardProcess() || fromHardProcessFinalState() || fromHardProcessDecayed() || fromHardProcessBeforeFSR() || (statusFlags().fromHardProcess() && statusFlags().isLastCopy())'
    ),
    src = cms.InputTag("prunedGenParticlesWithStatusOne")
)


process.prunedGenParticlesWithStatusOne = cms.EDProducer("GenParticlePruner",
    select = cms.vstring(
        'drop  *',
        '++keep abs(pdgId) == 11 || abs(pdgId) == 13 || abs(pdgId) == 15',
        'drop   status == 2',
        'keep++ (400 < abs(pdgId) < 600) || (4000 < abs(pdgId) < 6000)',
        'drop status == 1',
        'keep+ (400 < abs(pdgId) < 600) || (4000 < abs(pdgId) < 6000)',
        'keep abs(pdgId) == 11 || abs(pdgId) == 13 || abs(pdgId) == 15',
        'keep abs(pdgId) == 12 || abs(pdgId) == 14 || abs(pdgId) == 16',
        '+keep pdgId == 22 && status == 1 && (pt > 10 || isPromptFinalState())',
        '+keep abs(pdgId) == 11 && status == 1 && (pt > 3 || isPromptFinalState())',
        'keep++ abs(pdgId) == 15',
        'drop  status > 30 && status < 70 ',
        'drop  pdgId == 21 && pt < 5',
        'drop   status == 2 && abs(pdgId) == 21',
        'keep abs(pdgId) == 23 || abs(pdgId) == 24 || abs(pdgId) == 25 || abs(pdgId) == 6 || abs(pdgId) == 37 ',
        'keep++ abs(pdgId) == 310 || abs(pdgId) == 3122',
        'keep+ abs(pdgId) == 310 || abs(pdgId) == 3122',
        '+keep abs(pdgId) == 13 && status == 1',
        'keep (4 <= abs(pdgId) <= 5)',
        'keep (1 <= abs(pdgId) <= 3 || pdgId = 21) & (status = 2 || status = 11 || status = 71 || status = 72) && pt>5',
        'keep  abs(pdgId) == 323  && abs(eta) < 2.5 && pt > 1',
        'keep+ abs(pdgId) == 333',
        'keep+ abs(pdgId) == 9920443 || abs(pdgId) == 9042413 || abs(pdgId) == 9000443 || abs(pdgId) == 100541 || abs(pdgId) == 100543',
        'keep+ abs(pdgId) == 443 || abs(pdgId) == 100443 || abs(pdgId) == 10441 || abs(pdgId) == 20443 || abs(pdgId) == 445 || abs(pdgId) == 30443',
        'keep+ abs(pdgId) == 553 || abs(pdgId) == 100553 || abs(pdgId) == 200553 || abs(pdgId) == 10551 || abs(pdgId) == 20553 || abs(pdgId) == 555',
        'keep abs(pdgId) = 10411 || abs(pdgId) = 10421 || abs(pdgId) = 10413 || abs(pdgId) = 10423 || abs(pdgId) = 20413 || abs(pdgId) = 20423 || abs(pdgId) = 10431 || abs(pdgId) = 10433 || abs(pdgId) = 20433',
        'keep abs(pdgId) = 10511 || abs(pdgId) = 10521 || abs(pdgId) = 10513 || abs(pdgId) = 10523 || abs(pdgId) = 20513 || abs(pdgId) = 20523 || abs(pdgId) = 10531 || abs(pdgId) = 10533 || abs(pdgId) = 20533 || abs(pdgId) = 10541 || abs(pdgId) = 10543 || abs(pdgId) = 20543',
        'keep (1000001 <= abs(pdgId) <= 1000039 ) || ( 2000001 <= abs(pdgId) <= 2000015)',
        'keep (4900001 <= abs(pdgId) <= 4900991)',
        'keep (51 <= abs(pdgId) <= 53)',
        'keep pdgId = 2212',
        'keep status == 3 || ( 21 <= status <= 29) || ( 11 <= status <= 19)',
        'keep isHardProcess() || fromHardProcessFinalState() || fromHardProcessDecayed() || fromHardProcessBeforeFSR() || (statusFlags().fromHardProcess() && statusFlags().isLastCopy())',
        'keep    status == 1'
    ),
    src = cms.InputTag("genParticles")
)


process.puppi = cms.EDProducer("PuppiProducer",
    DeltaZCut = cms.double(0.3),
    DeltaZCutForChargedFromPUVtxs = cms.double(0.2),
    EtaMaxCharged = cms.double(99999),
    EtaMaxPhotons = cms.double(2.5),
    EtaMinUseDeltaZ = cms.double(2.4),
    MinPuppiWeight = cms.double(0.01),
    NumOfPUVtxsForCharged = cms.uint32(2),
    PUProxyValue = cms.InputTag(""),
    PtMaxCharged = cms.double(20.0),
    PtMaxNeutrals = cms.double(200),
    PtMaxNeutralsStartSlope = cms.double(20.0),
    PtMaxPhotons = cms.double(20.0),
    UseDeltaZCut = cms.bool(True),
    UseDeltaZCutForPileup = cms.bool(False),
    UseFromPVLooseTight = cms.bool(False),
    algos = cms.VPSet(
        cms.PSet(
            EtaMaxExtrap = cms.double(2),
            MedEtaSF = cms.vdouble(1),
            MinNeutralPt = cms.vdouble(0.2),
            MinNeutralPtSlope = cms.vdouble(0.015),
            RMSEtaSF = cms.vdouble(1),
            etaMax = cms.vdouble(2.5),
            etaMin = cms.vdouble(0),
            ptMin = cms.vdouble(0),
            puppiAlgos = cms.VPSet(cms.PSet(
                algoId = cms.int32(5),
                applyLowPUCorr = cms.bool(True),
                combOpt = cms.int32(0),
                cone = cms.double(0.4),
                rmsPtMin = cms.double(0.1),
                rmsScaleFactor = cms.double(1.0),
                useCharged = cms.bool(True)
            ))
        ),
        cms.PSet(
            EtaMaxExtrap = cms.double(2.0),
            MedEtaSF = cms.vdouble(0.9, 0.75),
            MinNeutralPt = cms.vdouble(1.7, 2.0),
            MinNeutralPtSlope = cms.vdouble(0.08, 0.08),
            RMSEtaSF = cms.vdouble(1.2, 0.95),
            etaMax = cms.vdouble(3.0, 10.0),
            etaMin = cms.vdouble(2.5, 3.0),
            ptMin = cms.vdouble(0.0, 0.0),
            puppiAlgos = cms.VPSet(cms.PSet(
                algoId = cms.int32(5),
                applyLowPUCorr = cms.bool(True),
                combOpt = cms.int32(0),
                cone = cms.double(0.4),
                rmsPtMin = cms.double(0.5),
                rmsScaleFactor = cms.double(1.0),
                useCharged = cms.bool(False)
            ))
        )
    ),
    applyCHS = cms.bool(True),
    applyPhotonProtectionForExistingWeights = cms.bool(False),
    candName = cms.InputTag("particleFlow"),
    clonePackedCands = cms.bool(False),
    invertPuppi = cms.bool(False),
    mightGet = cms.optional.untracked.vstring,
    puppiDiagnostics = cms.bool(False),
    puppiNoLep = cms.bool(False),
    useExistingWeights = cms.bool(False),
    useExp = cms.bool(False),
    usePUProxyValue = cms.bool(False),
    useVertexAssociation = cms.bool(False),
    vertexAssociation = cms.InputTag(""),
    vertexAssociationQuality = cms.int32(0),
    vertexName = cms.InputTag("offlinePrimaryVertices"),
    vtxNdofCut = cms.int32(4),
    vtxZCut = cms.double(24)
)


process.puppiNoLep = cms.EDProducer("PuppiProducer",
    DeltaZCut = cms.double(0.3),
    DeltaZCutForChargedFromPUVtxs = cms.double(0.2),
    EtaMaxCharged = cms.double(99999),
    EtaMaxPhotons = cms.double(2.5),
    EtaMinUseDeltaZ = cms.double(2.4),
    MinPuppiWeight = cms.double(0.01),
    NumOfPUVtxsForCharged = cms.uint32(2),
    PUProxyValue = cms.InputTag(""),
    PtMaxCharged = cms.double(20.0),
    PtMaxNeutrals = cms.double(200),
    PtMaxNeutralsStartSlope = cms.double(20.0),
    PtMaxPhotons = cms.double(20.0),
    UseDeltaZCut = cms.bool(True),
    UseDeltaZCutForPileup = cms.bool(False),
    UseFromPVLooseTight = cms.bool(False),
    algos = cms.VPSet(
        cms.PSet(
            EtaMaxExtrap = cms.double(2),
            MedEtaSF = cms.vdouble(1),
            MinNeutralPt = cms.vdouble(0.2),
            MinNeutralPtSlope = cms.vdouble(0.015),
            RMSEtaSF = cms.vdouble(1),
            etaMax = cms.vdouble(2.5),
            etaMin = cms.vdouble(0),
            ptMin = cms.vdouble(0),
            puppiAlgos = cms.VPSet(cms.PSet(
                algoId = cms.int32(5),
                applyLowPUCorr = cms.bool(True),
                combOpt = cms.int32(0),
                cone = cms.double(0.4),
                rmsPtMin = cms.double(0.1),
                rmsScaleFactor = cms.double(1.0),
                useCharged = cms.bool(True)
            ))
        ),
        cms.PSet(
            EtaMaxExtrap = cms.double(2.0),
            MedEtaSF = cms.vdouble(0.9, 0.75),
            MinNeutralPt = cms.vdouble(1.7, 2.0),
            MinNeutralPtSlope = cms.vdouble(0.08, 0.08),
            RMSEtaSF = cms.vdouble(1.2, 0.95),
            etaMax = cms.vdouble(3.0, 10.0),
            etaMin = cms.vdouble(2.5, 3.0),
            ptMin = cms.vdouble(0.0, 0.0),
            puppiAlgos = cms.VPSet(cms.PSet(
                algoId = cms.int32(5),
                applyLowPUCorr = cms.bool(True),
                combOpt = cms.int32(0),
                cone = cms.double(0.4),
                rmsPtMin = cms.double(0.5),
                rmsScaleFactor = cms.double(1.0),
                useCharged = cms.bool(False)
            ))
        )
    ),
    applyCHS = cms.bool(True),
    applyPhotonProtectionForExistingWeights = cms.bool(False),
    candName = cms.InputTag("particleFlow"),
    clonePackedCands = cms.bool(False),
    invertPuppi = cms.bool(False),
    mightGet = cms.optional.untracked.vstring,
    puppiDiagnostics = cms.bool(False),
    puppiNoLep = cms.bool(True),
    useExistingWeights = cms.bool(False),
    useExp = cms.bool(False),
    usePUProxyValue = cms.bool(False),
    useVertexAssociation = cms.bool(False),
    vertexAssociation = cms.InputTag(""),
    vertexAssociationQuality = cms.int32(0),
    vertexName = cms.InputTag("offlinePrimaryVertices"),
    vtxNdofCut = cms.int32(4),
    vtxZCut = cms.double(24)
)


process.randomEngineStateProducer = cms.EDProducer("RandomEngineStateProducer")


process.recoTauAK4PFJets08Region = cms.EDProducer("RecoTauJetRegionProducer",
    deltaR = cms.double(0.8),
    maxJetAbsEta = cms.double(2.7),
    minJetPt = cms.double(14.0),
    pfCandAssocMapSrc = cms.InputTag(""),
    pfCandSrc = cms.InputTag("particleFlow"),
    src = cms.InputTag("ak4PFJets"),
    verbosity = cms.int32(0)
)


process.recoTauAK4PFJets08RegionBoosted = cms.EDProducer("RecoTauJetRegionProducer",
    deltaR = cms.double(0.8),
    maxJetAbsEta = cms.double(2.7),
    minJetPt = cms.double(14.0),
    pfCandAssocMapSrc = cms.InputTag("boostedTauSeeds","pfCandAssocMapForIsolation"),
    pfCandSrc = cms.InputTag("particleFlow"),
    src = cms.InputTag("boostedTauSeeds"),
    verbosity = cms.int32(0)
)


process.recoTauDiscriminantCutMultiplexerDefault = cms.EDProducer("RecoTauDiscriminantCutMultiplexer",
    PFTauProducer = cms.InputTag("fixme"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('AND'),
        decayMode = cms.PSet(
            Producer = cms.InputTag("fixme"),
            cut = cms.double(0)
        ),
        leadTrack = cms.PSet(
            Producer = cms.InputTag("fixme"),
            cut = cms.double(0)
        )
    ),
    inputFileName = cms.FileInPath('RecoTauTag/RecoTau/data/emptyMVAinputFile'),
    loadMVAfromDB = cms.bool(True),
    mapping = cms.VPSet(cms.PSet(
        category = cms.uint32(0),
        cut = cms.string('fixme')
    )),
    mightGet = cms.optional.untracked.vstring,
    mvaOutput_normalization = cms.string(''),
    rawValues = cms.vstring('discriminator'),
    toMultiplex = cms.InputTag("fixme"),
    verbosity = cms.int32(0),
    workingPoints = cms.vdouble(0)
)


process.reducedEgamma = cms.EDProducer("ReducedEGProducer",
    applyGsfElectronCalibOnData = cms.bool(False),
    applyGsfElectronCalibOnMC = cms.bool(False),
    applyPhotonCalibOnData = cms.bool(False),
    applyPhotonCalibOnMC = cms.bool(False),
    barrelEcalHits = cms.InputTag("reducedEcalRecHitsEB"),
    conversions = cms.InputTag("allConversions"),
    endcapEcalHits = cms.InputTag("reducedEcalRecHitsEE"),
    gsfElectronCalibEcalEnergyErrSource = cms.InputTag(""),
    gsfElectronCalibEcalEnergySource = cms.InputTag(""),
    gsfElectronCalibEnergyErrSource = cms.InputTag(""),
    gsfElectronCalibEnergySource = cms.InputTag(""),
    gsfElectronFloatValueMapOutput = cms.vstring(),
    gsfElectronFloatValueMapSources = cms.VInputTag(),
    gsfElectronIDOutput = cms.vstring(),
    gsfElectronIDSources = cms.VInputTag(),
    gsfElectrons = cms.InputTag("gedGsfElectrons"),
    gsfElectronsPFValMap = cms.InputTag("particleBasedIsolation","gedGsfElectrons"),
    gsfTracks = cms.InputTag("electronGsfTracks"),
    hbheHits = cms.InputTag("reducedHcalRecHits","hbhereco"),
    hcalHitSel = cms.PSet(
        maxDIEta = cms.int32(5),
        maxDIPhi = cms.int32(5),
        minEnergyHB = cms.double(0.1),
        minEnergyHEDefault = cms.double(0.2),
        minEnergyHEDepth1 = cms.double(0.1)
    ),
    hiPhotonIsolationMapInput = cms.InputTag(""),
    hiPhotonIsolationMapOutput = cms.string(''),
    keepGsfElectrons = cms.string(''),
    keepOOTPhotons = cms.string('pt>10'),
    keepPhotons = cms.string('hadTowOverEm()<0.15 && pt>10 && (pt>14 || chargedHadronIso()<10)'),
    ootPhotonFloatValueMapOutput = cms.vstring(),
    ootPhotonFloatValueMapSources = cms.VInputTag(),
    ootPhotons = cms.InputTag("ootPhotons"),
    photonCalibEnergyErrSource = cms.InputTag(""),
    photonCalibEnergySource = cms.InputTag(""),
    photonFloatValueMapOutput = cms.vstring(),
    photonFloatValueMapSources = cms.VInputTag(),
    photonIDOutput = cms.vstring(),
    photonIDSources = cms.VInputTag(),
    photons = cms.InputTag("gedPhotons"),
    photonsPFValMap = cms.InputTag("particleBasedIsolation","gedPhotons"),
    preshowerEcalHits = cms.InputTag("reducedEcalRecHitsES"),
    relinkGsfElectrons = cms.string('pt>5'),
    relinkOOTPhotons = cms.string('(r9()>0.8)'),
    relinkPhotons = cms.string('(r9()>0.8 || chargedHadronIso()<20 || chargedHadronIso()<0.3*pt())'),
    singleConversions = cms.InputTag("particleFlowEGamma"),
    slimRelinkGsfElectrons = cms.string(''),
    slimRelinkOOTPhotons = cms.string('pt>10'),
    slimRelinkPhotons = cms.string('hadTowOverEm()<0.15 && pt>10 && (pt>14 || chargedHadronIso()<10)')
)


process.reducedHcalRecHits = cms.EDProducer("HcalHitSelection",
    hbheTag = cms.InputTag("hbhereco"),
    hfTag = cms.InputTag("hfreco"),
    hoSeverityLevel = cms.int32(13),
    hoTag = cms.InputTag("horeco"),
    interestingDetIds = cms.VInputTag(cms.InputTag("interestingGedEgammaIsoHCALDetId"), cms.InputTag("interestingOotEgammaIsoHCALDetId"))
)


process.rekeyLowPtGsfElectronSeedValueMaps = cms.EDProducer("LowPtGsfElectronSeedValueMapsProducer",
    ModelNames = cms.vstring(
        'unbiased',
        'ptbiased'
    ),
    floatValueMaps = cms.VInputTag("lowPtGsfElectronSeedValueMaps:unbiased", "lowPtGsfElectronSeedValueMaps:ptbiased"),
    gsfElectrons = cms.InputTag("lowPtGsfElectrons"),
    gsfTracks = cms.InputTag("lowPtGsfEleGsfTracks"),
    mightGet = cms.optional.untracked.vstring,
    preIdsValueMap = cms.InputTag("lowPtGsfElectronSeeds"),
    rekey = cms.bool(True)
)


process.secondaryVertexTagInfos = cms.EDProducer("SecondaryVertexProducer",
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    constraint = cms.string('BeamSpot'),
    extSVCollection = cms.InputTag("secondaryVertices"),
    extSVDeltaRToJet = cms.double(0.3),
    minimumTrackWeight = cms.double(0.5),
    trackIPTagInfos = cms.InputTag("impactParameterTagInfos"),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(2),
        ptMin = cms.double(1.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(8),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip3dSig'),
    useExternalSV = cms.bool(False),
    usePVError = cms.bool(True),
    vertexCuts = cms.PSet(
        distSig2dMax = cms.double(99999.9),
        distSig2dMin = cms.double(3.0),
        distSig3dMax = cms.double(99999.9),
        distSig3dMin = cms.double(-99999.9),
        distVal2dMax = cms.double(2.5),
        distVal2dMin = cms.double(0.01),
        distVal3dMax = cms.double(99999.9),
        distVal3dMin = cms.double(-99999.9),
        fracPV = cms.double(0.65),
        massMax = cms.double(6.5),
        maxDeltaRToJetAxis = cms.double(0.4),
        minimumTrackWeight = cms.double(0.5),
        multiplicityMin = cms.uint32(2),
        useTrackWeights = cms.bool(True),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        )
    ),
    vertexReco = cms.PSet(
        finder = cms.string('avr'),
        minweight = cms.double(0.5),
        primcut = cms.double(1.8),
        seccut = cms.double(6.0),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001)
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    )
)


process.selectedHadronsAndPartons = cms.EDProducer("HadronAndPartonSelector",
    fullChainPhysPartons = cms.bool(True),
    particles = cms.InputTag("genParticles"),
    partonMode = cms.string('Auto'),
    src = cms.InputTag("generator")
)


process.selectedHadronsAndPartonsForGenJetsFlavourInfos = cms.EDProducer("HadronAndPartonSelector",
    fullChainPhysPartons = cms.bool(True),
    particles = cms.InputTag("prunedGenParticles"),
    partonMode = cms.string('Auto'),
    src = cms.InputTag("generator")
)


process.shiftedPatElectronEnDown = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(-1.0),
    src = cms.InputTag("pfElectrons"),
    srcWeights = cms.InputTag(""),
    uncertainty = cms.string('((abs(y)<1.479)?(0.006+0*x):(0.015+0*x))')
)


process.shiftedPatElectronEnDownNoHF = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(-1.0),
    src = cms.InputTag("pfElectronsNoHF"),
    srcWeights = cms.InputTag(""),
    uncertainty = cms.string('((abs(y)<1.479)?(0.006+0*x):(0.015+0*x))')
)


process.shiftedPatElectronEnDownPuppi = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(-1.0),
    src = cms.InputTag("pfElectronsPuppi"),
    srcWeights = cms.InputTag(""),
    uncertainty = cms.string('((abs(y)<1.479)?(0.006+0*x):(0.015+0*x))')
)


process.shiftedPatElectronEnUp = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(1.0),
    src = cms.InputTag("pfElectrons"),
    srcWeights = cms.InputTag(""),
    uncertainty = cms.string('((abs(y)<1.479)?(0.006+0*x):(0.015+0*x))')
)


process.shiftedPatElectronEnUpNoHF = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(1.0),
    src = cms.InputTag("pfElectronsNoHF"),
    srcWeights = cms.InputTag(""),
    uncertainty = cms.string('((abs(y)<1.479)?(0.006+0*x):(0.015+0*x))')
)


process.shiftedPatElectronEnUpPuppi = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(1.0),
    src = cms.InputTag("pfElectronsPuppi"),
    srcWeights = cms.InputTag(""),
    uncertainty = cms.string('((abs(y)<1.479)?(0.006+0*x):(0.015+0*x))')
)


process.shiftedPatJetEnDown = cms.EDProducer("ShiftedPATJetProducer",
    addResidualJES = cms.bool(True),
    jetCorrLabelUpToL3 = cms.InputTag("ak4PFCHSL1FastL2L3Corrector"),
    jetCorrLabelUpToL3Res = cms.InputTag("ak4PFCHSL1FastL2L3ResidualCorrector"),
    jetCorrPayloadName = cms.string('AK4PFchs'),
    jetCorrUncertaintyTag = cms.string('Uncertainty'),
    shiftBy = cms.double(-1.0),
    src = cms.InputTag("cleanedPatJets")
)


process.shiftedPatJetEnDownNoHF = cms.EDProducer("ShiftedPATJetProducer",
    addResidualJES = cms.bool(True),
    jetCorrLabelUpToL3 = cms.InputTag("ak4PFCHSL1FastL2L3Corrector"),
    jetCorrLabelUpToL3Res = cms.InputTag("ak4PFCHSL1FastL2L3ResidualCorrector"),
    jetCorrPayloadName = cms.string('AK4PFchs'),
    jetCorrUncertaintyTag = cms.string('Uncertainty'),
    shiftBy = cms.double(-1.0),
    src = cms.InputTag("cleanedPatJetsNoHF")
)


process.shiftedPatJetEnDownPuppi = cms.EDProducer("ShiftedPATJetProducer",
    addResidualJES = cms.bool(True),
    jetCorrLabelUpToL3 = cms.InputTag("ak4PFPuppiL1FastL2L3Corrector"),
    jetCorrLabelUpToL3Res = cms.InputTag("ak4PFPuppiL1FastL2L3ResidualCorrector"),
    jetCorrPayloadName = cms.string('AK4PFPuppi'),
    jetCorrUncertaintyTag = cms.string('Uncertainty'),
    shiftBy = cms.double(-1.0),
    src = cms.InputTag("cleanedPatJetsPuppi")
)


process.shiftedPatJetEnUp = cms.EDProducer("ShiftedPATJetProducer",
    addResidualJES = cms.bool(True),
    jetCorrLabelUpToL3 = cms.InputTag("ak4PFCHSL1FastL2L3Corrector"),
    jetCorrLabelUpToL3Res = cms.InputTag("ak4PFCHSL1FastL2L3ResidualCorrector"),
    jetCorrPayloadName = cms.string('AK4PFchs'),
    jetCorrUncertaintyTag = cms.string('Uncertainty'),
    shiftBy = cms.double(1.0),
    src = cms.InputTag("cleanedPatJets")
)


process.shiftedPatJetEnUpNoHF = cms.EDProducer("ShiftedPATJetProducer",
    addResidualJES = cms.bool(True),
    jetCorrLabelUpToL3 = cms.InputTag("ak4PFCHSL1FastL2L3Corrector"),
    jetCorrLabelUpToL3Res = cms.InputTag("ak4PFCHSL1FastL2L3ResidualCorrector"),
    jetCorrPayloadName = cms.string('AK4PFchs'),
    jetCorrUncertaintyTag = cms.string('Uncertainty'),
    shiftBy = cms.double(1.0),
    src = cms.InputTag("cleanedPatJetsNoHF")
)


process.shiftedPatJetEnUpPuppi = cms.EDProducer("ShiftedPATJetProducer",
    addResidualJES = cms.bool(True),
    jetCorrLabelUpToL3 = cms.InputTag("ak4PFPuppiL1FastL2L3Corrector"),
    jetCorrLabelUpToL3Res = cms.InputTag("ak4PFPuppiL1FastL2L3ResidualCorrector"),
    jetCorrPayloadName = cms.string('AK4PFPuppi'),
    jetCorrUncertaintyTag = cms.string('Uncertainty'),
    shiftBy = cms.double(1.0),
    src = cms.InputTag("cleanedPatJetsPuppi")
)


process.shiftedPatJetResDown = cms.EDProducer("SmearedPATJetProducer",
    algo = cms.string('AK4PFchs'),
    algopt = cms.string('AK4PFchs_pt'),
    dPtMaxFactor = cms.double(3),
    dRMax = cms.double(0.2),
    debug = cms.untracked.bool(False),
    enabled = cms.bool(True),
    genJets = cms.InputTag("ak4GenJetsNoNu"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    seed = cms.uint32(37428479),
    skipGenMatching = cms.bool(False),
    src = cms.InputTag("cleanedPatJets"),
    useDeterministicSeed = cms.bool(True),
    variation = cms.int32(-101)
)


process.shiftedPatJetResDownNoHF = cms.EDProducer("SmearedPATJetProducer",
    algo = cms.string('AK4PFchs'),
    algopt = cms.string('AK4PFchs_pt'),
    dPtMaxFactor = cms.double(3),
    dRMax = cms.double(0.2),
    debug = cms.untracked.bool(False),
    enabled = cms.bool(True),
    genJets = cms.InputTag("ak4GenJetsNoNu"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    seed = cms.uint32(37428479),
    skipGenMatching = cms.bool(False),
    src = cms.InputTag("cleanedPatJetsNoHF"),
    useDeterministicSeed = cms.bool(True),
    variation = cms.int32(-101)
)


process.shiftedPatJetResDownPuppi = cms.EDProducer("SmearedPATJetProducer",
    algo = cms.string('AK4PFPuppi'),
    algopt = cms.string('AK4PFPuppi_pt'),
    dPtMaxFactor = cms.double(3),
    dRMax = cms.double(0.2),
    debug = cms.untracked.bool(False),
    enabled = cms.bool(True),
    genJets = cms.InputTag("ak4GenJetsNoNu"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    seed = cms.uint32(37428479),
    skipGenMatching = cms.bool(False),
    src = cms.InputTag("cleanedPatJetsPuppi"),
    useDeterministicSeed = cms.bool(True),
    variation = cms.int32(-101)
)


process.shiftedPatJetResUp = cms.EDProducer("SmearedPATJetProducer",
    algo = cms.string('AK4PFchs'),
    algopt = cms.string('AK4PFchs_pt'),
    dPtMaxFactor = cms.double(3),
    dRMax = cms.double(0.2),
    debug = cms.untracked.bool(False),
    enabled = cms.bool(True),
    genJets = cms.InputTag("ak4GenJetsNoNu"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    seed = cms.uint32(37428479),
    skipGenMatching = cms.bool(False),
    src = cms.InputTag("cleanedPatJets"),
    useDeterministicSeed = cms.bool(True),
    variation = cms.int32(101)
)


process.shiftedPatJetResUpNoHF = cms.EDProducer("SmearedPATJetProducer",
    algo = cms.string('AK4PFchs'),
    algopt = cms.string('AK4PFchs_pt'),
    dPtMaxFactor = cms.double(3),
    dRMax = cms.double(0.2),
    debug = cms.untracked.bool(False),
    enabled = cms.bool(True),
    genJets = cms.InputTag("ak4GenJetsNoNu"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    seed = cms.uint32(37428479),
    skipGenMatching = cms.bool(False),
    src = cms.InputTag("cleanedPatJetsNoHF"),
    useDeterministicSeed = cms.bool(True),
    variation = cms.int32(101)
)


process.shiftedPatJetResUpPuppi = cms.EDProducer("SmearedPATJetProducer",
    algo = cms.string('AK4PFPuppi'),
    algopt = cms.string('AK4PFPuppi_pt'),
    dPtMaxFactor = cms.double(3),
    dRMax = cms.double(0.2),
    debug = cms.untracked.bool(False),
    enabled = cms.bool(True),
    genJets = cms.InputTag("ak4GenJetsNoNu"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    seed = cms.uint32(37428479),
    skipGenMatching = cms.bool(False),
    src = cms.InputTag("cleanedPatJetsPuppi"),
    useDeterministicSeed = cms.bool(True),
    variation = cms.int32(101)
)


process.shiftedPatMETCorrElectronEnDown = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfElectrons"),
    srcShifted = cms.InputTag("shiftedPatElectronEnDown"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrElectronEnDownNoHF = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfElectronsNoHF"),
    srcShifted = cms.InputTag("shiftedPatElectronEnDownNoHF"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrElectronEnDownPuppi = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfElectronsPuppi"),
    srcShifted = cms.InputTag("shiftedPatElectronEnDownPuppi"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrElectronEnUp = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfElectrons"),
    srcShifted = cms.InputTag("shiftedPatElectronEnUp"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrElectronEnUpNoHF = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfElectronsNoHF"),
    srcShifted = cms.InputTag("shiftedPatElectronEnUpNoHF"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrElectronEnUpPuppi = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfElectronsPuppi"),
    srcShifted = cms.InputTag("shiftedPatElectronEnUpPuppi"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrJetEnDown = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("cleanedPatJets"),
    srcShifted = cms.InputTag("shiftedPatJetEnDown"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrJetEnDownNoHF = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("cleanedPatJetsNoHF"),
    srcShifted = cms.InputTag("shiftedPatJetEnDownNoHF"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrJetEnDownPuppi = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("cleanedPatJetsPuppi"),
    srcShifted = cms.InputTag("shiftedPatJetEnDownPuppi"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrJetEnUp = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("cleanedPatJets"),
    srcShifted = cms.InputTag("shiftedPatJetEnUp"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrJetEnUpNoHF = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("cleanedPatJetsNoHF"),
    srcShifted = cms.InputTag("shiftedPatJetEnUpNoHF"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrJetEnUpPuppi = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("cleanedPatJetsPuppi"),
    srcShifted = cms.InputTag("shiftedPatJetEnUpPuppi"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrJetResDown = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("cleanedPatJets"),
    srcShifted = cms.InputTag("shiftedPatJetResDown"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrJetResDownNoHF = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("cleanedPatJetsNoHF"),
    srcShifted = cms.InputTag("shiftedPatJetResDownNoHF"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrJetResDownPuppi = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("cleanedPatJetsPuppi"),
    srcShifted = cms.InputTag("shiftedPatJetResDownPuppi"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrJetResUp = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("cleanedPatJets"),
    srcShifted = cms.InputTag("shiftedPatJetResUp"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrJetResUpNoHF = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("cleanedPatJetsNoHF"),
    srcShifted = cms.InputTag("shiftedPatJetResUpNoHF"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrJetResUpPuppi = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("cleanedPatJetsPuppi"),
    srcShifted = cms.InputTag("shiftedPatJetResUpPuppi"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrMuonEnDown = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfMuons"),
    srcShifted = cms.InputTag("shiftedPatMuonEnDown"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrMuonEnDownNoHF = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfMuonsNoHF"),
    srcShifted = cms.InputTag("shiftedPatMuonEnDownNoHF"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrMuonEnDownPuppi = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfMuonsPuppi"),
    srcShifted = cms.InputTag("shiftedPatMuonEnDownPuppi"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrMuonEnUp = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfMuons"),
    srcShifted = cms.InputTag("shiftedPatMuonEnUp"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrMuonEnUpNoHF = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfMuonsNoHF"),
    srcShifted = cms.InputTag("shiftedPatMuonEnUpNoHF"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrMuonEnUpPuppi = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfMuonsPuppi"),
    srcShifted = cms.InputTag("shiftedPatMuonEnUpPuppi"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrPhotonEnDown = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfPhotons"),
    srcShifted = cms.InputTag("shiftedPatPhotonEnDown"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrPhotonEnDownNoHF = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfPhotonsNoHF"),
    srcShifted = cms.InputTag("shiftedPatPhotonEnDownNoHF"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrPhotonEnDownPuppi = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfPhotonsPuppi"),
    srcShifted = cms.InputTag("shiftedPatPhotonEnDownPuppi"),
    srcWeights = cms.InputTag("puppiNoLep")
)


process.shiftedPatMETCorrPhotonEnUp = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfPhotons"),
    srcShifted = cms.InputTag("shiftedPatPhotonEnUp"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrPhotonEnUpNoHF = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfPhotonsNoHF"),
    srcShifted = cms.InputTag("shiftedPatPhotonEnUpNoHF"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrPhotonEnUpPuppi = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfPhotonsPuppi"),
    srcShifted = cms.InputTag("shiftedPatPhotonEnUpPuppi"),
    srcWeights = cms.InputTag("puppiNoLep")
)


process.shiftedPatMETCorrSmearedJetResDown = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("selectedPatJetsForMetT1T2SmearCorr"),
    srcShifted = cms.InputTag("shiftedPatSmearedJetResDown"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrSmearedJetResDownNoHF = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("selectedPatJetsForMetT1T2SmearCorrNoHF"),
    srcShifted = cms.InputTag("shiftedPatSmearedJetResDownNoHF"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrSmearedJetResDownPuppi = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("selectedPatJetsForMetT1T2SmearCorrPuppi"),
    srcShifted = cms.InputTag("shiftedPatSmearedJetResDownPuppi"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrSmearedJetResUp = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("selectedPatJetsForMetT1T2SmearCorr"),
    srcShifted = cms.InputTag("shiftedPatSmearedJetResUp"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrSmearedJetResUpNoHF = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("selectedPatJetsForMetT1T2SmearCorrNoHF"),
    srcShifted = cms.InputTag("shiftedPatSmearedJetResUpNoHF"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrSmearedJetResUpPuppi = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("selectedPatJetsForMetT1T2SmearCorrPuppi"),
    srcShifted = cms.InputTag("shiftedPatSmearedJetResUpPuppi"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrTauEnDown = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfTaus"),
    srcShifted = cms.InputTag("shiftedPatTauEnDown"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrTauEnDownNoHF = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfTausNoHF"),
    srcShifted = cms.InputTag("shiftedPatTauEnDownNoHF"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrTauEnDownPuppi = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfTausPuppi"),
    srcShifted = cms.InputTag("shiftedPatTauEnDownPuppi"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrTauEnUp = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfTaus"),
    srcShifted = cms.InputTag("shiftedPatTauEnUp"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrTauEnUpNoHF = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfTausNoHF"),
    srcShifted = cms.InputTag("shiftedPatTauEnUpNoHF"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrTauEnUpPuppi = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfTausPuppi"),
    srcShifted = cms.InputTag("shiftedPatTauEnUpPuppi"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrUnclusteredEnDown = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfCandsForUnclusteredUnc"),
    srcShifted = cms.InputTag("shiftedPatUnclusteredEnDown"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrUnclusteredEnDownNoHF = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfCandsForUnclusteredUncNoHF"),
    srcShifted = cms.InputTag("shiftedPatUnclusteredEnDownNoHF"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrUnclusteredEnDownPuppi = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfCandsForUnclusteredUncPuppi"),
    srcShifted = cms.InputTag("shiftedPatUnclusteredEnDownPuppi"),
    srcWeights = cms.InputTag("puppiNoLep")
)


process.shiftedPatMETCorrUnclusteredEnUp = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfCandsForUnclusteredUnc"),
    srcShifted = cms.InputTag("shiftedPatUnclusteredEnUp"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrUnclusteredEnUpNoHF = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfCandsForUnclusteredUncNoHF"),
    srcShifted = cms.InputTag("shiftedPatUnclusteredEnUpNoHF"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatMETCorrUnclusteredEnUpPuppi = cms.EDProducer("ShiftedParticleMETcorrInputProducer",
    srcOriginal = cms.InputTag("pfCandsForUnclusteredUncPuppi"),
    srcShifted = cms.InputTag("shiftedPatUnclusteredEnUpPuppi"),
    srcWeights = cms.InputTag("puppiNoLep")
)


process.shiftedPatMuonEnDown = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(-1.0),
    src = cms.InputTag("pfMuons"),
    srcWeights = cms.InputTag(""),
    uncertainty = cms.string('((x<100)?(0.002+0*y):(0.05+0*y))')
)


process.shiftedPatMuonEnDownNoHF = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(-1.0),
    src = cms.InputTag("pfMuonsNoHF"),
    srcWeights = cms.InputTag(""),
    uncertainty = cms.string('((x<100)?(0.002+0*y):(0.05+0*y))')
)


process.shiftedPatMuonEnDownPuppi = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(-1.0),
    src = cms.InputTag("pfMuonsPuppi"),
    srcWeights = cms.InputTag(""),
    uncertainty = cms.string('((x<100)?(0.002+0*y):(0.05+0*y))')
)


process.shiftedPatMuonEnUp = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(1.0),
    src = cms.InputTag("pfMuons"),
    srcWeights = cms.InputTag(""),
    uncertainty = cms.string('((x<100)?(0.002+0*y):(0.05+0*y))')
)


process.shiftedPatMuonEnUpNoHF = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(1.0),
    src = cms.InputTag("pfMuonsNoHF"),
    srcWeights = cms.InputTag(""),
    uncertainty = cms.string('((x<100)?(0.002+0*y):(0.05+0*y))')
)


process.shiftedPatMuonEnUpPuppi = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(1.0),
    src = cms.InputTag("pfMuonsPuppi"),
    srcWeights = cms.InputTag(""),
    uncertainty = cms.string('((x<100)?(0.002+0*y):(0.05+0*y))')
)


process.shiftedPatPhotonEnDown = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(-1.0),
    src = cms.InputTag("pfPhotons"),
    srcWeights = cms.InputTag(""),
    uncertainty = cms.string('((abs(y)<1.479)?(0.01+0*x):(0.025+0*x))')
)


process.shiftedPatPhotonEnDownNoHF = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(-1.0),
    src = cms.InputTag("pfPhotonsNoHF"),
    srcWeights = cms.InputTag(""),
    uncertainty = cms.string('((abs(y)<1.479)?(0.01+0*x):(0.025+0*x))')
)


process.shiftedPatPhotonEnDownPuppi = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(-1.0),
    src = cms.InputTag("pfPhotonsPuppi"),
    srcWeights = cms.InputTag("puppiNoLep"),
    uncertainty = cms.string('((abs(y)<1.479)?(0.01+0*x):(0.025+0*x))')
)


process.shiftedPatPhotonEnUp = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(1.0),
    src = cms.InputTag("pfPhotons"),
    srcWeights = cms.InputTag(""),
    uncertainty = cms.string('((abs(y)<1.479)?(0.01+0*x):(0.025+0*x))')
)


process.shiftedPatPhotonEnUpNoHF = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(1.0),
    src = cms.InputTag("pfPhotonsNoHF"),
    srcWeights = cms.InputTag(""),
    uncertainty = cms.string('((abs(y)<1.479)?(0.01+0*x):(0.025+0*x))')
)


process.shiftedPatPhotonEnUpPuppi = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(1.0),
    src = cms.InputTag("pfPhotonsPuppi"),
    srcWeights = cms.InputTag("puppiNoLep"),
    uncertainty = cms.string('((abs(y)<1.479)?(0.01+0*x):(0.025+0*x))')
)


process.shiftedPatSmearedJetResDown = cms.EDProducer("SmearedPATJetProducer",
    algo = cms.string('AK4PFchs'),
    algopt = cms.string('AK4PFchs_pt'),
    dPtMaxFactor = cms.double(3),
    dRMax = cms.double(0.2),
    debug = cms.untracked.bool(False),
    enabled = cms.bool(True),
    genJets = cms.InputTag("ak4GenJetsNoNu"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    seed = cms.uint32(37428479),
    skipGenMatching = cms.bool(False),
    src = cms.InputTag("cleanedPatJets"),
    useDeterministicSeed = cms.bool(True),
    variation = cms.int32(-1)
)


process.shiftedPatSmearedJetResDownNoHF = cms.EDProducer("SmearedPATJetProducer",
    algo = cms.string('AK4PFchs'),
    algopt = cms.string('AK4PFchs_pt'),
    dPtMaxFactor = cms.double(3),
    dRMax = cms.double(0.2),
    debug = cms.untracked.bool(False),
    enabled = cms.bool(True),
    genJets = cms.InputTag("ak4GenJetsNoNu"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    seed = cms.uint32(37428479),
    skipGenMatching = cms.bool(False),
    src = cms.InputTag("cleanedPatJetsNoHF"),
    useDeterministicSeed = cms.bool(True),
    variation = cms.int32(-1)
)


process.shiftedPatSmearedJetResDownPuppi = cms.EDProducer("SmearedPATJetProducer",
    algo = cms.string('AK4PFPuppi'),
    algopt = cms.string('AK4PFPuppi_pt'),
    dPtMaxFactor = cms.double(3),
    dRMax = cms.double(0.2),
    debug = cms.untracked.bool(False),
    enabled = cms.bool(True),
    genJets = cms.InputTag("ak4GenJetsNoNu"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    seed = cms.uint32(37428479),
    skipGenMatching = cms.bool(False),
    src = cms.InputTag("cleanedPatJetsPuppi"),
    useDeterministicSeed = cms.bool(True),
    variation = cms.int32(-1)
)


process.shiftedPatSmearedJetResUp = cms.EDProducer("SmearedPATJetProducer",
    algo = cms.string('AK4PFchs'),
    algopt = cms.string('AK4PFchs_pt'),
    dPtMaxFactor = cms.double(3),
    dRMax = cms.double(0.2),
    debug = cms.untracked.bool(False),
    enabled = cms.bool(True),
    genJets = cms.InputTag("ak4GenJetsNoNu"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    seed = cms.uint32(37428479),
    skipGenMatching = cms.bool(False),
    src = cms.InputTag("cleanedPatJets"),
    useDeterministicSeed = cms.bool(True),
    variation = cms.int32(1)
)


process.shiftedPatSmearedJetResUpNoHF = cms.EDProducer("SmearedPATJetProducer",
    algo = cms.string('AK4PFchs'),
    algopt = cms.string('AK4PFchs_pt'),
    dPtMaxFactor = cms.double(3),
    dRMax = cms.double(0.2),
    debug = cms.untracked.bool(False),
    enabled = cms.bool(True),
    genJets = cms.InputTag("ak4GenJetsNoNu"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    seed = cms.uint32(37428479),
    skipGenMatching = cms.bool(False),
    src = cms.InputTag("cleanedPatJetsNoHF"),
    useDeterministicSeed = cms.bool(True),
    variation = cms.int32(1)
)


process.shiftedPatSmearedJetResUpPuppi = cms.EDProducer("SmearedPATJetProducer",
    algo = cms.string('AK4PFPuppi'),
    algopt = cms.string('AK4PFPuppi_pt'),
    dPtMaxFactor = cms.double(3),
    dRMax = cms.double(0.2),
    debug = cms.untracked.bool(False),
    enabled = cms.bool(True),
    genJets = cms.InputTag("ak4GenJetsNoNu"),
    rho = cms.InputTag("fixedGridRhoFastjetAll"),
    seed = cms.uint32(37428479),
    skipGenMatching = cms.bool(False),
    src = cms.InputTag("cleanedPatJetsPuppi"),
    useDeterministicSeed = cms.bool(True),
    variation = cms.int32(1)
)


process.shiftedPatTauEnDown = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(-1.0),
    src = cms.InputTag("pfTaus"),
    srcWeights = cms.InputTag(""),
    uncertainty = cms.string('0.03+0*x*y')
)


process.shiftedPatTauEnDownNoHF = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(-1.0),
    src = cms.InputTag("pfTausNoHF"),
    srcWeights = cms.InputTag(""),
    uncertainty = cms.string('0.03+0*x*y')
)


process.shiftedPatTauEnDownPuppi = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(-1.0),
    src = cms.InputTag("pfTausPuppi"),
    srcWeights = cms.InputTag(""),
    uncertainty = cms.string('0.03+0*x*y')
)


process.shiftedPatTauEnUp = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(1.0),
    src = cms.InputTag("pfTaus"),
    srcWeights = cms.InputTag(""),
    uncertainty = cms.string('0.03+0*x*y')
)


process.shiftedPatTauEnUpNoHF = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(1.0),
    src = cms.InputTag("pfTausNoHF"),
    srcWeights = cms.InputTag(""),
    uncertainty = cms.string('0.03+0*x*y')
)


process.shiftedPatTauEnUpPuppi = cms.EDProducer("ShiftedParticleProducer",
    shiftBy = cms.double(1.0),
    src = cms.InputTag("pfTausPuppi"),
    srcWeights = cms.InputTag(""),
    uncertainty = cms.string('0.03+0*x*y')
)


process.shiftedPatUnclusteredEnDown = cms.EDProducer("ShiftedParticleProducer",
    binning = cms.VPSet(
        cms.PSet(
            binSelection = cms.string('charge!=0'),
            binUncertainty = cms.string('sqrt(pow(0.00009*x,2)+pow(0.0085/sqrt(sin(2*atan(exp(-y)))),2))')
        ),
        cms.PSet(
            binSelection = cms.string('pdgId==130'),
            binUncertainty = cms.string('((abs(y)<1.3)?(min(0.25,sqrt(0.64/x+0.0025))):(min(0.30,sqrt(1.0/x+0.0016))))'),
            energyDependency = cms.bool(True)
        ),
        cms.PSet(
            binSelection = cms.string('pdgId==22'),
            binUncertainty = cms.string('sqrt(0.0009/x+0.000001)+0*y'),
            energyDependency = cms.bool(True)
        ),
        cms.PSet(
            binSelection = cms.string('pdgId==1 || pdgId==2'),
            binUncertainty = cms.string('sqrt(1./x+0.0025)+0*y'),
            energyDependency = cms.bool(True)
        )
    ),
    shiftBy = cms.double(-1.0),
    src = cms.InputTag("pfCandsForUnclusteredUnc"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatUnclusteredEnDownNoHF = cms.EDProducer("ShiftedParticleProducer",
    binning = cms.VPSet(
        cms.PSet(
            binSelection = cms.string('charge!=0'),
            binUncertainty = cms.string('sqrt(pow(0.00009*x,2)+pow(0.0085/sqrt(sin(2*atan(exp(-y)))),2))')
        ),
        cms.PSet(
            binSelection = cms.string('pdgId==130'),
            binUncertainty = cms.string('((abs(y)<1.3)?(min(0.25,sqrt(0.64/x+0.0025))):(min(0.30,sqrt(1.0/x+0.0016))))'),
            energyDependency = cms.bool(True)
        ),
        cms.PSet(
            binSelection = cms.string('pdgId==22'),
            binUncertainty = cms.string('sqrt(0.0009/x+0.000001)+0*y'),
            energyDependency = cms.bool(True)
        ),
        cms.PSet(
            binSelection = cms.string('pdgId==1 || pdgId==2'),
            binUncertainty = cms.string('sqrt(1./x+0.0025)+0*y'),
            energyDependency = cms.bool(True)
        )
    ),
    shiftBy = cms.double(-1.0),
    src = cms.InputTag("pfCandsForUnclusteredUncNoHF"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatUnclusteredEnDownPuppi = cms.EDProducer("ShiftedParticleProducer",
    binning = cms.VPSet(
        cms.PSet(
            binSelection = cms.string('charge!=0'),
            binUncertainty = cms.string('sqrt(pow(0.00009*x,2)+pow(0.0085/sqrt(sin(2*atan(exp(-y)))),2))')
        ),
        cms.PSet(
            binSelection = cms.string('pdgId==130'),
            binUncertainty = cms.string('((abs(y)<1.3)?(min(0.25,sqrt(0.64/x+0.0025))):(min(0.30,sqrt(1.0/x+0.0016))))'),
            energyDependency = cms.bool(True)
        ),
        cms.PSet(
            binSelection = cms.string('pdgId==22'),
            binUncertainty = cms.string('sqrt(0.0009/x+0.000001)+0*y'),
            energyDependency = cms.bool(True)
        ),
        cms.PSet(
            binSelection = cms.string('pdgId==1 || pdgId==2'),
            binUncertainty = cms.string('sqrt(1./x+0.0025)+0*y'),
            energyDependency = cms.bool(True)
        )
    ),
    shiftBy = cms.double(-1.0),
    src = cms.InputTag("pfCandsForUnclusteredUncPuppi"),
    srcWeights = cms.InputTag("puppiNoLep")
)


process.shiftedPatUnclusteredEnUp = cms.EDProducer("ShiftedParticleProducer",
    binning = cms.VPSet(
        cms.PSet(
            binSelection = cms.string('charge!=0'),
            binUncertainty = cms.string('sqrt(pow(0.00009*x,2)+pow(0.0085/sqrt(sin(2*atan(exp(-y)))),2))')
        ),
        cms.PSet(
            binSelection = cms.string('pdgId==130'),
            binUncertainty = cms.string('((abs(y)<1.3)?(min(0.25,sqrt(0.64/x+0.0025))):(min(0.30,sqrt(1.0/x+0.0016))))'),
            energyDependency = cms.bool(True)
        ),
        cms.PSet(
            binSelection = cms.string('pdgId==22'),
            binUncertainty = cms.string('sqrt(0.0009/x+0.000001)+0*y'),
            energyDependency = cms.bool(True)
        ),
        cms.PSet(
            binSelection = cms.string('pdgId==1 || pdgId==2'),
            binUncertainty = cms.string('sqrt(1./x+0.0025)+0*y'),
            energyDependency = cms.bool(True)
        )
    ),
    shiftBy = cms.double(1.0),
    src = cms.InputTag("pfCandsForUnclusteredUnc"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatUnclusteredEnUpNoHF = cms.EDProducer("ShiftedParticleProducer",
    binning = cms.VPSet(
        cms.PSet(
            binSelection = cms.string('charge!=0'),
            binUncertainty = cms.string('sqrt(pow(0.00009*x,2)+pow(0.0085/sqrt(sin(2*atan(exp(-y)))),2))')
        ),
        cms.PSet(
            binSelection = cms.string('pdgId==130'),
            binUncertainty = cms.string('((abs(y)<1.3)?(min(0.25,sqrt(0.64/x+0.0025))):(min(0.30,sqrt(1.0/x+0.0016))))'),
            energyDependency = cms.bool(True)
        ),
        cms.PSet(
            binSelection = cms.string('pdgId==22'),
            binUncertainty = cms.string('sqrt(0.0009/x+0.000001)+0*y'),
            energyDependency = cms.bool(True)
        ),
        cms.PSet(
            binSelection = cms.string('pdgId==1 || pdgId==2'),
            binUncertainty = cms.string('sqrt(1./x+0.0025)+0*y'),
            energyDependency = cms.bool(True)
        )
    ),
    shiftBy = cms.double(1.0),
    src = cms.InputTag("pfCandsForUnclusteredUncNoHF"),
    srcWeights = cms.InputTag("")
)


process.shiftedPatUnclusteredEnUpPuppi = cms.EDProducer("ShiftedParticleProducer",
    binning = cms.VPSet(
        cms.PSet(
            binSelection = cms.string('charge!=0'),
            binUncertainty = cms.string('sqrt(pow(0.00009*x,2)+pow(0.0085/sqrt(sin(2*atan(exp(-y)))),2))')
        ),
        cms.PSet(
            binSelection = cms.string('pdgId==130'),
            binUncertainty = cms.string('((abs(y)<1.3)?(min(0.25,sqrt(0.64/x+0.0025))):(min(0.30,sqrt(1.0/x+0.0016))))'),
            energyDependency = cms.bool(True)
        ),
        cms.PSet(
            binSelection = cms.string('pdgId==22'),
            binUncertainty = cms.string('sqrt(0.0009/x+0.000001)+0*y'),
            energyDependency = cms.bool(True)
        ),
        cms.PSet(
            binSelection = cms.string('pdgId==1 || pdgId==2'),
            binUncertainty = cms.string('sqrt(1./x+0.0025)+0*y'),
            energyDependency = cms.bool(True)
        )
    ),
    shiftBy = cms.double(1.0),
    src = cms.InputTag("pfCandsForUnclusteredUncPuppi"),
    srcWeights = cms.InputTag("puppiNoLep")
)


process.simpleSecondaryVertexHighEffBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('simpleSecondaryVertex2TrkComputer'),
    tagInfos = cms.VInputTag(cms.InputTag("secondaryVertexTagInfos"))
)


process.simpleSecondaryVertexHighPurBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('simpleSecondaryVertex3TrkComputer'),
    tagInfos = cms.VInputTag(cms.InputTag("secondaryVertexTagInfos"))
)


process.slimmedAddPileupInfo = cms.EDProducer("PileupSummaryInfoSlimmer",
    keepDetailedInfoFor = cms.vint32(0),
    src = cms.InputTag("addPileupInfo")
)


process.slimmedCaloJets = cms.EDProducer("CaloJetSlimmer",
    cut = cms.string('pt>20'),
    src = cms.InputTag("ak4CaloJets")
)


process.slimmedDisplacedMuonTrackExtras = cms.EDProducer("MuonReducedTrackExtraProducer",
    cut = cms.string('pt > 4.5'),
    mightGet = cms.optional.untracked.vstring,
    muonTag = cms.InputTag("selectedPatDisplacedMuons"),
    outputClusters = cms.bool(True),
    pixelClusterTag = cms.InputTag("displacedMuonReducedTrackExtras"),
    stripClusterTag = cms.InputTag("displacedMuonReducedTrackExtras"),
    trackExtraAssocs = cms.VInputTag("displacedMuonReducedTrackExtras"),
    trackExtraTags = cms.VInputTag("displacedMuonReducedTrackExtras", "displacedStandAloneMuons")
)


process.slimmedDisplacedMuons = cms.EDProducer("PATMuonSlimmer",
    dropDirectionalIso = cms.string('0'),
    dropPfP4 = cms.string('1'),
    linkToLostTrack = cms.bool(False),
    linkToPackedPFCandidates = cms.bool(False),
    lostTracks = cms.InputTag("lostTracks"),
    modifierConfig = cms.PSet(
        modifications = cms.VPSet()
    ),
    modifyMuons = cms.bool(True),
    packedPFCandidates = cms.VInputTag(cms.InputTag("packedPFCandidates")),
    pfCandidates = cms.VInputTag(cms.InputTag("particleFlow")),
    saveSegments = cms.bool(True),
    saveTeVMuons = cms.string('0'),
    segmentsMuonSelection = cms.string('pt > 50'),
    slimCaloMETCorr = cms.string('1'),
    slimCaloVars = cms.string('1'),
    slimKinkVars = cms.string('1'),
    slimMatches = cms.string('1'),
    src = cms.InputTag("selectedPatDisplacedMuons"),
    trackExtraAssocs = cms.VInputTag("displacedMuonReducedTrackExtras", "slimmedDisplacedMuonTrackExtras")
)


process.slimmedElectrons = cms.EDProducer("PATElectronSlimmer",
    dropBasicClusters = cms.string('0'),
    dropClassifications = cms.string('0'),
    dropCorrections = cms.string('0'),
    dropExtrapolations = cms.string('pt < 5'),
    dropIsolations = cms.string('0'),
    dropPFlowClusters = cms.string('0'),
    dropPreshowerClusters = cms.string('0'),
    dropRecHits = cms.string('0'),
    dropSaturation = cms.string('pt < 5'),
    dropSeedCluster = cms.string('0'),
    dropShapes = cms.string('0'),
    dropSuperCluster = cms.string('0'),
    linkToPackedPFCandidates = cms.bool(True),
    modifierConfig = cms.PSet(
        modifications = cms.VPSet(
            cms.PSet(
                electron_config = cms.PSet(
                    ElectronMVAEstimatorRun2Fall17IsoV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV1Values"),
                    ElectronMVAEstimatorRun2Fall17IsoV2Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV2Values"),
                    ElectronMVAEstimatorRun2Fall17NoIsoV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV1Values"),
                    ElectronMVAEstimatorRun2Fall17NoIsoV2Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV2Values"),
                    ElectronMVAEstimatorRun2RunIIIWinter22IsoV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22IsoV1Values"),
                    ElectronMVAEstimatorRun2RunIIIWinter22NoIsoV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22NoIsoV1Values"),
                    ElectronMVAEstimatorRun2Spring16GeneralPurposeV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Spring16GeneralPurposeV1Values"),
                    ElectronMVAEstimatorRun2Spring16HZZV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Spring16HZZV1Values"),
                    ElectronMVAEstimatorRun2Summer18ULIdIsoValues = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Summer18ULIdIsoValues")
                ),
                modifierName = cms.string('EGExtraInfoModifierFromFloatValueMaps'),
                photon_config = cms.PSet(
                    PhotonMVAEstimatorRun2Spring16NonTrigV1Values = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRun2Spring16NonTrigV1Values"),
                    PhotonMVAEstimatorRunIIFall17v1p1Values = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v1p1Values"),
                    PhotonMVAEstimatorRunIIFall17v2Values = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v2Values"),
                    PhotonMVAEstimatorRunIIIWinter22v1Values = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIIWinter22v1Values")
                )
            ),
            cms.PSet(
                electron_config = cms.PSet(
                    ElectronMVAEstimatorRun2Fall17IsoV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV1Categories"),
                    ElectronMVAEstimatorRun2Fall17IsoV2Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV2Categories"),
                    ElectronMVAEstimatorRun2Fall17NoIsoV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV1Categories"),
                    ElectronMVAEstimatorRun2Fall17NoIsoV2Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV2Categories"),
                    ElectronMVAEstimatorRun2RunIIIWinter22IsoV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22IsoV1Categories"),
                    ElectronMVAEstimatorRun2RunIIIWinter22NoIsoV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22NoIsoV1Categories"),
                    ElectronMVAEstimatorRun2Spring16GeneralPurposeV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Spring16GeneralPurposeV1Categories"),
                    ElectronMVAEstimatorRun2Spring16HZZV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Spring16HZZV1Categories"),
                    ElectronMVAEstimatorRun2Summer18ULIdIsoCategories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Summer18ULIdIsoCategories")
                ),
                modifierName = cms.string('EGExtraInfoModifierFromIntValueMaps'),
                photon_config = cms.PSet(
                    PhotonMVAEstimatorRun2Spring16NonTrigV1Categories = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRun2Spring16NonTrigV1Categories"),
                    PhotonMVAEstimatorRunIIFall17v1p1Categories = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v1p1Categories"),
                    PhotonMVAEstimatorRunIIFall17v2Categories = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v2Categories"),
                    PhotonMVAEstimatorRunIIIWinter22v1Categories = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIIWinter22v1Categories")
                )
            ),
            cms.PSet(
                electron_config = cms.PSet(
                    cutBasedElectronID_Fall17_94X_V1_loose = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V1-looseBitmap"),
                    cutBasedElectronID_Fall17_94X_V1_medium = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V1-mediumBitmap"),
                    cutBasedElectronID_Fall17_94X_V1_tight = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V1-tightBitmap"),
                    cutBasedElectronID_Fall17_94X_V1_veto = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V1-vetoBitmap"),
                    cutBasedElectronID_Fall17_94X_V2_loose = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V2-looseBitmap"),
                    cutBasedElectronID_Fall17_94X_V2_medium = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V2-mediumBitmap"),
                    cutBasedElectronID_Fall17_94X_V2_tight = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V2-tightBitmap"),
                    cutBasedElectronID_Fall17_94X_V2_veto = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V2-vetoBitmap"),
                    cutBasedElectronID_RunIIIWinter22_V1_loose = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-RunIIIWinter22-V1-looseBitmap"),
                    cutBasedElectronID_RunIIIWinter22_V1_medium = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-RunIIIWinter22-V1-mediumBitmap"),
                    cutBasedElectronID_RunIIIWinter22_V1_tight = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-RunIIIWinter22-V1-tightBitmap"),
                    cutBasedElectronID_RunIIIWinter22_V1_veto = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-RunIIIWinter22-V1-vetoBitmap"),
                    cutBasedElectronID_Summer16_80X_V1_loose = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Summer16-80X-V1-looseBitmap"),
                    cutBasedElectronID_Summer16_80X_V1_medium = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Summer16-80X-V1-mediumBitmap"),
                    cutBasedElectronID_Summer16_80X_V1_tight = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Summer16-80X-V1-tightBitmap"),
                    cutBasedElectronID_Summer16_80X_V1_veto = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Summer16-80X-V1-vetoBitmap"),
                    heepElectronID_HEEPV70 = cms.InputTag("egmGsfElectronIDs","heepElectronID-HEEPV70Bitmap"),
                    heepElectronID_HEEPV71 = cms.InputTag("egmGsfElectronIDs","heepElectronID-HEEPV71Bitmap")
                ),
                modifierName = cms.string('EGExtraInfoModifierFromUIntToIntValueMaps'),
                photon_config = cms.PSet(
                    cutBasedPhotonID_Fall17_94X_V1_loose = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V1-looseBitmap"),
                    cutBasedPhotonID_Fall17_94X_V1_medium = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V1-mediumBitmap"),
                    cutBasedPhotonID_Fall17_94X_V1_tight = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V1-tightBitmap"),
                    cutBasedPhotonID_Fall17_94X_V2_loose = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V2-looseBitmap"),
                    cutBasedPhotonID_Fall17_94X_V2_medium = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V2-mediumBitmap"),
                    cutBasedPhotonID_Fall17_94X_V2_tight = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V2-tightBitmap"),
                    cutBasedPhotonID_RunIIIWinter22_122X_V1_loose = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-RunIIIWinter22-122X-V1-looseBitmap"),
                    cutBasedPhotonID_RunIIIWinter22_122X_V1_medium = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-RunIIIWinter22-122X-V1-mediumBitmap"),
                    cutBasedPhotonID_RunIIIWinter22_122X_V1_tight = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-RunIIIWinter22-122X-V1-tightBitmap"),
                    cutBasedPhotonID_Spring16_V2p2_loose = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Spring16-V2p2-looseBitmap"),
                    cutBasedPhotonID_Spring16_V2p2_medium = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Spring16-V2p2-mediumBitmap"),
                    cutBasedPhotonID_Spring16_V2p2_tight = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Spring16-V2p2-tightBitmap")
                )
            )
        )
    ),
    modifyElectrons = cms.bool(True),
    packedPFCandidates = cms.InputTag("packedPFCandidates"),
    recoToPFMap = cms.InputTag("reducedEgamma","reducedGsfElectronPfCandMap"),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    saveNonZSClusterShapes = cms.string('pt > 5'),
    src = cms.InputTag("selectedPatElectrons")
)


process.slimmedElectronsHGC = cms.EDProducer("PATElectronSlimmer",
    dropBasicClusters = cms.string('0'),
    dropClassifications = cms.string('0'),
    dropCorrections = cms.string('0'),
    dropExtrapolations = cms.string('pt < 5'),
    dropIsolations = cms.string('0'),
    dropPFlowClusters = cms.string('0'),
    dropPreshowerClusters = cms.string('0'),
    dropRecHits = cms.string('0'),
    dropSaturation = cms.string('pt < 5'),
    dropSeedCluster = cms.string('0'),
    dropShapes = cms.string('0'),
    dropSuperCluster = cms.string('0'),
    linkToPackedPFCandidates = cms.bool(False),
    modifierConfig = cms.PSet(
        modifications = cms.VPSet(
            cms.PSet(
                electron_config = cms.PSet(
                    ElectronMVAEstimatorRun2Fall17IsoV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV1Values"),
                    ElectronMVAEstimatorRun2Fall17IsoV2Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV2Values"),
                    ElectronMVAEstimatorRun2Fall17NoIsoV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV1Values"),
                    ElectronMVAEstimatorRun2Fall17NoIsoV2Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV2Values"),
                    ElectronMVAEstimatorRun2RunIIIWinter22IsoV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22IsoV1Values"),
                    ElectronMVAEstimatorRun2RunIIIWinter22NoIsoV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22NoIsoV1Values"),
                    ElectronMVAEstimatorRun2Spring16GeneralPurposeV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Spring16GeneralPurposeV1Values"),
                    ElectronMVAEstimatorRun2Spring16HZZV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Spring16HZZV1Values"),
                    ElectronMVAEstimatorRun2Summer18ULIdIsoValues = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Summer18ULIdIsoValues")
                ),
                modifierName = cms.string('EGExtraInfoModifierFromFloatValueMaps'),
                photon_config = cms.PSet(
                    PhotonMVAEstimatorRun2Spring16NonTrigV1Values = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRun2Spring16NonTrigV1Values"),
                    PhotonMVAEstimatorRunIIFall17v1p1Values = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v1p1Values"),
                    PhotonMVAEstimatorRunIIFall17v2Values = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v2Values"),
                    PhotonMVAEstimatorRunIIIWinter22v1Values = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIIWinter22v1Values")
                )
            ),
            cms.PSet(
                electron_config = cms.PSet(
                    ElectronMVAEstimatorRun2Fall17IsoV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV1Categories"),
                    ElectronMVAEstimatorRun2Fall17IsoV2Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV2Categories"),
                    ElectronMVAEstimatorRun2Fall17NoIsoV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV1Categories"),
                    ElectronMVAEstimatorRun2Fall17NoIsoV2Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV2Categories"),
                    ElectronMVAEstimatorRun2RunIIIWinter22IsoV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22IsoV1Categories"),
                    ElectronMVAEstimatorRun2RunIIIWinter22NoIsoV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22NoIsoV1Categories"),
                    ElectronMVAEstimatorRun2Spring16GeneralPurposeV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Spring16GeneralPurposeV1Categories"),
                    ElectronMVAEstimatorRun2Spring16HZZV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Spring16HZZV1Categories"),
                    ElectronMVAEstimatorRun2Summer18ULIdIsoCategories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Summer18ULIdIsoCategories")
                ),
                modifierName = cms.string('EGExtraInfoModifierFromIntValueMaps'),
                photon_config = cms.PSet(
                    PhotonMVAEstimatorRun2Spring16NonTrigV1Categories = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRun2Spring16NonTrigV1Categories"),
                    PhotonMVAEstimatorRunIIFall17v1p1Categories = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v1p1Categories"),
                    PhotonMVAEstimatorRunIIFall17v2Categories = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v2Categories"),
                    PhotonMVAEstimatorRunIIIWinter22v1Categories = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIIWinter22v1Categories")
                )
            ),
            cms.PSet(
                electron_config = cms.PSet(
                    cutBasedElectronID_Fall17_94X_V1_loose = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V1-looseBitmap"),
                    cutBasedElectronID_Fall17_94X_V1_medium = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V1-mediumBitmap"),
                    cutBasedElectronID_Fall17_94X_V1_tight = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V1-tightBitmap"),
                    cutBasedElectronID_Fall17_94X_V1_veto = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V1-vetoBitmap"),
                    cutBasedElectronID_Fall17_94X_V2_loose = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V2-looseBitmap"),
                    cutBasedElectronID_Fall17_94X_V2_medium = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V2-mediumBitmap"),
                    cutBasedElectronID_Fall17_94X_V2_tight = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V2-tightBitmap"),
                    cutBasedElectronID_Fall17_94X_V2_veto = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V2-vetoBitmap"),
                    cutBasedElectronID_RunIIIWinter22_V1_loose = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-RunIIIWinter22-V1-looseBitmap"),
                    cutBasedElectronID_RunIIIWinter22_V1_medium = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-RunIIIWinter22-V1-mediumBitmap"),
                    cutBasedElectronID_RunIIIWinter22_V1_tight = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-RunIIIWinter22-V1-tightBitmap"),
                    cutBasedElectronID_RunIIIWinter22_V1_veto = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-RunIIIWinter22-V1-vetoBitmap"),
                    cutBasedElectronID_Summer16_80X_V1_loose = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Summer16-80X-V1-looseBitmap"),
                    cutBasedElectronID_Summer16_80X_V1_medium = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Summer16-80X-V1-mediumBitmap"),
                    cutBasedElectronID_Summer16_80X_V1_tight = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Summer16-80X-V1-tightBitmap"),
                    cutBasedElectronID_Summer16_80X_V1_veto = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Summer16-80X-V1-vetoBitmap"),
                    heepElectronID_HEEPV70 = cms.InputTag("egmGsfElectronIDs","heepElectronID-HEEPV70Bitmap"),
                    heepElectronID_HEEPV71 = cms.InputTag("egmGsfElectronIDs","heepElectronID-HEEPV71Bitmap")
                ),
                modifierName = cms.string('EGExtraInfoModifierFromUIntToIntValueMaps'),
                photon_config = cms.PSet(
                    cutBasedPhotonID_Fall17_94X_V1_loose = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V1-looseBitmap"),
                    cutBasedPhotonID_Fall17_94X_V1_medium = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V1-mediumBitmap"),
                    cutBasedPhotonID_Fall17_94X_V1_tight = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V1-tightBitmap"),
                    cutBasedPhotonID_Fall17_94X_V2_loose = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V2-looseBitmap"),
                    cutBasedPhotonID_Fall17_94X_V2_medium = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V2-mediumBitmap"),
                    cutBasedPhotonID_Fall17_94X_V2_tight = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V2-tightBitmap"),
                    cutBasedPhotonID_RunIIIWinter22_122X_V1_loose = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-RunIIIWinter22-122X-V1-looseBitmap"),
                    cutBasedPhotonID_RunIIIWinter22_122X_V1_medium = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-RunIIIWinter22-122X-V1-mediumBitmap"),
                    cutBasedPhotonID_RunIIIWinter22_122X_V1_tight = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-RunIIIWinter22-122X-V1-tightBitmap"),
                    cutBasedPhotonID_Spring16_V2p2_loose = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Spring16-V2p2-looseBitmap"),
                    cutBasedPhotonID_Spring16_V2p2_medium = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Spring16-V2p2-mediumBitmap"),
                    cutBasedPhotonID_Spring16_V2p2_tight = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Spring16-V2p2-tightBitmap")
                )
            )
        )
    ),
    modifyElectrons = cms.bool(False),
    packedPFCandidates = cms.InputTag("packedPFCandidates"),
    recoToPFMap = cms.InputTag("reducedEgamma","reducedGsfElectronPfCandMap"),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    saveNonZSClusterShapes = cms.string('0'),
    src = cms.InputTag("selectedPatElectronsHGC")
)


process.slimmedGenJets = cms.EDProducer("PATGenJetSlimmer",
    clearDaughters = cms.bool(False),
    cut = cms.string('pt > 8'),
    cutLoose = cms.string(''),
    dropSpecific = cms.bool(False),
    nLoose = cms.uint32(0),
    packedGenParticles = cms.InputTag("packedGenParticles"),
    src = cms.InputTag("ak4GenJetsNoNu")
)


process.slimmedGenJetsAK8 = cms.EDProducer("PATGenJetSlimmer",
    clearDaughters = cms.bool(False),
    cut = cms.string('pt > 80'),
    cutLoose = cms.string('pt > 10.'),
    dropSpecific = cms.bool(False),
    nLoose = cms.uint32(3),
    packedGenParticles = cms.InputTag("packedGenParticles"),
    src = cms.InputTag("ak8GenJetsNoNu")
)


process.slimmedGenJetsAK8SoftDropSubJets = cms.EDProducer("PATGenJetSlimmer",
    clearDaughters = cms.bool(False),
    cut = cms.string(''),
    cutLoose = cms.string(''),
    dropSpecific = cms.bool(True),
    nLoose = cms.uint32(0),
    packedGenParticles = cms.InputTag("packedGenParticles"),
    src = cms.InputTag("ak8GenJetsNoNuSoftDrop","SubJets")
)


process.slimmedGenJetsFlavourInfos = cms.EDProducer("GenJetFlavourInfoPreserver",
    genJetFlavourInfos = cms.InputTag("ak4GenJetFlavourInfos"),
    genJets = cms.InputTag("ak4GenJetsNoNu"),
    slimmedGenJetAssociation = cms.InputTag("slimmedGenJets","slimmedGenJetAssociation"),
    slimmedGenJets = cms.InputTag("slimmedGenJets")
)


process.slimmedHcalRecHits = cms.EDProducer("HcalHitSelection",
    hbheTag = cms.InputTag("reducedHcalRecHits","hbhereco"),
    hfTag = cms.InputTag("reducedHcalRecHits","hfreco"),
    hoSeverityLevel = cms.int32(13),
    hoTag = cms.InputTag("reducedHcalRecHits","horeco"),
    interestingDetIds = cms.VInputTag()
)


process.slimmedJPTJets = cms.EDProducer("JPTJetSlimmer",
    cut = cms.string('pt>25 && abs(eta) < 2.2'),
    src = cms.InputTag("JetPlusTrackZSPCorJetAntiKt4"),
    srcCalo = cms.InputTag("slimmedCaloJets")
)


process.slimmedJetsAK8NoDeepTags = cms.EDProducer("PATJetSlimmer",
    dropDaughters = cms.string('pt < 170'),
    dropJetVars = cms.string('1'),
    dropSpecific = cms.string('pt < 170'),
    dropTagInfos = cms.string('pt < 170'),
    dropTrackRefs = cms.string('1'),
    mixedDaughters = cms.bool(False),
    modifierConfig = cms.PSet(
        modifications = cms.VPSet()
    ),
    modifyJets = cms.bool(True),
    packedPFCandidates = cms.InputTag("packedPFCandidates"),
    rekeyDaughters = cms.string('0'),
    src = cms.InputTag("packedPatJetsAK8")
)


process.slimmedJetsAK8PFPuppiSoftDropPacked = cms.EDProducer("BoostedJetMerger",
    jetSrc = cms.InputTag("selectedPatJetsAK8PFPuppiSoftDrop"),
    subjetSrc = cms.InputTag("slimmedJetsAK8PFPuppiSoftDropSubjets")
)


process.slimmedJetsAK8PFPuppiSoftDropSubjets = cms.EDProducer("PATJetSlimmer",
    dropDaughters = cms.string('0'),
    dropJetVars = cms.string('1'),
    dropSpecific = cms.string('1'),
    dropTagInfos = cms.string('1'),
    dropTrackRefs = cms.string('1'),
    mixedDaughters = cms.bool(False),
    modifierConfig = cms.PSet(
        modifications = cms.VPSet()
    ),
    modifyJets = cms.bool(True),
    packedPFCandidates = cms.InputTag("packedPFCandidates"),
    rekeyDaughters = cms.string('1'),
    src = cms.InputTag("selectedPatJetsAK8PFPuppiSoftDropSubjets")
)


process.slimmedJetsNoDeepFlavour = cms.EDProducer("PATJetSlimmer",
    dropDaughters = cms.string('0'),
    dropJetVars = cms.string('1'),
    dropSpecific = cms.string('0'),
    dropTagInfos = cms.string('0'),
    dropTrackRefs = cms.string('1'),
    mixedDaughters = cms.bool(False),
    modifierConfig = cms.PSet(
        modifications = cms.VPSet()
    ),
    modifyJets = cms.bool(True),
    packedPFCandidates = cms.InputTag("packedPFCandidates"),
    rekeyDaughters = cms.string('1'),
    src = cms.InputTag("selectedPatJets")
)


process.slimmedJetsPuppiNoDeepTags = cms.EDProducer("PATJetSlimmer",
    dropDaughters = cms.string('0'),
    dropJetVars = cms.string('1'),
    dropSpecific = cms.string('0'),
    dropTagInfos = cms.string('1'),
    dropTrackRefs = cms.string('1'),
    mixedDaughters = cms.bool(False),
    modifierConfig = cms.PSet(
        modifications = cms.VPSet()
    ),
    modifyJets = cms.bool(True),
    packedPFCandidates = cms.InputTag("packedPFCandidates"),
    rekeyDaughters = cms.string('1'),
    src = cms.InputTag("selectedPatJetsPuppi")
)


process.slimmedKshortVertices = cms.EDProducer("PATSecondaryVertexSlimmer",
    packedPFCandidates = cms.InputTag("packedPFCandidates"),
    src = cms.InputTag("generalV0Candidates","Kshort")
)


process.slimmedLambdaVertices = cms.EDProducer("PATSecondaryVertexSlimmer",
    packedPFCandidates = cms.InputTag("packedPFCandidates"),
    src = cms.InputTag("generalV0Candidates","Lambda")
)


process.slimmedLowPtElectrons = cms.EDProducer("PATElectronSlimmer",
    dropBasicClusters = cms.string('0'),
    dropClassifications = cms.string('0'),
    dropCorrections = cms.string('0'),
    dropExtrapolations = cms.string('0'),
    dropIsolations = cms.string('0'),
    dropPFlowClusters = cms.string('0'),
    dropPreshowerClusters = cms.string('0'),
    dropRecHits = cms.string('0'),
    dropSaturation = cms.string('0'),
    dropSeedCluster = cms.string('0'),
    dropShapes = cms.string('0'),
    dropSuperCluster = cms.string('0'),
    linkToPackedPFCandidates = cms.bool(False),
    modifierConfig = cms.PSet(
        modifications = cms.VPSet(
            cms.PSet(
                electron_config = cms.PSet(
                    ele2packed = cms.InputTag("lowPtGsfLinks","ele2packed"),
                    electronSrc = cms.InputTag("selectedPatLowPtElectrons")
                ),
                modifierName = cms.string('EGExtraInfoModifierFromPackedCandPtrValueMaps'),
                photon_config = cms.PSet(

                )
            ),
            cms.PSet(
                electron_config = cms.PSet(
                    ele2lost = cms.InputTag("lowPtGsfLinks","ele2lost"),
                    electronSrc = cms.InputTag("selectedPatLowPtElectrons")
                ),
                modifierName = cms.string('EGExtraInfoModifierFromPackedCandPtrValueMaps'),
                photon_config = cms.PSet(

                )
            ),
            cms.PSet(
                addExtraUserVars = cms.bool(True),
                beamSpot = cms.InputTag("offlineBeamSpot"),
                conversions = cms.InputTag("gsfTracksOpenConversions","gsfTracksOpenConversions"),
                modifierName = cms.string('LowPtElectronModifier'),
                vertices = cms.InputTag("offlineSlimmedPrimaryVertices")
            )
        )
    ),
    modifyElectrons = cms.bool(True),
    packedPFCandidates = cms.InputTag("packedPFCandidates"),
    recoToPFMap = cms.InputTag("reducedEgamma","reducedGsfElectronPfCandMap"),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    saveNonZSClusterShapes = cms.string('1'),
    src = cms.InputTag("selectedPatLowPtElectrons")
)


process.slimmedMETs = cms.EDProducer("PATMETSlimmer",
    addDeepMETs = cms.bool(True),
    caloMET = cms.InputTag("patCaloMet"),
    chsMET = cms.InputTag("patCHSMet"),
    deepMETResolutionTune = cms.InputTag("deepMETsResolutionTune"),
    deepMETResponseTune = cms.InputTag("deepMETsResponseTune"),
    rawVariation = cms.InputTag("patPFMet"),
    runningOnMiniAOD = cms.bool(False),
    src = cms.InputTag("patMETs"),
    t01Variation = cms.InputTag("patPFMetT0pcT1"),
    t1SmearedVarsAndUncs = cms.InputTag("patPFMetT1Smear%s"),
    t1Uncertainties = cms.InputTag("patPFMetT1%s"),
    tXYUncForRaw = cms.InputTag("patPFMetTxy"),
    tXYUncForT01 = cms.InputTag("patPFMetT0pcT1Txy"),
    tXYUncForT01Smear = cms.InputTag("patPFMetT0pcT1SmearTxy"),
    tXYUncForT1 = cms.InputTag("patPFMetT1Txy"),
    tXYUncForT1Smear = cms.InputTag("patPFMetT1SmearTxy"),
    trkMET = cms.InputTag("patTrkMet")
)


process.slimmedMETsNoHF = cms.EDProducer("PATMETSlimmer",
    addDeepMETs = cms.bool(True),
    chsMET = cms.InputTag("patCHSMet"),
    deepMETResolutionTune = cms.InputTag("deepMETsResolutionTune"),
    deepMETResponseTune = cms.InputTag("deepMETsResponseTune"),
    rawVariation = cms.InputTag("patPFMetNoHF"),
    runningOnMiniAOD = cms.bool(False),
    src = cms.InputTag("patMETsNoHF"),
    t01Variation = cms.InputTag("patPFMetT0pcT1NoHF"),
    t1SmearedVarsAndUncs = cms.InputTag("patPFMetT1Smear%sNoHF"),
    t1Uncertainties = cms.InputTag("patPFMetT1%sNoHF"),
    tXYUncForRaw = cms.InputTag("patPFMetTxyNoHF"),
    tXYUncForT01 = cms.InputTag("patPFMetT0pcT1TxyNoHF"),
    tXYUncForT01Smear = cms.InputTag("patPFMetT0pcT1SmearTxyNoHF"),
    tXYUncForT1 = cms.InputTag("patPFMetT1TxyNoHF"),
    tXYUncForT1Smear = cms.InputTag("patPFMetT1SmearTxyNoHF"),
    trkMET = cms.InputTag("patTrkMet")
)


process.slimmedMETsPuppi = cms.EDProducer("PATMETSlimmer",
    addDeepMETs = cms.bool(True),
    chsMET = cms.InputTag("patCHSMet"),
    deepMETResolutionTune = cms.InputTag("deepMETsResolutionTune"),
    deepMETResponseTune = cms.InputTag("deepMETsResponseTune"),
    rawVariation = cms.InputTag("patPFMetPuppi"),
    runningOnMiniAOD = cms.bool(False),
    src = cms.InputTag("patMETsPuppi"),
    t01Variation = cms.InputTag("patPFMetT0pcT1Puppi"),
    t1SmearedVarsAndUncs = cms.InputTag("patPFMetT1Smear%sPuppi"),
    t1Uncertainties = cms.InputTag("patPFMetT1%sPuppi"),
    tXYUncForRaw = cms.InputTag("patPFMetTxyPuppi"),
    tXYUncForT01 = cms.InputTag("patPFMetT0pcT1TxyPuppi"),
    tXYUncForT01Smear = cms.InputTag("patPFMetT0pcT1SmearTxyPuppi"),
    tXYUncForT1 = cms.InputTag("patPFMetT1TxyPuppi"),
    tXYUncForT1Smear = cms.InputTag("patPFMetT1SmearTxyPuppi"),
    trkMET = cms.InputTag("patTrkMet")
)


process.slimmedMuonTrackExtras = cms.EDProducer("MuonReducedTrackExtraProducer",
    cut = cms.string('pt > 4.5'),
    mightGet = cms.optional.untracked.vstring,
    muonTag = cms.InputTag("selectedPatMuons"),
    outputClusters = cms.bool(True),
    pixelClusterTag = cms.InputTag("muonReducedTrackExtras"),
    stripClusterTag = cms.InputTag("muonReducedTrackExtras"),
    trackExtraAssocs = cms.VInputTag("muonReducedTrackExtras"),
    trackExtraTags = cms.VInputTag("muonReducedTrackExtras", "standAloneMuons")
)


process.slimmedMuons = cms.EDProducer("PATMuonSlimmer",
    dropDirectionalIso = cms.string('0'),
    dropPfP4 = cms.string('1'),
    linkToLostTrack = cms.bool(True),
    linkToPackedPFCandidates = cms.bool(True),
    lostTracks = cms.InputTag("lostTracks"),
    modifierConfig = cms.PSet(
        modifications = cms.VPSet()
    ),
    modifyMuons = cms.bool(True),
    packedPFCandidates = cms.VInputTag(cms.InputTag("packedPFCandidates")),
    pfCandidates = cms.VInputTag(cms.InputTag("particleFlow")),
    saveSegments = cms.bool(True),
    saveTeVMuons = cms.string('pt > 100'),
    segmentsMuonSelection = cms.string('pt > 50'),
    slimCaloMETCorr = cms.string('1'),
    slimCaloVars = cms.string('1'),
    slimKinkVars = cms.string('1'),
    slimMatches = cms.string('1'),
    src = cms.InputTag("selectedPatMuons"),
    trackExtraAssocs = cms.VInputTag("muonReducedTrackExtras", "slimmedMuonTrackExtras")
)


process.slimmedOOTPhotons = cms.EDProducer("PATPhotonSlimmer",
    dropBasicClusters = cms.string('0'),
    dropPreshowerClusters = cms.string('0'),
    dropRecHits = cms.string('0'),
    dropRegressionData = cms.string('1'),
    dropSaturation = cms.string('0'),
    dropSeedCluster = cms.string('0'),
    dropSuperCluster = cms.string('0'),
    linkToPackedPFCandidates = cms.bool(False),
    modifierConfig = cms.PSet(
        modifications = cms.VPSet()
    ),
    modifyPhotons = cms.bool(False),
    packedPFCandidates = cms.InputTag(""),
    recoToPFMap = cms.InputTag(""),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    saveNonZSClusterShapes = cms.string('(r9()>0.8)'),
    src = cms.InputTag("selectedPatOOTPhotons")
)


process.slimmedPatTrigger = cms.EDProducer("PATTriggerObjectStandAloneSlimmer",
    packFilterLabels = cms.bool(True),
    packP4 = cms.bool(True),
    src = cms.InputTag("selectedPatTrigger"),
    triggerResults = cms.InputTag("TriggerResults","","HLT")
)


process.slimmedPhotons = cms.EDProducer("PATPhotonSlimmer",
    dropBasicClusters = cms.string('0'),
    dropPreshowerClusters = cms.string('0'),
    dropRecHits = cms.string('0'),
    dropRegressionData = cms.string('1'),
    dropSaturation = cms.string('0'),
    dropSeedCluster = cms.string('0'),
    dropSuperCluster = cms.string('0'),
    linkToPackedPFCandidates = cms.bool(True),
    modifierConfig = cms.PSet(
        modifications = cms.VPSet(
            cms.PSet(
                electron_config = cms.PSet(
                    ElectronMVAEstimatorRun2Fall17IsoV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV1Values"),
                    ElectronMVAEstimatorRun2Fall17IsoV2Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV2Values"),
                    ElectronMVAEstimatorRun2Fall17NoIsoV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV1Values"),
                    ElectronMVAEstimatorRun2Fall17NoIsoV2Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV2Values"),
                    ElectronMVAEstimatorRun2RunIIIWinter22IsoV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22IsoV1Values"),
                    ElectronMVAEstimatorRun2RunIIIWinter22NoIsoV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22NoIsoV1Values"),
                    ElectronMVAEstimatorRun2Spring16GeneralPurposeV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Spring16GeneralPurposeV1Values"),
                    ElectronMVAEstimatorRun2Spring16HZZV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Spring16HZZV1Values"),
                    ElectronMVAEstimatorRun2Summer18ULIdIsoValues = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Summer18ULIdIsoValues")
                ),
                modifierName = cms.string('EGExtraInfoModifierFromFloatValueMaps'),
                photon_config = cms.PSet(
                    PhotonMVAEstimatorRun2Spring16NonTrigV1Values = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRun2Spring16NonTrigV1Values"),
                    PhotonMVAEstimatorRunIIFall17v1p1Values = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v1p1Values"),
                    PhotonMVAEstimatorRunIIFall17v2Values = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v2Values"),
                    PhotonMVAEstimatorRunIIIWinter22v1Values = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIIWinter22v1Values")
                )
            ),
            cms.PSet(
                electron_config = cms.PSet(
                    ElectronMVAEstimatorRun2Fall17IsoV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV1Categories"),
                    ElectronMVAEstimatorRun2Fall17IsoV2Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV2Categories"),
                    ElectronMVAEstimatorRun2Fall17NoIsoV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV1Categories"),
                    ElectronMVAEstimatorRun2Fall17NoIsoV2Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV2Categories"),
                    ElectronMVAEstimatorRun2RunIIIWinter22IsoV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22IsoV1Categories"),
                    ElectronMVAEstimatorRun2RunIIIWinter22NoIsoV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22NoIsoV1Categories"),
                    ElectronMVAEstimatorRun2Spring16GeneralPurposeV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Spring16GeneralPurposeV1Categories"),
                    ElectronMVAEstimatorRun2Spring16HZZV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Spring16HZZV1Categories"),
                    ElectronMVAEstimatorRun2Summer18ULIdIsoCategories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Summer18ULIdIsoCategories")
                ),
                modifierName = cms.string('EGExtraInfoModifierFromIntValueMaps'),
                photon_config = cms.PSet(
                    PhotonMVAEstimatorRun2Spring16NonTrigV1Categories = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRun2Spring16NonTrigV1Categories"),
                    PhotonMVAEstimatorRunIIFall17v1p1Categories = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v1p1Categories"),
                    PhotonMVAEstimatorRunIIFall17v2Categories = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v2Categories"),
                    PhotonMVAEstimatorRunIIIWinter22v1Categories = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIIWinter22v1Categories")
                )
            ),
            cms.PSet(
                electron_config = cms.PSet(
                    cutBasedElectronID_Fall17_94X_V1_loose = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V1-looseBitmap"),
                    cutBasedElectronID_Fall17_94X_V1_medium = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V1-mediumBitmap"),
                    cutBasedElectronID_Fall17_94X_V1_tight = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V1-tightBitmap"),
                    cutBasedElectronID_Fall17_94X_V1_veto = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V1-vetoBitmap"),
                    cutBasedElectronID_Fall17_94X_V2_loose = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V2-looseBitmap"),
                    cutBasedElectronID_Fall17_94X_V2_medium = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V2-mediumBitmap"),
                    cutBasedElectronID_Fall17_94X_V2_tight = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V2-tightBitmap"),
                    cutBasedElectronID_Fall17_94X_V2_veto = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V2-vetoBitmap"),
                    cutBasedElectronID_RunIIIWinter22_V1_loose = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-RunIIIWinter22-V1-looseBitmap"),
                    cutBasedElectronID_RunIIIWinter22_V1_medium = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-RunIIIWinter22-V1-mediumBitmap"),
                    cutBasedElectronID_RunIIIWinter22_V1_tight = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-RunIIIWinter22-V1-tightBitmap"),
                    cutBasedElectronID_RunIIIWinter22_V1_veto = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-RunIIIWinter22-V1-vetoBitmap"),
                    cutBasedElectronID_Summer16_80X_V1_loose = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Summer16-80X-V1-looseBitmap"),
                    cutBasedElectronID_Summer16_80X_V1_medium = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Summer16-80X-V1-mediumBitmap"),
                    cutBasedElectronID_Summer16_80X_V1_tight = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Summer16-80X-V1-tightBitmap"),
                    cutBasedElectronID_Summer16_80X_V1_veto = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Summer16-80X-V1-vetoBitmap"),
                    heepElectronID_HEEPV70 = cms.InputTag("egmGsfElectronIDs","heepElectronID-HEEPV70Bitmap"),
                    heepElectronID_HEEPV71 = cms.InputTag("egmGsfElectronIDs","heepElectronID-HEEPV71Bitmap")
                ),
                modifierName = cms.string('EGExtraInfoModifierFromUIntToIntValueMaps'),
                photon_config = cms.PSet(
                    cutBasedPhotonID_Fall17_94X_V1_loose = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V1-looseBitmap"),
                    cutBasedPhotonID_Fall17_94X_V1_medium = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V1-mediumBitmap"),
                    cutBasedPhotonID_Fall17_94X_V1_tight = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V1-tightBitmap"),
                    cutBasedPhotonID_Fall17_94X_V2_loose = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V2-looseBitmap"),
                    cutBasedPhotonID_Fall17_94X_V2_medium = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V2-mediumBitmap"),
                    cutBasedPhotonID_Fall17_94X_V2_tight = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V2-tightBitmap"),
                    cutBasedPhotonID_RunIIIWinter22_122X_V1_loose = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-RunIIIWinter22-122X-V1-looseBitmap"),
                    cutBasedPhotonID_RunIIIWinter22_122X_V1_medium = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-RunIIIWinter22-122X-V1-mediumBitmap"),
                    cutBasedPhotonID_RunIIIWinter22_122X_V1_tight = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-RunIIIWinter22-122X-V1-tightBitmap"),
                    cutBasedPhotonID_Spring16_V2p2_loose = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Spring16-V2p2-looseBitmap"),
                    cutBasedPhotonID_Spring16_V2p2_medium = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Spring16-V2p2-mediumBitmap"),
                    cutBasedPhotonID_Spring16_V2p2_tight = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Spring16-V2p2-tightBitmap")
                )
            )
        )
    ),
    modifyPhotons = cms.bool(True),
    packedPFCandidates = cms.InputTag("packedPFCandidates"),
    recoToPFMap = cms.InputTag("reducedEgamma","reducedPhotonPfCandMap"),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    saveNonZSClusterShapes = cms.string('0'),
    src = cms.InputTag("selectedPatPhotons")
)


process.slimmedPhotonsHGC = cms.EDProducer("PATPhotonSlimmer",
    dropBasicClusters = cms.string('0'),
    dropPreshowerClusters = cms.string('0'),
    dropRecHits = cms.string('0'),
    dropRegressionData = cms.string('1'),
    dropSaturation = cms.string('0'),
    dropSeedCluster = cms.string('0'),
    dropSuperCluster = cms.string('0'),
    linkToPackedPFCandidates = cms.bool(False),
    modifierConfig = cms.PSet(
        modifications = cms.VPSet(
            cms.PSet(
                electron_config = cms.PSet(
                    ElectronMVAEstimatorRun2Fall17IsoV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV1Values"),
                    ElectronMVAEstimatorRun2Fall17IsoV2Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV2Values"),
                    ElectronMVAEstimatorRun2Fall17NoIsoV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV1Values"),
                    ElectronMVAEstimatorRun2Fall17NoIsoV2Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV2Values"),
                    ElectronMVAEstimatorRun2RunIIIWinter22IsoV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22IsoV1Values"),
                    ElectronMVAEstimatorRun2RunIIIWinter22NoIsoV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22NoIsoV1Values"),
                    ElectronMVAEstimatorRun2Spring16GeneralPurposeV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Spring16GeneralPurposeV1Values"),
                    ElectronMVAEstimatorRun2Spring16HZZV1Values = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Spring16HZZV1Values"),
                    ElectronMVAEstimatorRun2Summer18ULIdIsoValues = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Summer18ULIdIsoValues")
                ),
                modifierName = cms.string('EGExtraInfoModifierFromFloatValueMaps'),
                photon_config = cms.PSet(
                    PhotonMVAEstimatorRun2Spring16NonTrigV1Values = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRun2Spring16NonTrigV1Values"),
                    PhotonMVAEstimatorRunIIFall17v1p1Values = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v1p1Values"),
                    PhotonMVAEstimatorRunIIFall17v2Values = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v2Values"),
                    PhotonMVAEstimatorRunIIIWinter22v1Values = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIIWinter22v1Values")
                )
            ),
            cms.PSet(
                electron_config = cms.PSet(
                    ElectronMVAEstimatorRun2Fall17IsoV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV1Categories"),
                    ElectronMVAEstimatorRun2Fall17IsoV2Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17IsoV2Categories"),
                    ElectronMVAEstimatorRun2Fall17NoIsoV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV1Categories"),
                    ElectronMVAEstimatorRun2Fall17NoIsoV2Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Fall17NoIsoV2Categories"),
                    ElectronMVAEstimatorRun2RunIIIWinter22IsoV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22IsoV1Categories"),
                    ElectronMVAEstimatorRun2RunIIIWinter22NoIsoV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2RunIIIWinter22NoIsoV1Categories"),
                    ElectronMVAEstimatorRun2Spring16GeneralPurposeV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Spring16GeneralPurposeV1Categories"),
                    ElectronMVAEstimatorRun2Spring16HZZV1Categories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Spring16HZZV1Categories"),
                    ElectronMVAEstimatorRun2Summer18ULIdIsoCategories = cms.InputTag("electronMVAValueMapProducer","ElectronMVAEstimatorRun2Summer18ULIdIsoCategories")
                ),
                modifierName = cms.string('EGExtraInfoModifierFromIntValueMaps'),
                photon_config = cms.PSet(
                    PhotonMVAEstimatorRun2Spring16NonTrigV1Categories = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRun2Spring16NonTrigV1Categories"),
                    PhotonMVAEstimatorRunIIFall17v1p1Categories = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v1p1Categories"),
                    PhotonMVAEstimatorRunIIFall17v2Categories = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIFall17v2Categories"),
                    PhotonMVAEstimatorRunIIIWinter22v1Categories = cms.InputTag("photonMVAValueMapProducer","PhotonMVAEstimatorRunIIIWinter22v1Categories")
                )
            ),
            cms.PSet(
                electron_config = cms.PSet(
                    cutBasedElectronID_Fall17_94X_V1_loose = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V1-looseBitmap"),
                    cutBasedElectronID_Fall17_94X_V1_medium = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V1-mediumBitmap"),
                    cutBasedElectronID_Fall17_94X_V1_tight = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V1-tightBitmap"),
                    cutBasedElectronID_Fall17_94X_V1_veto = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V1-vetoBitmap"),
                    cutBasedElectronID_Fall17_94X_V2_loose = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V2-looseBitmap"),
                    cutBasedElectronID_Fall17_94X_V2_medium = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V2-mediumBitmap"),
                    cutBasedElectronID_Fall17_94X_V2_tight = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V2-tightBitmap"),
                    cutBasedElectronID_Fall17_94X_V2_veto = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Fall17-94X-V2-vetoBitmap"),
                    cutBasedElectronID_RunIIIWinter22_V1_loose = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-RunIIIWinter22-V1-looseBitmap"),
                    cutBasedElectronID_RunIIIWinter22_V1_medium = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-RunIIIWinter22-V1-mediumBitmap"),
                    cutBasedElectronID_RunIIIWinter22_V1_tight = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-RunIIIWinter22-V1-tightBitmap"),
                    cutBasedElectronID_RunIIIWinter22_V1_veto = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-RunIIIWinter22-V1-vetoBitmap"),
                    cutBasedElectronID_Summer16_80X_V1_loose = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Summer16-80X-V1-looseBitmap"),
                    cutBasedElectronID_Summer16_80X_V1_medium = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Summer16-80X-V1-mediumBitmap"),
                    cutBasedElectronID_Summer16_80X_V1_tight = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Summer16-80X-V1-tightBitmap"),
                    cutBasedElectronID_Summer16_80X_V1_veto = cms.InputTag("egmGsfElectronIDs","cutBasedElectronID-Summer16-80X-V1-vetoBitmap"),
                    heepElectronID_HEEPV70 = cms.InputTag("egmGsfElectronIDs","heepElectronID-HEEPV70Bitmap"),
                    heepElectronID_HEEPV71 = cms.InputTag("egmGsfElectronIDs","heepElectronID-HEEPV71Bitmap")
                ),
                modifierName = cms.string('EGExtraInfoModifierFromUIntToIntValueMaps'),
                photon_config = cms.PSet(
                    cutBasedPhotonID_Fall17_94X_V1_loose = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V1-looseBitmap"),
                    cutBasedPhotonID_Fall17_94X_V1_medium = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V1-mediumBitmap"),
                    cutBasedPhotonID_Fall17_94X_V1_tight = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V1-tightBitmap"),
                    cutBasedPhotonID_Fall17_94X_V2_loose = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V2-looseBitmap"),
                    cutBasedPhotonID_Fall17_94X_V2_medium = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V2-mediumBitmap"),
                    cutBasedPhotonID_Fall17_94X_V2_tight = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Fall17-94X-V2-tightBitmap"),
                    cutBasedPhotonID_RunIIIWinter22_122X_V1_loose = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-RunIIIWinter22-122X-V1-looseBitmap"),
                    cutBasedPhotonID_RunIIIWinter22_122X_V1_medium = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-RunIIIWinter22-122X-V1-mediumBitmap"),
                    cutBasedPhotonID_RunIIIWinter22_122X_V1_tight = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-RunIIIWinter22-122X-V1-tightBitmap"),
                    cutBasedPhotonID_Spring16_V2p2_loose = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Spring16-V2p2-looseBitmap"),
                    cutBasedPhotonID_Spring16_V2p2_medium = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Spring16-V2p2-mediumBitmap"),
                    cutBasedPhotonID_Spring16_V2p2_tight = cms.InputTag("egmPhotonIDs","cutBasedPhotonID-Spring16-V2p2-tightBitmap")
                )
            )
        )
    ),
    modifyPhotons = cms.bool(False),
    packedPFCandidates = cms.InputTag("packedPFCandidates"),
    recoToPFMap = cms.InputTag("reducedEgamma","reducedPhotonPfCandMap"),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    saveNonZSClusterShapes = cms.string('0'),
    src = cms.InputTag("selectedPatPhotonsHGC")
)


process.slimmedSecondaryVertices = cms.EDProducer("PATSecondaryVertexSlimmer",
    packedPFCandidates = cms.InputTag("packedPFCandidates"),
    src = cms.InputTag("inclusiveCandidateSecondaryVertices")
)


process.slimmedTaus = cms.EDProducer("PATTauIDEmbedder",
    src = cms.InputTag("slimmedTausNoDeepIDs"),
    tauIDSources = cms.PSet(
        byDeepTau2017v2p1VSeraw = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSe"),
            workingPointIndex = cms.int32(-1)
        ),
        byDeepTau2017v2p1VSjetraw = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSjet"),
            workingPointIndex = cms.int32(-1)
        ),
        byDeepTau2017v2p1VSmuraw = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSmu"),
            workingPointIndex = cms.int32(-1)
        ),
        byDeepTau2018v2p5VSeraw = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSe"),
            workingPointIndex = cms.int32(-1)
        ),
        byDeepTau2018v2p5VSjetraw = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSjet"),
            workingPointIndex = cms.int32(-1)
        ),
        byDeepTau2018v2p5VSmuraw = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSmu"),
            workingPointIndex = cms.int32(-1)
        ),
        byLooseDeepTau2017v2p1VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSe"),
            workingPointIndex = cms.int32(3)
        ),
        byLooseDeepTau2017v2p1VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSjet"),
            workingPointIndex = cms.int32(3)
        ),
        byLooseDeepTau2017v2p1VSmu = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSmu"),
            workingPointIndex = cms.int32(1)
        ),
        byLooseDeepTau2018v2p5VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSe"),
            workingPointIndex = cms.int32(3)
        ),
        byLooseDeepTau2018v2p5VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSjet"),
            workingPointIndex = cms.int32(3)
        ),
        byLooseDeepTau2018v2p5VSmu = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSmu"),
            workingPointIndex = cms.int32(1)
        ),
        byMediumDeepTau2017v2p1VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSe"),
            workingPointIndex = cms.int32(4)
        ),
        byMediumDeepTau2017v2p1VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSjet"),
            workingPointIndex = cms.int32(4)
        ),
        byMediumDeepTau2017v2p1VSmu = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSmu"),
            workingPointIndex = cms.int32(2)
        ),
        byMediumDeepTau2018v2p5VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSe"),
            workingPointIndex = cms.int32(4)
        ),
        byMediumDeepTau2018v2p5VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSjet"),
            workingPointIndex = cms.int32(4)
        ),
        byMediumDeepTau2018v2p5VSmu = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSmu"),
            workingPointIndex = cms.int32(2)
        ),
        byTightDeepTau2017v2p1VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSe"),
            workingPointIndex = cms.int32(5)
        ),
        byTightDeepTau2017v2p1VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSjet"),
            workingPointIndex = cms.int32(5)
        ),
        byTightDeepTau2017v2p1VSmu = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSmu"),
            workingPointIndex = cms.int32(3)
        ),
        byTightDeepTau2018v2p5VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSe"),
            workingPointIndex = cms.int32(5)
        ),
        byTightDeepTau2018v2p5VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSjet"),
            workingPointIndex = cms.int32(5)
        ),
        byTightDeepTau2018v2p5VSmu = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSmu"),
            workingPointIndex = cms.int32(3)
        ),
        byVLooseDeepTau2017v2p1VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSe"),
            workingPointIndex = cms.int32(2)
        ),
        byVLooseDeepTau2017v2p1VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSjet"),
            workingPointIndex = cms.int32(2)
        ),
        byVLooseDeepTau2017v2p1VSmu = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSmu"),
            workingPointIndex = cms.int32(0)
        ),
        byVLooseDeepTau2018v2p5VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSe"),
            workingPointIndex = cms.int32(2)
        ),
        byVLooseDeepTau2018v2p5VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSjet"),
            workingPointIndex = cms.int32(2)
        ),
        byVLooseDeepTau2018v2p5VSmu = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSmu"),
            workingPointIndex = cms.int32(0)
        ),
        byVTightDeepTau2017v2p1VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSe"),
            workingPointIndex = cms.int32(6)
        ),
        byVTightDeepTau2017v2p1VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSjet"),
            workingPointIndex = cms.int32(6)
        ),
        byVTightDeepTau2018v2p5VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSe"),
            workingPointIndex = cms.int32(6)
        ),
        byVTightDeepTau2018v2p5VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSjet"),
            workingPointIndex = cms.int32(6)
        ),
        byVVLooseDeepTau2017v2p1VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSe"),
            workingPointIndex = cms.int32(1)
        ),
        byVVLooseDeepTau2017v2p1VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSjet"),
            workingPointIndex = cms.int32(1)
        ),
        byVVLooseDeepTau2018v2p5VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSe"),
            workingPointIndex = cms.int32(1)
        ),
        byVVLooseDeepTau2018v2p5VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSjet"),
            workingPointIndex = cms.int32(1)
        ),
        byVVTightDeepTau2017v2p1VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSe"),
            workingPointIndex = cms.int32(7)
        ),
        byVVTightDeepTau2017v2p1VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSjet"),
            workingPointIndex = cms.int32(7)
        ),
        byVVTightDeepTau2018v2p5VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSe"),
            workingPointIndex = cms.int32(7)
        ),
        byVVTightDeepTau2018v2p5VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSjet"),
            workingPointIndex = cms.int32(7)
        ),
        byVVVLooseDeepTau2017v2p1VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSe"),
            workingPointIndex = cms.int32(0)
        ),
        byVVVLooseDeepTau2017v2p1VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSjet"),
            workingPointIndex = cms.int32(0)
        ),
        byVVVLooseDeepTau2018v2p5VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSe"),
            workingPointIndex = cms.int32(0)
        ),
        byVVVLooseDeepTau2018v2p5VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSjet"),
            workingPointIndex = cms.int32(0)
        )
    )
)


process.slimmedTausBoosted = cms.EDProducer("PATTauSlimmer",
    dropPFSpecific = cms.bool(True),
    dropPiZeroRefs = cms.bool(True),
    dropTauChargedHadronRefs = cms.bool(True),
    linkToLostTracks = cms.bool(True),
    linkToPackedPFCandidates = cms.bool(True),
    lostTracks = cms.InputTag("lostTracks"),
    modifierConfig = cms.PSet(
        modifications = cms.VPSet()
    ),
    modifyTaus = cms.bool(True),
    packedPFCandidates = cms.InputTag("packedPFCandidates"),
    src = cms.InputTag("selectedPatTausBoosted")
)


process.slimmedTausDeepIDsv2p1 = cms.EDProducer("PATTauIDEmbedder",
    src = cms.InputTag("slimmedTausNoDeepIDs"),
    tauIDSources = cms.PSet(
        byDeepTau2017v2p1VSeraw = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSe"),
            workingPointIndex = cms.int32(-1)
        ),
        byDeepTau2017v2p1VSjetraw = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSjet"),
            workingPointIndex = cms.int32(-1)
        ),
        byDeepTau2017v2p1VSmuraw = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSmu"),
            workingPointIndex = cms.int32(-1)
        ),
        byDeepTau2018v2p5VSeraw = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSe"),
            workingPointIndex = cms.int32(-1)
        ),
        byDeepTau2018v2p5VSjetraw = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSjet"),
            workingPointIndex = cms.int32(-1)
        ),
        byDeepTau2018v2p5VSmuraw = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSmu"),
            workingPointIndex = cms.int32(-1)
        ),
        byLooseDeepTau2017v2p1VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSe"),
            workingPointIndex = cms.int32(3)
        ),
        byLooseDeepTau2017v2p1VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSjet"),
            workingPointIndex = cms.int32(3)
        ),
        byLooseDeepTau2017v2p1VSmu = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSmu"),
            workingPointIndex = cms.int32(1)
        ),
        byLooseDeepTau2018v2p5VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSe"),
            workingPointIndex = cms.int32(3)
        ),
        byLooseDeepTau2018v2p5VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSjet"),
            workingPointIndex = cms.int32(3)
        ),
        byLooseDeepTau2018v2p5VSmu = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSmu"),
            workingPointIndex = cms.int32(1)
        ),
        byMediumDeepTau2017v2p1VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSe"),
            workingPointIndex = cms.int32(4)
        ),
        byMediumDeepTau2017v2p1VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSjet"),
            workingPointIndex = cms.int32(4)
        ),
        byMediumDeepTau2017v2p1VSmu = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSmu"),
            workingPointIndex = cms.int32(2)
        ),
        byMediumDeepTau2018v2p5VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSe"),
            workingPointIndex = cms.int32(4)
        ),
        byMediumDeepTau2018v2p5VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSjet"),
            workingPointIndex = cms.int32(4)
        ),
        byMediumDeepTau2018v2p5VSmu = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSmu"),
            workingPointIndex = cms.int32(2)
        ),
        byTightDeepTau2017v2p1VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSe"),
            workingPointIndex = cms.int32(5)
        ),
        byTightDeepTau2017v2p1VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSjet"),
            workingPointIndex = cms.int32(5)
        ),
        byTightDeepTau2017v2p1VSmu = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSmu"),
            workingPointIndex = cms.int32(3)
        ),
        byTightDeepTau2018v2p5VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSe"),
            workingPointIndex = cms.int32(5)
        ),
        byTightDeepTau2018v2p5VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSjet"),
            workingPointIndex = cms.int32(5)
        ),
        byTightDeepTau2018v2p5VSmu = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSmu"),
            workingPointIndex = cms.int32(3)
        ),
        byVLooseDeepTau2017v2p1VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSe"),
            workingPointIndex = cms.int32(2)
        ),
        byVLooseDeepTau2017v2p1VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSjet"),
            workingPointIndex = cms.int32(2)
        ),
        byVLooseDeepTau2017v2p1VSmu = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSmu"),
            workingPointIndex = cms.int32(0)
        ),
        byVLooseDeepTau2018v2p5VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSe"),
            workingPointIndex = cms.int32(2)
        ),
        byVLooseDeepTau2018v2p5VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSjet"),
            workingPointIndex = cms.int32(2)
        ),
        byVLooseDeepTau2018v2p5VSmu = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSmu"),
            workingPointIndex = cms.int32(0)
        ),
        byVTightDeepTau2017v2p1VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSe"),
            workingPointIndex = cms.int32(6)
        ),
        byVTightDeepTau2017v2p1VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSjet"),
            workingPointIndex = cms.int32(6)
        ),
        byVTightDeepTau2018v2p5VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSe"),
            workingPointIndex = cms.int32(6)
        ),
        byVTightDeepTau2018v2p5VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSjet"),
            workingPointIndex = cms.int32(6)
        ),
        byVVLooseDeepTau2017v2p1VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSe"),
            workingPointIndex = cms.int32(1)
        ),
        byVVLooseDeepTau2017v2p1VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSjet"),
            workingPointIndex = cms.int32(1)
        ),
        byVVLooseDeepTau2018v2p5VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSe"),
            workingPointIndex = cms.int32(1)
        ),
        byVVLooseDeepTau2018v2p5VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSjet"),
            workingPointIndex = cms.int32(1)
        ),
        byVVTightDeepTau2017v2p1VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSe"),
            workingPointIndex = cms.int32(7)
        ),
        byVVTightDeepTau2017v2p1VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSjet"),
            workingPointIndex = cms.int32(7)
        ),
        byVVTightDeepTau2018v2p5VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSe"),
            workingPointIndex = cms.int32(7)
        ),
        byVVTightDeepTau2018v2p5VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSjet"),
            workingPointIndex = cms.int32(7)
        ),
        byVVVLooseDeepTau2017v2p1VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSe"),
            workingPointIndex = cms.int32(0)
        ),
        byVVVLooseDeepTau2017v2p1VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2017v2p1ForMini","VSjet"),
            workingPointIndex = cms.int32(0)
        ),
        byVVVLooseDeepTau2018v2p5VSe = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSe"),
            workingPointIndex = cms.int32(0)
        ),
        byVVVLooseDeepTau2018v2p5VSjet = cms.PSet(
            inputTag = cms.InputTag("deepTau2018v2p5ForMini","VSjet"),
            workingPointIndex = cms.int32(0)
        )
    )
)


process.slimmedTausNoDeepIDs = cms.EDProducer("PATTauSlimmer",
    dropPFSpecific = cms.bool(True),
    dropPiZeroRefs = cms.bool(True),
    dropTauChargedHadronRefs = cms.bool(True),
    linkToLostTracks = cms.bool(True),
    linkToPackedPFCandidates = cms.bool(True),
    lostTracks = cms.InputTag("lostTracks"),
    modifierConfig = cms.PSet(
        modifications = cms.VPSet()
    ),
    modifyTaus = cms.bool(True),
    packedPFCandidates = cms.InputTag("packedPFCandidates"),
    src = cms.InputTag("selectedPatTaus")
)


process.softPFElectronsTagInfosAK8PFPuppiSoftDropSubjets = cms.EDProducer("SoftPFElectronTagInfoProducer",
    DeltaRElectronJet = cms.double(0.4),
    MaxSip3Dsig = cms.double(200),
    electrons = cms.InputTag("gedGsfElectrons"),
    jets = cms.InputTag("ak8PFJetsPuppiSoftDrop","SubJets"),
    primaryVertex = cms.InputTag("offlinePrimaryVertices")
)


process.softPFElectronsTagInfosAK8Puppi = cms.EDProducer("SoftPFElectronTagInfoProducer",
    DeltaRElectronJet = cms.double(0.4),
    MaxSip3Dsig = cms.double(200),
    electrons = cms.InputTag("gedGsfElectrons"),
    jets = cms.InputTag("ak8PFJetsPuppi"),
    primaryVertex = cms.InputTag("offlinePrimaryVertices")
)


process.softPFMuonsTagInfosAK8PFPuppiSoftDropSubjets = cms.EDProducer("SoftPFMuonTagInfoProducer",
    filterIpsig = cms.double(4.0),
    filterPromptMuons = cms.bool(False),
    filterRatio1 = cms.double(0.4),
    filterRatio2 = cms.double(0.7),
    jets = cms.InputTag("ak8PFJetsPuppiSoftDrop","SubJets"),
    muonPt = cms.double(2.0),
    muonSIPsig = cms.double(200.0),
    muons = cms.InputTag("muons"),
    primaryVertex = cms.InputTag("offlinePrimaryVertices")
)


process.softPFMuonsTagInfosAK8Puppi = cms.EDProducer("SoftPFMuonTagInfoProducer",
    filterIpsig = cms.double(4.0),
    filterPromptMuons = cms.bool(False),
    filterRatio1 = cms.double(0.4),
    filterRatio2 = cms.double(0.7),
    jets = cms.InputTag("ak8PFJetsPuppi"),
    muonPt = cms.double(2.0),
    muonSIPsig = cms.double(200.0),
    muons = cms.InputTag("muons"),
    primaryVertex = cms.InputTag("offlinePrimaryVertices")
)


process.sortedPFPrimaryVertices = cms.EDProducer("PFCandidatePrimaryVertexSorter",
    assignment = cms.PSet(
        DzCutForChargedFromPUVtxs = cms.double(0.2),
        EtaMinUseDz = cms.double(-1),
        NumOfPUVtxsForCharged = cms.uint32(0),
        OnlyUseFirstDz = cms.bool(False),
        PtMaxCharged = cms.double(-1),
        maxDistanceToJetAxis = cms.double(0.07),
        maxDtSigForPrimaryAssignment = cms.double(3),
        maxDxyForJetAxisAssigment = cms.double(0.1),
        maxDxyForNotReconstructedPrimary = cms.double(0.01),
        maxDxySigForNotReconstructedPrimary = cms.double(2),
        maxDzErrorForPrimaryAssignment = cms.double(0.05),
        maxDzForJetAxisAssigment = cms.double(0.1),
        maxDzForPrimaryAssignment = cms.double(0.1),
        maxDzSigForPrimaryAssignment = cms.double(5),
        maxJetDeltaR = cms.double(0.5),
        minJetPt = cms.double(25),
        preferHighRanked = cms.bool(False),
        useTiming = cms.bool(False),
        useVertexFit = cms.bool(True)
    ),
    jets = cms.InputTag("ak4PFJets"),
    mightGet = cms.optional.untracked.vstring,
    particles = cms.InputTag("particleFlow"),
    produceAssociationToOriginalVertices = cms.bool(True),
    produceNoPileUpCollection = cms.bool(True),
    producePileUpCollection = cms.bool(True),
    produceSortedVertices = cms.bool(True),
    qualityForPrimary = cms.int32(3),
    sorting = cms.PSet(

    ),
    usePVMET = cms.bool(True),
    vertices = cms.InputTag("offlinePrimaryVertices")
)


process.tauGenJetMatch = cms.EDProducer("GenJetMatcher",
    checkCharge = cms.bool(False),
    matched = cms.InputTag("tauGenJetsSelectorAllHadrons"),
    maxDPtRel = cms.double(3.0),
    maxDeltaR = cms.double(0.1),
    mcPdgId = cms.vint32(),
    mcStatus = cms.vint32(),
    resolveAmbiguities = cms.bool(True),
    resolveByMatchQuality = cms.bool(False),
    src = cms.InputTag("hpsPFTauProducer")
)


process.tauGenJetMatchBoosted = cms.EDProducer("GenJetMatcher",
    checkCharge = cms.bool(False),
    matched = cms.InputTag("tauGenJetsSelectorAllHadronsBoosted"),
    maxDPtRel = cms.double(3.0),
    maxDeltaR = cms.double(0.1),
    mcPdgId = cms.vint32(),
    mcStatus = cms.vint32(),
    resolveAmbiguities = cms.bool(True),
    resolveByMatchQuality = cms.bool(False),
    src = cms.InputTag("hpsPFTauProducerBoosted")
)


process.tauGenJets = cms.EDProducer("TauGenJetProducer",
    GenParticles = cms.InputTag("prunedGenParticles"),
    includeNeutrinos = cms.bool(False),
    verbose = cms.untracked.bool(False)
)


process.tauGenJetsBoosted = cms.EDProducer("TauGenJetProducer",
    GenParticles = cms.InputTag("prunedGenParticles"),
    includeNeutrinos = cms.bool(False),
    verbose = cms.untracked.bool(False)
)


process.tauIsoDepositPFCandidates = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('PFTauExtractor'),
        DR_Max = cms.double(1.0),
        DR_Veto = cms.double(0.0),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(10000.0),
        Diff_z = cms.double(10000.0),
        candidateSource = cms.InputTag("particleFlow"),
        dRmatchPFTau = cms.double(0.1),
        dRvetoPFTauSignalConeConstituents = cms.double(0.01),
        tauSource = cms.InputTag("hpsPFTauProducer")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("hpsPFTauProducer"),
    trackType = cms.string('candidate')
)


process.tauIsoDepositPFCandidatesBoosted = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('PFTauExtractor'),
        DR_Max = cms.double(1.0),
        DR_Veto = cms.double(0.0),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(10000.0),
        Diff_z = cms.double(10000.0),
        candidateSource = cms.InputTag("particleFlow"),
        dRmatchPFTau = cms.double(0.1),
        dRvetoPFTauSignalConeConstituents = cms.double(0.01),
        tauSource = cms.InputTag("hpsPFTauProducerBoosted")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("hpsPFTauProducerBoosted"),
    trackType = cms.string('candidate')
)


process.tauIsoDepositPFChargedHadrons = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('PFTauExtractor'),
        DR_Max = cms.double(1.0),
        DR_Veto = cms.double(0.0),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(0.1),
        Diff_z = cms.double(0.2),
        candidateSource = cms.InputTag("pfAllChargedHadronsPFBRECO"),
        dRmatchPFTau = cms.double(0.1),
        dRvetoPFTauSignalConeConstituents = cms.double(0.01),
        tauSource = cms.InputTag("hpsPFTauProducer")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("hpsPFTauProducer"),
    trackType = cms.string('candidate')
)


process.tauIsoDepositPFChargedHadronsBoosted = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('PFTauExtractor'),
        DR_Max = cms.double(1.0),
        DR_Veto = cms.double(0.0),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(0.1),
        Diff_z = cms.double(0.2),
        candidateSource = cms.InputTag("pfAllChargedHadronsPFBRECOBoosted"),
        dRmatchPFTau = cms.double(0.1),
        dRvetoPFTauSignalConeConstituents = cms.double(0.01),
        tauSource = cms.InputTag("hpsPFTauProducerBoosted")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("hpsPFTauProducerBoosted"),
    trackType = cms.string('candidate')
)


process.tauIsoDepositPFGammas = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('PFTauExtractor'),
        DR_Max = cms.double(1.0),
        DR_Veto = cms.double(0.0),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(10000.0),
        Diff_z = cms.double(10000.0),
        candidateSource = cms.InputTag("pfAllPhotonsPFBRECO"),
        dRmatchPFTau = cms.double(0.1),
        dRvetoPFTauSignalConeConstituents = cms.double(0.01),
        tauSource = cms.InputTag("hpsPFTauProducer")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("hpsPFTauProducer"),
    trackType = cms.string('candidate')
)


process.tauIsoDepositPFGammasBoosted = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('PFTauExtractor'),
        DR_Max = cms.double(1.0),
        DR_Veto = cms.double(0.0),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(10000.0),
        Diff_z = cms.double(10000.0),
        candidateSource = cms.InputTag("pfAllPhotonsPFBRECOBoosted"),
        dRmatchPFTau = cms.double(0.1),
        dRvetoPFTauSignalConeConstituents = cms.double(0.01),
        tauSource = cms.InputTag("hpsPFTauProducerBoosted")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("hpsPFTauProducerBoosted"),
    trackType = cms.string('candidate')
)


process.tauIsoDepositPFNeutralHadrons = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('PFTauExtractor'),
        DR_Max = cms.double(1.0),
        DR_Veto = cms.double(0.0),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(10000.0),
        Diff_z = cms.double(10000.0),
        candidateSource = cms.InputTag("pfAllNeutralHadronsPFBRECO"),
        dRmatchPFTau = cms.double(0.1),
        dRvetoPFTauSignalConeConstituents = cms.double(0.01),
        tauSource = cms.InputTag("hpsPFTauProducer")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("hpsPFTauProducer"),
    trackType = cms.string('candidate')
)


process.tauIsoDepositPFNeutralHadronsBoosted = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('PFTauExtractor'),
        DR_Max = cms.double(1.0),
        DR_Veto = cms.double(0.0),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(10000.0),
        Diff_z = cms.double(10000.0),
        candidateSource = cms.InputTag("pfAllNeutralHadronsPFBRECOBoosted"),
        dRmatchPFTau = cms.double(0.1),
        dRvetoPFTauSignalConeConstituents = cms.double(0.01),
        tauSource = cms.InputTag("hpsPFTauProducerBoosted")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("hpsPFTauProducerBoosted"),
    trackType = cms.string('candidate')
)


process.tauMatch = cms.EDProducer("MCMatcher",
    checkCharge = cms.bool(True),
    matched = cms.InputTag("prunedGenParticles"),
    maxDPtRel = cms.double(999.9),
    maxDeltaR = cms.double(999.9),
    mcPdgId = cms.vint32(15),
    mcStatus = cms.vint32(2),
    resolveAmbiguities = cms.bool(True),
    resolveByMatchQuality = cms.bool(False),
    src = cms.InputTag("hpsPFTauProducer")
)


process.tauMatchBoosted = cms.EDProducer("MCMatcher",
    checkCharge = cms.bool(True),
    matched = cms.InputTag("prunedGenParticles"),
    maxDPtRel = cms.double(999.9),
    maxDeltaR = cms.double(999.9),
    mcPdgId = cms.vint32(15),
    mcStatus = cms.vint32(2),
    resolveAmbiguities = cms.bool(True),
    resolveByMatchQuality = cms.bool(False),
    src = cms.InputTag("hpsPFTauProducerBoosted")
)


process.tmpPFCandCollPtrNoHF = cms.EDProducer("PFCandidateFwdPtrProducer",
    src = cms.InputTag("noHFCands")
)


process.trackCountingHighEffBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('trackCounting3D2ndComputer'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"))
)


process.trackCountingHighPurBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('trackCounting3D3rdComputer'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"))
)


process.updatedPatJetsSlimmedAK8DeepTags = cms.EDProducer("PATJetUpdater",
    addBTagInfo = cms.bool(True),
    addDiscriminators = cms.bool(True),
    addJetCorrFactors = cms.bool(True),
    addTagInfos = cms.bool(False),
    discriminatorSources = cms.VInputTag(),
    jetCorrFactorsSource = cms.VInputTag(cms.InputTag("patJetCorrFactorsSlimmedAK8DeepTags")),
    jetSource = cms.InputTag("slimmedJetsAK8NoDeepTags"),
    mightGet = cms.optional.untracked.vstring,
    printWarning = cms.bool(False),
    sort = cms.bool(True),
    tagInfoSources = cms.VInputTag(),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    )
)


process.updatedPatJetsSlimmedDeepFlavour = cms.EDProducer("PATJetUpdater",
    addBTagInfo = cms.bool(True),
    addDiscriminators = cms.bool(True),
    addJetCorrFactors = cms.bool(True),
    addTagInfos = cms.bool(False),
    discriminatorSources = cms.VInputTag(),
    jetCorrFactorsSource = cms.VInputTag(cms.InputTag("patJetCorrFactorsSlimmedDeepFlavour")),
    jetSource = cms.InputTag("slimmedJetsNoDeepFlavour"),
    mightGet = cms.optional.untracked.vstring,
    printWarning = cms.bool(False),
    sort = cms.bool(True),
    tagInfoSources = cms.VInputTag(),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    )
)


process.updatedPatJetsSlimmedPuppiWithDeepTags = cms.EDProducer("PATJetUpdater",
    addBTagInfo = cms.bool(True),
    addDiscriminators = cms.bool(True),
    addJetCorrFactors = cms.bool(True),
    addTagInfos = cms.bool(False),
    discriminatorSources = cms.VInputTag(),
    jetCorrFactorsSource = cms.VInputTag(cms.InputTag("patJetCorrFactorsSlimmedPuppiWithDeepTags")),
    jetSource = cms.InputTag("slimmedJetsPuppiNoDeepTags"),
    mightGet = cms.optional.untracked.vstring,
    printWarning = cms.bool(False),
    sort = cms.bool(True),
    tagInfoSources = cms.VInputTag(),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    )
)


process.updatedPatJetsTransientCorrectedSlimmedAK8DeepTags = cms.EDProducer("PATJetUpdater",
    addBTagInfo = cms.bool(True),
    addDiscriminators = cms.bool(True),
    addJetCorrFactors = cms.bool(True),
    addTagInfos = cms.bool(False),
    discriminatorSources = cms.VInputTag(
        cms.InputTag("pfHiggsInteractionNetTagsSlimmedAK8DeepTags","probHbb"), cms.InputTag("pfHiggsInteractionNetTagsSlimmedAK8DeepTags","probQCD"), cms.InputTag("pfMassIndependentDeepDoubleBvLV2JetTagsSlimmedAK8DeepTags","probHbb"), cms.InputTag("pfMassIndependentDeepDoubleBvLV2JetTagsSlimmedAK8DeepTags","probQCD"), cms.InputTag("pfMassIndependentDeepDoubleCvBV2JetTagsSlimmedAK8DeepTags","probHbb"),
        cms.InputTag("pfMassIndependentDeepDoubleCvBV2JetTagsSlimmedAK8DeepTags","probHcc"), cms.InputTag("pfMassIndependentDeepDoubleCvLV2JetTagsSlimmedAK8DeepTags","probHcc"), cms.InputTag("pfMassIndependentDeepDoubleCvLV2JetTagsSlimmedAK8DeepTags","probQCD"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","masscorr"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probHbb"),
        cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probHcc"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probHgg"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probHqq"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probHte"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probHtm"),
        cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probHtt"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD0hf"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD1hf"), cms.InputTag("pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags","probQCD2hf"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probHbb"),
        cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probHcc"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probHqqqq"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDb"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDbb"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDc"),
        cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDcc"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probQCDothers"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probTbc"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probTbcq"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probTbel"),
        cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probTbmu"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probTbq"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probTbqq"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probTbta"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probWcq"),
        cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probWqq"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probZbb"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probZcc"), cms.InputTag("pfParticleNetJetTagsSlimmedAK8DeepTags","probZqq"), cms.InputTag("pfParticleNetDiscriminatorsJetTagsSlimmedAK8DeepTags","H4qvsQCD"),
        cms.InputTag("pfParticleNetDiscriminatorsJetTagsSlimmedAK8DeepTags","HbbvsQCD"), cms.InputTag("pfParticleNetDiscriminatorsJetTagsSlimmedAK8DeepTags","HccvsQCD"), cms.InputTag("pfParticleNetDiscriminatorsJetTagsSlimmedAK8DeepTags","TvsQCD"), cms.InputTag("pfParticleNetDiscriminatorsJetTagsSlimmedAK8DeepTags","WvsQCD"), cms.InputTag("pfParticleNetDiscriminatorsJetTagsSlimmedAK8DeepTags","ZbbvsQCD"),
        cms.InputTag("pfParticleNetDiscriminatorsJetTagsSlimmedAK8DeepTags","ZccvsQCD"), cms.InputTag("pfParticleNetDiscriminatorsJetTagsSlimmedAK8DeepTags","ZvsQCD"), cms.InputTag("pfParticleNetFromMiniAODAK8DiscriminatorsJetTagsSlimmedAK8DeepTags","HbbvsQCD"), cms.InputTag("pfParticleNetFromMiniAODAK8DiscriminatorsJetTagsSlimmedAK8DeepTags","HccvsQCD"), cms.InputTag("pfParticleNetFromMiniAODAK8DiscriminatorsJetTagsSlimmedAK8DeepTags","HggvsQCD"),
        cms.InputTag("pfParticleNetFromMiniAODAK8DiscriminatorsJetTagsSlimmedAK8DeepTags","HqqvsQCD"), cms.InputTag("pfParticleNetFromMiniAODAK8DiscriminatorsJetTagsSlimmedAK8DeepTags","HtevsQCD"), cms.InputTag("pfParticleNetFromMiniAODAK8DiscriminatorsJetTagsSlimmedAK8DeepTags","HtmvsQCD"), cms.InputTag("pfParticleNetFromMiniAODAK8DiscriminatorsJetTagsSlimmedAK8DeepTags","HttvsQCD")
    ),
    jetCorrFactorsSource = cms.VInputTag(cms.InputTag("patJetCorrFactorsTransientCorrectedSlimmedAK8DeepTags")),
    jetSource = cms.InputTag("updatedPatJetsSlimmedAK8DeepTags"),
    mightGet = cms.optional.untracked.vstring,
    printWarning = cms.bool(True),
    sort = cms.bool(True),
    tagInfoSources = cms.VInputTag(
        cms.InputTag("pfHiggsInteractionNetTagInfosSlimmedAK8DeepTags"), cms.InputTag("pfDeepDoubleXTagInfosSlimmedAK8DeepTags"), cms.InputTag("pfBoostedDoubleSVAK8TagInfosSlimmedAK8DeepTags"), cms.InputTag("pfImpactParameterAK8TagInfosSlimmedAK8DeepTags"), cms.InputTag("pfInclusiveSecondaryVertexFinderAK8TagInfosSlimmedAK8DeepTags"),
        cms.InputTag("pfParticleNetFromMiniAODAK8TagInfosSlimmedAK8DeepTags"), cms.InputTag("pfParticleNetTagInfosSlimmedAK8DeepTags")
    ),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    )
)


process.updatedPatJetsTransientCorrectedSlimmedDeepFlavour = cms.EDProducer("PATJetUpdater",
    addBTagInfo = cms.bool(True),
    addDiscriminators = cms.bool(True),
    addJetCorrFactors = cms.bool(True),
    addTagInfos = cms.bool(True),
    discriminatorSources = cms.VInputTag(
        cms.InputTag("pfDeepFlavourJetTagsSlimmedDeepFlavour","probb"), cms.InputTag("pfDeepFlavourJetTagsSlimmedDeepFlavour","probbb"), cms.InputTag("pfDeepFlavourJetTagsSlimmedDeepFlavour","probc"), cms.InputTag("pfDeepFlavourJetTagsSlimmedDeepFlavour","probg"), cms.InputTag("pfDeepFlavourJetTagsSlimmedDeepFlavour","problepb"),
        cms.InputTag("pfDeepFlavourJetTagsSlimmedDeepFlavour","probuds"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probb"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probc"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probele"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probg"),
        cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probmu"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum3h0p"),
        cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaum3h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup3h0p"),
        cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probtaup3h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","probuds"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","ptcorr"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","ptnu"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","ptreshigh"),
        cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour","ptreslow"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSForwardJetTagsSlimmedDeepFlavour","probg"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSForwardJetTagsSlimmedDeepFlavour","probq"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSForwardJetTagsSlimmedDeepFlavour","ptcorr"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSForwardJetTagsSlimmedDeepFlavour","ptnu"),
        cms.InputTag("pfParticleNetFromMiniAODAK4CHSForwardJetTagsSlimmedDeepFlavour","ptreshigh"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSForwardJetTagsSlimmedDeepFlavour","ptreslow"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probbb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probc"),
        cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probg"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","problepb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedDeepFlavour","probuds"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralDiscriminatorsJetTagsSlimmedDeepFlavour","BvsAll"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralDiscriminatorsJetTagsSlimmedDeepFlavour","CvsB"),
        cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralDiscriminatorsJetTagsSlimmedDeepFlavour","CvsL"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralDiscriminatorsJetTagsSlimmedDeepFlavour","QvsG"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralDiscriminatorsJetTagsSlimmedDeepFlavour","TauVsEle"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralDiscriminatorsJetTagsSlimmedDeepFlavour","TauVsJet"), cms.InputTag("pfParticleNetFromMiniAODAK4CHSCentralDiscriminatorsJetTagsSlimmedDeepFlavour","TauVsMu"),
        cms.InputTag("pfParticleNetFromMiniAODAK4CHSForwardDiscriminatorsJetTagsSlimmedDeepFlavour","QvsG"), cms.InputTag("pfParticleTransformerAK4DiscriminatorsJetTagsSlimmedDeepFlavour","BvsAll"), cms.InputTag("pfParticleTransformerAK4DiscriminatorsJetTagsSlimmedDeepFlavour","BvsL"), cms.InputTag("pfParticleTransformerAK4DiscriminatorsJetTagsSlimmedDeepFlavour","CvsB"), cms.InputTag("pfParticleTransformerAK4DiscriminatorsJetTagsSlimmedDeepFlavour","CvsL"),
        cms.InputTag("pfParticleTransformerAK4DiscriminatorsJetTagsSlimmedDeepFlavour","QvsG")
    ),
    jetCorrFactorsSource = cms.VInputTag(cms.InputTag("patJetCorrFactorsTransientCorrectedSlimmedDeepFlavour")),
    jetSource = cms.InputTag("updatedPatJetsSlimmedDeepFlavour"),
    mightGet = cms.optional.untracked.vstring,
    printWarning = cms.bool(True),
    sort = cms.bool(True),
    tagInfoSources = cms.VInputTag("pixelClusterTagInfos"),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    )
)


process.updatedPatJetsTransientCorrectedSlimmedPuppiWithDeepTags = cms.EDProducer("PATJetUpdater",
    addBTagInfo = cms.bool(True),
    addDiscriminators = cms.bool(True),
    addJetCorrFactors = cms.bool(True),
    addTagInfos = cms.bool(False),
    discriminatorSources = cms.VInputTag(
        cms.InputTag("pfDeepFlavourJetTagsSlimmedPuppiWithDeepTags","probb"), cms.InputTag("pfDeepFlavourJetTagsSlimmedPuppiWithDeepTags","probbb"), cms.InputTag("pfDeepFlavourJetTagsSlimmedPuppiWithDeepTags","probc"), cms.InputTag("pfDeepFlavourJetTagsSlimmedPuppiWithDeepTags","probg"), cms.InputTag("pfDeepFlavourJetTagsSlimmedPuppiWithDeepTags","problepb"),
        cms.InputTag("pfDeepFlavourJetTagsSlimmedPuppiWithDeepTags","probuds"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probb"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probc"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probele"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probg"),
        cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probmu"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum3h0p"),
        cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaum3h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup1h0p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup1h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup1h2p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup3h0p"),
        cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probtaup3h1p"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","probuds"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","ptcorr"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","ptnu"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","ptreshigh"),
        cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags","ptreslow"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiForwardJetTagsSlimmedPuppiWithDeepTags","probg"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiForwardJetTagsSlimmedPuppiWithDeepTags","probq"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiForwardJetTagsSlimmedPuppiWithDeepTags","ptcorr"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiForwardJetTagsSlimmedPuppiWithDeepTags","ptnu"),
        cms.InputTag("pfParticleNetFromMiniAODAK4PuppiForwardJetTagsSlimmedPuppiWithDeepTags","ptreshigh"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiForwardJetTagsSlimmedPuppiWithDeepTags","ptreslow"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probbb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probc"),
        cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probg"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","problepb"), cms.InputTag("pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags","probuds"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralDiscriminatorsJetTagsSlimmedPuppiWithDeepTags","BvsAll"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralDiscriminatorsJetTagsSlimmedPuppiWithDeepTags","CvsB"),
        cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralDiscriminatorsJetTagsSlimmedPuppiWithDeepTags","CvsL"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralDiscriminatorsJetTagsSlimmedPuppiWithDeepTags","QvsG"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralDiscriminatorsJetTagsSlimmedPuppiWithDeepTags","TauVsEle"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralDiscriminatorsJetTagsSlimmedPuppiWithDeepTags","TauVsJet"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralDiscriminatorsJetTagsSlimmedPuppiWithDeepTags","TauVsMu"),
        cms.InputTag("pfParticleNetFromMiniAODAK4PuppiForwardDiscriminatorsJetTagsSlimmedPuppiWithDeepTags","QvsG"), cms.InputTag("pfParticleTransformerAK4DiscriminatorsJetTagsSlimmedPuppiWithDeepTags","BvsAll"), cms.InputTag("pfParticleTransformerAK4DiscriminatorsJetTagsSlimmedPuppiWithDeepTags","BvsL"), cms.InputTag("pfParticleTransformerAK4DiscriminatorsJetTagsSlimmedPuppiWithDeepTags","CvsB"), cms.InputTag("pfParticleTransformerAK4DiscriminatorsJetTagsSlimmedPuppiWithDeepTags","CvsL"),
        cms.InputTag("pfParticleTransformerAK4DiscriminatorsJetTagsSlimmedPuppiWithDeepTags","QvsG")
    ),
    jetCorrFactorsSource = cms.VInputTag(cms.InputTag("patJetCorrFactorsTransientCorrectedSlimmedPuppiWithDeepTags")),
    jetSource = cms.InputTag("updatedPatJetsSlimmedPuppiWithDeepTags"),
    mightGet = cms.optional.untracked.vstring,
    printWarning = cms.bool(True),
    sort = cms.bool(True),
    tagInfoSources = cms.VInputTag(
        cms.InputTag("pfDeepFlavourTagInfosSlimmedPuppiWithDeepTags"), cms.InputTag("pfDeepCSVTagInfosSlimmedPuppiWithDeepTags"), cms.InputTag("pfImpactParameterTagInfosSlimmedPuppiWithDeepTags"), cms.InputTag("pfInclusiveSecondaryVertexFinderTagInfosSlimmedPuppiWithDeepTags"), cms.InputTag("pfParticleNetFromMiniAODAK4PuppiCentralTagInfosSlimmedPuppiWithDeepTags"),
        cms.InputTag("pfParticleNetFromMiniAODAK4PuppiForwardTagInfosSlimmedPuppiWithDeepTags"), cms.InputTag("pfParticleTransformerAK4TagInfosSlimmedPuppiWithDeepTags")
    ),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring(),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        )
    )
)


process.BadChargedCandidateFilter = cms.EDFilter("BadParticleFilter",
    PFCandidates = cms.InputTag("particleFlow"),
    algo = cms.int32(14),
    filterType = cms.string('BadChargedCandidate'),
    innerTrackRelErr = cms.double(1),
    maxDR = cms.double(1e-05),
    mightGet = cms.optional.untracked.vstring,
    minDzBestTrack = cms.double(-1),
    minMuonPt = cms.double(100),
    minMuonTrackRelErr = cms.double(2),
    minPtDiffRel = cms.double(1e-05),
    muons = cms.InputTag("muons"),
    segmentCompatibility = cms.double(0.3),
    taggingMode = cms.bool(False),
    vtx = cms.InputTag("offlinePrimaryVertices")
)


process.BadChargedCandidateSummer16Filter = cms.EDFilter("BadParticleFilter",
    PFCandidates = cms.InputTag("particleFlow"),
    algo = cms.int32(14),
    filterType = cms.string('BadChargedCandidateSummer16'),
    innerTrackRelErr = cms.double(0.5),
    maxDR = cms.double(0.001),
    mightGet = cms.optional.untracked.vstring,
    minDzBestTrack = cms.double(-1),
    minMuonPt = cms.double(100),
    minMuonTrackRelErr = cms.double(2),
    minPtDiffRel = cms.double(-0.5),
    muons = cms.InputTag("muons"),
    segmentCompatibility = cms.double(0.3),
    taggingMode = cms.bool(False),
    vtx = cms.InputTag("offlinePrimaryVertices")
)


process.BadPFMuonDzFilter = cms.EDFilter("BadParticleFilter",
    PFCandidates = cms.InputTag("particleFlow"),
    algo = cms.int32(14),
    filterType = cms.string('BadPFMuonDz'),
    innerTrackRelErr = cms.double(1),
    maxDR = cms.double(0.001),
    mightGet = cms.optional.untracked.vstring,
    minDzBestTrack = cms.double(0.5),
    minMuonPt = cms.double(100),
    minMuonTrackRelErr = cms.double(2),
    minPtDiffRel = cms.double(0),
    muons = cms.InputTag("muons"),
    segmentCompatibility = cms.double(0.3),
    taggingMode = cms.bool(False),
    vtx = cms.InputTag("offlinePrimaryVertices")
)


process.BadPFMuonFilter = cms.EDFilter("BadParticleFilter",
    PFCandidates = cms.InputTag("particleFlow"),
    algo = cms.int32(14),
    filterType = cms.string('BadPFMuon'),
    innerTrackRelErr = cms.double(1),
    maxDR = cms.double(0.001),
    mightGet = cms.optional.untracked.vstring,
    minDzBestTrack = cms.double(-1),
    minMuonPt = cms.double(100),
    minMuonTrackRelErr = cms.double(2),
    minPtDiffRel = cms.double(0),
    muons = cms.InputTag("muons"),
    segmentCompatibility = cms.double(0.3),
    taggingMode = cms.bool(False),
    vtx = cms.InputTag("offlinePrimaryVertices")
)


process.BadPFMuonSummer16Filter = cms.EDFilter("BadParticleFilter",
    PFCandidates = cms.InputTag("particleFlow"),
    algo = cms.int32(14),
    filterType = cms.string('BadPFMuonSummer16'),
    innerTrackRelErr = cms.double(0.5),
    maxDR = cms.double(0.001),
    mightGet = cms.optional.untracked.vstring,
    minDzBestTrack = cms.double(-1),
    minMuonPt = cms.double(100),
    minMuonTrackRelErr = cms.double(2),
    minPtDiffRel = cms.double(0),
    muons = cms.InputTag("muons"),
    segmentCompatibility = cms.double(0.3),
    taggingMode = cms.bool(False),
    vtx = cms.InputTag("offlinePrimaryVertices")
)


process.CSCTightHalo2015Filter = cms.EDFilter("CSCTightHalo2015Filter",
    taggingMode = cms.bool(False)
)


process.CSCTightHaloFilter = cms.EDFilter("CSCTightHaloFilter",
    taggingMode = cms.bool(False)
)


process.CSCTightHaloTrkMuUnvetoFilter = cms.EDFilter("CSCTightHaloTrkMuUnvetoFilter",
    taggingMode = cms.bool(False)
)


process.EcalDeadCellBoundaryEnergyFilter = cms.EDFilter("EcalDeadCellBoundaryEnergyFilter",
    FilterAlgo = cms.untracked.string('FilterMode'),
    cutBoundEnergyDeadCellsEB = cms.untracked.double(10),
    cutBoundEnergyDeadCellsEE = cms.untracked.double(10),
    cutBoundEnergyGapEB = cms.untracked.double(100),
    cutBoundEnergyGapEE = cms.untracked.double(100),
    debug = cms.bool(False),
    enableGap = cms.untracked.bool(False),
    limitDeadCellToChannelStatusEB = cms.vint32(12, 13, 14),
    limitDeadCellToChannelStatusEE = cms.vint32(12, 13, 14),
    limitFilterToEB = cms.untracked.bool(False),
    limitFilterToEE = cms.untracked.bool(False),
    recHitsEB = cms.InputTag("reducedEcalRecHitsEB"),
    recHitsEE = cms.InputTag("reducedEcalRecHitsEE"),
    skimDead = cms.untracked.bool(False),
    skimGap = cms.untracked.bool(False),
    taggingMode = cms.bool(False)
)


process.EcalDeadCellTriggerPrimitiveFilter = cms.EDFilter("EcalDeadCellTriggerPrimitiveFilter",
    debug = cms.bool(False),
    doEEfilter = cms.untracked.bool(True),
    ebReducedRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    eeReducedRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    etValToBeFlagged = cms.double(127.49),
    maskedEcalChannelStatusThreshold = cms.int32(1),
    taggingMode = cms.bool(False),
    tpDigiCollection = cms.InputTag("ecalTPSkimNA"),
    useTTsum = cms.bool(True),
    usekTPSaturated = cms.bool(False),
    verbose = cms.int32(1)
)


process.HBHENoiseFilter = cms.EDFilter("BooleanFlagFilter",
    inputLabel = cms.InputTag("HBHENoiseFilterResultProducer","HBHENoiseFilterResult"),
    reverseDecision = cms.bool(False)
)


process.HBHENoiseIsoFilter = cms.EDFilter("BooleanFlagFilter",
    inputLabel = cms.InputTag("HBHENoiseFilterResultProducer","HBHEIsoNoiseFilterResult"),
    reverseDecision = cms.bool(False)
)


process.HcalStripHaloFilter = cms.EDFilter("HcalStripHaloFilter",
    maxEnergyRatio = cms.double(0.15),
    maxWeightedStripLength = cms.int32(7),
    minHadEt = cms.double(100.0),
    taggingMode = cms.bool(False)
)


process.TrkCands = cms.EDFilter("CandPtrSelector",
    cut = cms.string('charge()!=0 && pvAssociationQuality()>=4 && vertexRef().key()==0'),
    src = cms.InputTag("packedPFCandidates")
)


process.chargedHadronTrackResolutionFilter = cms.EDFilter("ChargedHadronTrackResolutionFilter",
    MetSignifMin = cms.double(5.0),
    PFCandidates = cms.InputTag("particleFlow"),
    PFMET = cms.InputTag("pfMet"),
    debug = cms.bool(False),
    p1 = cms.double(5.0),
    p2 = cms.double(1.2),
    p3 = cms.double(0.06),
    ptMin = cms.double(100.0),
    taggingMode = cms.bool(False),
    verbose = cms.untracked.bool(False)
)


process.ecalBadCalibFilter = cms.EDFilter("EcalBadCalibFilter",
    EcalRecHitSource = cms.InputTag("reducedEcalRecHitsEE"),
    baddetEcal = cms.vuint32(
        872439604, 872422825, 872420274, 872423218, 872423215,
        872416066, 872435036, 872439336, 872420273, 872436907,
        872420147, 872439731, 872436657, 872420397, 872439732,
        872439339, 872439603, 872422436, 872439861, 872437051,
        872437052, 872420649, 872421950, 872437185, 872422564,
        872421566, 872421695, 872421955, 872421567, 872437184,
        872421951, 872421694, 872437056, 872437057, 872437313
    ),
    debug = cms.bool(False),
    ecalMinEt = cms.double(50.0),
    taggingMode = cms.bool(False)
)


process.ecalLaserCorrFilter = cms.EDFilter("EcalLaserCorrFilter",
    Debug = cms.bool(False),
    EBEnegyMIN = cms.double(10.0),
    EBLaserMAX = cms.double(2.0),
    EBLaserMIN = cms.double(0.3),
    EBRecHitSource = cms.InputTag("reducedEcalRecHitsEB"),
    EEEnegyMIN = cms.double(10.0),
    EELaserMAX = cms.double(20.0),
    EELaserMIN = cms.double(0.3),
    EERecHitSource = cms.InputTag("reducedEcalRecHitsEE"),
    taggingMode = cms.bool(False)
)


process.eeBadScFilter = cms.EDFilter("EEBadScFilter",
    EERecHitSource = cms.InputTag("reducedEcalRecHitsEE"),
    EminHit = cms.double(1000.0),
    EtminSC = cms.double(1000.0),
    SCsize = cms.int32(5),
    badscEE = cms.vint32(-1023023, 1048098, -1078063, -1043093),
    debug = cms.bool(False),
    nBadHitsSC = cms.int32(2),
    taggingMode = cms.bool(False)
)


process.globalSuperTightHalo2016Filter = cms.EDFilter("GlobalSuperTightHalo2016Filter",
    taggingMode = cms.bool(False)
)


process.globalTightHalo2016Filter = cms.EDFilter("GlobalTightHalo2016Filter",
    taggingMode = cms.bool(False)
)


process.goodOfflinePrimaryVertices = cms.EDFilter("VertexSelector",
    cut = cms.string('!isFake && ndof >= 4.0 && abs(z) <= 24.0 && abs(position.Rho) <= 2.0'),
    filter = cms.bool(False),
    src = cms.InputTag("offlinePrimaryVertices")
)


process.goodOfflinePrimaryVerticesNoHF = cms.EDFilter("VertexSelector",
    cut = cms.string('!isFake && ndof >= 4.0 && abs(z) <= 24.0 && abs(position.Rho) <= 2.0'),
    filter = cms.bool(False),
    src = cms.InputTag("offlinePrimaryVertices")
)


process.goodVertices = cms.EDFilter("VertexSelector",
    cut = cms.string('!isFake && ndof > 4 && abs(z) <= 24 && position.rho < 2'),
    filter = cms.bool(True),
    src = cms.InputTag("offlinePrimaryVertices")
)


process.hcalLaserEventFilter = cms.EDFilter("HcalLaserEventFilter",
    BadRunEventNumbers = cms.vuint32( (
        160957, 146483131, 160957, 146483132, 160957,
        367078426, 163289, 120704451, 163289, 120704452,
        163332, 300924904, 163587, 5705088, 163588,
        86700074, 163659, 269761831, 163659, 379050220,
        165415, 696548170, 165415, 696548171, 165617,
        295894671, 165617, 295894672, 165993, 120876169,
        165993, 120876170, 166011, 58123616, 166011,
        58123617, 166380, 833988349, 166380, 833988350,
        166380, 874735805, 166380, 874735806, 166380,
        915050480, 166380, 1037024294, 166512, 1222721981,
        166512, 1222721982, 166563, 299342294, 166563,
        299431306, 166563, 299431307, 166563, 299645965,
        166699, 908134746, 166699, 908134747, 167281,
        115904577, 167282, 286707493, 167282, 286707494,
        167282, 286766119, 167282, 286766120, 167284,
        44118160, 167284, 44118161, 167551, 365086623,
        167551, 365086624, 167674, 59067344, 167674,
        59067345, 167675, 227610655, 167675, 227610656,
        167754, 73011356, 167754, 73011357, 167807,
        1202030368, 167807, 1202030369, 167898, 568063754,
        167898, 568063755, 167898, 718530727, 167969,
        3462839, 167969, 3462840, 167969, 9442755,
        167969, 9442756, 167969, 11435992, 167969,
        11435993, 170255, 83361834, 170255, 83361835,
        170304, 57541359, 170304, 57541360, 170854,
        291050200, 170854, 291050201, 170854, 329611102,
        170854, 329611103, 170899, 39787119, 170899,
        39787120, 171091, 9021397, 171091, 9021398,
        171091, 97261559, 171091, 97261560, 171156,
        369378017, 171156, 369378018, 171897, 353709470,
        172033, 412685841, 172033, 412685842, 172033,
        885328695, 172033, 982705197, 172033, 982705198,
        172163, 530358965, 172389, 45660388, 172389,
        45660389, 172411, 173742880, 172411, 173742881,
        172478, 53762243, 172478, 53762244, 172478,
        54053290, 172478, 54092625, 172478, 54092626,
        172478, 54092948, 172478, 98093904, 172478,
        98093905, 172485, 424192588, 172485, 424192589,
        172791, 966404647, 172802, 464891113, 172802,
        464891114, 172802, 464892883, 172802, 464892884,
        172819, 81201593, 172822, 1074244840, 172822,
        2836941609, 172868, 393947631, 172868, 393947632,
        172868, 1421063049, 172868, 1421063050, 172868,
        1421076216, 172868, 1421076217, 172868, 2012432054,
        172868, 2012432055, 172868, 2137890207, 172868,
        2137890208, 173198, 741435194, 173198, 741435195,
        173198, 1009198868, 173198, 1009198869, 173226,
        781573, 173226, 781574, 173241, 746837625,
        173241, 746837626, 173380, 21324672, 173380,
        21324673, 173659, 128113809, 173659, 128113810,
        173662, 10511470, 173662, 10511471, 173692,
        755803939, 173692, 2597438478, 173692, 2597438479,
        174809, 777532, 174809, 777533, 175560,
        2368923, 175560, 2368924, 175560, 7580776,
        175834, 105072341, 175834, 105072342, 175866,
        343429213, 175866, 343429214, 175875, 182390835,
        175875, 182390836, 175888, 49192628, 175888,
        49192629, 175888, 128999776, 175888, 128999777,
        175973, 122366434, 175973, 122366435, 175976,
        80421989, 175976, 80421990, 175990, 6376426,
        175990, 6376427, 175990, 75007084, 175990,
        75007085, 175990, 146437701, 175990, 146437702,
        176161, 15560079, 176161, 15560080, 176202,
        119772380, 176202, 119772381, 176202, 324604001,
        176202, 324604002, 176309, 233512658, 176309,
        233512659, 176309, 935495115, 176309, 935495116,
        176309, 1331935829, 176309, 1331935830, 176309,
        2496631352, 176697, 403510, 176697, 403511,
        176701, 73573187, 176701, 73573188, 176702,
        11693970, 176702, 11693971, 176702, 67569367,
        176702, 67569368, 176801, 410530622, 176929,
        460082240, 176929, 460082241, 176954, 138469,
        176954, 138470, 177053, 327815438, 177053,
        327815439, 177074, 154911610, 177074, 154911611,
        177140, 785923000, 177317, 72936561, 177317,
        72936562, 177317, 73219012, 177317, 73219013,
        177449, 275466422, 177449, 275466423, 177452,
        226991391, 177452, 226991392, 177509, 99081581,
        177509, 99081582, 177509, 314204437, 177509,
        314204438, 177509, 314319381, 177509, 314319382,
        177515, 291757022, 177515, 291757023, 177515,
        1103056195, 177515, 1103056196, 177515, 1534353246,
        177515, 1534353247, 177718, 890704274, 177718,
        890704275, 177719, 294071879, 177719, 294071880,
        177730, 1850737398, 177730, 1850737399, 177730,
        2007600403, 177730, 2007600404, 177730, 2563818242,
        177730, 2563818243, 177790, 507968788, 177790,
        507968789, 177790, 772640382, 177790, 772640383,
        177791, 89470582, 177791, 89470583, 177875,
        647616276, 177875, 647616277, 178041, 783372,
        178041, 783394, 178041, 783395, 178041,
        784044, 178041, 784045, 178041, 784499,
        178041, 784500, 178041, 784551, 178041,
        784552, 178041, 786438, 178041, 786439,
        178041, 786770, 178041, 786771, 178041,
        787142, 178041, 787143, 178041, 787202,
        178100, 898633273, 178100, 1566052885, 178100,
        1566052886, 178116, 453801141, 178116, 453801142,
        178424, 630485076, 178424, 630485077, 178667,
        494184, 178667, 494185, 178667, 51504048,
        178667, 51504049, 178825, 149780, 178825,
        149781, 178866, 410333501, 178866, 410333502,
        178866, 651783943, 178866, 651783944, 178871,
        236100751, 178970, 660540406, 178970, 660540407,
        178985, 85355292, 178985, 85355293, 179547,
        21999275, 179547, 21999276, 179563, 143108913,
        179563, 143108914, 179563, 391201547, 179563,
        391201548, 180163, 7578238, 180163, 7578239,
        180222, 6076323, 180222, 24642472, 180241,
        500046589, 180241, 500562971, 180241, 500562972,
        180250, 371542986, 180250, 371542987, 180275,
        10578469, 180275, 10578470, 180275, 10583104,
        180275, 10583105
     ) ),
    debug = cms.bool(False),
    forceUseHcalNoiseSummary = cms.bool(False),
    forceUseRecHitCollection = cms.bool(False),
    mightGet = cms.optional.untracked.vstring,
    minLaserMonitorCharge = cms.double(5000),
    minOccupiedHBHE = cms.uint32(8000),
    reverseFilter = cms.bool(False),
    taggingMode = cms.bool(False),
    vetoByHBHEOccupancy = cms.bool(False),
    vetoByLaserMonitor = cms.bool(True),
    vetoByRunEventNumber = cms.bool(False)
)


process.hfNoisyHitsFilter = cms.EDFilter("HFNoisyHitsFilter",
    debug = cms.bool(False),
    hfrechits = cms.InputTag("reducedHcalRecHits","hfreco"),
    listOfNoises = cms.vstring(
        'HFLongShort',
        'HFS8S1Ratio',
        'HFPET',
        'HFSignalAsymmetry'
    ),
    mightGet = cms.optional.untracked.vstring,
    rechitPtThreshold = cms.double(20),
    taggingMode = cms.bool(False)
)


process.highPurityGeneralTracks = cms.EDFilter("TrackSelector",
    cut = cms.string('quality("highPurity")'),
    src = cms.InputTag("generalTracks")
)


process.jetSelectorForMet = cms.EDFilter("PATJetSelector",
    cut = cms.string('pt>15 && abs(eta)<9.9'),
    cutLoose = cms.string(''),
    nLoose = cms.uint32(0),
    src = cms.InputTag("basicJetsForMet")
)


process.jetSelectorForMetNoHF = cms.EDFilter("PATJetSelector",
    cut = cms.string('pt>15 && abs(eta)<3.'),
    cutLoose = cms.string(''),
    nLoose = cms.uint32(0),
    src = cms.InputTag("basicJetsForMetNoHF")
)


process.jetSelectorForMetPuppi = cms.EDFilter("PATJetSelector",
    cut = cms.string('pt>15 && abs(eta)<9.9'),
    cutLoose = cms.string(''),
    nLoose = cms.uint32(0),
    src = cms.InputTag("basicJetsForMetPuppi")
)


process.logErrorTooManyClusters = cms.EDFilter("LogErrorEventFilter",
    categoriesToWatch = cms.vstring('TooManyClusters'),
    maxErrorFractionInLumi = cms.double(1.0),
    maxErrorFractionInRun = cms.double(1.0),
    maxSavedEventsPerLumiAndError = cms.uint32(100000),
    modulesToIgnore = cms.vstring(
        'SeedGeneratorFromRegionHitsEDProducer:regionalCosmicTrackerSeeds',
        'PhotonConversionTrajectorySeedProducerFromSingleLeg:photonConvTrajSeedFromSingleLeg'
    ),
    src = cms.InputTag("logErrorHarvester")
)


process.manystripclus53X = cms.EDFilter("ByClusterSummaryMultiplicityPairEventFilter",
    cut = cms.string('( mult2 > 20000+7*mult1)'),
    multiplicityConfig = cms.PSet(
        firstMultiplicityConfig = cms.PSet(
            clusterSummaryCollection = cms.InputTag("clusterSummaryProducer"),
            subDetEnum = cms.int32(5),
            varEnum = cms.int32(0)
        ),
        secondMultiplicityConfig = cms.PSet(
            clusterSummaryCollection = cms.InputTag("clusterSummaryProducer"),
            subDetEnum = cms.int32(0),
            varEnum = cms.int32(0)
        )
    )
)


process.muonBadTrackFilter = cms.EDFilter("MuonBadTrackFilter",
    PFCandidates = cms.InputTag("particleFlow"),
    chi2Min = cms.double(100.0),
    debug = cms.bool(False),
    p1 = cms.double(5.0),
    p2 = cms.double(1.2),
    p3 = cms.double(0.06),
    ptMin = cms.double(100.0),
    taggingMode = cms.bool(False),
    verbose = cms.untracked.bool(False)
)


process.noHFCands = cms.EDFilter("GenericPFCandidateSelector",
    cut = cms.string('abs(pdgId)!=1 && abs(pdgId)!=2 && abs(eta)<3.0'),
    src = cms.InputTag("particleFlow")
)


process.pfAllChargedHadronsPFBRECO = cms.EDFilter("PFCandidateFwdPtrCollectionPdgIdFilter",
    makeClones = cms.bool(True),
    pdgId = cms.vint32(
        211, -211, 321, -321, 999211,
        2212, -2212
    ),
    src = cms.InputTag("pfNoPileUpIsoPFBRECO")
)


process.pfAllChargedHadronsPFBRECOBoosted = cms.EDFilter("PFCandidateFwdPtrCollectionPdgIdFilter",
    makeClones = cms.bool(True),
    pdgId = cms.vint32(
        211, -211, 321, -321, 999211,
        2212, -2212
    ),
    src = cms.InputTag("pfNoPileUpIsoPFBRECOBoosted")
)


process.pfAllChargedParticlesPFBRECO = cms.EDFilter("PFCandidateFwdPtrCollectionPdgIdFilter",
    makeClones = cms.bool(True),
    pdgId = cms.vint32(
        211, -211, 321, -321, 999211,
        2212, -2212, 11, -11, 13,
        -13
    ),
    src = cms.InputTag("pfNoPileUpIsoPFBRECO")
)


process.pfAllChargedParticlesPFBRECOBoosted = cms.EDFilter("PFCandidateFwdPtrCollectionPdgIdFilter",
    makeClones = cms.bool(True),
    pdgId = cms.vint32(
        211, -211, 321, -321, 999211,
        2212, -2212, 11, -11, 13,
        -13
    ),
    src = cms.InputTag("pfNoPileUpIsoPFBRECOBoosted")
)


process.pfAllNeutralHadronsAndPhotonsPFBRECO = cms.EDFilter("PFCandidateFwdPtrCollectionPdgIdFilter",
    makeClones = cms.bool(True),
    pdgId = cms.vint32(22, 111, 130, 310, 2112),
    src = cms.InputTag("pfNoPileUpIsoPFBRECO")
)


process.pfAllNeutralHadronsAndPhotonsPFBRECOBoosted = cms.EDFilter("PFCandidateFwdPtrCollectionPdgIdFilter",
    makeClones = cms.bool(True),
    pdgId = cms.vint32(22, 111, 130, 310, 2112),
    src = cms.InputTag("pfNoPileUpIsoPFBRECOBoosted")
)


process.pfAllNeutralHadronsPFBRECO = cms.EDFilter("PFCandidateFwdPtrCollectionPdgIdFilter",
    makeClones = cms.bool(True),
    pdgId = cms.vint32(111, 130, 310, 2112),
    src = cms.InputTag("pfNoPileUpIsoPFBRECO")
)


process.pfAllNeutralHadronsPFBRECOBoosted = cms.EDFilter("PFCandidateFwdPtrCollectionPdgIdFilter",
    makeClones = cms.bool(True),
    pdgId = cms.vint32(111, 130, 310, 2112),
    src = cms.InputTag("pfNoPileUpIsoPFBRECOBoosted")
)


process.pfAllPhotonsPFBRECO = cms.EDFilter("PFCandidateFwdPtrCollectionPdgIdFilter",
    makeClones = cms.bool(True),
    pdgId = cms.vint32(22),
    src = cms.InputTag("pfNoPileUpIsoPFBRECO")
)


process.pfAllPhotonsPFBRECOBoosted = cms.EDFilter("PFCandidateFwdPtrCollectionPdgIdFilter",
    makeClones = cms.bool(True),
    pdgId = cms.vint32(22),
    src = cms.InputTag("pfNoPileUpIsoPFBRECOBoosted")
)


process.pfCHS = cms.EDFilter("CandPtrSelector",
    cut = cms.string('fromPV(0)>0 || (vertexRef().key<=2 && abs(dz(0))<0.2)'),
    src = cms.InputTag("packedPFCandidates")
)


process.pfElectrons = cms.EDFilter("CandPtrSelector",
    cut = cms.string("pt > 5 && isPF && gsfTrack.isAvailable() && gsfTrack.hitPattern().numberOfLostHits(\'MISSING_INNER_HITS\') < 2"),
    src = cms.InputTag("selectedPatElectrons")
)


process.pfElectronsNoHF = cms.EDFilter("CandPtrSelector",
    cut = cms.string("pt > 5 && isPF && gsfTrack.isAvailable() && gsfTrack.hitPattern().numberOfLostHits(\'MISSING_INNER_HITS\') < 2"),
    src = cms.InputTag("selectedPatElectrons")
)


process.pfElectronsPuppi = cms.EDFilter("CandPtrSelector",
    cut = cms.string("pt > 5 && isPF && gsfTrack.isAvailable() && gsfTrack.hitPattern().numberOfLostHits(\'MISSING_INNER_HITS\') < 2"),
    src = cms.InputTag("selectedPatElectrons")
)


process.pfEmptyCollection = cms.EDFilter("GenericPFCandidateSelector",
    cut = cms.string('pt<0'),
    src = cms.InputTag("particleFlow")
)


process.pfMuons = cms.EDFilter("CandPtrSelector",
    cut = cms.string('pt > 5.0 && isPFMuon && abs(eta) < 2.4'),
    src = cms.InputTag("selectedPatMuons")
)


process.pfMuonsNoHF = cms.EDFilter("CandPtrSelector",
    cut = cms.string('pt > 5.0 && isPFMuon && abs(eta) < 2.4'),
    src = cms.InputTag("selectedPatMuons")
)


process.pfMuonsPuppi = cms.EDFilter("CandPtrSelector",
    cut = cms.string('pt > 5.0 && isPFMuon && abs(eta) < 2.4'),
    src = cms.InputTag("selectedPatMuons")
)


process.pfNoPileUp = cms.EDFilter("CandPtrSelector",
    cut = cms.string(''),
    src = cms.InputTag("particleFlow")
)


process.pfNoPileUpNoHF = cms.EDFilter("CandPtrSelector",
    cut = cms.string(''),
    src = cms.InputTag("noHFCands")
)


process.pfNoPileUpPuppi = cms.EDFilter("CandPtrSelector",
    cut = cms.string(''),
    src = cms.InputTag("particleFlow")
)


process.pfPhotons = cms.EDFilter("CandPtrSelector",
    cut = cms.string('abs(pdgId) = 22'),
    src = cms.InputTag("particleFlow")
)


process.pfPhotonsNoHF = cms.EDFilter("CandPtrSelector",
    cut = cms.string('abs(pdgId) = 22'),
    src = cms.InputTag("noHFCands")
)


process.pfPhotonsPuppi = cms.EDFilter("CandPtrSelector",
    cut = cms.string('abs(pdgId) = 22'),
    src = cms.InputTag("particleFlow")
)


process.pfPileUpAllChargedParticlesPFBRECO = cms.EDFilter("PFCandidateFwdPtrCollectionPdgIdFilter",
    makeClones = cms.bool(True),
    pdgId = cms.vint32(
        211, -211, 321, -321, 999211,
        2212, -2212, 11, -11, 13,
        -13
    ),
    src = cms.InputTag("pfPileUpIsoPFBRECO")
)


process.pfPileUpAllChargedParticlesPFBRECOBoosted = cms.EDFilter("PFCandidateFwdPtrCollectionPdgIdFilter",
    makeClones = cms.bool(True),
    pdgId = cms.vint32(
        211, -211, 321, -321, 999211,
        2212, -2212, 11, -11, 13,
        -13
    ),
    src = cms.InputTag("pfPileUpIsoPFBRECOBoosted")
)


process.pfTaus = cms.EDFilter("PATTauRefSelector",
    cut = cms.string('pt > 18.0 & abs(eta) < 2.6 & tauID("decayModeFinding") > 0.5 & isPFTau'),
    src = cms.InputTag("selectedPatTaus")
)


process.pfTausNoHF = cms.EDFilter("PATTauRefSelector",
    cut = cms.string('pt > 18.0 & abs(eta) < 2.6 & tauID("decayModeFinding") > 0.5 & isPFTau'),
    src = cms.InputTag("selectedPatTaus")
)


process.pfTausPuppi = cms.EDFilter("PATTauRefSelector",
    cut = cms.string('pt > 18.0 & abs(eta) < 2.6 & tauID("decayModeFinding") > 0.5 & isPFTau'),
    src = cms.InputTag("selectedPatTaus")
)


process.primaryVertexFilter = cms.EDFilter("GoodVertexFilter",
    maxAbsZ = cms.double(24),
    maxd0 = cms.double(2),
    minimumNDOF = cms.uint32(4),
    vertexCollection = cms.InputTag("offlinePrimaryVertices")
)


process.recoTauPileUpVertices = cms.EDFilter("RecoTauPileUpVertexSelector",
    filter = cms.bool(False),
    minTrackSumPt = cms.double(5),
    src = cms.InputTag("offlinePrimaryVertices")
)


process.recoTauPileUpVerticesBoosted = cms.EDFilter("RecoTauPileUpVertexSelector",
    filter = cms.bool(False),
    minTrackSumPt = cms.double(5),
    src = cms.InputTag("offlinePrimaryVertices")
)


process.selectedPatDisplacedMuons = cms.EDFilter("PATMuonSelector",
    cut = cms.string(''),
    src = cms.InputTag("patDisplacedMuons")
)


process.selectedPatElectrons = cms.EDFilter("PATElectronSelector",
    cut = cms.string(''),
    src = cms.InputTag("patElectrons")
)


process.selectedPatElectronsHGC = cms.EDFilter("PATElectronSelector",
    cut = cms.string('!isEB && pt >= 10.'),
    src = cms.InputTag("patElectronsHGC")
)


process.selectedPatJets = cms.EDFilter("PATJetSelector",
    cut = cms.string('pt > 10'),
    cutLoose = cms.string(''),
    nLoose = cms.uint32(0),
    src = cms.InputTag("patJets")
)


process.selectedPatJetsAK8PFPuppiSoftDrop = cms.EDFilter("PATJetSelector",
    cut = cms.string('pt > 10'),
    cutLoose = cms.string(''),
    nLoose = cms.uint32(0),
    src = cms.InputTag("patJetsAK8PFPuppiSoftDrop")
)


process.selectedPatJetsAK8PFPuppiSoftDropSubjets = cms.EDFilter("PATJetSelector",
    cut = cms.string('pt > 10'),
    cutLoose = cms.string(''),
    nLoose = cms.uint32(0),
    src = cms.InputTag("patJetsAK8PFPuppiSoftDropSubjets")
)


process.selectedPatJetsAK8Puppi = cms.EDFilter("PATJetSelector",
    cut = cms.string('pt > 100'),
    cutLoose = cms.string('pt > 30'),
    nLoose = cms.uint32(3),
    src = cms.InputTag("patJetsAK8Puppi")
)


process.selectedPatJetsForMetT1T2Corr = cms.EDFilter("PATJetSelector",
    cut = cms.string('abs(eta) < 9.9'),
    filter = cms.bool(False),
    src = cms.InputTag("patJets")
)


process.selectedPatJetsForMetT1T2CorrNoHF = cms.EDFilter("PATJetSelector",
    cut = cms.string('abs(eta) < 9.9'),
    filter = cms.bool(False),
    src = cms.InputTag("patJets")
)


process.selectedPatJetsForMetT1T2CorrPuppi = cms.EDFilter("PATJetSelector",
    cut = cms.string('abs(eta) < 9.9'),
    filter = cms.bool(False),
    src = cms.InputTag("patJets")
)


process.selectedPatJetsForMetT1T2SmearCorr = cms.EDFilter("PATJetSelector",
    cut = cms.string('abs(eta) < 9.9'),
    filter = cms.bool(False),
    src = cms.InputTag("patSmearedJets")
)


process.selectedPatJetsForMetT1T2SmearCorrNoHF = cms.EDFilter("PATJetSelector",
    cut = cms.string('abs(eta) < 9.9'),
    filter = cms.bool(False),
    src = cms.InputTag("patSmearedJetsNoHF")
)


process.selectedPatJetsForMetT1T2SmearCorrPuppi = cms.EDFilter("PATJetSelector",
    cut = cms.string('abs(eta) < 9.9'),
    filter = cms.bool(False),
    src = cms.InputTag("patSmearedJetsPuppi")
)


process.selectedPatJetsForMetT2Corr = cms.EDFilter("PATJetSelector",
    cut = cms.string('abs(eta) > 9.9'),
    filter = cms.bool(False),
    src = cms.InputTag("patJets")
)


process.selectedPatJetsForMetT2CorrNoHF = cms.EDFilter("PATJetSelector",
    cut = cms.string('abs(eta) > 9.9'),
    filter = cms.bool(False),
    src = cms.InputTag("patJets")
)


process.selectedPatJetsForMetT2CorrPuppi = cms.EDFilter("PATJetSelector",
    cut = cms.string('abs(eta) > 9.9'),
    filter = cms.bool(False),
    src = cms.InputTag("patJets")
)


process.selectedPatJetsForMetT2SmearCorr = cms.EDFilter("PATJetSelector",
    cut = cms.string('abs(eta) > 9.9'),
    filter = cms.bool(False),
    src = cms.InputTag("patSmearedJets")
)


process.selectedPatJetsForMetT2SmearCorrNoHF = cms.EDFilter("PATJetSelector",
    cut = cms.string('abs(eta) > 9.9'),
    filter = cms.bool(False),
    src = cms.InputTag("patSmearedJetsNoHF")
)


process.selectedPatJetsForMetT2SmearCorrPuppi = cms.EDFilter("PATJetSelector",
    cut = cms.string('abs(eta) > 9.9'),
    filter = cms.bool(False),
    src = cms.InputTag("patSmearedJetsPuppi")
)


process.selectedPatJetsNoHF = cms.EDFilter("PATJetSelector",
    cut = cms.string('pt > 10'),
    cutLoose = cms.string(''),
    nLoose = cms.uint32(0),
    src = cms.InputTag("patJetsNoHF")
)


process.selectedPatJetsPuppi = cms.EDFilter("PATJetSelector",
    cut = cms.string('pt > 10'),
    cutLoose = cms.string(''),
    nLoose = cms.uint32(0),
    src = cms.InputTag("patJetsPuppi")
)


process.selectedPatLowPtElectrons = cms.EDFilter("PATElectronSelector",
    cut = cms.string("pt > 1. && electronID(\'ID\') > -0.25"),
    src = cms.InputTag("patLowPtElectrons")
)


process.selectedPatMuons = cms.EDFilter("PATMuonSelector",
    cut = cms.string("pt > 5 || isPFMuon || (pt > 3 && (isGlobalMuon || isStandAloneMuon || numberOfMatches > 0 || muonID(\'RPCMuLoose\')))"),
    src = cms.InputTag("patMuons")
)


process.selectedPatOOTPhotons = cms.EDFilter("PATPhotonSelector",
    cut = cms.string(''),
    src = cms.InputTag("patOOTPhotons")
)


process.selectedPatPhotons = cms.EDFilter("PATPhotonSelector",
    cut = cms.string(''),
    src = cms.InputTag("patPhotons")
)


process.selectedPatPhotonsHGC = cms.EDFilter("PATPhotonSelector",
    cut = cms.string('!isEB && pt >= 15.'),
    src = cms.InputTag("patPhotonsHGC")
)


process.selectedPatTaus = cms.EDFilter("PATTauSelector",
    cut = cms.string("pt > 18. && tauID(\'decayModeFindingNewDMs\')> 0.5"),
    src = cms.InputTag("patTaus")
)


process.selectedPatTausBoosted = cms.EDFilter("PATTauSelector",
    cut = cms.string("pt > 18. && tauID(\'decayModeFindingNewDMs\')> 0.5"),
    src = cms.InputTag("patTausBoosted")
)


process.selectedPatTrigger = cms.EDFilter("PATTriggerObjectStandAloneSelector",
    cut = cms.string('!filterLabels.empty()'),
    src = cms.InputTag("patTrigger")
)


process.selectedPrimaryVertexHighestPtTrackSumForPFMEtCorrType0 = cms.EDFilter("PATSingleVertexSelector",
    filter = cms.bool(False),
    mode = cms.string('firstVertex'),
    vertices = cms.InputTag("selectedVerticesForPFMEtCorrType0")
)


process.selectedPrimaryVertexHighestPtTrackSumForPFMEtCorrType0NoHF = cms.EDFilter("PATSingleVertexSelector",
    filter = cms.bool(False),
    mode = cms.string('firstVertex'),
    vertices = cms.InputTag("selectedVerticesForPFMEtCorrType0NoHF")
)


process.selectedPrimaryVertexHighestPtTrackSumForPFMEtCorrType0Puppi = cms.EDFilter("PATSingleVertexSelector",
    filter = cms.bool(False),
    mode = cms.string('firstVertex'),
    vertices = cms.InputTag("selectedVerticesForPFMEtCorrType0Puppi")
)


process.selectedVerticesForPFMEtCorrType0 = cms.EDFilter("VertexSelector",
    cut = cms.string('isValid & ndof >= 4 & chi2 > 0 & tracksSize > 0 & abs(z) < 24 & abs(position.Rho) < 2.'),
    filter = cms.bool(False),
    src = cms.InputTag("offlinePrimaryVertices")
)


process.selectedVerticesForPFMEtCorrType0NoHF = cms.EDFilter("VertexSelector",
    cut = cms.string('isValid & ndof >= 4 & chi2 > 0 & tracksSize > 0 & abs(z) < 24 & abs(position.Rho) < 2.'),
    filter = cms.bool(False),
    src = cms.InputTag("offlinePrimaryVertices")
)


process.selectedVerticesForPFMEtCorrType0Puppi = cms.EDFilter("VertexSelector",
    cut = cms.string('isValid & ndof >= 4 & chi2 > 0 & tracksSize > 0 & abs(z) < 24 & abs(position.Rho) < 2.'),
    filter = cms.bool(False),
    src = cms.InputTag("offlinePrimaryVertices")
)


process.slimmedJets = cms.EDFilter("PATJetSelector",
    cut = cms.string('pt > 10'),
    cutLoose = cms.string(''),
    nLoose = cms.uint32(0),
    src = cms.InputTag("updatedPatJetsTransientCorrectedSlimmedDeepFlavour")
)


process.slimmedJetsAK8 = cms.EDFilter("PATJetSelector",
    cut = cms.string('pt > 10'),
    cutLoose = cms.string(''),
    nLoose = cms.uint32(0),
    src = cms.InputTag("updatedPatJetsTransientCorrectedSlimmedAK8DeepTags")
)


process.slimmedJetsPuppi = cms.EDFilter("PATJetSelector",
    cut = cms.string('pt > 10'),
    cutLoose = cms.string(''),
    nLoose = cms.uint32(0),
    src = cms.InputTag("updatedPatJetsTransientCorrectedSlimmedPuppiWithDeepTags")
)


process.tauGenJetsSelectorAllHadrons = cms.EDFilter("TauGenJetDecayModeSelector",
    filter = cms.bool(False),
    select = cms.vstring(
        'oneProng0Pi0',
        'oneProng1Pi0',
        'oneProng2Pi0',
        'oneProngOther',
        'threeProng0Pi0',
        'threeProng1Pi0',
        'threeProngOther',
        'rare'
    ),
    src = cms.InputTag("tauGenJets")
)


process.tauGenJetsSelectorAllHadronsBoosted = cms.EDFilter("TauGenJetDecayModeSelector",
    filter = cms.bool(False),
    select = cms.vstring(
        'oneProng0Pi0',
        'oneProng1Pi0',
        'oneProng2Pi0',
        'oneProngOther',
        'threeProng0Pi0',
        'threeProng1Pi0',
        'threeProngOther',
        'rare'
    ),
    src = cms.InputTag("tauGenJetsBoosted")
)


process.toomanystripclus53X = cms.EDFilter("ByClusterSummaryMultiplicityPairEventFilter",
    cut = cms.string('(mult2>50000) && ( mult2 > 20000+7*mult1)'),
    multiplicityConfig = cms.PSet(
        firstMultiplicityConfig = cms.PSet(
            clusterSummaryCollection = cms.InputTag("clusterSummaryProducer"),
            subDetEnum = cms.int32(5),
            varEnum = cms.int32(0)
        ),
        secondMultiplicityConfig = cms.PSet(
            clusterSummaryCollection = cms.InputTag("clusterSummaryProducer"),
            subDetEnum = cms.int32(0),
            varEnum = cms.int32(0)
        )
    )
)


process.trackingFailureFilter = cms.EDFilter("TrackingFailureFilter",
    DxyTrVtxMax = cms.double(0.2),
    DzTrVtxMax = cms.double(1),
    JetSource = cms.InputTag("ak4PFJets"),
    MinSumPtOverHT = cms.double(0.1),
    TrackSource = cms.InputTag("generalTracks"),
    VertexSource = cms.InputTag("goodVertices"),
    debug = cms.bool(False),
    taggingMode = cms.bool(False)
)


process.patCandidateSummary = cms.EDAnalyzer("CandidateSummaryTable",
    candidates = cms.VInputTag(
        cms.InputTag("patElectrons"), cms.InputTag("patLowPtElectrons"), cms.InputTag("patMuons"), cms.InputTag("patDisplacedMuons"), cms.InputTag("patTaus"),
        cms.InputTag("patPhotons"), cms.InputTag("patOOTPhotons"), cms.InputTag("patJets"), cms.InputTag("patMETs")
    ),
    logName = cms.untracked.string('patCandidates|PATSummaryTables')
)


process.selectedPatCandidateSummary = cms.EDAnalyzer("CandidateSummaryTable",
    candidates = cms.VInputTag(
        cms.InputTag("selectedPatElectrons"), cms.InputTag("selectedPatLowPtElectrons"), cms.InputTag("selectedPatMuons"), cms.InputTag("selectedPatDisplacedMuons"), cms.InputTag("selectedPatTaus"),
        cms.InputTag("selectedPatPhotons"), cms.InputTag("selectedPatOOTPhotons"), cms.InputTag("selectedPatJets")
    ),
    logName = cms.untracked.string('selectedPatCanddiates|PATSummaryTables')
)


process.MINIAODSIMoutput = cms.OutputModule("PoolOutputModule",
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    dataset = cms.untracked.PSet(
        dataTier = cms.untracked.string('MINIAODSIM'),
        filterName = cms.untracked.string('')
    ),
    dropMetaData = cms.untracked.string('ALL'),
    eventAutoFlushCompressedSize = cms.untracked.int32(-900),
    fastCloning = cms.untracked.bool(False),
    fileName = cms.untracked.string('file:step4_HAA4Tau_3p7_MiniAOD_allevent.root'),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_slimmedPhotons_*_*',
        'keep *_slimmedOOTPhotons_*_*',
        'keep *_slimmedElectrons_*_*',
        'keep *_slimmedMuons_*_*',
        'keep recoTrackExtras_slimmedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep *_slimmedTaus_*_*',
        'keep *_slimmedTausBoosted_*_*',
        'keep *_slimmedCaloJets_*_*',
        'keep *_slimmedJPTJets_*_*',
        'keep *_slimmedJets_*_*',
        'keep recoBaseTagInfosOwned_slimmedJets_*_*',
        'keep *_slimmedJetsAK8_*_*',
        'drop recoBaseTagInfosOwned_slimmedJetsAK8_*_*',
        'keep *_slimmedJetsPuppi_*_*',
        'keep *_slimmedMETs_*_*',
        'keep *_slimmedMETsNoHF_*_*',
        'keep *_slimmedMETsPuppi_*_*',
        'keep *_slimmedSecondaryVertices_*_*',
        'keep *_slimmedLambdaVertices_*_*',
        'keep *_slimmedKshortVertices_*_*',
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*',
        'keep recoPhotonCores_reducedEgamma_*_*',
        'keep recoGsfElectronCores_reducedEgamma_*_*',
        'keep recoConversions_reducedEgamma_*_*',
        'keep recoSuperClusters_reducedEgamma_*_*',
        'keep recoCaloClusters_reducedEgamma_*_*',
        'keep EcalRecHitsSorted_reducedEgamma_*_*',
        'keep recoGsfTracks_reducedEgamma_*_*',
        'keep HBHERecHitsSorted_reducedEgamma_*_*',
        'keep *_slimmedHcalRecHits_*_*',
        'drop *_*_caloTowers_*',
        'drop *_*_pfCandidates_*',
        'drop *_*_genJets_*',
        'keep *_offlineBeamSpot_*_*',
        'keep *_offlineSlimmedPrimaryVertices_*_*',
        'keep *_offlineSlimmedPrimaryVerticesWithBS_*_*',
        'keep patPackedCandidates_packedPFCandidates_*_*',
        'keep *_isolatedTracks_*_*',
        'keep *_oniaPhotonCandidates_*_*',
        'keep *_bunchSpacingProducer_*_*',
        'keep double_fixedGridRhoAll__*',
        'keep double_fixedGridRhoFastjetAll__*',
        'keep double_fixedGridRhoFastjetAllTmp__*',
        'keep double_fixedGridRhoFastjetAllCalo__*',
        'keep double_fixedGridRhoFastjetCentral_*_*',
        'keep double_fixedGridRhoFastjetCentralCalo__*',
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*',
        'keep double_fixedGridRhoFastjetCentralNeutral__*',
        'keep *_slimmedPatTrigger_*_*',
        'keep patPackedTriggerPrescales_patTrigger__*',
        'keep patPackedTriggerPrescales_patTrigger_l1max_*',
        'keep patPackedTriggerPrescales_patTrigger_l1min_*',
        'keep *_l1extraParticles_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep GlobalExtBlkBXVector_simGtExtUnprefireable_*_*',
        'keep *_gtStage2Digis__*',
        'keep *_gmtStage2Digis_Muon_*',
        'keep *_caloStage2Digis_Jet_*',
        'keep *_caloStage2Digis_Tau_*',
        'keep *_caloStage2Digis_EGamma_*',
        'keep *_caloStage2Digis_EtSum_*',
        'keep *_TriggerResults_*_HLT',
        'keep *_TriggerResults_*_*',
        'keep patPackedCandidates_lostTracks_*_*',
        'keep HcalNoiseSummary_hcalnoise__*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTracks_displacedGlobalMuons__*',
        'keep recoTracks_displacedTracks__*',
        'keep *_prefiringweight_*_*',
        'keep *_slimmedLowPtElectrons_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep *_slimmedDisplacedMuons_*_*',
        'keep recoTrackExtras_slimmedDisplacedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'drop *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'keep patPackedGenParticles_packedGenParticles_*_*',
        'keep recoGenParticles_prunedGenParticles_*_*',
        'keep *_packedPFCandidateToGenAssociation_*_*',
        'keep *_lostTracksToGenAssociation_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_*_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep recoGenParticles_genPUProtons_*_*',
        'keep *_slimmedGenJetsFlavourInfos_*_*',
        'keep *_slimmedGenJets__*',
        'keep *_slimmedGenJetsAK8__*',
        'keep *_slimmedGenJetsAK8SoftDropSubJets__*',
        'keep *_genMetTrue_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep GenRunInfoProduct_*_*_*',
        'keep *_genParticles_xyz0_*',
        'keep *_genParticles_t0_*',
        'keep PileupSummaryInfos_slimmedAddPileupInfo_*_*',
        'keep L1GtTriggerMenuLite_l1GtTriggerMenuLite__*',
        'keep *_simSiPixelDigis_*_*',
        'keep *_simSiStripDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep *_g4SimHits_*_*',
        'keep *_generalTracks_*_*',
        'keep *_siStripMatchedRecHits_*_*',
        'keep *_siPixelRecHits_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*'
    ),
    overrideBranchesSplitLevel = cms.untracked.VPSet(
        cms.untracked.PSet(
            branch = cms.untracked.string('patPackedCandidates_packedPFCandidates__*'),
            splitLevel = cms.untracked.int32(99)
        ),
        cms.untracked.PSet(
            branch = cms.untracked.string('recoGenParticles_prunedGenParticles__*'),
            splitLevel = cms.untracked.int32(99)
        ),
        cms.untracked.PSet(
            branch = cms.untracked.string('patTriggerObjectStandAlones_slimmedPatTrigger__*'),
            splitLevel = cms.untracked.int32(99)
        ),
        cms.untracked.PSet(
            branch = cms.untracked.string('patPackedGenParticles_packedGenParticles__*'),
            splitLevel = cms.untracked.int32(99)
        ),
        cms.untracked.PSet(
            branch = cms.untracked.string('patJets_slimmedJets__*'),
            splitLevel = cms.untracked.int32(99)
        ),
        cms.untracked.PSet(
            branch = cms.untracked.string('recoVertexs_offlineSlimmedPrimaryVertices__*'),
            splitLevel = cms.untracked.int32(99)
        ),
        cms.untracked.PSet(
            branch = cms.untracked.string('recoVertexs_offlineSlimmedPrimaryVerticesWithBS__*'),
            splitLevel = cms.untracked.int32(99)
        ),
        cms.untracked.PSet(
            branch = cms.untracked.string('recoCaloClusters_reducedEgamma_reducedESClusters_*'),
            splitLevel = cms.untracked.int32(99)
        ),
        cms.untracked.PSet(
            branch = cms.untracked.string('EcalRecHitsSorted_reducedEgamma_reducedEBRecHits_*'),
            splitLevel = cms.untracked.int32(99)
        ),
        cms.untracked.PSet(
            branch = cms.untracked.string('EcalRecHitsSorted_reducedEgamma_reducedEERecHits_*'),
            splitLevel = cms.untracked.int32(99)
        ),
        cms.untracked.PSet(
            branch = cms.untracked.string('recoGenJets_slimmedGenJets__*'),
            splitLevel = cms.untracked.int32(99)
        ),
        cms.untracked.PSet(
            branch = cms.untracked.string('patJets_slimmedJetsPuppi__*'),
            splitLevel = cms.untracked.int32(99)
        ),
        cms.untracked.PSet(
            branch = cms.untracked.string('EcalRecHitsSorted_reducedEgamma_reducedESRecHits_*'),
            splitLevel = cms.untracked.int32(99)
        )
    ),
    overrideInputFileSplitLevels = cms.untracked.bool(True),
    splitLevel = cms.untracked.int32(0)
)


process.DQMStore = cms.Service("DQMStore")


process.MessageLogger = cms.Service("MessageLogger",
    cerr = cms.untracked.PSet(
        FwkReport = cms.untracked.PSet(
            limit = cms.untracked.int32(10000000),
            reportEvery = cms.untracked.int32(1)
        ),
        FwkSummary = cms.untracked.PSet(
            limit = cms.untracked.int32(10000000),
            reportEvery = cms.untracked.int32(1)
        ),
        INFO = cms.untracked.PSet(
            limit = cms.untracked.int32(0)
        ),
        Root_NoDictionary = cms.untracked.PSet(
            limit = cms.untracked.int32(0)
        ),
        default = cms.untracked.PSet(
            limit = cms.untracked.int32(10000000)
        ),
        enable = cms.untracked.bool(True),
        enableStatistics = cms.untracked.bool(False),
        lineLength = cms.optional.untracked.int32,
        noLineBreaks = cms.optional.untracked.bool,
        noTimeStamps = cms.untracked.bool(False),
        resetStatistics = cms.untracked.bool(False),
        statisticsThreshold = cms.untracked.string('WARNING'),
        threshold = cms.untracked.string('INFO'),
        allowAnyLabel_=cms.optional.untracked.PSetTemplate(
            limit = cms.optional.untracked.int32,
            reportEvery = cms.untracked.int32(1),
            timespan = cms.optional.untracked.int32
        )
    ),
    cout = cms.untracked.PSet(
        enable = cms.untracked.bool(False),
        enableStatistics = cms.untracked.bool(False),
        lineLength = cms.optional.untracked.int32,
        noLineBreaks = cms.optional.untracked.bool,
        noTimeStamps = cms.optional.untracked.bool,
        resetStatistics = cms.untracked.bool(False),
        statisticsThreshold = cms.optional.untracked.string,
        threshold = cms.optional.untracked.string,
        allowAnyLabel_=cms.optional.untracked.PSetTemplate(
            limit = cms.optional.untracked.int32,
            reportEvery = cms.untracked.int32(1),
            timespan = cms.optional.untracked.int32
        )
    ),
    debugModules = cms.untracked.vstring(),
    default = cms.untracked.PSet(
        limit = cms.optional.untracked.int32,
        lineLength = cms.untracked.int32(80),
        noLineBreaks = cms.untracked.bool(False),
        noTimeStamps = cms.untracked.bool(False),
        reportEvery = cms.untracked.int32(1),
        statisticsThreshold = cms.untracked.string('INFO'),
        threshold = cms.untracked.string('INFO'),
        timespan = cms.optional.untracked.int32,
        allowAnyLabel_=cms.optional.untracked.PSetTemplate(
            limit = cms.optional.untracked.int32,
            reportEvery = cms.untracked.int32(1),
            timespan = cms.optional.untracked.int32
        )
    ),
    files = cms.untracked.PSet(
        allowAnyLabel_=cms.optional.untracked.PSetTemplate(
            enableStatistics = cms.untracked.bool(False),
            extension = cms.optional.untracked.string,
            filename = cms.optional.untracked.string,
            lineLength = cms.optional.untracked.int32,
            noLineBreaks = cms.optional.untracked.bool,
            noTimeStamps = cms.optional.untracked.bool,
            output = cms.optional.untracked.string,
            resetStatistics = cms.untracked.bool(False),
            statisticsThreshold = cms.optional.untracked.string,
            threshold = cms.optional.untracked.string,
            allowAnyLabel_=cms.optional.untracked.PSetTemplate(
                limit = cms.optional.untracked.int32,
                reportEvery = cms.untracked.int32(1),
                timespan = cms.optional.untracked.int32
            )
        )
    ),
    suppressDebug = cms.untracked.vstring(),
    suppressFwkInfo = cms.untracked.vstring(),
    suppressInfo = cms.untracked.vstring(),
    suppressWarning = cms.untracked.vstring(),
    allowAnyLabel_=cms.optional.untracked.PSetTemplate(
        limit = cms.optional.untracked.int32,
        reportEvery = cms.untracked.int32(1),
        timespan = cms.optional.untracked.int32
    )
)


process.RandomNumberGeneratorService = cms.Service("RandomNumberGeneratorService",
    CTPPSFastRecHits = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(1357987)
    ),
    LHCTransport = cms.PSet(
        engineName = cms.untracked.string('TRandom3'),
        initialSeed = cms.untracked.uint32(87654321)
    ),
    MuonSimHits = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(987346)
    ),
    RPSiDetDigitizer = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(137137)
    ),
    RPixDetDigitizer = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(137137)
    ),
    VtxSmeared = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(98765432)
    ),
    ecalPreshowerRecHit = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(6541321)
    ),
    ecalRecHit = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(654321)
    ),
    externalLHEProducer = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(234567)
    ),
    famosPileUp = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(918273)
    ),
    fastSimProducer = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(13579)
    ),
    fastTrackerRecHits = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(24680)
    ),
    g4SimHits = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(11)
    ),
    generator = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(123456789)
    ),
    hbhereco = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(541321)
    ),
    hfreco = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(541321)
    ),
    hiSignal = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(123456789)
    ),
    hiSignalG4SimHits = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(11)
    ),
    hiSignalLHCTransport = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(88776655)
    ),
    horeco = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(541321)
    ),
    l1ParamMuons = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(6453209)
    ),
    mix = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(12345)
    ),
    mixData = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(12345)
    ),
    mixGenPU = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(918273)
    ),
    mixRecoTracks = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(918273)
    ),
    mixSimCaloHits = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(918273)
    ),
    paramMuons = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(54525)
    ),
    saveFileName = cms.untracked.string(''),
    simBeamSpotFilter = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(87654321)
    ),
    simMuonCSCDigis = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(11223344)
    ),
    simMuonDTDigis = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(1234567)
    ),
    simMuonGEMDigis = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(1234567)
    ),
    simMuonRPCDigis = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(1234567)
    ),
    simSiStripDigiSimLink = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(1234567)
    )
)


process.SimpleMemoryCheck = cms.Service("SimpleMemoryCheck",
    jobReportOutputOnly = cms.untracked.bool(True)
)


process.Timing = cms.Service("Timing",
    summaryOnly = cms.untracked.bool(True)
)


process.CSCGeometryESModule = cms.ESProducer("CSCGeometryESModule",
    alignmentsLabel = cms.string(''),
    appendToDataLabel = cms.string(''),
    applyAlignment = cms.bool(True),
    debugV = cms.untracked.bool(False),
    fromDD4hep = cms.bool(False),
    fromDDD = cms.bool(False),
    useCentreTIOffsets = cms.bool(False),
    useGangedStripsInME1a = cms.bool(False),
    useOnlyWiresInME1a = cms.bool(False),
    useRealWireGeometry = cms.bool(True)
)


process.CaloGeometryBuilder = cms.ESProducer("CaloGeometryBuilder",
    SelectedCalos = cms.vstring(
        'HCAL',
        'ZDC',
        'EcalBarrel',
        'EcalEndcap',
        'EcalPreshower',
        'TOWER'
    )
)


process.CaloTopologyBuilder = cms.ESProducer("CaloTopologyBuilder")


process.CaloTowerConstituentsMapBuilder = cms.ESProducer("CaloTowerConstituentsMapBuilder",
    MapAuto = cms.untracked.bool(False),
    MapFile = cms.untracked.string('Geometry/CaloTopology/data/CaloTowerEEGeometric.map.gz'),
    SkipHE = cms.untracked.bool(False),
    appendToDataLabel = cms.string('')
)


process.CaloTowerGeometryFromDBEP = cms.ESProducer("CaloTowerGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.CaloTowerTopologyEP = cms.ESProducer("CaloTowerTopologyEP")


process.CastorDbProducer = cms.ESProducer("CastorDbProducer",
    appendToDataLabel = cms.string('')
)


process.CastorGeometryFromDBEP = cms.ESProducer("CastorGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.DTGeometryESModule = cms.ESProducer("DTGeometryESModule",
    DDDetector = cms.ESInputTag("",""),
    alignmentsLabel = cms.string(''),
    appendToDataLabel = cms.string(''),
    applyAlignment = cms.bool(True),
    attribute = cms.string('MuStructure'),
    fromDD4hep = cms.bool(False),
    fromDDD = cms.bool(False),
    value = cms.string('MuonBarrelDT')
)


process.EcalBarrelGeometryFromDBEP = cms.ESProducer("EcalBarrelGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalElectronicsMappingBuilder = cms.ESProducer("EcalElectronicsMappingBuilder")


process.EcalEndcapGeometryFromDBEP = cms.ESProducer("EcalEndcapGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalLaserCorrectionService = cms.ESProducer("EcalLaserCorrectionService",
    maxExtrapolationTimeInSec = cms.uint32(0)
)


process.EcalLaserCorrectionServiceMC = cms.ESProducer("EcalLaserCorrectionServiceMC",
    appendToDataLabel = cms.string('')
)


process.EcalPreshowerGeometryFromDBEP = cms.ESProducer("EcalPreshowerGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalTrigTowerConstituentsMapBuilder = cms.ESProducer("EcalTrigTowerConstituentsMapBuilder",
    MapFile = cms.untracked.string('Geometry/EcalMapping/data/EndCap_TTMap.txt')
)


process.GEMGeometryESModule = cms.ESProducer("GEMGeometryESModule",
    alignmentsLabel = cms.string(''),
    appendToDataLabel = cms.string(''),
    applyAlignment = cms.bool(True),
    fromDD4hep = cms.bool(False),
    fromDDD = cms.bool(False)
)


process.GlobalTrackingGeometryESProducer = cms.ESProducer("GlobalTrackingGeometryESProducer")


process.HcalAlignmentEP = cms.ESProducer("HcalAlignmentEP")


process.HcalGeometryFromDBEP = cms.ESProducer("HcalGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.MuonDetLayerGeometryESProducer = cms.ESProducer("MuonDetLayerGeometryESProducer")


process.ParabolicParametrizedMagneticFieldProducer = cms.ESProducer("AutoParametrizedMagneticFieldProducer",
    label = cms.untracked.string('ParabolicMf'),
    valueOverride = cms.int32(-1),
    version = cms.string('Parabolic')
)


process.RPCGeometryESModule = cms.ESProducer("RPCGeometryESModule",
    fromDD4hep = cms.untracked.bool(False),
    fromDDD = cms.untracked.bool(False)
)


process.SiPixelFEDChannelContainerESProducer = cms.ESProducer("PixelFEDChannelCollectionProducer")


process.SiStripRecHitMatcherESProducer = cms.ESProducer("SiStripRecHitMatcherESProducer",
    ComponentName = cms.string('StandardMatcher'),
    NSigmaInside = cms.double(3.0),
    PreFilter = cms.bool(False)
)


process.SteppingHelixPropagatorAlong = cms.ESProducer("SteppingHelixPropagatorESProducer",
    ApplyRadX0Correction = cms.bool(True),
    AssumeNoMaterial = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorAlong'),
    NoErrorPropagation = cms.bool(False),
    PropagationDirection = cms.string('alongMomentum'),
    SetVBFPointer = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    debug = cms.bool(False),
    endcapShiftInZNeg = cms.double(0.0),
    endcapShiftInZPos = cms.double(0.0),
    returnTangentPlane = cms.bool(True),
    sendLogWarning = cms.bool(False),
    useEndcapShiftsInZ = cms.bool(False),
    useInTeslaFromMagField = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    useMagVolumes = cms.bool(True),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(False)
)


process.StripCPEfromTrackAngleESProducer = cms.ESProducer("StripCPEESProducer",
    ComponentName = cms.string('StripCPEfromTrackAngle'),
    ComponentType = cms.string('StripCPEfromTrackAngle'),
    parameters = cms.PSet(
        mLC_P0 = cms.double(-0.326),
        mLC_P1 = cms.double(0.618),
        mLC_P2 = cms.double(0.3),
        mTEC_P0 = cms.double(-1.885),
        mTEC_P1 = cms.double(0.471),
        mTIB_P0 = cms.double(-0.742),
        mTIB_P1 = cms.double(0.202),
        mTID_P0 = cms.double(-1.427),
        mTID_P1 = cms.double(0.433),
        mTOB_P0 = cms.double(-1.026),
        mTOB_P1 = cms.double(0.253),
        maxChgOneMIP = cms.double(6000.0),
        useLegacyError = cms.bool(False)
    )
)


process.TrackerRecoGeometryESProducer = cms.ESProducer("TrackerRecoGeometryESProducer",
    usePhase2Stacks = cms.bool(False)
)


process.TransientTrackBuilderESProducer = cms.ESProducer("TransientTrackBuilderESProducer",
    ComponentName = cms.string('TransientTrackBuilder')
)


process.VolumeBasedMagneticFieldESProducer = cms.ESProducer("DD4hep_VolumeBasedMagneticFieldESProducerFromDB",
    debugBuilder = cms.untracked.bool(False),
    label = cms.untracked.string(''),
    valueOverride = cms.int32(-1)
)


process.ZdcGeometryFromDBEP = cms.ESProducer("ZdcGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.caloDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('CaloDetIdAssociator'),
    etaBinSize = cms.double(0.087),
    nEta = cms.int32(70),
    nPhi = cms.int32(72)
)


process.candidateBoostedDoubleSecondaryVertexAK8Computer = cms.ESProducer("CandidateBoostedDoubleSecondaryVertexESProducer",
    useAdaBoost = cms.bool(False),
    useCondDB = cms.bool(False),
    useGBRForest = cms.bool(True),
    weightFile = cms.FileInPath('RecoBTag/SecondaryVertex/data/BoostedDoubleSV_AK8_BDT_PhaseI_v1.weights.xml.gz')
)


process.candidateBoostedDoubleSecondaryVertexCA15Computer = cms.ESProducer("CandidateBoostedDoubleSecondaryVertexESProducer",
    useAdaBoost = cms.bool(False),
    useCondDB = cms.bool(False),
    useGBRForest = cms.bool(True),
    weightFile = cms.FileInPath('RecoBTag/SecondaryVertex/data/BoostedDoubleSV_CA15_BDT_v3.weights.xml.gz')
)


process.candidateChargeBTagComputer = cms.ESProducer("CandidateChargeBTagESProducer",
    gbrForestLabel = cms.string(''),
    jetChargeExp = cms.double(0.8),
    svChargeExp = cms.double(0.5),
    useAdaBoost = cms.bool(True),
    useCondDB = cms.bool(False),
    weightFile = cms.FileInPath('RecoBTag/Combined/data/ChargeBTag_4sep_2016.weights.xml.gz')
)


process.candidateCombinedMVAV2Computer = cms.ESProducer("CombinedMVAV2JetTagESProducer",
    gbrForestLabel = cms.string('btag_CombinedMVAv2_BDT'),
    jetTagComputers = cms.vstring(
        'candidateJetProbabilityComputer',
        'candidateJetBProbabilityComputer',
        'candidateCombinedSecondaryVertexV2Computer',
        'softPFMuonComputer',
        'softPFElectronComputer'
    ),
    mvaName = cms.string('bdt'),
    spectators = cms.vstring(),
    useAdaBoost = cms.bool(False),
    useCondDB = cms.bool(True),
    useGBRForest = cms.bool(True),
    variables = cms.vstring(
        'Jet_CSV',
        'Jet_CSVIVF',
        'Jet_JP',
        'Jet_JBP',
        'Jet_SoftMu',
        'Jet_SoftEl'
    ),
    weightFile = cms.FileInPath('RecoBTag/Combined/data/CombinedMVAV2_13_07_2015.weights.xml.gz')
)


process.candidateCombinedSecondaryVertexSoftLeptonComputer = cms.ESProducer("CandidateCombinedSecondaryVertexSoftLeptonESProducer",
    SoftLeptonFlip = cms.bool(False),
    calibrationRecords = cms.vstring(
        'CombinedSVRecoVertexNoSoftLepton',
        'CombinedSVPseudoVertexNoSoftLepton',
        'CombinedSVNoVertexNoSoftLepton',
        'CombinedSVRecoVertexSoftMuon',
        'CombinedSVPseudoVertexSoftMuon',
        'CombinedSVNoVertexSoftMuon',
        'CombinedSVRecoVertexSoftElectron',
        'CombinedSVPseudoVertexSoftElectron',
        'CombinedSVNoVertexSoftElectron'
    ),
    categoryVariableName = cms.string('vertexLeptonCategory'),
    charmCut = cms.double(1.5),
    correctVertexMass = cms.bool(True),
    minimumTrackWeight = cms.double(0.5),
    pseudoMultiplicityMin = cms.uint32(2),
    pseudoVertexV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.05)
    ),
    recordLabel = cms.string(''),
    trackFlip = cms.bool(False),
    trackMultiplicityMin = cms.uint32(2),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    trackPseudoSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(2.0),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip2dSig'),
    useCategories = cms.bool(True),
    useTrackWeights = cms.bool(True),
    vertexFlip = cms.bool(False)
)


process.candidateCombinedSecondaryVertexSoftLeptonCvsLComputer = cms.ESProducer("CandidateCombinedSecondaryVertexSoftLeptonCvsLESProducer",
    SoftLeptonFlip = cms.bool(False),
    calibrationRecords = cms.vstring(
        'CombinedSVRecoVertexNoSoftLeptonCvsL',
        'CombinedSVPseudoVertexNoSoftLeptonCvsL',
        'CombinedSVNoVertexNoSoftLeptonCvsL',
        'CombinedSVRecoVertexSoftMuonCvsL',
        'CombinedSVPseudoVertexSoftMuonCvsL',
        'CombinedSVNoVertexSoftMuonCvsL',
        'CombinedSVRecoVertexSoftElectronCvsL',
        'CombinedSVPseudoVertexSoftElectronCvsL',
        'CombinedSVNoVertexSoftElectronCvsL'
    ),
    categoryVariableName = cms.string('vertexLeptonCategory'),
    charmCut = cms.double(1.5),
    correctVertexMass = cms.bool(True),
    minimumTrackWeight = cms.double(0.5),
    pseudoMultiplicityMin = cms.uint32(2),
    pseudoVertexV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.05)
    ),
    recordLabel = cms.string(''),
    trackFlip = cms.bool(False),
    trackMultiplicityMin = cms.uint32(2),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    trackPseudoSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(2.0),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip2dSig'),
    useCategories = cms.bool(True),
    useTrackWeights = cms.bool(True),
    vertexFlip = cms.bool(False)
)


process.candidateCombinedSecondaryVertexV2Computer = cms.ESProducer("CandidateCombinedSecondaryVertexESProducer",
    SoftLeptonFlip = cms.bool(False),
    calibrationRecords = cms.vstring(
        'CombinedSVIVFV2RecoVertex',
        'CombinedSVIVFV2PseudoVertex',
        'CombinedSVIVFV2NoVertex'
    ),
    categoryVariableName = cms.string('vertexCategory'),
    charmCut = cms.double(1.5),
    correctVertexMass = cms.bool(True),
    minimumTrackWeight = cms.double(0.5),
    pseudoMultiplicityMin = cms.uint32(2),
    pseudoVertexV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.05)
    ),
    recordLabel = cms.string(''),
    trackFlip = cms.bool(False),
    trackMultiplicityMin = cms.uint32(2),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    trackPseudoSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(2.0),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip2dSig'),
    useCategories = cms.bool(True),
    useTrackWeights = cms.bool(True),
    vertexFlip = cms.bool(False)
)


process.candidateGhostTrackComputer = cms.ESProducer("CandidateGhostTrackESProducer",
    calibrationRecords = cms.vstring(
        'GhostTrackRecoVertex',
        'GhostTrackPseudoVertex',
        'GhostTrackNoVertex'
    ),
    categoryVariableName = cms.string('vertexCategory'),
    charmCut = cms.double(1.5),
    minimumTrackWeight = cms.double(0.5),
    recordLabel = cms.string(''),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip2dSig'),
    useCategories = cms.bool(True)
)


process.candidateJetBProbabilityComputer = cms.ESProducer("CandidateJetBProbabilityESProducer",
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    deltaR = cms.double(-1.0),
    impactParameterType = cms.int32(0),
    max_pT = cms.double(500),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3),
    maximumDecayLength = cms.double(5.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    min_pT = cms.double(120),
    min_pT_dRcut = cms.double(0.5),
    minimumProbability = cms.double(0.005),
    numberOfBTracks = cms.uint32(4),
    trackIpSign = cms.int32(1),
    trackQualityClass = cms.string('any'),
    useVariableJTA = cms.bool(False)
)


process.candidateJetProbabilityComputer = cms.ESProducer("CandidateJetProbabilityESProducer",
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    deltaR = cms.double(0.3),
    impactParameterType = cms.int32(0),
    max_pT = cms.double(500),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3),
    maximumDecayLength = cms.double(5.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    min_pT = cms.double(120),
    min_pT_dRcut = cms.double(0.5),
    minimumProbability = cms.double(0.005),
    trackIpSign = cms.int32(1),
    trackQualityClass = cms.string('any'),
    useVariableJTA = cms.bool(False)
)


process.candidateNegativeCombinedMVAV2Computer = cms.ESProducer("CombinedMVAV2JetTagESProducer",
    gbrForestLabel = cms.string('btag_CombinedMVAv2_BDT'),
    jetTagComputers = cms.vstring(
        'candidateNegativeOnlyJetProbabilityComputer',
        'candidateNegativeOnlyJetBProbabilityComputer',
        'candidateNegativeCombinedSecondaryVertexV2Computer',
        'negativeSoftPFMuonComputer',
        'negativeSoftPFElectronComputer'
    ),
    mvaName = cms.string('bdt'),
    spectators = cms.vstring(),
    useAdaBoost = cms.bool(False),
    useCondDB = cms.bool(True),
    useGBRForest = cms.bool(True),
    variables = cms.vstring(
        'Jet_CSV',
        'Jet_CSVIVF',
        'Jet_JP',
        'Jet_JBP',
        'Jet_SoftMu',
        'Jet_SoftEl'
    ),
    weightFile = cms.FileInPath('RecoBTag/Combined/data/CombinedMVAV2_13_07_2015.weights.xml.gz')
)


process.candidateNegativeCombinedSecondaryVertexV2Computer = cms.ESProducer("CandidateCombinedSecondaryVertexESProducer",
    SoftLeptonFlip = cms.bool(False),
    calibrationRecords = cms.vstring(
        'CombinedSVIVFV2RecoVertex',
        'CombinedSVIVFV2PseudoVertex',
        'CombinedSVIVFV2NoVertex'
    ),
    categoryVariableName = cms.string('vertexCategory'),
    charmCut = cms.double(1.5),
    correctVertexMass = cms.bool(True),
    minimumTrackWeight = cms.double(0.5),
    pseudoMultiplicityMin = cms.uint32(2),
    pseudoVertexV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.05)
    ),
    recordLabel = cms.string(''),
    trackFlip = cms.bool(True),
    trackMultiplicityMin = cms.uint32(2),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    trackPseudoSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(-2.0),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip2dSig'),
    useCategories = cms.bool(True),
    useTrackWeights = cms.bool(True),
    vertexFlip = cms.bool(True)
)


process.candidateNegativeOnlyJetBProbabilityComputer = cms.ESProducer("CandidateJetBProbabilityESProducer",
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    deltaR = cms.double(-1.0),
    impactParameterType = cms.int32(0),
    max_pT = cms.double(500),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3),
    maximumDecayLength = cms.double(5.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    min_pT = cms.double(120),
    min_pT_dRcut = cms.double(0.5),
    minimumProbability = cms.double(0.005),
    numberOfBTracks = cms.uint32(4),
    trackIpSign = cms.int32(-1),
    trackQualityClass = cms.string('any'),
    useVariableJTA = cms.bool(False)
)


process.candidateNegativeOnlyJetProbabilityComputer = cms.ESProducer("CandidateJetProbabilityESProducer",
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    deltaR = cms.double(0.3),
    impactParameterType = cms.int32(0),
    max_pT = cms.double(500),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3),
    maximumDecayLength = cms.double(5.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    min_pT = cms.double(120),
    min_pT_dRcut = cms.double(0.5),
    minimumProbability = cms.double(0.005),
    trackIpSign = cms.int32(-1),
    trackQualityClass = cms.string('any'),
    useVariableJTA = cms.bool(False)
)


process.candidateNegativeTrackCounting3D2ndComputer = cms.ESProducer("CandidateNegativeTrackCountingESProducer",
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    deltaR = cms.double(-1.0),
    impactParameterType = cms.int32(0),
    max_pT = cms.double(500),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3),
    maximumDecayLength = cms.double(5.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    min_pT = cms.double(120),
    min_pT_dRcut = cms.double(0.5),
    minimumImpactParameter = cms.double(-1),
    nthTrack = cms.int32(2),
    trackQualityClass = cms.string('any'),
    useSignedImpactParameterSig = cms.bool(True),
    useVariableJTA = cms.bool(False)
)


process.candidateNegativeTrackCounting3D3rdComputer = cms.ESProducer("CandidateNegativeTrackCountingESProducer",
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    deltaR = cms.double(-1.0),
    impactParameterType = cms.int32(0),
    max_pT = cms.double(500),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3),
    maximumDecayLength = cms.double(5.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    min_pT = cms.double(120),
    min_pT_dRcut = cms.double(0.5),
    minimumImpactParameter = cms.double(-1),
    nthTrack = cms.int32(3),
    trackQualityClass = cms.string('any'),
    useSignedImpactParameterSig = cms.bool(True),
    useVariableJTA = cms.bool(False)
)


process.candidatePositiveCombinedMVAV2Computer = cms.ESProducer("CombinedMVAV2JetTagESProducer",
    gbrForestLabel = cms.string('btag_CombinedMVAv2_BDT'),
    jetTagComputers = cms.vstring(
        'candidatePositiveOnlyJetProbabilityComputer',
        'candidatePositiveOnlyJetBProbabilityComputer',
        'candidatePositiveCombinedSecondaryVertexV2Computer',
        'negativeSoftPFMuonComputer',
        'negativeSoftPFElectronComputer'
    ),
    mvaName = cms.string('bdt'),
    spectators = cms.vstring(),
    useAdaBoost = cms.bool(False),
    useCondDB = cms.bool(True),
    useGBRForest = cms.bool(True),
    variables = cms.vstring(
        'Jet_CSV',
        'Jet_CSVIVF',
        'Jet_JP',
        'Jet_JBP',
        'Jet_SoftMu',
        'Jet_SoftEl'
    ),
    weightFile = cms.FileInPath('RecoBTag/Combined/data/CombinedMVAV2_13_07_2015.weights.xml.gz')
)


process.candidatePositiveCombinedSecondaryVertexV2Computer = cms.ESProducer("CandidateCombinedSecondaryVertexESProducer",
    SoftLeptonFlip = cms.bool(False),
    calibrationRecords = cms.vstring(
        'CombinedSVIVFV2RecoVertex',
        'CombinedSVIVFV2PseudoVertex',
        'CombinedSVIVFV2NoVertex'
    ),
    categoryVariableName = cms.string('vertexCategory'),
    charmCut = cms.double(1.5),
    correctVertexMass = cms.bool(True),
    minimumTrackWeight = cms.double(0.5),
    pseudoMultiplicityMin = cms.uint32(2),
    pseudoVertexV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.05)
    ),
    recordLabel = cms.string(''),
    trackFlip = cms.bool(False),
    trackMultiplicityMin = cms.uint32(2),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    trackPseudoSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(2.0),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(0),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(0),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip2dSig'),
    useCategories = cms.bool(True),
    useTrackWeights = cms.bool(True),
    vertexFlip = cms.bool(False)
)


process.candidatePositiveOnlyJetBProbabilityComputer = cms.ESProducer("CandidateJetBProbabilityESProducer",
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    deltaR = cms.double(-1.0),
    impactParameterType = cms.int32(0),
    max_pT = cms.double(500),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3),
    maximumDecayLength = cms.double(5.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    min_pT = cms.double(120),
    min_pT_dRcut = cms.double(0.5),
    minimumProbability = cms.double(0.005),
    numberOfBTracks = cms.uint32(4),
    trackIpSign = cms.int32(1),
    trackQualityClass = cms.string('any'),
    useVariableJTA = cms.bool(False)
)


process.candidatePositiveOnlyJetProbabilityComputer = cms.ESProducer("CandidateJetProbabilityESProducer",
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    deltaR = cms.double(0.3),
    impactParameterType = cms.int32(0),
    max_pT = cms.double(500),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3),
    maximumDecayLength = cms.double(5.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    min_pT = cms.double(120),
    min_pT_dRcut = cms.double(0.5),
    minimumProbability = cms.double(0.005),
    trackIpSign = cms.int32(1),
    trackQualityClass = cms.string('any'),
    useVariableJTA = cms.bool(False)
)


process.candidateSimpleSecondaryVertex2TrkComputer = cms.ESProducer("CandidateSimpleSecondaryVertexESProducer",
    minTracks = cms.uint32(2),
    unBoost = cms.bool(False),
    use3d = cms.bool(True),
    useSignificance = cms.bool(True)
)


process.candidateSimpleSecondaryVertex3TrkComputer = cms.ESProducer("CandidateSimpleSecondaryVertexESProducer",
    minTracks = cms.uint32(3),
    unBoost = cms.bool(False),
    use3d = cms.bool(True),
    useSignificance = cms.bool(True)
)


process.candidateTrackCounting3D2ndComputer = cms.ESProducer("CandidateTrackCountingESProducer",
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    deltaR = cms.double(-1.0),
    impactParameterType = cms.int32(0),
    max_pT = cms.double(500),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3),
    maximumDecayLength = cms.double(5.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    min_pT = cms.double(120),
    min_pT_dRcut = cms.double(0.5),
    minimumImpactParameter = cms.double(-1),
    nthTrack = cms.int32(2),
    trackQualityClass = cms.string('any'),
    useSignedImpactParameterSig = cms.bool(True),
    useVariableJTA = cms.bool(False)
)


process.candidateTrackCounting3D3rdComputer = cms.ESProducer("CandidateTrackCountingESProducer",
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    deltaR = cms.double(-1.0),
    impactParameterType = cms.int32(0),
    max_pT = cms.double(500),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3),
    maximumDecayLength = cms.double(5.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    min_pT = cms.double(120),
    min_pT_dRcut = cms.double(0.5),
    minimumImpactParameter = cms.double(-1),
    nthTrack = cms.int32(3),
    trackQualityClass = cms.string('any'),
    useSignedImpactParameterSig = cms.bool(True),
    useVariableJTA = cms.bool(False)
)


process.charmTagsComputerCvsB = cms.ESProducer("CharmTaggerESProducer",
    computer = cms.ESInputTag("combinedSecondaryVertexSoftLeptonComputer",""),
    defaultValueNoTracks = cms.bool(True),
    gbrForestLabel = cms.string(''),
    mvaName = cms.string('BDT'),
    slComputerCfg = cms.PSet(
        SoftLeptonFlip = cms.bool(False),
        calibrationRecords = cms.vstring(
            'CombinedSVRecoVertexNoSoftLepton',
            'CombinedSVPseudoVertexNoSoftLepton',
            'CombinedSVNoVertexNoSoftLepton',
            'CombinedSVRecoVertexSoftMuon',
            'CombinedSVPseudoVertexSoftMuon',
            'CombinedSVNoVertexSoftMuon',
            'CombinedSVRecoVertexSoftElectron',
            'CombinedSVPseudoVertexSoftElectron',
            'CombinedSVNoVertexSoftElectron'
        ),
        categoryVariableName = cms.string('vertexLeptonCategory'),
        charmCut = cms.double(1.5),
        correctVertexMass = cms.bool(True),
        minimumTrackWeight = cms.double(0.5),
        pseudoMultiplicityMin = cms.uint32(2),
        pseudoVertexV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        recordLabel = cms.string(''),
        trackFlip = cms.bool(False),
        trackMultiplicityMin = cms.uint32(2),
        trackPairV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.03)
        ),
        trackPseudoSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(2.0),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(-99999.9),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSort = cms.string('sip2dSig'),
        useCategories = cms.bool(True),
        useTrackWeights = cms.bool(True),
        vertexFlip = cms.bool(False)
    ),
    tagInfos = cms.VInputTag(cms.InputTag("pfImpactParameterTagInfos"), cms.InputTag("pfInclusiveSecondaryVertexFinderCvsLTagInfos"), cms.InputTag("softPFMuonsTagInfos"), cms.InputTag("softPFElectronsTagInfos")),
    useAdaBoost = cms.bool(False),
    useCondDB = cms.bool(False),
    useGBRForest = cms.bool(True),
    variables = cms.VPSet(
        cms.PSet(
            default = cms.double(-1),
            name = cms.string('vertexLeptonCategory'),
            taggingVarName = cms.string('vertexLeptonCategory')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(0),
            name = cms.string('trackSip2dSig_0'),
            taggingVarName = cms.string('trackSip2dSig')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(1),
            name = cms.string('trackSip2dSig_1'),
            taggingVarName = cms.string('trackSip2dSig')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(0),
            name = cms.string('trackSip3dSig_0'),
            taggingVarName = cms.string('trackSip3dSig')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(1),
            name = cms.string('trackSip3dSig_1'),
            taggingVarName = cms.string('trackSip3dSig')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('trackPtRel_0'),
            taggingVarName = cms.string('trackPtRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('trackPtRel_1'),
            taggingVarName = cms.string('trackPtRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('trackPPar_0'),
            taggingVarName = cms.string('trackPPar')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('trackPPar_1'),
            taggingVarName = cms.string('trackPPar')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('trackEtaRel_0'),
            taggingVarName = cms.string('trackEtaRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('trackEtaRel_1'),
            taggingVarName = cms.string('trackEtaRel')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackDeltaR_0'),
            taggingVarName = cms.string('trackDeltaR')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackDeltaR_1'),
            taggingVarName = cms.string('trackDeltaR')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackPtRatio_0'),
            taggingVarName = cms.string('trackPtRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackPtRatio_1'),
            taggingVarName = cms.string('trackPtRatio')
        ),
        cms.PSet(
            default = cms.double(1.1),
            idx = cms.int32(0),
            name = cms.string('trackPParRatio_0'),
            taggingVarName = cms.string('trackPParRatio')
        ),
        cms.PSet(
            default = cms.double(1.1),
            idx = cms.int32(1),
            name = cms.string('trackPParRatio_1'),
            taggingVarName = cms.string('trackPParRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackJetDist_0'),
            taggingVarName = cms.string('trackJetDist')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackJetDist_1'),
            taggingVarName = cms.string('trackJetDist')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackDecayLenVal_0'),
            taggingVarName = cms.string('trackDecayLenVal')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackDecayLenVal_1'),
            taggingVarName = cms.string('trackDecayLenVal')
        ),
        cms.PSet(
            default = cms.double(0),
            name = cms.string('jetNSecondaryVertices'),
            taggingVarName = cms.string('jetNSecondaryVertices')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            name = cms.string('jetNTracks'),
            taggingVarName = cms.string('jetNTracks')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            name = cms.string('trackSumJetEtRatio'),
            taggingVarName = cms.string('trackSumJetEtRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            name = cms.string('trackSumJetDeltaR'),
            taggingVarName = cms.string('trackSumJetDeltaR')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('vertexMass_0'),
            taggingVarName = cms.string('vertexMass')
        ),
        cms.PSet(
            default = cms.double(-10),
            idx = cms.int32(0),
            name = cms.string('vertexEnergyRatio_0'),
            taggingVarName = cms.string('vertexEnergyRatio')
        ),
        cms.PSet(
            default = cms.double(-999),
            idx = cms.int32(0),
            name = cms.string('trackSip2dSigAboveCharm_0'),
            taggingVarName = cms.string('trackSip2dSigAboveCharm')
        ),
        cms.PSet(
            default = cms.double(-999),
            idx = cms.int32(0),
            name = cms.string('trackSip3dSigAboveCharm_0'),
            taggingVarName = cms.string('trackSip3dSigAboveCharm')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('flightDistance2dSig_0'),
            taggingVarName = cms.string('flightDistance2dSig')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('flightDistance3dSig_0'),
            taggingVarName = cms.string('flightDistance3dSig')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('vertexJetDeltaR_0'),
            taggingVarName = cms.string('vertexJetDeltaR')
        ),
        cms.PSet(
            default = cms.double(0),
            idx = cms.int32(0),
            name = cms.string('vertexNTracks_0'),
            taggingVarName = cms.string('vertexNTracks')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('massVertexEnergyFraction_0'),
            taggingVarName = cms.string('massVertexEnergyFraction')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('vertexBoostOverSqrtJetPt_0'),
            taggingVarName = cms.string('vertexBoostOverSqrtJetPt')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonPtRel_0'),
            taggingVarName = cms.string('leptonPtRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonPtRel_1'),
            taggingVarName = cms.string('leptonPtRel')
        ),
        cms.PSet(
            default = cms.double(-10000),
            idx = cms.int32(0),
            name = cms.string('leptonSip3d_0'),
            taggingVarName = cms.string('leptonSip3d')
        ),
        cms.PSet(
            default = cms.double(-10000),
            idx = cms.int32(1),
            name = cms.string('leptonSip3d_1'),
            taggingVarName = cms.string('leptonSip3d')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonDeltaR_0'),
            taggingVarName = cms.string('leptonDeltaR')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonDeltaR_1'),
            taggingVarName = cms.string('leptonDeltaR')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonRatioRel_0'),
            taggingVarName = cms.string('leptonRatioRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonRatioRel_1'),
            taggingVarName = cms.string('leptonRatioRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonEtaRel_0'),
            taggingVarName = cms.string('leptonEtaRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonEtaRel_1'),
            taggingVarName = cms.string('leptonEtaRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonRatio_0'),
            taggingVarName = cms.string('leptonRatio')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonRatio_1'),
            taggingVarName = cms.string('leptonRatio')
        )
    ),
    weightFile = cms.FileInPath('RecoBTag/CTagging/data/c_vs_b_PhaseI.xml')
)


process.charmTagsComputerCvsL = cms.ESProducer("CharmTaggerESProducer",
    computer = cms.ESInputTag("combinedSecondaryVertexSoftLeptonComputer",""),
    defaultValueNoTracks = cms.bool(True),
    gbrForestLabel = cms.string(''),
    mvaName = cms.string('BDT'),
    slComputerCfg = cms.PSet(
        SoftLeptonFlip = cms.bool(False),
        calibrationRecords = cms.vstring(
            'CombinedSVRecoVertexNoSoftLepton',
            'CombinedSVPseudoVertexNoSoftLepton',
            'CombinedSVNoVertexNoSoftLepton',
            'CombinedSVRecoVertexSoftMuon',
            'CombinedSVPseudoVertexSoftMuon',
            'CombinedSVNoVertexSoftMuon',
            'CombinedSVRecoVertexSoftElectron',
            'CombinedSVPseudoVertexSoftElectron',
            'CombinedSVNoVertexSoftElectron'
        ),
        categoryVariableName = cms.string('vertexLeptonCategory'),
        charmCut = cms.double(1.5),
        correctVertexMass = cms.bool(True),
        minimumTrackWeight = cms.double(0.5),
        pseudoMultiplicityMin = cms.uint32(2),
        pseudoVertexV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        recordLabel = cms.string(''),
        trackFlip = cms.bool(False),
        trackMultiplicityMin = cms.uint32(2),
        trackPairV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.03)
        ),
        trackPseudoSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(2.0),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(-99999.9),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSort = cms.string('sip2dSig'),
        useCategories = cms.bool(True),
        useTrackWeights = cms.bool(True),
        vertexFlip = cms.bool(False)
    ),
    tagInfos = cms.VInputTag(cms.InputTag("pfImpactParameterTagInfos"), cms.InputTag("pfInclusiveSecondaryVertexFinderCvsLTagInfos"), cms.InputTag("softPFMuonsTagInfos"), cms.InputTag("softPFElectronsTagInfos")),
    useAdaBoost = cms.bool(False),
    useCondDB = cms.bool(False),
    useGBRForest = cms.bool(True),
    variables = cms.VPSet(
        cms.PSet(
            default = cms.double(-1),
            name = cms.string('vertexLeptonCategory'),
            taggingVarName = cms.string('vertexLeptonCategory')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(0),
            name = cms.string('trackSip2dSig_0'),
            taggingVarName = cms.string('trackSip2dSig')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(1),
            name = cms.string('trackSip2dSig_1'),
            taggingVarName = cms.string('trackSip2dSig')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(0),
            name = cms.string('trackSip3dSig_0'),
            taggingVarName = cms.string('trackSip3dSig')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(1),
            name = cms.string('trackSip3dSig_1'),
            taggingVarName = cms.string('trackSip3dSig')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('trackPtRel_0'),
            taggingVarName = cms.string('trackPtRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('trackPtRel_1'),
            taggingVarName = cms.string('trackPtRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('trackPPar_0'),
            taggingVarName = cms.string('trackPPar')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('trackPPar_1'),
            taggingVarName = cms.string('trackPPar')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('trackEtaRel_0'),
            taggingVarName = cms.string('trackEtaRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('trackEtaRel_1'),
            taggingVarName = cms.string('trackEtaRel')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackDeltaR_0'),
            taggingVarName = cms.string('trackDeltaR')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackDeltaR_1'),
            taggingVarName = cms.string('trackDeltaR')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackPtRatio_0'),
            taggingVarName = cms.string('trackPtRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackPtRatio_1'),
            taggingVarName = cms.string('trackPtRatio')
        ),
        cms.PSet(
            default = cms.double(1.1),
            idx = cms.int32(0),
            name = cms.string('trackPParRatio_0'),
            taggingVarName = cms.string('trackPParRatio')
        ),
        cms.PSet(
            default = cms.double(1.1),
            idx = cms.int32(1),
            name = cms.string('trackPParRatio_1'),
            taggingVarName = cms.string('trackPParRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackJetDist_0'),
            taggingVarName = cms.string('trackJetDist')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackJetDist_1'),
            taggingVarName = cms.string('trackJetDist')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackDecayLenVal_0'),
            taggingVarName = cms.string('trackDecayLenVal')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackDecayLenVal_1'),
            taggingVarName = cms.string('trackDecayLenVal')
        ),
        cms.PSet(
            default = cms.double(0),
            name = cms.string('jetNSecondaryVertices'),
            taggingVarName = cms.string('jetNSecondaryVertices')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            name = cms.string('jetNTracks'),
            taggingVarName = cms.string('jetNTracks')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            name = cms.string('trackSumJetEtRatio'),
            taggingVarName = cms.string('trackSumJetEtRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            name = cms.string('trackSumJetDeltaR'),
            taggingVarName = cms.string('trackSumJetDeltaR')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('vertexMass_0'),
            taggingVarName = cms.string('vertexMass')
        ),
        cms.PSet(
            default = cms.double(-10),
            idx = cms.int32(0),
            name = cms.string('vertexEnergyRatio_0'),
            taggingVarName = cms.string('vertexEnergyRatio')
        ),
        cms.PSet(
            default = cms.double(-999),
            idx = cms.int32(0),
            name = cms.string('trackSip2dSigAboveCharm_0'),
            taggingVarName = cms.string('trackSip2dSigAboveCharm')
        ),
        cms.PSet(
            default = cms.double(-999),
            idx = cms.int32(0),
            name = cms.string('trackSip3dSigAboveCharm_0'),
            taggingVarName = cms.string('trackSip3dSigAboveCharm')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('flightDistance2dSig_0'),
            taggingVarName = cms.string('flightDistance2dSig')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('flightDistance3dSig_0'),
            taggingVarName = cms.string('flightDistance3dSig')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('vertexJetDeltaR_0'),
            taggingVarName = cms.string('vertexJetDeltaR')
        ),
        cms.PSet(
            default = cms.double(0),
            idx = cms.int32(0),
            name = cms.string('vertexNTracks_0'),
            taggingVarName = cms.string('vertexNTracks')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('massVertexEnergyFraction_0'),
            taggingVarName = cms.string('massVertexEnergyFraction')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('vertexBoostOverSqrtJetPt_0'),
            taggingVarName = cms.string('vertexBoostOverSqrtJetPt')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonPtRel_0'),
            taggingVarName = cms.string('leptonPtRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonPtRel_1'),
            taggingVarName = cms.string('leptonPtRel')
        ),
        cms.PSet(
            default = cms.double(-10000),
            idx = cms.int32(0),
            name = cms.string('leptonSip3d_0'),
            taggingVarName = cms.string('leptonSip3d')
        ),
        cms.PSet(
            default = cms.double(-10000),
            idx = cms.int32(1),
            name = cms.string('leptonSip3d_1'),
            taggingVarName = cms.string('leptonSip3d')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonDeltaR_0'),
            taggingVarName = cms.string('leptonDeltaR')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonDeltaR_1'),
            taggingVarName = cms.string('leptonDeltaR')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonRatioRel_0'),
            taggingVarName = cms.string('leptonRatioRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonRatioRel_1'),
            taggingVarName = cms.string('leptonRatioRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonEtaRel_0'),
            taggingVarName = cms.string('leptonEtaRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonEtaRel_1'),
            taggingVarName = cms.string('leptonEtaRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonRatio_0'),
            taggingVarName = cms.string('leptonRatio')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonRatio_1'),
            taggingVarName = cms.string('leptonRatio')
        )
    ),
    weightFile = cms.FileInPath('RecoBTag/CTagging/data/c_vs_udsg_PhaseI.xml')
)


process.charmTagsNegativeComputerCvsB = cms.ESProducer("CharmTaggerESProducer",
    computer = cms.ESInputTag("combinedSecondaryVertexSoftLeptonComputer",""),
    defaultValueNoTracks = cms.bool(True),
    gbrForestLabel = cms.string(''),
    mvaName = cms.string('BDT'),
    slComputerCfg = cms.PSet(
        SoftLeptonFlip = cms.bool(True),
        calibrationRecords = cms.vstring(
            'CombinedSVRecoVertexNoSoftLepton',
            'CombinedSVPseudoVertexNoSoftLepton',
            'CombinedSVNoVertexNoSoftLepton',
            'CombinedSVRecoVertexSoftMuon',
            'CombinedSVPseudoVertexSoftMuon',
            'CombinedSVNoVertexSoftMuon',
            'CombinedSVRecoVertexSoftElectron',
            'CombinedSVPseudoVertexSoftElectron',
            'CombinedSVNoVertexSoftElectron'
        ),
        categoryVariableName = cms.string('vertexLeptonCategory'),
        charmCut = cms.double(1.5),
        correctVertexMass = cms.bool(True),
        minimumTrackWeight = cms.double(0.5),
        pseudoMultiplicityMin = cms.uint32(2),
        pseudoVertexV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        recordLabel = cms.string(''),
        trackFlip = cms.bool(True),
        trackMultiplicityMin = cms.uint32(2),
        trackPairV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.03)
        ),
        trackPseudoSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(-2.0),
            sip2dSigMin = cms.double(-99999.9),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(0),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(-99999.9),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(0),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSort = cms.string('sip2dSig'),
        useCategories = cms.bool(True),
        useTrackWeights = cms.bool(True),
        vertexFlip = cms.bool(True)
    ),
    tagInfos = cms.VInputTag(cms.InputTag("pfImpactParameterTagInfos"), cms.InputTag("pfInclusiveSecondaryVertexFinderCvsLTagInfos"), cms.InputTag("softPFMuonsTagInfos"), cms.InputTag("softPFElectronsTagInfos")),
    useAdaBoost = cms.bool(False),
    useCondDB = cms.bool(False),
    useGBRForest = cms.bool(True),
    variables = cms.VPSet(
        cms.PSet(
            default = cms.double(-1),
            name = cms.string('vertexLeptonCategory'),
            taggingVarName = cms.string('vertexLeptonCategory')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(0),
            name = cms.string('trackSip2dSig_0'),
            taggingVarName = cms.string('trackSip2dSig')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(1),
            name = cms.string('trackSip2dSig_1'),
            taggingVarName = cms.string('trackSip2dSig')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(0),
            name = cms.string('trackSip3dSig_0'),
            taggingVarName = cms.string('trackSip3dSig')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(1),
            name = cms.string('trackSip3dSig_1'),
            taggingVarName = cms.string('trackSip3dSig')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('trackPtRel_0'),
            taggingVarName = cms.string('trackPtRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('trackPtRel_1'),
            taggingVarName = cms.string('trackPtRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('trackPPar_0'),
            taggingVarName = cms.string('trackPPar')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('trackPPar_1'),
            taggingVarName = cms.string('trackPPar')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('trackEtaRel_0'),
            taggingVarName = cms.string('trackEtaRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('trackEtaRel_1'),
            taggingVarName = cms.string('trackEtaRel')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackDeltaR_0'),
            taggingVarName = cms.string('trackDeltaR')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackDeltaR_1'),
            taggingVarName = cms.string('trackDeltaR')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackPtRatio_0'),
            taggingVarName = cms.string('trackPtRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackPtRatio_1'),
            taggingVarName = cms.string('trackPtRatio')
        ),
        cms.PSet(
            default = cms.double(1.1),
            idx = cms.int32(0),
            name = cms.string('trackPParRatio_0'),
            taggingVarName = cms.string('trackPParRatio')
        ),
        cms.PSet(
            default = cms.double(1.1),
            idx = cms.int32(1),
            name = cms.string('trackPParRatio_1'),
            taggingVarName = cms.string('trackPParRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackJetDist_0'),
            taggingVarName = cms.string('trackJetDist')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackJetDist_1'),
            taggingVarName = cms.string('trackJetDist')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackDecayLenVal_0'),
            taggingVarName = cms.string('trackDecayLenVal')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackDecayLenVal_1'),
            taggingVarName = cms.string('trackDecayLenVal')
        ),
        cms.PSet(
            default = cms.double(0),
            name = cms.string('jetNSecondaryVertices'),
            taggingVarName = cms.string('jetNSecondaryVertices')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            name = cms.string('jetNTracks'),
            taggingVarName = cms.string('jetNTracks')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            name = cms.string('trackSumJetEtRatio'),
            taggingVarName = cms.string('trackSumJetEtRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            name = cms.string('trackSumJetDeltaR'),
            taggingVarName = cms.string('trackSumJetDeltaR')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('vertexMass_0'),
            taggingVarName = cms.string('vertexMass')
        ),
        cms.PSet(
            default = cms.double(-10),
            idx = cms.int32(0),
            name = cms.string('vertexEnergyRatio_0'),
            taggingVarName = cms.string('vertexEnergyRatio')
        ),
        cms.PSet(
            default = cms.double(-999),
            idx = cms.int32(0),
            name = cms.string('trackSip2dSigAboveCharm_0'),
            taggingVarName = cms.string('trackSip2dSigAboveCharm')
        ),
        cms.PSet(
            default = cms.double(-999),
            idx = cms.int32(0),
            name = cms.string('trackSip3dSigAboveCharm_0'),
            taggingVarName = cms.string('trackSip3dSigAboveCharm')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('flightDistance2dSig_0'),
            taggingVarName = cms.string('flightDistance2dSig')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('flightDistance3dSig_0'),
            taggingVarName = cms.string('flightDistance3dSig')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('vertexJetDeltaR_0'),
            taggingVarName = cms.string('vertexJetDeltaR')
        ),
        cms.PSet(
            default = cms.double(0),
            idx = cms.int32(0),
            name = cms.string('vertexNTracks_0'),
            taggingVarName = cms.string('vertexNTracks')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('massVertexEnergyFraction_0'),
            taggingVarName = cms.string('massVertexEnergyFraction')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('vertexBoostOverSqrtJetPt_0'),
            taggingVarName = cms.string('vertexBoostOverSqrtJetPt')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonPtRel_0'),
            taggingVarName = cms.string('leptonPtRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonPtRel_1'),
            taggingVarName = cms.string('leptonPtRel')
        ),
        cms.PSet(
            default = cms.double(-10000),
            idx = cms.int32(0),
            name = cms.string('leptonSip3d_0'),
            taggingVarName = cms.string('leptonSip3d')
        ),
        cms.PSet(
            default = cms.double(-10000),
            idx = cms.int32(1),
            name = cms.string('leptonSip3d_1'),
            taggingVarName = cms.string('leptonSip3d')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonDeltaR_0'),
            taggingVarName = cms.string('leptonDeltaR')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonDeltaR_1'),
            taggingVarName = cms.string('leptonDeltaR')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonRatioRel_0'),
            taggingVarName = cms.string('leptonRatioRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonRatioRel_1'),
            taggingVarName = cms.string('leptonRatioRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonEtaRel_0'),
            taggingVarName = cms.string('leptonEtaRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonEtaRel_1'),
            taggingVarName = cms.string('leptonEtaRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonRatio_0'),
            taggingVarName = cms.string('leptonRatio')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonRatio_1'),
            taggingVarName = cms.string('leptonRatio')
        )
    ),
    weightFile = cms.FileInPath('RecoBTag/CTagging/data/c_vs_b_PhaseI.xml')
)


process.charmTagsNegativeComputerCvsL = cms.ESProducer("CharmTaggerESProducer",
    computer = cms.ESInputTag("combinedSecondaryVertexSoftLeptonComputer",""),
    defaultValueNoTracks = cms.bool(True),
    gbrForestLabel = cms.string(''),
    mvaName = cms.string('BDT'),
    slComputerCfg = cms.PSet(
        SoftLeptonFlip = cms.bool(True),
        calibrationRecords = cms.vstring(
            'CombinedSVRecoVertexNoSoftLepton',
            'CombinedSVPseudoVertexNoSoftLepton',
            'CombinedSVNoVertexNoSoftLepton',
            'CombinedSVRecoVertexSoftMuon',
            'CombinedSVPseudoVertexSoftMuon',
            'CombinedSVNoVertexSoftMuon',
            'CombinedSVRecoVertexSoftElectron',
            'CombinedSVPseudoVertexSoftElectron',
            'CombinedSVNoVertexSoftElectron'
        ),
        categoryVariableName = cms.string('vertexLeptonCategory'),
        charmCut = cms.double(1.5),
        correctVertexMass = cms.bool(True),
        minimumTrackWeight = cms.double(0.5),
        pseudoMultiplicityMin = cms.uint32(2),
        pseudoVertexV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        recordLabel = cms.string(''),
        trackFlip = cms.bool(True),
        trackMultiplicityMin = cms.uint32(2),
        trackPairV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.03)
        ),
        trackPseudoSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(-2.0),
            sip2dSigMin = cms.double(-99999.9),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(0),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(-99999.9),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(0),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSort = cms.string('sip2dSig'),
        useCategories = cms.bool(True),
        useTrackWeights = cms.bool(True),
        vertexFlip = cms.bool(True)
    ),
    tagInfos = cms.VInputTag(cms.InputTag("pfImpactParameterTagInfos"), cms.InputTag("pfInclusiveSecondaryVertexFinderCvsLTagInfos"), cms.InputTag("softPFMuonsTagInfos"), cms.InputTag("softPFElectronsTagInfos")),
    useAdaBoost = cms.bool(False),
    useCondDB = cms.bool(False),
    useGBRForest = cms.bool(True),
    variables = cms.VPSet(
        cms.PSet(
            default = cms.double(-1),
            name = cms.string('vertexLeptonCategory'),
            taggingVarName = cms.string('vertexLeptonCategory')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(0),
            name = cms.string('trackSip2dSig_0'),
            taggingVarName = cms.string('trackSip2dSig')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(1),
            name = cms.string('trackSip2dSig_1'),
            taggingVarName = cms.string('trackSip2dSig')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(0),
            name = cms.string('trackSip3dSig_0'),
            taggingVarName = cms.string('trackSip3dSig')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(1),
            name = cms.string('trackSip3dSig_1'),
            taggingVarName = cms.string('trackSip3dSig')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('trackPtRel_0'),
            taggingVarName = cms.string('trackPtRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('trackPtRel_1'),
            taggingVarName = cms.string('trackPtRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('trackPPar_0'),
            taggingVarName = cms.string('trackPPar')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('trackPPar_1'),
            taggingVarName = cms.string('trackPPar')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('trackEtaRel_0'),
            taggingVarName = cms.string('trackEtaRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('trackEtaRel_1'),
            taggingVarName = cms.string('trackEtaRel')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackDeltaR_0'),
            taggingVarName = cms.string('trackDeltaR')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackDeltaR_1'),
            taggingVarName = cms.string('trackDeltaR')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackPtRatio_0'),
            taggingVarName = cms.string('trackPtRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackPtRatio_1'),
            taggingVarName = cms.string('trackPtRatio')
        ),
        cms.PSet(
            default = cms.double(1.1),
            idx = cms.int32(0),
            name = cms.string('trackPParRatio_0'),
            taggingVarName = cms.string('trackPParRatio')
        ),
        cms.PSet(
            default = cms.double(1.1),
            idx = cms.int32(1),
            name = cms.string('trackPParRatio_1'),
            taggingVarName = cms.string('trackPParRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackJetDist_0'),
            taggingVarName = cms.string('trackJetDist')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackJetDist_1'),
            taggingVarName = cms.string('trackJetDist')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackDecayLenVal_0'),
            taggingVarName = cms.string('trackDecayLenVal')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackDecayLenVal_1'),
            taggingVarName = cms.string('trackDecayLenVal')
        ),
        cms.PSet(
            default = cms.double(0),
            name = cms.string('jetNSecondaryVertices'),
            taggingVarName = cms.string('jetNSecondaryVertices')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            name = cms.string('jetNTracks'),
            taggingVarName = cms.string('jetNTracks')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            name = cms.string('trackSumJetEtRatio'),
            taggingVarName = cms.string('trackSumJetEtRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            name = cms.string('trackSumJetDeltaR'),
            taggingVarName = cms.string('trackSumJetDeltaR')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('vertexMass_0'),
            taggingVarName = cms.string('vertexMass')
        ),
        cms.PSet(
            default = cms.double(-10),
            idx = cms.int32(0),
            name = cms.string('vertexEnergyRatio_0'),
            taggingVarName = cms.string('vertexEnergyRatio')
        ),
        cms.PSet(
            default = cms.double(-999),
            idx = cms.int32(0),
            name = cms.string('trackSip2dSigAboveCharm_0'),
            taggingVarName = cms.string('trackSip2dSigAboveCharm')
        ),
        cms.PSet(
            default = cms.double(-999),
            idx = cms.int32(0),
            name = cms.string('trackSip3dSigAboveCharm_0'),
            taggingVarName = cms.string('trackSip3dSigAboveCharm')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('flightDistance2dSig_0'),
            taggingVarName = cms.string('flightDistance2dSig')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('flightDistance3dSig_0'),
            taggingVarName = cms.string('flightDistance3dSig')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('vertexJetDeltaR_0'),
            taggingVarName = cms.string('vertexJetDeltaR')
        ),
        cms.PSet(
            default = cms.double(0),
            idx = cms.int32(0),
            name = cms.string('vertexNTracks_0'),
            taggingVarName = cms.string('vertexNTracks')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('massVertexEnergyFraction_0'),
            taggingVarName = cms.string('massVertexEnergyFraction')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('vertexBoostOverSqrtJetPt_0'),
            taggingVarName = cms.string('vertexBoostOverSqrtJetPt')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonPtRel_0'),
            taggingVarName = cms.string('leptonPtRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonPtRel_1'),
            taggingVarName = cms.string('leptonPtRel')
        ),
        cms.PSet(
            default = cms.double(-10000),
            idx = cms.int32(0),
            name = cms.string('leptonSip3d_0'),
            taggingVarName = cms.string('leptonSip3d')
        ),
        cms.PSet(
            default = cms.double(-10000),
            idx = cms.int32(1),
            name = cms.string('leptonSip3d_1'),
            taggingVarName = cms.string('leptonSip3d')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonDeltaR_0'),
            taggingVarName = cms.string('leptonDeltaR')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonDeltaR_1'),
            taggingVarName = cms.string('leptonDeltaR')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonRatioRel_0'),
            taggingVarName = cms.string('leptonRatioRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonRatioRel_1'),
            taggingVarName = cms.string('leptonRatioRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonEtaRel_0'),
            taggingVarName = cms.string('leptonEtaRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonEtaRel_1'),
            taggingVarName = cms.string('leptonEtaRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonRatio_0'),
            taggingVarName = cms.string('leptonRatio')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonRatio_1'),
            taggingVarName = cms.string('leptonRatio')
        )
    ),
    weightFile = cms.FileInPath('RecoBTag/CTagging/data/c_vs_udsg_PhaseI.xml')
)


process.charmTagsPositiveComputerCvsB = cms.ESProducer("CharmTaggerESProducer",
    computer = cms.ESInputTag("combinedSecondaryVertexSoftLeptonComputer",""),
    defaultValueNoTracks = cms.bool(True),
    gbrForestLabel = cms.string(''),
    mvaName = cms.string('BDT'),
    slComputerCfg = cms.PSet(
        SoftLeptonFlip = cms.bool(False),
        calibrationRecords = cms.vstring(
            'CombinedSVRecoVertexNoSoftLepton',
            'CombinedSVPseudoVertexNoSoftLepton',
            'CombinedSVNoVertexNoSoftLepton',
            'CombinedSVRecoVertexSoftMuon',
            'CombinedSVPseudoVertexSoftMuon',
            'CombinedSVNoVertexSoftMuon',
            'CombinedSVRecoVertexSoftElectron',
            'CombinedSVPseudoVertexSoftElectron',
            'CombinedSVNoVertexSoftElectron'
        ),
        categoryVariableName = cms.string('vertexLeptonCategory'),
        charmCut = cms.double(1.5),
        correctVertexMass = cms.bool(True),
        minimumTrackWeight = cms.double(0.5),
        pseudoMultiplicityMin = cms.uint32(2),
        pseudoVertexV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        recordLabel = cms.string(''),
        trackFlip = cms.bool(False),
        trackMultiplicityMin = cms.uint32(2),
        trackPairV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.03)
        ),
        trackPseudoSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(2.0),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(0),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(-99999.9),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(0),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSort = cms.string('sip2dSig'),
        useCategories = cms.bool(True),
        useTrackWeights = cms.bool(True),
        vertexFlip = cms.bool(False)
    ),
    tagInfos = cms.VInputTag(cms.InputTag("pfImpactParameterTagInfos"), cms.InputTag("pfInclusiveSecondaryVertexFinderCvsLTagInfos"), cms.InputTag("softPFMuonsTagInfos"), cms.InputTag("softPFElectronsTagInfos")),
    useAdaBoost = cms.bool(False),
    useCondDB = cms.bool(False),
    useGBRForest = cms.bool(True),
    variables = cms.VPSet(
        cms.PSet(
            default = cms.double(-1),
            name = cms.string('vertexLeptonCategory'),
            taggingVarName = cms.string('vertexLeptonCategory')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(0),
            name = cms.string('trackSip2dSig_0'),
            taggingVarName = cms.string('trackSip2dSig')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(1),
            name = cms.string('trackSip2dSig_1'),
            taggingVarName = cms.string('trackSip2dSig')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(0),
            name = cms.string('trackSip3dSig_0'),
            taggingVarName = cms.string('trackSip3dSig')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(1),
            name = cms.string('trackSip3dSig_1'),
            taggingVarName = cms.string('trackSip3dSig')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('trackPtRel_0'),
            taggingVarName = cms.string('trackPtRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('trackPtRel_1'),
            taggingVarName = cms.string('trackPtRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('trackPPar_0'),
            taggingVarName = cms.string('trackPPar')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('trackPPar_1'),
            taggingVarName = cms.string('trackPPar')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('trackEtaRel_0'),
            taggingVarName = cms.string('trackEtaRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('trackEtaRel_1'),
            taggingVarName = cms.string('trackEtaRel')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackDeltaR_0'),
            taggingVarName = cms.string('trackDeltaR')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackDeltaR_1'),
            taggingVarName = cms.string('trackDeltaR')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackPtRatio_0'),
            taggingVarName = cms.string('trackPtRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackPtRatio_1'),
            taggingVarName = cms.string('trackPtRatio')
        ),
        cms.PSet(
            default = cms.double(1.1),
            idx = cms.int32(0),
            name = cms.string('trackPParRatio_0'),
            taggingVarName = cms.string('trackPParRatio')
        ),
        cms.PSet(
            default = cms.double(1.1),
            idx = cms.int32(1),
            name = cms.string('trackPParRatio_1'),
            taggingVarName = cms.string('trackPParRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackJetDist_0'),
            taggingVarName = cms.string('trackJetDist')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackJetDist_1'),
            taggingVarName = cms.string('trackJetDist')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackDecayLenVal_0'),
            taggingVarName = cms.string('trackDecayLenVal')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackDecayLenVal_1'),
            taggingVarName = cms.string('trackDecayLenVal')
        ),
        cms.PSet(
            default = cms.double(0),
            name = cms.string('jetNSecondaryVertices'),
            taggingVarName = cms.string('jetNSecondaryVertices')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            name = cms.string('jetNTracks'),
            taggingVarName = cms.string('jetNTracks')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            name = cms.string('trackSumJetEtRatio'),
            taggingVarName = cms.string('trackSumJetEtRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            name = cms.string('trackSumJetDeltaR'),
            taggingVarName = cms.string('trackSumJetDeltaR')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('vertexMass_0'),
            taggingVarName = cms.string('vertexMass')
        ),
        cms.PSet(
            default = cms.double(-10),
            idx = cms.int32(0),
            name = cms.string('vertexEnergyRatio_0'),
            taggingVarName = cms.string('vertexEnergyRatio')
        ),
        cms.PSet(
            default = cms.double(-999),
            idx = cms.int32(0),
            name = cms.string('trackSip2dSigAboveCharm_0'),
            taggingVarName = cms.string('trackSip2dSigAboveCharm')
        ),
        cms.PSet(
            default = cms.double(-999),
            idx = cms.int32(0),
            name = cms.string('trackSip3dSigAboveCharm_0'),
            taggingVarName = cms.string('trackSip3dSigAboveCharm')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('flightDistance2dSig_0'),
            taggingVarName = cms.string('flightDistance2dSig')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('flightDistance3dSig_0'),
            taggingVarName = cms.string('flightDistance3dSig')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('vertexJetDeltaR_0'),
            taggingVarName = cms.string('vertexJetDeltaR')
        ),
        cms.PSet(
            default = cms.double(0),
            idx = cms.int32(0),
            name = cms.string('vertexNTracks_0'),
            taggingVarName = cms.string('vertexNTracks')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('massVertexEnergyFraction_0'),
            taggingVarName = cms.string('massVertexEnergyFraction')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('vertexBoostOverSqrtJetPt_0'),
            taggingVarName = cms.string('vertexBoostOverSqrtJetPt')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonPtRel_0'),
            taggingVarName = cms.string('leptonPtRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonPtRel_1'),
            taggingVarName = cms.string('leptonPtRel')
        ),
        cms.PSet(
            default = cms.double(-10000),
            idx = cms.int32(0),
            name = cms.string('leptonSip3d_0'),
            taggingVarName = cms.string('leptonSip3d')
        ),
        cms.PSet(
            default = cms.double(-10000),
            idx = cms.int32(1),
            name = cms.string('leptonSip3d_1'),
            taggingVarName = cms.string('leptonSip3d')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonDeltaR_0'),
            taggingVarName = cms.string('leptonDeltaR')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonDeltaR_1'),
            taggingVarName = cms.string('leptonDeltaR')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonRatioRel_0'),
            taggingVarName = cms.string('leptonRatioRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonRatioRel_1'),
            taggingVarName = cms.string('leptonRatioRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonEtaRel_0'),
            taggingVarName = cms.string('leptonEtaRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonEtaRel_1'),
            taggingVarName = cms.string('leptonEtaRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonRatio_0'),
            taggingVarName = cms.string('leptonRatio')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonRatio_1'),
            taggingVarName = cms.string('leptonRatio')
        )
    ),
    weightFile = cms.FileInPath('RecoBTag/CTagging/data/c_vs_b_PhaseI.xml')
)


process.charmTagsPositiveComputerCvsL = cms.ESProducer("CharmTaggerESProducer",
    computer = cms.ESInputTag("combinedSecondaryVertexSoftLeptonComputer",""),
    defaultValueNoTracks = cms.bool(True),
    gbrForestLabel = cms.string(''),
    mvaName = cms.string('BDT'),
    slComputerCfg = cms.PSet(
        SoftLeptonFlip = cms.bool(False),
        calibrationRecords = cms.vstring(
            'CombinedSVRecoVertexNoSoftLepton',
            'CombinedSVPseudoVertexNoSoftLepton',
            'CombinedSVNoVertexNoSoftLepton',
            'CombinedSVRecoVertexSoftMuon',
            'CombinedSVPseudoVertexSoftMuon',
            'CombinedSVNoVertexSoftMuon',
            'CombinedSVRecoVertexSoftElectron',
            'CombinedSVPseudoVertexSoftElectron',
            'CombinedSVNoVertexSoftElectron'
        ),
        categoryVariableName = cms.string('vertexLeptonCategory'),
        charmCut = cms.double(1.5),
        correctVertexMass = cms.bool(True),
        minimumTrackWeight = cms.double(0.5),
        pseudoMultiplicityMin = cms.uint32(2),
        pseudoVertexV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        recordLabel = cms.string(''),
        trackFlip = cms.bool(False),
        trackMultiplicityMin = cms.uint32(2),
        trackPairV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.03)
        ),
        trackPseudoSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(2.0),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(0),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(-99999.9),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(0),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSort = cms.string('sip2dSig'),
        useCategories = cms.bool(True),
        useTrackWeights = cms.bool(True),
        vertexFlip = cms.bool(False)
    ),
    tagInfos = cms.VInputTag(cms.InputTag("pfImpactParameterTagInfos"), cms.InputTag("pfInclusiveSecondaryVertexFinderCvsLTagInfos"), cms.InputTag("softPFMuonsTagInfos"), cms.InputTag("softPFElectronsTagInfos")),
    useAdaBoost = cms.bool(False),
    useCondDB = cms.bool(False),
    useGBRForest = cms.bool(True),
    variables = cms.VPSet(
        cms.PSet(
            default = cms.double(-1),
            name = cms.string('vertexLeptonCategory'),
            taggingVarName = cms.string('vertexLeptonCategory')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(0),
            name = cms.string('trackSip2dSig_0'),
            taggingVarName = cms.string('trackSip2dSig')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(1),
            name = cms.string('trackSip2dSig_1'),
            taggingVarName = cms.string('trackSip2dSig')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(0),
            name = cms.string('trackSip3dSig_0'),
            taggingVarName = cms.string('trackSip3dSig')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(1),
            name = cms.string('trackSip3dSig_1'),
            taggingVarName = cms.string('trackSip3dSig')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('trackPtRel_0'),
            taggingVarName = cms.string('trackPtRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('trackPtRel_1'),
            taggingVarName = cms.string('trackPtRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('trackPPar_0'),
            taggingVarName = cms.string('trackPPar')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('trackPPar_1'),
            taggingVarName = cms.string('trackPPar')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('trackEtaRel_0'),
            taggingVarName = cms.string('trackEtaRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('trackEtaRel_1'),
            taggingVarName = cms.string('trackEtaRel')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackDeltaR_0'),
            taggingVarName = cms.string('trackDeltaR')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackDeltaR_1'),
            taggingVarName = cms.string('trackDeltaR')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackPtRatio_0'),
            taggingVarName = cms.string('trackPtRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackPtRatio_1'),
            taggingVarName = cms.string('trackPtRatio')
        ),
        cms.PSet(
            default = cms.double(1.1),
            idx = cms.int32(0),
            name = cms.string('trackPParRatio_0'),
            taggingVarName = cms.string('trackPParRatio')
        ),
        cms.PSet(
            default = cms.double(1.1),
            idx = cms.int32(1),
            name = cms.string('trackPParRatio_1'),
            taggingVarName = cms.string('trackPParRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackJetDist_0'),
            taggingVarName = cms.string('trackJetDist')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackJetDist_1'),
            taggingVarName = cms.string('trackJetDist')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('trackDecayLenVal_0'),
            taggingVarName = cms.string('trackDecayLenVal')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('trackDecayLenVal_1'),
            taggingVarName = cms.string('trackDecayLenVal')
        ),
        cms.PSet(
            default = cms.double(0),
            name = cms.string('jetNSecondaryVertices'),
            taggingVarName = cms.string('jetNSecondaryVertices')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            name = cms.string('jetNTracks'),
            taggingVarName = cms.string('jetNTracks')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            name = cms.string('trackSumJetEtRatio'),
            taggingVarName = cms.string('trackSumJetEtRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            name = cms.string('trackSumJetDeltaR'),
            taggingVarName = cms.string('trackSumJetDeltaR')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('vertexMass_0'),
            taggingVarName = cms.string('vertexMass')
        ),
        cms.PSet(
            default = cms.double(-10),
            idx = cms.int32(0),
            name = cms.string('vertexEnergyRatio_0'),
            taggingVarName = cms.string('vertexEnergyRatio')
        ),
        cms.PSet(
            default = cms.double(-999),
            idx = cms.int32(0),
            name = cms.string('trackSip2dSigAboveCharm_0'),
            taggingVarName = cms.string('trackSip2dSigAboveCharm')
        ),
        cms.PSet(
            default = cms.double(-999),
            idx = cms.int32(0),
            name = cms.string('trackSip3dSigAboveCharm_0'),
            taggingVarName = cms.string('trackSip3dSigAboveCharm')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('flightDistance2dSig_0'),
            taggingVarName = cms.string('flightDistance2dSig')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('flightDistance3dSig_0'),
            taggingVarName = cms.string('flightDistance3dSig')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('vertexJetDeltaR_0'),
            taggingVarName = cms.string('vertexJetDeltaR')
        ),
        cms.PSet(
            default = cms.double(0),
            idx = cms.int32(0),
            name = cms.string('vertexNTracks_0'),
            taggingVarName = cms.string('vertexNTracks')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('massVertexEnergyFraction_0'),
            taggingVarName = cms.string('massVertexEnergyFraction')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('vertexBoostOverSqrtJetPt_0'),
            taggingVarName = cms.string('vertexBoostOverSqrtJetPt')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonPtRel_0'),
            taggingVarName = cms.string('leptonPtRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonPtRel_1'),
            taggingVarName = cms.string('leptonPtRel')
        ),
        cms.PSet(
            default = cms.double(-10000),
            idx = cms.int32(0),
            name = cms.string('leptonSip3d_0'),
            taggingVarName = cms.string('leptonSip3d')
        ),
        cms.PSet(
            default = cms.double(-10000),
            idx = cms.int32(1),
            name = cms.string('leptonSip3d_1'),
            taggingVarName = cms.string('leptonSip3d')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonDeltaR_0'),
            taggingVarName = cms.string('leptonDeltaR')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonDeltaR_1'),
            taggingVarName = cms.string('leptonDeltaR')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonRatioRel_0'),
            taggingVarName = cms.string('leptonRatioRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonRatioRel_1'),
            taggingVarName = cms.string('leptonRatioRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonEtaRel_0'),
            taggingVarName = cms.string('leptonEtaRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonEtaRel_1'),
            taggingVarName = cms.string('leptonEtaRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('leptonRatio_0'),
            taggingVarName = cms.string('leptonRatio')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('leptonRatio_1'),
            taggingVarName = cms.string('leptonRatio')
        )
    ),
    weightFile = cms.FileInPath('RecoBTag/CTagging/data/c_vs_udsg_PhaseI.xml')
)


process.combinedMVAV2Computer = cms.ESProducer("CombinedMVAV2JetTagESProducer",
    jetTagComputers = cms.vstring(
        'jetProbabilityComputer',
        'jetBProbabilityComputer',
        'combinedSecondaryVertexV2Computer',
        'softPFMuonComputer',
        'softPFElectronComputer'
    ),
    mvaName = cms.string('bdt'),
    spectators = cms.vstring(),
    useAdaBoost = cms.bool(True),
    useCondDB = cms.bool(False),
    useGBRForest = cms.bool(True),
    variables = cms.vstring(
        'Jet_CSV',
        'Jet_CSVIVF',
        'Jet_JP',
        'Jet_JBP',
        'Jet_SoftMu',
        'Jet_SoftEl'
    ),
    weightFile = cms.FileInPath('RecoBTag/Combined/data/CombinedMVAV2_13_07_2015.weights.xml.gz')
)


process.combinedSecondaryVertexV2Computer = cms.ESProducer("CombinedSecondaryVertexESProducer",
    SoftLeptonFlip = cms.bool(False),
    calibrationRecords = cms.vstring(
        'CombinedSVIVFV2RecoVertex',
        'CombinedSVIVFV2PseudoVertex',
        'CombinedSVIVFV2NoVertex'
    ),
    categoryVariableName = cms.string('vertexCategory'),
    charmCut = cms.double(1.5),
    correctVertexMass = cms.bool(True),
    minimumTrackWeight = cms.double(0.5),
    pseudoMultiplicityMin = cms.uint32(2),
    pseudoVertexV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.05)
    ),
    recordLabel = cms.string(''),
    trackFlip = cms.bool(False),
    trackMultiplicityMin = cms.uint32(2),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    trackPseudoSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(2.0),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip2dSig'),
    useCategories = cms.bool(True),
    useTrackWeights = cms.bool(True),
    vertexFlip = cms.bool(False)
)


process.ctppsBeamParametersFromLHCInfoESSource = cms.ESProducer("CTPPSBeamParametersFromLHCInfoESSource",
    appendToDataLabel = cms.string(''),
    beamDivX45 = cms.double(0.1),
    beamDivX56 = cms.double(0.1),
    beamDivY45 = cms.double(0.1),
    beamDivY56 = cms.double(0.1),
    lhcInfoLabel = cms.string(''),
    vtxOffsetX45 = cms.double(0.01),
    vtxOffsetX56 = cms.double(0.01),
    vtxOffsetY45 = cms.double(0.01),
    vtxOffsetY56 = cms.double(0.01),
    vtxOffsetZ45 = cms.double(0.01),
    vtxOffsetZ56 = cms.double(0.01),
    vtxStddevX = cms.double(0.02),
    vtxStddevY = cms.double(0.02),
    vtxStddevZ = cms.double(0.02)
)


process.ctppsInterpolatedOpticalFunctionsESSource = cms.ESProducer("CTPPSInterpolatedOpticalFunctionsESSource",
    appendToDataLabel = cms.string(''),
    lhcInfoLabel = cms.string(''),
    opticsLabel = cms.string('')
)


process.doubleVertex2TrkComputer = cms.ESProducer("SimpleSecondaryVertexESProducer",
    minTracks = cms.uint32(2),
    minVertices = cms.uint32(2),
    unBoost = cms.bool(False),
    use3d = cms.bool(True),
    useSignificance = cms.bool(True)
)


process.ecalDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('EcalDetIdAssociator'),
    etaBinSize = cms.double(0.02),
    nEta = cms.int32(300),
    nPhi = cms.int32(360)
)


process.ecalSeverityLevel = cms.ESProducer("EcalSeverityLevelESProducer",
    dbstatusMask = cms.PSet(
        kBad = cms.vstring(
            'kNonRespondingIsolated',
            'kDeadVFE',
            'kDeadFE',
            'kNoDataNoTP'
        ),
        kGood = cms.vstring('kOk'),
        kProblematic = cms.vstring(
            'kDAC',
            'kNoLaser',
            'kNoisy',
            'kNNoisy',
            'kNNNoisy',
            'kNNNNoisy',
            'kNNNNNoisy',
            'kFixedG6',
            'kFixedG1',
            'kFixedG0'
        ),
        kRecovered = cms.vstring(),
        kTime = cms.vstring(),
        kWeird = cms.vstring()
    ),
    flagMask = cms.PSet(
        kBad = cms.vstring(
            'kFaultyHardware',
            'kDead',
            'kKilled'
        ),
        kGood = cms.vstring('kGood'),
        kProblematic = cms.vstring(
            'kPoorReco',
            'kPoorCalib',
            'kNoisy',
            'kSaturated'
        ),
        kRecovered = cms.vstring(
            'kLeadingEdgeRecovered',
            'kTowerRecovered'
        ),
        kTime = cms.vstring('kOutOfTime'),
        kWeird = cms.vstring(
            'kWeird',
            'kDiWeird'
        )
    ),
    timeThresh = cms.double(2.0)
)


process.fakeForIdealAlignment = cms.ESProducer("FakeAlignmentProducer",
    appendToDataLabel = cms.string('fakeForIdeal')
)


process.ghostTrackComputer = cms.ESProducer("GhostTrackESProducer",
    calibrationRecords = cms.vstring(
        'GhostTrackRecoVertex',
        'GhostTrackPseudoVertex',
        'GhostTrackNoVertex'
    ),
    categoryVariableName = cms.string('vertexCategory'),
    charmCut = cms.double(1.5),
    minimumTrackWeight = cms.double(0.5),
    recordLabel = cms.string(''),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip2dSig'),
    useCategories = cms.bool(True)
)


process.hcalDDDRecConstants = cms.ESProducer("HcalDDDRecConstantsESModule",
    appendToDataLabel = cms.string('')
)


process.hcalDDDSimConstants = cms.ESProducer("HcalDDDSimConstantsESModule",
    appendToDataLabel = cms.string('')
)


process.hcalDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('HcalDetIdAssociator'),
    etaBinSize = cms.double(0.087),
    hcalRegion = cms.int32(2),
    nEta = cms.int32(70),
    nPhi = cms.int32(72)
)


process.hcalRecAlgos = cms.ESProducer("HcalRecAlgoESProducer",
    DropChannelStatusBits = cms.vstring(
        'HcalCellMask',
        'HcalCellOff',
        'HcalCellDead'
    ),
    RecoveredRecHitBits = cms.vstring(''),
    SeverityLevels = cms.VPSet(
        cms.PSet(
            ChannelStatus = cms.vstring(''),
            Level = cms.int32(0),
            RecHitFlags = cms.vstring('')
        ),
        cms.PSet(
            ChannelStatus = cms.vstring('HcalCellCaloTowerProb'),
            Level = cms.int32(1),
            RecHitFlags = cms.vstring('')
        ),
        cms.PSet(
            ChannelStatus = cms.vstring('HcalCellExcludeFromHBHENoiseSummary'),
            Level = cms.int32(5),
            RecHitFlags = cms.vstring(
                'HBHEIsolatedNoise',
                'HFAnomalousHit'
            )
        ),
        cms.PSet(
            ChannelStatus = cms.vstring(''),
            Level = cms.int32(8),
            RecHitFlags = cms.vstring(
                'HBHEHpdHitMultiplicity',
                'HBHEFlatNoise',
                'HBHESpikeNoise',
                'HBHETS4TS5Noise',
                'HBHENegativeNoise',
                'HBHEOOTPU'
            )
        ),
        cms.PSet(
            ChannelStatus = cms.vstring(''),
            Level = cms.int32(11),
            RecHitFlags = cms.vstring(
                'HFLongShort',
                'HFS8S1Ratio',
                'HFPET',
                'HFSignalAsymmetry'
            )
        ),
        cms.PSet(
            ChannelStatus = cms.vstring('HcalCellCaloTowerMask'),
            Level = cms.int32(12),
            RecHitFlags = cms.vstring('')
        ),
        cms.PSet(
            ChannelStatus = cms.vstring('HcalCellHot'),
            Level = cms.int32(15),
            RecHitFlags = cms.vstring('')
        ),
        cms.PSet(
            ChannelStatus = cms.vstring(
                'HcalCellOff',
                'HcalCellDead'
            ),
            Level = cms.int32(20),
            RecHitFlags = cms.vstring('')
        )
    ),
    appendToDataLabel = cms.string(''),
    phase = cms.uint32(1)
)


process.hcalTopologyIdeal = cms.ESProducer("HcalTopologyIdealEP",
    Exclude = cms.untracked.string(''),
    MergePosition = cms.untracked.bool(False),
    appendToDataLabel = cms.string('')
)


process.hcal_db_producer = cms.ESProducer("HcalDbProducer",
    dump = cms.untracked.vstring(''),
    file = cms.untracked.string('')
)


process.heavyIonCSVComputer = cms.ESProducer("HeavyIonCSVESProducer",
    gbrForestLabel = cms.string(''),
    mvaName = cms.string('BDT'),
    sv_cfg = cms.PSet(
        SoftLeptonFlip = cms.bool(False),
        calibrationRecords = cms.vstring(
            'CombinedSVIVFV2RecoVertex',
            'CombinedSVIVFV2PseudoVertex',
            'CombinedSVIVFV2NoVertex'
        ),
        categoryVariableName = cms.string('vertexCategory'),
        charmCut = cms.double(1.5),
        correctVertexMass = cms.bool(True),
        minimumTrackWeight = cms.double(0.5),
        pseudoMultiplicityMin = cms.uint32(2),
        pseudoVertexV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        recordLabel = cms.string(''),
        trackFlip = cms.bool(False),
        trackMultiplicityMin = cms.uint32(2),
        trackPairV0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.03)
        ),
        trackPseudoSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(2.0),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSelection = cms.PSet(
            a_dR = cms.double(-0.001053),
            a_pT = cms.double(0.005263),
            b_dR = cms.double(0.6263),
            b_pT = cms.double(0.3684),
            jetDeltaRMax = cms.double(0.3),
            maxDecayLen = cms.double(5),
            maxDistToAxis = cms.double(0.07),
            max_pT = cms.double(500),
            max_pT_dRcut = cms.double(0.1),
            max_pT_trackPTcut = cms.double(3),
            min_pT = cms.double(120),
            min_pT_dRcut = cms.double(0.5),
            normChi2Max = cms.double(99999.9),
            pixelHitsMin = cms.uint32(0),
            ptMin = cms.double(0.0),
            qualityClass = cms.string('any'),
            sip2dSigMax = cms.double(99999.9),
            sip2dSigMin = cms.double(-99999.9),
            sip2dValMax = cms.double(99999.9),
            sip2dValMin = cms.double(-99999.9),
            sip3dSigMax = cms.double(99999.9),
            sip3dSigMin = cms.double(-99999.9),
            sip3dValMax = cms.double(99999.9),
            sip3dValMin = cms.double(-99999.9),
            totalHitsMin = cms.uint32(0),
            useVariableJTA = cms.bool(False)
        ),
        trackSort = cms.string('sip2dSig'),
        useCategories = cms.bool(True),
        useTrackWeights = cms.bool(True),
        vertexFlip = cms.bool(False)
    ),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"), cms.InputTag("secondaryVertexFinderTagInfos")),
    useAdaBoost = cms.bool(False),
    useCondDB = cms.bool(False),
    useGBRForest = cms.bool(True),
    variables = cms.VPSet(
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(0),
            name = cms.string('TagVarCSV_trackSip3dSig_0'),
            taggingVarName = cms.string('trackSip3dSig')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(1),
            name = cms.string('TagVarCSV_trackSip3dSig_1'),
            taggingVarName = cms.string('trackSip3dSig')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(2),
            name = cms.string('TagVarCSV_trackSip3dSig_2'),
            taggingVarName = cms.string('trackSip3dSig')
        ),
        cms.PSet(
            default = cms.double(-100),
            idx = cms.int32(3),
            name = cms.string('TagVarCSV_trackSip3dSig_3'),
            taggingVarName = cms.string('trackSip3dSig')
        ),
        cms.PSet(
            default = cms.double(-999),
            name = cms.string('TagVarCSV_trackSip3dSigAboveCharm'),
            taggingVarName = cms.string('trackSip3dSigAboveCharm')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('TagVarCSV_trackPtRel_0'),
            taggingVarName = cms.string('trackPtRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('TagVarCSV_trackPtRel_1'),
            taggingVarName = cms.string('trackPtRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(2),
            name = cms.string('TagVarCSV_trackPtRel_2'),
            taggingVarName = cms.string('trackPtRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(3),
            name = cms.string('TagVarCSV_trackPtRel_3'),
            taggingVarName = cms.string('trackPtRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(0),
            name = cms.string('TagVarCSV_trackEtaRel_0'),
            taggingVarName = cms.string('trackEtaRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(1),
            name = cms.string('TagVarCSV_trackEtaRel_1'),
            taggingVarName = cms.string('trackEtaRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(2),
            name = cms.string('TagVarCSV_trackEtaRel_2'),
            taggingVarName = cms.string('trackEtaRel')
        ),
        cms.PSet(
            default = cms.double(-1),
            idx = cms.int32(3),
            name = cms.string('TagVarCSV_trackEtaRel_3'),
            taggingVarName = cms.string('trackEtaRel')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('TagVarCSV_trackDeltaR_0'),
            taggingVarName = cms.string('trackDeltaR')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('TagVarCSV_trackDeltaR_1'),
            taggingVarName = cms.string('trackDeltaR')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(2),
            name = cms.string('TagVarCSV_trackDeltaR_2'),
            taggingVarName = cms.string('trackDeltaR')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(3),
            name = cms.string('TagVarCSV_trackDeltaR_3'),
            taggingVarName = cms.string('trackDeltaR')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('TagVarCSV_trackPtRatio_0'),
            taggingVarName = cms.string('trackPtRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('TagVarCSV_trackPtRatio_1'),
            taggingVarName = cms.string('trackPtRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(2),
            name = cms.string('TagVarCSV_trackPtRatio_2'),
            taggingVarName = cms.string('trackPtRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(3),
            name = cms.string('TagVarCSV_trackPtRatio_3'),
            taggingVarName = cms.string('trackPtRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('TagVarCSV_trackJetDist_0'),
            taggingVarName = cms.string('trackJetDist')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('TagVarCSV_trackJetDist_1'),
            taggingVarName = cms.string('trackJetDist')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(2),
            name = cms.string('TagVarCSV_trackJetDist_2'),
            taggingVarName = cms.string('trackJetDist')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(3),
            name = cms.string('TagVarCSV_trackJetDist_3'),
            taggingVarName = cms.string('trackJetDist')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(0),
            name = cms.string('TagVarCSV_trackDecayLenVal_0'),
            taggingVarName = cms.string('trackDecayLenVal')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(1),
            name = cms.string('TagVarCSV_trackDecayLenVal_1'),
            taggingVarName = cms.string('trackDecayLenVal')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(2),
            name = cms.string('TagVarCSV_trackDecayLenVal_2'),
            taggingVarName = cms.string('trackDecayLenVal')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            idx = cms.int32(3),
            name = cms.string('TagVarCSV_trackDecayLenVal_3'),
            taggingVarName = cms.string('trackDecayLenVal')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            name = cms.string('TagVarCSV_trackSumJetEtRatio'),
            taggingVarName = cms.string('trackSumJetEtRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            name = cms.string('TagVarCSV_trackSumJetDeltaR'),
            taggingVarName = cms.string('trackSumJetDeltaR')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            name = cms.string('TagVarCSV_vertexMass'),
            taggingVarName = cms.string('vertexMass')
        ),
        cms.PSet(
            default = cms.double(0),
            name = cms.string('TagVarCSV_vertexNTracks'),
            taggingVarName = cms.string('vertexNTracks')
        ),
        cms.PSet(
            default = cms.double(-10),
            name = cms.string('TagVarCSV_vertexEnergyRatio'),
            taggingVarName = cms.string('vertexEnergyRatio')
        ),
        cms.PSet(
            default = cms.double(-0.1),
            name = cms.string('TagVarCSV_vertexJetDeltaR'),
            taggingVarName = cms.string('vertexJetDeltaR')
        ),
        cms.PSet(
            default = cms.double(-1),
            name = cms.string('TagVarCSV_flightDistance2dSig'),
            taggingVarName = cms.string('flightDistance2dSig')
        ),
        cms.PSet(
            default = cms.double(0),
            name = cms.string('TagVarCSV_jetNSecondaryVertices'),
            taggingVarName = cms.string('jetNSecondaryVertices')
        ),
        cms.PSet(
            default = cms.double(0),
            name = cms.string('TagVarCSV_vertexCategory'),
            taggingVarName = cms.string('vertexCategory')
        )
    ),
    weightFile = cms.FileInPath('RecoBTag/Combined/data/TMVA_Btag_CsJets_PbPb2018_BDTG.weights.xml')
)


process.hoDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('HODetIdAssociator'),
    etaBinSize = cms.double(0.087),
    nEta = cms.int32(30),
    nPhi = cms.int32(72)
)


process.idealForDigiCSCGeometry = cms.ESProducer("CSCGeometryESModule",
    alignmentsLabel = cms.string('fakeForIdeal'),
    appendToDataLabel = cms.string('idealForDigi'),
    applyAlignment = cms.bool(False),
    debugV = cms.untracked.bool(False),
    fromDD4hep = cms.bool(False),
    fromDDD = cms.bool(False),
    useCentreTIOffsets = cms.bool(False),
    useGangedStripsInME1a = cms.bool(False),
    useOnlyWiresInME1a = cms.bool(False),
    useRealWireGeometry = cms.bool(True)
)


process.idealForDigiDTGeometry = cms.ESProducer("DTGeometryESModule",
    DDDetector = cms.ESInputTag("",""),
    alignmentsLabel = cms.string('fakeForIdeal'),
    appendToDataLabel = cms.string('idealForDigi'),
    applyAlignment = cms.bool(False),
    attribute = cms.string('MuStructure'),
    fromDD4hep = cms.bool(False),
    fromDDD = cms.bool(False),
    value = cms.string('MuonBarrelDT')
)


process.idealForDigiTrackerGeometry = cms.ESProducer("TrackerDigiGeometryESModule",
    alignmentsLabel = cms.string('fakeForIdeal'),
    appendToDataLabel = cms.string('idealForDigi'),
    applyAlignment = cms.bool(False),
    fromDDD = cms.bool(False)
)


process.impactParameterMVAComputer = cms.ESProducer("GenericMVAJetTagESProducer",
    calibrationRecord = cms.string('ImpactParameterMVA'),
    recordLabel = cms.string(''),
    useCategories = cms.bool(False)
)


process.jetBProbabilityComputer = cms.ESProducer("JetBProbabilityESProducer",
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    deltaR = cms.double(-1.0),
    impactParameterType = cms.int32(0),
    max_pT = cms.double(500),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3),
    maximumDecayLength = cms.double(5.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    min_pT = cms.double(120),
    min_pT_dRcut = cms.double(0.5),
    minimumProbability = cms.double(0.005),
    numberOfBTracks = cms.uint32(4),
    trackIpSign = cms.int32(1),
    trackQualityClass = cms.string('any'),
    useVariableJTA = cms.bool(False)
)


process.jetProbabilityComputer = cms.ESProducer("JetProbabilityESProducer",
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    deltaR = cms.double(0.3),
    impactParameterType = cms.int32(0),
    max_pT = cms.double(500),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3),
    maximumDecayLength = cms.double(5.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    min_pT = cms.double(120),
    min_pT_dRcut = cms.double(0.5),
    minimumProbability = cms.double(0.005),
    trackIpSign = cms.int32(1),
    trackQualityClass = cms.string('any'),
    useVariableJTA = cms.bool(False)
)


process.multipleScatteringParametrisationMakerESProducer = cms.ESProducer("MultipleScatteringParametrisationMakerESProducer",
    appendToDataLabel = cms.string('')
)


process.muonDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('MuonDetIdAssociator'),
    etaBinSize = cms.double(0.125),
    includeBadChambers = cms.bool(True),
    includeGEM = cms.bool(True),
    includeME0 = cms.bool(False),
    nEta = cms.int32(48),
    nPhi = cms.int32(48)
)


process.muonGeometryConstants = cms.ESProducer("MuonGeometryConstantsESModule",
    appendToDataLabel = cms.string(''),
    fromDD4hep = cms.bool(True)
)


process.negativeCombinedMVAV2Computer = cms.ESProducer("CombinedMVAV2JetTagESProducer",
    jetTagComputers = cms.vstring(
        'negativeOnlyJetProbabilityComputer',
        'negativeOnlyJetBProbabilityComputer',
        'negativeCombinedSecondaryVertexV2Computer',
        'negativeSoftPFMuonComputer',
        'negativeSoftPFElectronComputer'
    ),
    mvaName = cms.string('bdt'),
    spectators = cms.vstring(),
    useAdaBoost = cms.bool(True),
    useCondDB = cms.bool(False),
    useGBRForest = cms.bool(True),
    variables = cms.vstring(
        'Jet_CSV',
        'Jet_CSVIVF',
        'Jet_JP',
        'Jet_JBP',
        'Jet_SoftMu',
        'Jet_SoftEl'
    ),
    weightFile = cms.FileInPath('RecoBTag/Combined/data/CombinedMVAV2_13_07_2015.weights.xml.gz')
)


process.negativeCombinedSecondaryVertexV2Computer = cms.ESProducer("CombinedSecondaryVertexESProducer",
    SoftLeptonFlip = cms.bool(False),
    calibrationRecords = cms.vstring(
        'CombinedSVIVFV2RecoVertex',
        'CombinedSVIVFV2PseudoVertex',
        'CombinedSVIVFV2NoVertex'
    ),
    categoryVariableName = cms.string('vertexCategory'),
    charmCut = cms.double(1.5),
    correctVertexMass = cms.bool(True),
    minimumTrackWeight = cms.double(0.5),
    pseudoMultiplicityMin = cms.uint32(2),
    pseudoVertexV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.05)
    ),
    recordLabel = cms.string(''),
    trackFlip = cms.bool(True),
    trackMultiplicityMin = cms.uint32(2),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    trackPseudoSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(-2.0),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip2dSig'),
    useCategories = cms.bool(True),
    useTrackWeights = cms.bool(True),
    vertexFlip = cms.bool(True)
)


process.negativeOnlyJetBProbabilityComputer = cms.ESProducer("JetBProbabilityESProducer",
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    deltaR = cms.double(-1.0),
    impactParameterType = cms.int32(0),
    max_pT = cms.double(500),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3),
    maximumDecayLength = cms.double(5.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    min_pT = cms.double(120),
    min_pT_dRcut = cms.double(0.5),
    minimumProbability = cms.double(0.005),
    numberOfBTracks = cms.uint32(4),
    trackIpSign = cms.int32(-1),
    trackQualityClass = cms.string('any'),
    useVariableJTA = cms.bool(False)
)


process.negativeOnlyJetProbabilityComputer = cms.ESProducer("JetProbabilityESProducer",
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    deltaR = cms.double(0.3),
    impactParameterType = cms.int32(0),
    max_pT = cms.double(500),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3),
    maximumDecayLength = cms.double(5.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    min_pT = cms.double(120),
    min_pT_dRcut = cms.double(0.5),
    minimumProbability = cms.double(0.005),
    trackIpSign = cms.int32(-1),
    trackQualityClass = cms.string('any'),
    useVariableJTA = cms.bool(False)
)


process.negativeSoftPFElectronByIP2dComputer = cms.ESProducer("LeptonTaggerByIPESProducer",
    ipSign = cms.string('negative'),
    use3d = cms.bool(False)
)


process.negativeSoftPFElectronByIP3dComputer = cms.ESProducer("LeptonTaggerByIPESProducer",
    ipSign = cms.string('negative'),
    use3d = cms.bool(True)
)


process.negativeSoftPFElectronByPtComputer = cms.ESProducer("LeptonTaggerByPtESProducer",
    ipSign = cms.string('negative')
)


process.negativeSoftPFElectronComputer = cms.ESProducer("ElectronTaggerESProducer",
    gbrForestLabel = cms.string('btag_SoftPFElectron_BDT'),
    ipSign = cms.string('negative'),
    useAdaBoost = cms.bool(False),
    useCondDB = cms.bool(False),
    useGBRForest = cms.bool(True),
    weightFile = cms.FileInPath('RecoBTag/SoftLepton/data/SoftPFElectron_BDT.weights.xml.gz')
)


process.negativeSoftPFMuonByIP2dComputer = cms.ESProducer("LeptonTaggerByIPESProducer",
    ipSign = cms.string('negative'),
    use3d = cms.bool(False)
)


process.negativeSoftPFMuonByIP3dComputer = cms.ESProducer("LeptonTaggerByIPESProducer",
    ipSign = cms.string('negative'),
    use3d = cms.bool(True)
)


process.negativeSoftPFMuonByPtComputer = cms.ESProducer("LeptonTaggerByPtESProducer",
    ipSign = cms.string('negative')
)


process.negativeSoftPFMuonComputer = cms.ESProducer("MuonTaggerESProducer",
    gbrForestLabel = cms.string('btag_SoftPFMuon_BDT'),
    ipSign = cms.string('negative'),
    useAdaBoost = cms.bool(True),
    useCondDB = cms.bool(False),
    useGBRForest = cms.bool(True),
    weightFile = cms.FileInPath('RecoBTag/SoftLepton/data/SoftPFMuon_BDT.weights.xml.gz')
)


process.negativeTrackCounting3D2ndComputer = cms.ESProducer("NegativeTrackCountingESProducer",
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    deltaR = cms.double(-1.0),
    impactParameterType = cms.int32(0),
    max_pT = cms.double(500),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3),
    maximumDecayLength = cms.double(5.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    min_pT = cms.double(120),
    min_pT_dRcut = cms.double(0.5),
    minimumImpactParameter = cms.double(-1),
    nthTrack = cms.int32(2),
    trackQualityClass = cms.string('any'),
    useSignedImpactParameterSig = cms.bool(True),
    useVariableJTA = cms.bool(False)
)


process.negativeTrackCounting3D3rdComputer = cms.ESProducer("NegativeTrackCountingESProducer",
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    deltaR = cms.double(-1.0),
    impactParameterType = cms.int32(0),
    max_pT = cms.double(500),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3),
    maximumDecayLength = cms.double(5.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    min_pT = cms.double(120),
    min_pT_dRcut = cms.double(0.5),
    minimumImpactParameter = cms.double(-1),
    nthTrack = cms.int32(3),
    trackQualityClass = cms.string('any'),
    useSignedImpactParameterSig = cms.bool(True),
    useVariableJTA = cms.bool(False)
)


process.positiveCombinedMVAV2Computer = cms.ESProducer("CombinedMVAV2JetTagESProducer",
    jetTagComputers = cms.vstring(
        'positiveOnlyJetProbabilityComputer',
        'positiveOnlyJetBProbabilityComputer',
        'positiveCombinedSecondaryVertexV2Computer',
        'positiveSoftPFMuonComputer',
        'positiveSoftPFElectronComputer'
    ),
    mvaName = cms.string('bdt'),
    spectators = cms.vstring(),
    useAdaBoost = cms.bool(True),
    useCondDB = cms.bool(False),
    useGBRForest = cms.bool(True),
    variables = cms.vstring(
        'Jet_CSV',
        'Jet_CSVIVF',
        'Jet_JP',
        'Jet_JBP',
        'Jet_SoftMu',
        'Jet_SoftEl'
    ),
    weightFile = cms.FileInPath('RecoBTag/Combined/data/CombinedMVAV2_13_07_2015.weights.xml.gz')
)


process.positiveCombinedSecondaryVertexV2Computer = cms.ESProducer("CombinedSecondaryVertexESProducer",
    SoftLeptonFlip = cms.bool(False),
    calibrationRecords = cms.vstring(
        'CombinedSVIVFV2RecoVertex',
        'CombinedSVIVFV2PseudoVertex',
        'CombinedSVIVFV2NoVertex'
    ),
    categoryVariableName = cms.string('vertexCategory'),
    charmCut = cms.double(1.5),
    correctVertexMass = cms.bool(True),
    minimumTrackWeight = cms.double(0.5),
    pseudoMultiplicityMin = cms.uint32(2),
    pseudoVertexV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.05)
    ),
    recordLabel = cms.string(''),
    trackFlip = cms.bool(False),
    trackMultiplicityMin = cms.uint32(2),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    trackPseudoSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(2.0),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(0),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSelection = cms.PSet(
        a_dR = cms.double(-0.001053),
        a_pT = cms.double(0.005263),
        b_dR = cms.double(0.6263),
        b_pT = cms.double(0.3684),
        jetDeltaRMax = cms.double(0.3),
        maxDecayLen = cms.double(5),
        maxDistToAxis = cms.double(0.07),
        max_pT = cms.double(500),
        max_pT_dRcut = cms.double(0.1),
        max_pT_trackPTcut = cms.double(3),
        min_pT = cms.double(120),
        min_pT_dRcut = cms.double(0.5),
        normChi2Max = cms.double(99999.9),
        pixelHitsMin = cms.uint32(0),
        ptMin = cms.double(0.0),
        qualityClass = cms.string('any'),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip2dValMax = cms.double(99999.9),
        sip2dValMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        sip3dSigMin = cms.double(0),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        totalHitsMin = cms.uint32(0),
        useVariableJTA = cms.bool(False)
    ),
    trackSort = cms.string('sip2dSig'),
    useCategories = cms.bool(True),
    useTrackWeights = cms.bool(True),
    vertexFlip = cms.bool(False)
)


process.positiveOnlyJetBProbabilityComputer = cms.ESProducer("JetBProbabilityESProducer",
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    deltaR = cms.double(-1.0),
    impactParameterType = cms.int32(0),
    max_pT = cms.double(500),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3),
    maximumDecayLength = cms.double(5.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    min_pT = cms.double(120),
    min_pT_dRcut = cms.double(0.5),
    minimumProbability = cms.double(0.005),
    numberOfBTracks = cms.uint32(4),
    trackIpSign = cms.int32(1),
    trackQualityClass = cms.string('any'),
    useVariableJTA = cms.bool(False)
)


process.positiveOnlyJetProbabilityComputer = cms.ESProducer("JetProbabilityESProducer",
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    deltaR = cms.double(0.3),
    impactParameterType = cms.int32(0),
    max_pT = cms.double(500),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3),
    maximumDecayLength = cms.double(5.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    min_pT = cms.double(120),
    min_pT_dRcut = cms.double(0.5),
    minimumProbability = cms.double(0.005),
    trackIpSign = cms.int32(1),
    trackQualityClass = cms.string('any'),
    useVariableJTA = cms.bool(False)
)


process.positiveSoftPFElectronByIP2dComputer = cms.ESProducer("LeptonTaggerByIPESProducer",
    ipSign = cms.string('positive'),
    use3d = cms.bool(False)
)


process.positiveSoftPFElectronByIP3dComputer = cms.ESProducer("LeptonTaggerByIPESProducer",
    ipSign = cms.string('positive'),
    use3d = cms.bool(True)
)


process.positiveSoftPFElectronByPtComputer = cms.ESProducer("LeptonTaggerByPtESProducer",
    ipSign = cms.string('positive')
)


process.positiveSoftPFElectronComputer = cms.ESProducer("ElectronTaggerESProducer",
    gbrForestLabel = cms.string('btag_SoftPFElectron_BDT'),
    ipSign = cms.string('positive'),
    useAdaBoost = cms.bool(False),
    useCondDB = cms.bool(False),
    useGBRForest = cms.bool(True),
    weightFile = cms.FileInPath('RecoBTag/SoftLepton/data/SoftPFElectron_BDT.weights.xml.gz')
)


process.positiveSoftPFMuonByIP2dComputer = cms.ESProducer("LeptonTaggerByIPESProducer",
    ipSign = cms.string('positive'),
    use3d = cms.bool(False)
)


process.positiveSoftPFMuonByIP3dComputer = cms.ESProducer("LeptonTaggerByIPESProducer",
    ipSign = cms.string('positive'),
    use3d = cms.bool(True)
)


process.positiveSoftPFMuonByPtComputer = cms.ESProducer("LeptonTaggerByPtESProducer",
    ipSign = cms.string('positive')
)


process.positiveSoftPFMuonComputer = cms.ESProducer("MuonTaggerESProducer",
    gbrForestLabel = cms.string('btag_SoftPFMuon_BDT'),
    ipSign = cms.string('positive'),
    useAdaBoost = cms.bool(True),
    useCondDB = cms.bool(False),
    useGBRForest = cms.bool(True),
    weightFile = cms.FileInPath('RecoBTag/SoftLepton/data/SoftPFMuon_BDT.weights.xml.gz')
)


process.preshowerDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('PreshowerDetIdAssociator'),
    etaBinSize = cms.double(0.1),
    nEta = cms.int32(60),
    nPhi = cms.int32(30)
)


process.siPixelQualityESProducer = cms.ESProducer("SiPixelQualityESProducer",
    ListOfRecordToMerge = cms.VPSet(
        cms.PSet(
            record = cms.string('SiPixelQualityFromDbRcd'),
            tag = cms.string('')
        ),
        cms.PSet(
            record = cms.string('SiPixelDetVOffRcd'),
            tag = cms.string('')
        )
    ),
    appendToDataLabel = cms.string(''),
    siPixelQualityLabel = cms.string('forDigitizer'),
    siPixelQualityLabel_RawToDigi = cms.string('')
)


process.siStripBackPlaneCorrectionDepESProducer = cms.ESProducer("SiStripBackPlaneCorrectionDepESProducer",
    BackPlaneCorrectionDeconvMode = cms.PSet(
        label = cms.untracked.string('deconvolution'),
        record = cms.string('SiStripBackPlaneCorrectionRcd')
    ),
    BackPlaneCorrectionPeakMode = cms.PSet(
        label = cms.untracked.string('peak'),
        record = cms.string('SiStripBackPlaneCorrectionRcd')
    ),
    LatencyRecord = cms.PSet(
        label = cms.untracked.string(''),
        record = cms.string('SiStripLatencyRcd')
    )
)


process.siStripGainESProducer = cms.ESProducer("SiStripGainESProducer",
    APVGain = cms.VPSet(
        cms.PSet(
            Label = cms.untracked.string(''),
            NormalizationFactor = cms.untracked.double(1.0),
            Record = cms.string('SiStripApvGainRcd')
        ),
        cms.PSet(
            Label = cms.untracked.string(''),
            NormalizationFactor = cms.untracked.double(1.0),
            Record = cms.string('SiStripApvGain2Rcd')
        )
    ),
    AutomaticNormalization = cms.bool(False),
    appendToDataLabel = cms.string(''),
    printDebug = cms.untracked.bool(False)
)


process.siStripGainSimESProducer = cms.ESProducer("SiStripGainSimESProducer",
    APVGain = cms.VPSet(cms.PSet(
        Label = cms.untracked.string(''),
        NormalizationFactor = cms.untracked.double(1.0),
        Record = cms.string('SiStripApvGainSimRcd')
    )),
    AutomaticNormalization = cms.bool(False),
    appendToDataLabel = cms.string(''),
    printDebug = cms.untracked.bool(False)
)


process.siStripLorentzAngleDepESProducer = cms.ESProducer("SiStripLorentzAngleDepESProducer",
    LatencyRecord = cms.PSet(
        label = cms.untracked.string(''),
        record = cms.string('SiStripLatencyRcd')
    ),
    LorentzAngleDeconvMode = cms.PSet(
        label = cms.untracked.string('deconvolution'),
        record = cms.string('SiStripLorentzAngleRcd')
    ),
    LorentzAnglePeakMode = cms.PSet(
        label = cms.untracked.string('peak'),
        record = cms.string('SiStripLorentzAngleRcd')
    )
)


process.siStripQualityESProducer = cms.ESProducer("SiStripQualityESProducer",
    ListOfRecordToMerge = cms.VPSet(
        cms.PSet(
            record = cms.string('SiStripDetVOffRcd'),
            tag = cms.string('')
        ),
        cms.PSet(
            record = cms.string('SiStripDetCablingRcd'),
            tag = cms.string('')
        ),
        cms.PSet(
            record = cms.string('RunInfoRcd'),
            tag = cms.string('')
        ),
        cms.PSet(
            record = cms.string('SiStripBadChannelRcd'),
            tag = cms.string('')
        ),
        cms.PSet(
            record = cms.string('SiStripBadFiberRcd'),
            tag = cms.string('')
        ),
        cms.PSet(
            record = cms.string('SiStripBadModuleRcd'),
            tag = cms.string('')
        ),
        cms.PSet(
            record = cms.string('SiStripBadStripRcd'),
            tag = cms.string('')
        )
    ),
    PrintDebugOutput = cms.bool(False),
    ReduceGranularity = cms.bool(False),
    ThresholdForReducedGranularity = cms.double(0.3),
    UseEmptyRunInfo = cms.bool(False),
    appendToDataLabel = cms.string('')
)


process.simpleSecondaryVertex2TrkComputer = cms.ESProducer("SimpleSecondaryVertexESProducer",
    minTracks = cms.uint32(2),
    unBoost = cms.bool(False),
    use3d = cms.bool(True),
    useSignificance = cms.bool(True)
)


process.simpleSecondaryVertex3TrkComputer = cms.ESProducer("SimpleSecondaryVertexESProducer",
    minTracks = cms.uint32(3),
    unBoost = cms.bool(False),
    use3d = cms.bool(True),
    useSignificance = cms.bool(True)
)


process.sistripconn = cms.ESProducer("SiStripConnectivity")


process.softPFElectronByIP2dComputer = cms.ESProducer("LeptonTaggerByIPESProducer",
    ipSign = cms.string('any'),
    use3d = cms.bool(False)
)


process.softPFElectronByIP3dComputer = cms.ESProducer("LeptonTaggerByIPESProducer",
    ipSign = cms.string('any'),
    use3d = cms.bool(True)
)


process.softPFElectronByPtComputer = cms.ESProducer("LeptonTaggerByPtESProducer",
    ipSign = cms.string('any')
)


process.softPFElectronComputer = cms.ESProducer("ElectronTaggerESProducer",
    gbrForestLabel = cms.string('btag_SoftPFElectron_BDT'),
    ipSign = cms.string('any'),
    useAdaBoost = cms.bool(False),
    useCondDB = cms.bool(False),
    useGBRForest = cms.bool(True),
    weightFile = cms.FileInPath('RecoBTag/SoftLepton/data/SoftPFElectron_BDT.weights.xml.gz')
)


process.softPFMuonByIP2dComputer = cms.ESProducer("LeptonTaggerByIPESProducer",
    ipSign = cms.string('any'),
    use3d = cms.bool(False)
)


process.softPFMuonByIP3dComputer = cms.ESProducer("LeptonTaggerByIPESProducer",
    ipSign = cms.string('any'),
    use3d = cms.bool(True)
)


process.softPFMuonByPtComputer = cms.ESProducer("LeptonTaggerByPtESProducer",
    ipSign = cms.string('any')
)


process.softPFMuonComputer = cms.ESProducer("MuonTaggerESProducer",
    gbrForestLabel = cms.string('btag_SoftPFMuon_BDT'),
    ipSign = cms.string('any'),
    useAdaBoost = cms.bool(True),
    useCondDB = cms.bool(False),
    useGBRForest = cms.bool(True),
    weightFile = cms.FileInPath('RecoBTag/SoftLepton/data/SoftPFMuon_BDT.weights.xml.gz')
)


process.stripCPEESProducer = cms.ESProducer("StripCPEESProducer",
    ComponentName = cms.string('stripCPE'),
    ComponentType = cms.string('SimpleStripCPE'),
    parameters = cms.PSet(

    )
)


process.trackCounting3D2ndComputer = cms.ESProducer("TrackCountingESProducer",
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    deltaR = cms.double(-1.0),
    impactParameterType = cms.int32(0),
    max_pT = cms.double(500),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3),
    maximumDecayLength = cms.double(5.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    min_pT = cms.double(120),
    min_pT_dRcut = cms.double(0.5),
    minimumImpactParameter = cms.double(-1),
    nthTrack = cms.int32(2),
    trackQualityClass = cms.string('any'),
    useSignedImpactParameterSig = cms.bool(True),
    useVariableJTA = cms.bool(False)
)


process.trackCounting3D3rdComputer = cms.ESProducer("TrackCountingESProducer",
    a_dR = cms.double(-0.001053),
    a_pT = cms.double(0.005263),
    b_dR = cms.double(0.6263),
    b_pT = cms.double(0.3684),
    deltaR = cms.double(-1.0),
    impactParameterType = cms.int32(0),
    max_pT = cms.double(500),
    max_pT_dRcut = cms.double(0.1),
    max_pT_trackPTcut = cms.double(3),
    maximumDecayLength = cms.double(5.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    min_pT = cms.double(120),
    min_pT_dRcut = cms.double(0.5),
    minimumImpactParameter = cms.double(-1),
    nthTrack = cms.int32(3),
    trackQualityClass = cms.string('any'),
    useSignedImpactParameterSig = cms.bool(True),
    useVariableJTA = cms.bool(False)
)


process.trackerGeometryDB = cms.ESProducer("TrackerDigiGeometryESModule",
    alignmentsLabel = cms.string(''),
    appendToDataLabel = cms.string(''),
    applyAlignment = cms.bool(True),
    fromDDD = cms.bool(False)
)


process.trackerNumberingGeometryDB = cms.ESProducer("TrackerGeometricDetESModule",
    appendToDataLabel = cms.string(''),
    fromDD4hep = cms.bool(False),
    fromDDD = cms.bool(False)
)


process.trackerTopology = cms.ESProducer("TrackerTopologyEP",
    appendToDataLabel = cms.string('')
)


process.BTagRecord = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('JetTagComputerRecord')
)


process.GlobalTag = cms.ESSource("PoolDBESSource",
    DBParameters = cms.PSet(
        authenticationPath = cms.untracked.string(''),
        authenticationSystem = cms.untracked.int32(0),
        connectionTimeout = cms.untracked.int32(0),
        messageLevel = cms.untracked.int32(0),
        security = cms.untracked.string('')
    ),
    DumpStat = cms.untracked.bool(False),
    ReconnectEachRun = cms.untracked.bool(False),
    RefreshAlways = cms.untracked.bool(False),
    RefreshEachRun = cms.untracked.bool(False),
    RefreshOpenIOVs = cms.untracked.bool(False),
    connect = cms.string('frontier://FrontierProd/CMS_CONDITIONS'),
    globaltag = cms.string('130X_mcRun3_2023_realistic_v15'),
    pfnPostfix = cms.untracked.string(''),
    pfnPrefix = cms.untracked.string(''),
    snapshotTime = cms.string(''),
    toGet = cms.VPSet()
)


process.HcalTimeSlewEP = cms.ESSource("HcalTimeSlewEP",
    appendToDataLabel = cms.string('HBHE'),
    timeSlewParametersM2 = cms.VPSet(
        cms.PSet(
            slope = cms.double(-3.178648),
            tmax = cms.double(16.0),
            tzero = cms.double(23.960177)
        ),
        cms.PSet(
            slope = cms.double(-1.5610227),
            tmax = cms.double(10.0),
            tzero = cms.double(11.977461)
        ),
        cms.PSet(
            slope = cms.double(-1.075824),
            tmax = cms.double(6.25),
            tzero = cms.double(9.109694)
        )
    ),
    timeSlewParametersM3 = cms.VPSet(
        cms.PSet(
            cap = cms.double(6.0),
            tspar0 = cms.double(12.2999),
            tspar0_siPM = cms.double(0.0),
            tspar1 = cms.double(-2.19142),
            tspar1_siPM = cms.double(0.0),
            tspar2 = cms.double(0.0),
            tspar2_siPM = cms.double(0.0)
        ),
        cms.PSet(
            cap = cms.double(6.0),
            tspar0 = cms.double(15.5),
            tspar0_siPM = cms.double(0.0),
            tspar1 = cms.double(-3.2),
            tspar1_siPM = cms.double(0.0),
            tspar2 = cms.double(32.0),
            tspar2_siPM = cms.double(0.0)
        ),
        cms.PSet(
            cap = cms.double(6.0),
            tspar0 = cms.double(12.2999),
            tspar0_siPM = cms.double(0.0),
            tspar1 = cms.double(-2.19142),
            tspar1_siPM = cms.double(0.0),
            tspar2 = cms.double(0.0),
            tspar2_siPM = cms.double(0.0)
        ),
        cms.PSet(
            cap = cms.double(6.0),
            tspar0 = cms.double(12.2999),
            tspar0_siPM = cms.double(0.0),
            tspar1 = cms.double(-2.19142),
            tspar1_siPM = cms.double(0.0),
            tspar2 = cms.double(0.0),
            tspar2_siPM = cms.double(0.0)
        )
    )
)


process.HepPDTESSource = cms.ESSource("HepPDTESSource",
    pdtFileName = cms.FileInPath('SimGeneral/HepPDTESSource/data/pythiaparticle.tbl')
)


process.eegeom = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('EcalMappingRcd')
)


process.es_hardcode = cms.ESSource("HcalHardcodeCalibrations",
    GainWidthsForTrigPrims = cms.bool(False),
    HBRecalibration = cms.bool(False),
    HBmeanenergies = cms.FileInPath('CalibCalorimetry/HcalPlugins/data/meanenergiesHB.txt'),
    HBreCalibCutoff = cms.double(100.0),
    HERecalibration = cms.bool(False),
    HEmeanenergies = cms.FileInPath('CalibCalorimetry/HcalPlugins/data/meanenergiesHE.txt'),
    HEreCalibCutoff = cms.double(100.0),
    HFRecalParameterBlock = cms.PSet(
        HFdepthOneParameterA = cms.vdouble(
            0.004123, 0.00602, 0.008201, 0.010489, 0.013379,
            0.016997, 0.021464, 0.027371, 0.034195, 0.044807,
            0.058939, 0.125497
        ),
        HFdepthOneParameterB = cms.vdouble(
            -4e-06, -2e-06, 0.0, 4e-06, 1.5e-05,
            2.6e-05, 6.3e-05, 8.4e-05, 0.00016, 0.000107,
            0.000425, 0.000209
        ),
        HFdepthTwoParameterA = cms.vdouble(
            0.002861, 0.004168, 0.0064, 0.008388, 0.011601,
            0.014425, 0.018633, 0.023232, 0.028274, 0.035447,
            0.051579, 0.086593
        ),
        HFdepthTwoParameterB = cms.vdouble(
            -2e-06, -0.0, -7e-06, -6e-06, -2e-06,
            1e-06, 1.9e-05, 3.1e-05, 6.7e-05, 1.2e-05,
            0.000157, -3e-06
        )
    ),
    HFRecalibration = cms.bool(False),
    SiPMCharacteristics = cms.VPSet(
        cms.PSet(
            crosstalk = cms.double(0.0),
            nonlin1 = cms.double(1.0),
            nonlin2 = cms.double(0.0),
            nonlin3 = cms.double(0.0),
            pixels = cms.int32(36000)
        ),
        cms.PSet(
            crosstalk = cms.double(0.0),
            nonlin1 = cms.double(1.0),
            nonlin2 = cms.double(0.0),
            nonlin3 = cms.double(0.0),
            pixels = cms.int32(2500)
        ),
        cms.PSet(
            crosstalk = cms.double(0.17),
            nonlin1 = cms.double(1.00985),
            nonlin2 = cms.double(7.84089e-06),
            nonlin3 = cms.double(2.86282e-10),
            pixels = cms.int32(27370)
        ),
        cms.PSet(
            crosstalk = cms.double(0.196),
            nonlin1 = cms.double(1.00546),
            nonlin2 = cms.double(6.40239e-06),
            nonlin3 = cms.double(1.27011e-10),
            pixels = cms.int32(38018)
        ),
        cms.PSet(
            crosstalk = cms.double(0.17),
            nonlin1 = cms.double(1.00985),
            nonlin2 = cms.double(7.84089e-06),
            nonlin3 = cms.double(2.86282e-10),
            pixels = cms.int32(27370)
        ),
        cms.PSet(
            crosstalk = cms.double(0.196),
            nonlin1 = cms.double(1.00546),
            nonlin2 = cms.double(6.40239e-06),
            nonlin3 = cms.double(1.27011e-10),
            pixels = cms.int32(38018)
        ),
        cms.PSet(
            crosstalk = cms.double(0.0),
            nonlin1 = cms.double(1.0),
            nonlin2 = cms.double(0.0),
            nonlin3 = cms.double(0.0),
            pixels = cms.int32(0)
        )
    ),
    hb = cms.PSet(
        darkCurrent = cms.vdouble(0.0),
        doRadiationDamage = cms.bool(False),
        gain = cms.vdouble(0.19),
        gainWidth = cms.vdouble(0.0),
        mcShape = cms.int32(125),
        noiseCorrelation = cms.vdouble(0.0),
        pedestal = cms.double(3.285),
        pedestalWidth = cms.double(0.809),
        photoelectronsToAnalog = cms.double(0.3305),
        qieOffset = cms.vdouble(-0.49, 1.8, 7.2, 37.9),
        qieSlope = cms.vdouble(0.912, 0.917, 0.922, 0.923),
        qieType = cms.int32(0),
        recoShape = cms.int32(105),
        zsThreshold = cms.int32(8)
    ),
    hbUpgrade = cms.PSet(
        darkCurrent = cms.vdouble(0.01, 0.015),
        doRadiationDamage = cms.bool(True),
        gain = cms.vdouble(0.0006252),
        gainWidth = cms.vdouble(0),
        mcShape = cms.int32(206),
        noiseCorrelation = cms.vdouble(0.26, 0.254),
        pedestal = cms.double(17.3),
        pedestalWidth = cms.double(1.5),
        photoelectronsToAnalog = cms.double(40.0),
        qieOffset = cms.vdouble(0.0, 0.0, 0.0, 0.0),
        qieSlope = cms.vdouble(0.05376, 0.05376, 0.05376, 0.05376),
        qieType = cms.int32(2),
        radiationDamage = cms.PSet(
            depVsNeutrons = cms.vdouble(5.543e-10, 8.012e-10),
            depVsTemp = cms.double(0.0631),
            intlumiOffset = cms.double(150),
            intlumiToNeutrons = cms.double(367000000.0),
            temperatureBase = cms.double(20),
            temperatureNew = cms.double(-5)
        ),
        recoShape = cms.int32(208),
        zsThreshold = cms.int32(16)
    ),
    he = cms.PSet(
        darkCurrent = cms.vdouble(0.0),
        doRadiationDamage = cms.bool(False),
        gain = cms.vdouble(0.23),
        gainWidth = cms.vdouble(0),
        mcShape = cms.int32(125),
        noiseCorrelation = cms.vdouble(0.0),
        pedestal = cms.double(3.163),
        pedestalWidth = cms.double(0.9698),
        photoelectronsToAnalog = cms.double(0.3305),
        qieOffset = cms.vdouble(-0.38, 2.0, 7.6, 39.6),
        qieSlope = cms.vdouble(0.912, 0.916, 0.92, 0.922),
        qieType = cms.int32(0),
        recoShape = cms.int32(105),
        zsThreshold = cms.int32(9)
    ),
    heUpgrade = cms.PSet(
        darkCurrent = cms.vdouble(0.01, 0.015),
        doRadiationDamage = cms.bool(True),
        gain = cms.vdouble(0.0006252),
        gainWidth = cms.vdouble(0),
        mcShape = cms.int32(206),
        noiseCorrelation = cms.vdouble(0.26, 0.254),
        pedestal = cms.double(17.3),
        pedestalWidth = cms.double(1.5),
        photoelectronsToAnalog = cms.double(40.0),
        qieOffset = cms.vdouble(0.0, 0.0, 0.0, 0.0),
        qieSlope = cms.vdouble(0.05376, 0.05376, 0.05376, 0.05376),
        qieType = cms.int32(2),
        radiationDamage = cms.PSet(
            depVsNeutrons = cms.vdouble(5.543e-10, 8.012e-10),
            depVsTemp = cms.double(0.0631),
            intlumiOffset = cms.double(75),
            intlumiToNeutrons = cms.double(29200000.0),
            temperatureBase = cms.double(20),
            temperatureNew = cms.double(5)
        ),
        recoShape = cms.int32(208),
        zsThreshold = cms.int32(16)
    ),
    hf = cms.PSet(
        darkCurrent = cms.vdouble(0.0),
        doRadiationDamage = cms.bool(False),
        gain = cms.vdouble(0.14, 0.135),
        gainWidth = cms.vdouble(0.0, 0.0),
        mcShape = cms.int32(301),
        noiseCorrelation = cms.vdouble(0.0),
        pedestal = cms.double(9.354),
        pedestalWidth = cms.double(2.516),
        photoelectronsToAnalog = cms.double(0.0),
        qieOffset = cms.vdouble(-0.87, 1.4, 7.8, -29.6),
        qieSlope = cms.vdouble(0.359, 0.358, 0.36, 0.367),
        qieType = cms.int32(0),
        recoShape = cms.int32(301),
        zsThreshold = cms.int32(-9999)
    ),
    hfUpgrade = cms.PSet(
        darkCurrent = cms.vdouble(0.0),
        doRadiationDamage = cms.bool(False),
        gain = cms.vdouble(0.14, 0.135),
        gainWidth = cms.vdouble(0.0, 0.0),
        mcShape = cms.int32(301),
        noiseCorrelation = cms.vdouble(0.0),
        pedestal = cms.double(13.33),
        pedestalWidth = cms.double(3.33),
        photoelectronsToAnalog = cms.double(0.0),
        qieOffset = cms.vdouble(0.0697, -0.7405, 12.38, -671.9),
        qieSlope = cms.vdouble(0.297, 0.298, 0.298, 0.313),
        qieType = cms.int32(1),
        recoShape = cms.int32(301),
        zsThreshold = cms.int32(-9999)
    ),
    ho = cms.PSet(
        darkCurrent = cms.vdouble(0.0),
        doRadiationDamage = cms.bool(False),
        gain = cms.vdouble(0.006, 0.0087),
        gainWidth = cms.vdouble(0.0, 0.0),
        mcShape = cms.int32(201),
        noiseCorrelation = cms.vdouble(0.0),
        pedestal = cms.double(12.06),
        pedestalWidth = cms.double(0.6285),
        photoelectronsToAnalog = cms.double(4.0),
        qieOffset = cms.vdouble(-0.44, 1.4, 7.1, 38.5),
        qieSlope = cms.vdouble(0.907, 0.915, 0.92, 0.921),
        qieType = cms.int32(0),
        recoShape = cms.int32(201),
        zsThreshold = cms.int32(24)
    ),
    iLumi = cms.double(-1.0),
    killHE = cms.bool(False),
    testHEPlan1 = cms.bool(False),
    testHFQIE10 = cms.bool(False),
    toGet = cms.untracked.vstring('GainWidths'),
    useHBUpgrade = cms.bool(True),
    useHEUpgrade = cms.bool(True),
    useHFUpgrade = cms.bool(True),
    useHOUpgrade = cms.bool(True),
    useIeta18depth1 = cms.bool(False),
    useLayer0Weight = cms.bool(True)
)


process.essourceEcalSev = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('EcalSeverityLevelAlgoRcd')
)


process.essourceSev = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('HcalSeverityLevelComputerRcd')
)


process.loadRecoTauTagMVAsFromPrepDB = cms.ESSource("PoolDBESSource",
    DBParameters = cms.PSet(
        authenticationPath = cms.untracked.string(''),
        authenticationSystem = cms.untracked.int32(0),
        connectionTimeout = cms.untracked.int32(0),
        messageLevel = cms.untracked.int32(0),
        security = cms.untracked.string('')
    ),
    DumpStat = cms.untracked.bool(False),
    ReconnectEachRun = cms.untracked.bool(False),
    RefreshAlways = cms.untracked.bool(False),
    RefreshEachRun = cms.untracked.bool(False),
    RefreshOpenIOVs = cms.untracked.bool(False),
    connect = cms.string('frontier://FrontierProd/CMS_CONDITIONS'),
    globaltag = cms.string(''),
    pfnPostfix = cms.untracked.string(''),
    pfnPrefix = cms.untracked.string(''),
    snapshotTime = cms.string(''),
    toGet = cms.VPSet( (
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAoldDMwoLTv1'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAoldDMwoLTv1')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAoldDMwoLTv1_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAoldDMwoLTv1_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAoldDMwoLTv1_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAoldDMwoLTv1_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAoldDMwoLTv1_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAoldDMwoLTv1_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAoldDMwoLTv1_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAoldDMwoLTv1_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAoldDMwoLTv1_WPEff50'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAoldDMwoLTv1_WPEff50')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAoldDMwoLTv1_WPEff40'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAoldDMwoLTv1_WPEff40')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAoldDMwoLTv1_mvaOutput_normalization'),
            record = cms.string('PhysicsTFormulaPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAoldDMwoLTv1_mvaOutput_normalization')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAoldDMwLTv1'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAoldDMwLTv1')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAoldDMwLTv1_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAoldDMwLTv1_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAoldDMwLTv1_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAoldDMwLTv1_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAoldDMwLTv1_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAoldDMwLTv1_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAoldDMwLTv1_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAoldDMwLTv1_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAoldDMwLTv1_WPEff50'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAoldDMwLTv1_WPEff50')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAoldDMwLTv1_WPEff40'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAoldDMwLTv1_WPEff40')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAoldDMwLTv1_mvaOutput_normalization'),
            record = cms.string('PhysicsTFormulaPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAoldDMwLTv1_mvaOutput_normalization')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAnewDMwoLTv1'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAnewDMwoLTv1')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAnewDMwoLTv1_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAnewDMwoLTv1_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAnewDMwoLTv1_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAnewDMwoLTv1_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAnewDMwoLTv1_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAnewDMwoLTv1_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAnewDMwoLTv1_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAnewDMwoLTv1_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAnewDMwoLTv1_WPEff50'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAnewDMwoLTv1_WPEff50')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAnewDMwoLTv1_WPEff40'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAnewDMwoLTv1_WPEff40')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAnewDMwoLTv1_mvaOutput_normalization'),
            record = cms.string('PhysicsTFormulaPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAnewDMwoLTv1_mvaOutput_normalization')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAnewDMwLTv1'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAnewDMwLTv1')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAnewDMwLTv1_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAnewDMwLTv1_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAnewDMwLTv1_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAnewDMwLTv1_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAnewDMwLTv1_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAnewDMwLTv1_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAnewDMwLTv1_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAnewDMwLTv1_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAnewDMwLTv1_WPEff50'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAnewDMwLTv1_WPEff50')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAnewDMwLTv1_WPEff40'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAnewDMwLTv1_WPEff40')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAnewDMwLTv1_mvaOutput_normalization'),
            record = cms.string('PhysicsTFormulaPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAnewDMwLTv1_mvaOutput_normalization')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBoldDMwLTv1'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBoldDMwLTv1')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBoldDMwLTv1_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBoldDMwLTv1_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBoldDMwLTv1_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBoldDMwLTv1_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBoldDMwLTv1_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBoldDMwLTv1_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBoldDMwLTv1_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBoldDMwLTv1_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBoldDMwLTv1_WPEff50'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBoldDMwLTv1_WPEff50')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBoldDMwLTv1_WPEff40'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBoldDMwLTv1_WPEff40')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBoldDMwLTv1_mvaOutput_normalization'),
            record = cms.string('PhysicsTFormulaPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBoldDMwLTv1_mvaOutput_normalization')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBnewDMwLTv1'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBnewDMwLTv1')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBnewDMwLTv1_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBnewDMwLTv1_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBnewDMwLTv1_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBnewDMwLTv1_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBnewDMwLTv1_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBnewDMwLTv1_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBnewDMwLTv1_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBnewDMwLTv1_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBnewDMwLTv1_WPEff50'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBnewDMwLTv1_WPEff50')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBnewDMwLTv1_WPEff40'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBnewDMwLTv1_WPEff40')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBnewDMwLTv1_mvaOutput_normalization'),
            record = cms.string('PhysicsTFormulaPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBnewDMwLTv1_mvaOutput_normalization')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWoldDMwLTv1'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWoldDMwLTv1')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWoldDMwLTv1_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWoldDMwLTv1_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWoldDMwLTv1_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWoldDMwLTv1_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWoldDMwLTv1_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWoldDMwLTv1_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWoldDMwLTv1_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWoldDMwLTv1_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWoldDMwLTv1_WPEff50'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWoldDMwLTv1_WPEff50')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWoldDMwLTv1_WPEff40'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWoldDMwLTv1_WPEff40')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWoldDMwLTv1_mvaOutput_normalization'),
            record = cms.string('PhysicsTFormulaPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWoldDMwLTv1_mvaOutput_normalization')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWnewDMwLTv1'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWnewDMwLTv1')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWnewDMwLTv1_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWnewDMwLTv1_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWnewDMwLTv1_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWnewDMwLTv1_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWnewDMwLTv1_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWnewDMwLTv1_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWnewDMwLTv1_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWnewDMwLTv1_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWnewDMwLTv1_WPEff50'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWnewDMwLTv1_WPEff50')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWnewDMwLTv1_WPEff40'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWnewDMwLTv1_WPEff40')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWnewDMwLTv1_mvaOutput_normalization'),
            record = cms.string('PhysicsTFormulaPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWnewDMwLTv1_mvaOutput_normalization')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBdR03oldDMwLTv1'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBdR03oldDMwLTv1')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBdR03oldDMwLTv1_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBdR03oldDMwLTv1_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBdR03oldDMwLTv1_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBdR03oldDMwLTv1_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBdR03oldDMwLTv1_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBdR03oldDMwLTv1_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBdR03oldDMwLTv1_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBdR03oldDMwLTv1_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBdR03oldDMwLTv1_WPEff50'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBdR03oldDMwLTv1_WPEff50')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBdR03oldDMwLTv1_WPEff40'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBdR03oldDMwLTv1_WPEff40')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVADBdR03oldDMwLTv1_mvaOutput_normalization'),
            record = cms.string('PhysicsTFormulaPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVADBdR03oldDMwLTv1_mvaOutput_normalization')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWdR03oldDMwLTv1'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWdR03oldDMwLTv1')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWdR03oldDMwLTv1_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWdR03oldDMwLTv1_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWdR03oldDMwLTv1_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWdR03oldDMwLTv1_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWdR03oldDMwLTv1_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWdR03oldDMwLTv1_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWdR03oldDMwLTv1_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWdR03oldDMwLTv1_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWdR03oldDMwLTv1_WPEff50'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWdR03oldDMwLTv1_WPEff50')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWdR03oldDMwLTv1_WPEff40'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWdR03oldDMwLTv1_WPEff40')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAPWdR03oldDMwLTv1_mvaOutput_normalization'),
            record = cms.string('PhysicsTFormulaPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAPWdR03oldDMwLTv1_mvaOutput_normalization')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2016v1'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2016v1')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2016v1_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2016v1_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2016v1_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2016v1_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2016v1_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2016v1_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2016v1_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2016v1_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2016v1_WPEff50'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2016v1_WPEff50')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2016v1_WPEff40'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2016v1_WPEff40')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2016v1_mvaOutput_normalization'),
            record = cms.string('PhysicsTFormulaPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2016v1_mvaOutput_normalization')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2016v1'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2016v1')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2016v1_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2016v1_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2016v1_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2016v1_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2016v1_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2016v1_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2016v1_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2016v1_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2016v1_WPEff50'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2016v1_WPEff50')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2016v1_WPEff40'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2016v1_WPEff40')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2016v1_mvaOutput_normalization'),
            record = cms.string('PhysicsTFormulaPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2016v1_mvaOutput_normalization')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v1'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v1')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v1_WPEff95'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v1_WPEff95')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v1_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v1_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v1_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v1_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v1_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v1_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v1_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v1_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v1_WPEff50'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v1_WPEff50')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v1_WPEff40'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v1_WPEff40')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v1_mvaOutput_normalization'),
            record = cms.string('PhysicsTFormulaPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v1_mvaOutput_normalization')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v2'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v2')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v2_WPEff95'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v2_WPEff95')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v2_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v2_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v2_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v2_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v2_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v2_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v2_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v2_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v2_WPEff50'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v2_WPEff50')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v2_WPEff40'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v2_WPEff40')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v2_mvaOutput_normalization'),
            record = cms.string('PhysicsTFormulaPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMwLT2017v2_mvaOutput_normalization')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2017v2'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2017v2')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2017v2_WPEff95'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2017v2_WPEff95')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2017v2_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2017v2_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2017v2_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2017v2_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2017v2_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2017v2_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2017v2_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2017v2_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2017v2_WPEff50'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2017v2_WPEff50')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2017v2_WPEff40'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2017v2_WPEff40')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2017v2_mvaOutput_normalization'),
            record = cms.string('PhysicsTFormulaPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBnewDMwLT2017v2_mvaOutput_normalization')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMdR0p3wLT2017v2'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMdR0p3wLT2017v2')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMdR0p3wLT2017v2_WPEff95'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMdR0p3wLT2017v2_WPEff95')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMdR0p3wLT2017v2_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMdR0p3wLT2017v2_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMdR0p3wLT2017v2_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMdR0p3wLT2017v2_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMdR0p3wLT2017v2_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMdR0p3wLT2017v2_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMdR0p3wLT2017v2_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMdR0p3wLT2017v2_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMdR0p3wLT2017v2_WPEff50'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMdR0p3wLT2017v2_WPEff50')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMdR0p3wLT2017v2_WPEff40'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMdR0p3wLT2017v2_WPEff40')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoDBoldDMdR0p3wLT2017v2_mvaOutput_normalization'),
            record = cms.string('PhysicsTFormulaPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoDBoldDMdR0p3wLT2017v2_mvaOutput_normalization')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoPhase2_v1'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoPhase2')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoPhase2_v1_WPEff95'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoPhase2_WPEff95')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoPhase2_v1_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoPhase2_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoPhase2_v1_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoPhase2_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoPhase2_v1_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoPhase2_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoPhase2_v1_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoPhase2_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoPhase2_v1_WPEff50'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoPhase2_WPEff50')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoPhase2_v1_WPEff40'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoPhase2_WPEff40')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_tauIdMVAIsoPhase2_v1_mvaOutput_normalization'),
            record = cms.string('PhysicsTFormulaPayloadRcd'),
            tag = cms.string('RecoTauTag_tauIdMVAIsoPhase2_mvaOutput_normalization')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_BL'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_BL')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_BL_WPeff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_BL_WPeff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_BL_WPeff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_BL_WPeff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_BL_WPeff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_BL_WPeff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_BL_WPeff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_BL_WPeff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_BL_WPeff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_BL_WPeff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_BL'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_BL')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_BL_WPeff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_BL_WPeff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_BL_WPeff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_BL_WPeff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_BL_WPeff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_BL_WPeff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_BL_WPeff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_BL_WPeff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_BL_WPeff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_BL_WPeff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_BL'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_BL')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_BL_WPeff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_BL_WPeff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_BL_WPeff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_BL_WPeff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_BL_WPeff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_BL_WPeff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_BL_WPeff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_BL_WPeff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_BL_WPeff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_BL_WPeff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_BL'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_BL')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_BL_WPeff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_BL_WPeff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_BL_WPeff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_BL_WPeff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_BL_WPeff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_BL_WPeff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_BL_WPeff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_BL_WPeff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_BL_WPeff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_BL_WPeff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_BL'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_BL')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_BL_WPeff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_BL_WPeff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_BL_WPeff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_BL_WPeff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_BL_WPeff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_BL_WPeff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_BL_WPeff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_BL_WPeff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_BL_WPeff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_BL_WPeff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_BL'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_BL')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_BL_WPeff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_BL_WPeff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_BL_WPeff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_BL_WPeff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_BL_WPeff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_BL_WPeff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_BL_WPeff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_BL_WPeff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_BL_WPeff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_BL_WPeff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_BL'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_BL')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_BL_WPeff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_BL_WPeff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_BL_WPeff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_BL_WPeff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_BL_WPeff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_BL_WPeff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_BL_WPeff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_BL_WPeff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_BL_WPeff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_BL_WPeff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_BL'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_BL')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_BL_WPeff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_BL_WPeff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_BL_WPeff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_BL_WPeff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_BL_WPeff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_BL_WPeff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_BL_WPeff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_BL_WPeff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_BL_WPeff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_BL_WPeff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_EC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_EC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_EC_WPeff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_EC_WPeff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_EC_WPeff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_EC_WPeff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_EC_WPeff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_EC_WPeff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_EC_WPeff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_EC_WPeff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_EC_WPeff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwoGSF_EC_WPeff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_EC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_EC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_EC_WPeff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_EC_WPeff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_EC_WPeff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_EC_WPeff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_EC_WPeff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_EC_WPeff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_EC_WPeff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_EC_WPeff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_EC_WPeff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_woGwGSF_EC_WPeff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_EC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_EC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_EC_WPeff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_EC_WPeff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_EC_WPeff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_EC_WPeff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_EC_WPeff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_EC_WPeff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_EC_WPeff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_EC_WPeff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_EC_WPeff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwoGSF_EC_WPeff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_EC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_EC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_EC_WPeff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_EC_WPeff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_EC_WPeff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_EC_WPeff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_EC_WPeff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_EC_WPeff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_EC_WPeff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_EC_WPeff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_EC_WPeff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_EC_WPeff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_EC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_EC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_EC_WPeff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_EC_WPeff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_EC_WPeff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_EC_WPeff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_EC_WPeff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_EC_WPeff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_EC_WPeff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_EC_WPeff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_EC_WPeff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwoGSF_EC_WPeff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_EC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_EC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_EC_WPeff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_EC_WPeff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_EC_WPeff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_EC_WPeff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_EC_WPeff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_EC_WPeff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_EC_WPeff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_EC_WPeff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_EC_WPeff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_woGwGSF_EC_WPeff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_EC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_EC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_EC_WPeff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_EC_WPeff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_EC_WPeff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_EC_WPeff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_EC_WPeff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_EC_WPeff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_EC_WPeff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_EC_WPeff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_EC_WPeff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwoGSF_EC_WPeff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_EC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_EC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_EC_WPeff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_EC_WPeff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_EC_WPeff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_EC_WPeff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_EC_WPeff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_EC_WPeff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_EC_WPeff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_EC_WPeff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_EC_WPeff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA5v1_gbr_wGwGSF_EC_WPeff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_BL'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_BL')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_BL_WPEff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_BL_WPEff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_BL_WPEff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_BL_WPEff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_BL_WPEff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_BL_WPEff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_BL_WPEff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_BL_WPEff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_BL_WPEff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_BL_WPEff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_BL'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_BL')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_BL_WPEff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_BL_WPEff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_BL_WPEff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_BL_WPEff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_BL_WPEff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_BL_WPEff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_BL_WPEff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_BL_WPEff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_BL_WPEff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_BL_WPEff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_BL'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_BL')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_BL_WPEff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_BL_WPEff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_BL_WPEff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_BL_WPEff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_BL_WPEff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_BL_WPEff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_BL_WPEff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_BL_WPEff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_BL_WPEff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_BL_WPEff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_BL'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_BL')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_BL_WPEff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_BL_WPEff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_BL_WPEff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_BL_WPEff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_BL_WPEff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_BL_WPEff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_BL_WPEff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_BL_WPEff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_BL_WPEff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_BL_WPEff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_EC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_EC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_EC_WPEff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_EC_WPEff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_EC_WPEff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_EC_WPEff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_EC_WPEff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_EC_WPEff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_EC_WPEff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_EC_WPEff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_EC_WPEff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_woGwoGSF_EC_WPEff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_EC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_EC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_EC_WPEff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_EC_WPEff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_EC_WPEff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_EC_WPEff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_EC_WPEff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_EC_WPEff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_EC_WPEff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_EC_WPEff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_EC_WPEff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_NoEleMatch_wGwoGSF_EC_WPEff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_EC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_EC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_EC_WPEff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_EC_WPEff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_EC_WPEff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_EC_WPEff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_EC_WPEff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_EC_WPEff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_EC_WPEff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_EC_WPEff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_EC_WPEff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_woGwGSF_EC_WPEff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_EC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_EC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_EC_WPEff99'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_EC_WPEff99')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_EC_WPEff96'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_EC_WPEff96')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_EC_WPEff91'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_EC_WPEff91')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_EC_WPEff85'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_EC_WPEff85')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_EC_WPEff79'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v1_gbr_wGwGSF_EC_WPEff79')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_BL'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_BL')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_BL_WPeff98'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_BL_WPeff98')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_BL_WPeff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_BL_WPeff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_BL_WPeff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_BL_WPeff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_BL_WPeff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_BL_WPeff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_BL_WPeff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_BL_WPeff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_BL'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_BL')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_BL_WPeff98'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_BL_WPeff98')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_BL_WPeff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_BL_WPeff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_BL_WPeff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_BL_WPeff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_BL_WPeff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_BL_WPeff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_BL_WPeff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_BL_WPeff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_BL'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_BL')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_BL_WPeff98'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_BL_WPeff98')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_BL_WPeff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_BL_WPeff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_BL_WPeff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_BL_WPeff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_BL_WPeff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_BL_WPeff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_BL_WPeff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_BL_WPeff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_BL'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_BL')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_BL_WPeff98'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_BL_WPeff98')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_BL_WPeff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_BL_WPeff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_BL_WPeff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_BL_WPeff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_BL_WPeff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_BL_WPeff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_BL_WPeff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_BL_WPeff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_EC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_EC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_EC_WPeff98'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_EC_WPeff98')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_EC_WPeff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_EC_WPeff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_EC_WPeff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_EC_WPeff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_EC_WPeff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_EC_WPeff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_EC_WPeff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_woGwoGSF_EC_WPeff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_EC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_EC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_EC_WPeff98'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_EC_WPeff98')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_EC_WPeff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_EC_WPeff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_EC_WPeff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_EC_WPeff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_EC_WPeff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_EC_WPeff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_EC_WPeff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_NoEleMatch_wGwoGSF_EC_WPeff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_EC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_EC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_EC_WPeff98'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_EC_WPeff98')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_EC_WPeff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_EC_WPeff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_EC_WPeff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_EC_WPeff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_EC_WPeff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_EC_WPeff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_EC_WPeff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_woGwGSF_EC_WPeff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_EC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_EC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_EC_WPeff98'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_EC_WPeff98')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_EC_WPeff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_EC_WPeff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_EC_WPeff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_EC_WPeff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_EC_WPeff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_EC_WPeff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_EC_WPeff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronMVA6v3_noeveto_gbr_wGwGSF_EC_WPeff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_BL'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_BL')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_BL_WPEff98'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_BL_WPEff98')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_BL_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_BL_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_BL_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_BL_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_BL_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_BL_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_BL_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_BL_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_BL'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_BL')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_BL_WPEff98'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_BL_WPEff98')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_BL_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_BL_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_BL_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_BL_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_BL_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_BL_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_BL_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_BL_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_BL'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_BL')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_BL_WPEff98'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_BL_WPEff98')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_BL_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_BL_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_BL_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_BL_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_BL_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_BL_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_BL_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_BL_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_BL'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_BL')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_BL_WPEff98'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_BL_WPEff98')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_BL_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_BL_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_BL_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_BL_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_BL_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_BL_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_BL_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_BL_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_FWEC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_FWEC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_FWEC_WPEff98'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_FWEC_WPEff98')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_FWEC_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_FWEC_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_FWEC_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_FWEC_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_FWEC_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_FWEC_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_FWEC_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_FWEC_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_VFWEC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_VFWEC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_VFWEC_WPEff98'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_VFWEC_WPEff98')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_VFWEC_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_VFWEC_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_VFWEC_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_VFWEC_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_VFWEC_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_VFWEC_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_VFWEC_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_woGwoGSF_VFWEC_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_FWEC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_FWEC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_FWEC_WPEff98'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_FWEC_WPEff98')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_FWEC_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_FWEC_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_FWEC_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_FWEC_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_FWEC_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_FWEC_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_FWEC_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_FWEC_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_VFWEC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_VFWEC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_VFWEC_WPEff98'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_VFWEC_WPEff98')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_VFWEC_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_VFWEC_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_VFWEC_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_VFWEC_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_VFWEC_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_VFWEC_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_VFWEC_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_NoEleMatch_wGwoGSF_VFWEC_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_FWEC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_FWEC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_FWEC_WPEff98'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_FWEC_WPEff98')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_FWEC_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_FWEC_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_FWEC_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_FWEC_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_FWEC_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_FWEC_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_FWEC_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_FWEC_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_VFWEC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_VFWEC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_VFWEC_WPEff98'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_VFWEC_WPEff98')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_VFWEC_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_VFWEC_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_VFWEC_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_VFWEC_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_VFWEC_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_VFWEC_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_VFWEC_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_woGwGSF_VFWEC_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_FWEC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_FWEC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_FWEC_WPEff98'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_FWEC_WPEff98')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_FWEC_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_FWEC_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_FWEC_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_FWEC_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_FWEC_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_FWEC_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_FWEC_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_FWEC_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_VFWEC'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_VFWEC')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_VFWEC_WPEff98'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_VFWEC_WPEff98')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_VFWEC_WPEff90'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_VFWEC_WPEff90')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_VFWEC_WPEff80'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_VFWEC_WPEff80')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_VFWEC_WPEff70'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_VFWEC_WPEff70')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_VFWEC_WPEff60'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_antiElectronPhase2MVA6v1_gbr_wGwGSF_VFWEC_WPEff60')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_againstMuonMVAv1'),
            record = cms.string('GBRWrapperRcd'),
            tag = cms.string('RecoTauTag_againstMuonMVAv1')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_againstMuonMVAv1_WPeff99_5'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_againstMuonMVAv1_WPeff99_5')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_againstMuonMVAv1_WPeff99_0'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_againstMuonMVAv1_WPeff99_0')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_againstMuonMVAv1_WPeff98_0'),
            record = cms.string('PhysicsTGraphPayloadRcd'),
            tag = cms.string('RecoTauTag_againstMuonMVAv1_WPeff98_0')
        ),
        cms.PSet(
            label = cms.untracked.string('RecoTauTag_againstMuonMVAv1_mvaOutput_normalization'),
            record = cms.string('PhysicsTFormulaPayloadRcd'),
            tag = cms.string('RecoTauTag_againstMuonMVAv1_mvaOutput_normalization')
        )
     ) )
)


process.prefer("es_hardcode")

process.metFilterPathsTask = cms.Task(process.BadChargedCandidateFilter, process.BadChargedCandidateSummer16Filter, process.BadPFMuonDzFilter, process.BadPFMuonFilter, process.BadPFMuonSummer16Filter, process.CSCTightHalo2015Filter, process.CSCTightHaloFilter, process.CSCTightHaloTrkMuUnvetoFilter, process.EcalDeadCellBoundaryEnergyFilter, process.EcalDeadCellTriggerPrimitiveFilter, process.HBHENoiseFilter, process.HBHENoiseFilterResultProducer, process.HBHENoiseIsoFilter, process.HcalStripHaloFilter, process.chargedHadronTrackResolutionFilter, process.ecalBadCalibFilter, process.ecalLaserCorrFilter, process.eeBadScFilter, process.globalSuperTightHalo2016Filter, process.globalTightHalo2016Filter, process.goodVertices, process.hcalLaserEventFilter, process.hfNoisyHitsFilter, process.logErrorTooManyClusters, process.manystripclus53X, process.muonBadTrackFilter, process.primaryVertexFilter, process.toomanystripclus53X, process.trackingFailureFilter)


process.ak4CaloL1FastL2L3CorrectorTask = cms.Task(process.ak4CaloL1FastL2L3Corrector, process.ak4CaloL1FastjetCorrector, process.ak4CaloL2RelativeCorrector, process.ak4CaloL3AbsoluteCorrector)


process.ak4CaloL1FastL2L3L6CorrectorTask = cms.Task(process.ak4CaloL1FastL2L3L6Corrector, process.ak4CaloL1FastjetCorrector, process.ak4CaloL2RelativeCorrector, process.ak4CaloL3AbsoluteCorrector, process.ak4CaloL6SLBCorrector)


process.ak4CaloL1FastL2L3ResidualCorrectorTask = cms.Task(process.ak4CaloL1FastL2L3ResidualCorrector, process.ak4CaloL1FastjetCorrector, process.ak4CaloL2RelativeCorrector, process.ak4CaloL3AbsoluteCorrector, process.ak4CaloResidualCorrector)


process.ak4CaloL1L2L3CorrectorTask = cms.Task(process.ak4CaloL1L2L3Corrector, process.ak4CaloL1OffsetCorrector, process.ak4CaloL2RelativeCorrector, process.ak4CaloL3AbsoluteCorrector)


process.ak4CaloL1L2L3ResidualCorrectorTask = cms.Task(process.ak4CaloL1L2L3ResidualCorrector, process.ak4CaloL1OffsetCorrector, process.ak4CaloL2RelativeCorrector, process.ak4CaloL3AbsoluteCorrector, process.ak4CaloResidualCorrector)


process.ak4CaloL2L3CorrectorTask = cms.Task(process.ak4CaloL2L3Corrector, process.ak4CaloL2RelativeCorrector, process.ak4CaloL3AbsoluteCorrector)


process.ak4CaloL2L3L6CorrectorTask = cms.Task(process.ak4CaloL2L3L6Corrector, process.ak4CaloL2RelativeCorrector, process.ak4CaloL3AbsoluteCorrector, process.ak4CaloL6SLBCorrector)


process.ak4CaloL2L3ResidualCorrectorTask = cms.Task(process.ak4CaloL2L3ResidualCorrector, process.ak4CaloL2RelativeCorrector, process.ak4CaloL3AbsoluteCorrector, process.ak4CaloResidualCorrector)


process.ak4L1JPTFastjetCorrectorTask = cms.Task(process.ak4CaloL1FastjetCorrector, process.ak4L1JPTFastjetCorrector)


process.ak4L1JPTOffsetCorrectorTask = cms.Task(process.ak4CaloL1OffsetCorrector, process.ak4L1JPTOffsetCorrector)


process.ak4PFCHSL1FastL2L3CorrectorTask = cms.Task(process.ak4PFCHSL1FastL2L3Corrector, process.ak4PFCHSL1FastjetCorrector, process.ak4PFCHSL2RelativeCorrector, process.ak4PFCHSL3AbsoluteCorrector)


process.ak4PFCHSL1FastL2L3ResidualCorrectorTask = cms.Task(process.ak4PFCHSL1FastL2L3ResidualCorrector, process.ak4PFCHSL1FastjetCorrector, process.ak4PFCHSL2RelativeCorrector, process.ak4PFCHSL3AbsoluteCorrector, process.ak4PFCHSResidualCorrector)


process.ak4PFCHSL1L2L3CorrectorTask = cms.Task(process.ak4PFCHSL1L2L3Corrector, process.ak4PFCHSL1OffsetCorrector, process.ak4PFCHSL2RelativeCorrector, process.ak4PFCHSL3AbsoluteCorrector)


process.ak4PFCHSL1L2L3ResidualCorrectorTask = cms.Task(process.ak4PFCHSL1L2L3ResidualCorrector, process.ak4PFCHSL1OffsetCorrector, process.ak4PFCHSL2RelativeCorrector, process.ak4PFCHSL3AbsoluteCorrector, process.ak4PFCHSResidualCorrector)


process.ak4PFCHSL2L3CorrectorTask = cms.Task(process.ak4PFCHSL2L3Corrector, process.ak4PFCHSL2RelativeCorrector, process.ak4PFCHSL3AbsoluteCorrector)


process.ak4PFCHSL2L3ResidualCorrectorTask = cms.Task(process.ak4PFCHSL2L3ResidualCorrector, process.ak4PFCHSL2RelativeCorrector, process.ak4PFCHSL3AbsoluteCorrector, process.ak4PFCHSResidualCorrector)


process.ak4PFL1FastL2L3CorrectorTask = cms.Task(process.ak4PFL1FastL2L3Corrector, process.ak4PFL1FastjetCorrector, process.ak4PFL2RelativeCorrector, process.ak4PFL3AbsoluteCorrector)


process.ak4PFL1FastL2L3L6CorrectorTask = cms.Task(process.ak4PFL1FastL2L3L6Corrector, process.ak4PFL1FastjetCorrector, process.ak4PFL2RelativeCorrector, process.ak4PFL3AbsoluteCorrector, process.ak4PFL6SLBCorrector)


process.ak4PFL1FastL2L3ResidualCorrectorTask = cms.Task(process.ak4PFL1FastL2L3ResidualCorrector, process.ak4PFL1FastjetCorrector, process.ak4PFL2RelativeCorrector, process.ak4PFL3AbsoluteCorrector, process.ak4PFResidualCorrector)


process.ak4PFL1L2L3CorrectorTask = cms.Task(process.ak4PFL1L2L3Corrector, process.ak4PFL1OffsetCorrector, process.ak4PFL2RelativeCorrector, process.ak4PFL3AbsoluteCorrector)


process.ak4PFL1L2L3ResidualCorrectorTask = cms.Task(process.ak4PFL1L2L3ResidualCorrector, process.ak4PFL1OffsetCorrector, process.ak4PFL2RelativeCorrector, process.ak4PFL3AbsoluteCorrector, process.ak4PFResidualCorrector)


process.ak4PFL2L3CorrectorTask = cms.Task(process.ak4PFL2L3Corrector, process.ak4PFL2RelativeCorrector, process.ak4PFL3AbsoluteCorrector)


process.ak4PFL2L3L6CorrectorTask = cms.Task(process.ak4PFL2L3L6Corrector, process.ak4PFL2RelativeCorrector, process.ak4PFL3AbsoluteCorrector, process.ak4PFL6SLBCorrector)


process.ak4PFL2L3ResidualCorrectorTask = cms.Task(process.ak4PFL2L3ResidualCorrector, process.ak4PFL2RelativeCorrector, process.ak4PFL3AbsoluteCorrector, process.ak4PFResidualCorrector)


process.ak4PFPuppiL1FastL2L3CorrectorTask = cms.Task(process.ak4PFPuppiL1FastL2L3Corrector, process.ak4PFPuppiL1FastjetCorrector, process.ak4PFPuppiL2RelativeCorrector, process.ak4PFPuppiL3AbsoluteCorrector)


process.ak4PFPuppiL1FastL2L3ResidualCorrectorTask = cms.Task(process.ak4PFPuppiL1FastL2L3ResidualCorrector, process.ak4PFPuppiL1FastjetCorrector, process.ak4PFPuppiL2RelativeCorrector, process.ak4PFPuppiL3AbsoluteCorrector, process.ak4PFPuppiResidualCorrector)


process.ak4PFPuppiL1L2L3CorrectorTask = cms.Task(process.ak4PFPuppiL1L2L3Corrector, process.ak4PFPuppiL1OffsetCorrector, process.ak4PFPuppiL2RelativeCorrector, process.ak4PFPuppiL3AbsoluteCorrector)


process.ak4PFPuppiL1L2L3ResidualCorrectorTask = cms.Task(process.ak4PFPuppiL1L2L3ResidualCorrector, process.ak4PFPuppiL1OffsetCorrector, process.ak4PFPuppiL2RelativeCorrector, process.ak4PFPuppiL3AbsoluteCorrector, process.ak4PFPuppiResidualCorrector)


process.ak4PFPuppiL2L3CorrectorTask = cms.Task(process.ak4PFPuppiL2L3Corrector, process.ak4PFPuppiL2RelativeCorrector, process.ak4PFPuppiL3AbsoluteCorrector)


process.ak4PFPuppiL2L3ResidualCorrectorTask = cms.Task(process.ak4PFPuppiL2L3ResidualCorrector, process.ak4PFPuppiL2RelativeCorrector, process.ak4PFPuppiL3AbsoluteCorrector, process.ak4PFPuppiResidualCorrector)


process.ak4TrackL2L3CorrectorTask = cms.Task(process.ak4TrackL2L3Corrector, process.ak4TrackL2RelativeCorrector, process.ak4TrackL3AbsoluteCorrector)


process.ak5JTAExplicitTask = cms.Task(process.ak5JetTracksAssociatorExplicit)


process.ak5JTATask = cms.Task(process.ak5JetExtender, process.ak5JetTracksAssociatorAtCaloFace, process.ak5JetTracksAssociatorAtVertex, process.ak5JetTracksAssociatorAtVertexPF)


process.correctionTermsCaloMetTask = cms.Task(process.ak4CaloL2L3CorrectorTask, process.ak4CaloL2L3ResidualCorrectorTask, process.corrCaloMetType1, process.corrCaloMetType2, process.muCaloMetCorr)


process.correctionTermsPfMetType1Type2Task = cms.Task(process.ak4PFCHSL1FastL2L3CorrectorTask, process.ak4PFCHSL1FastL2L3ResidualCorrectorTask, process.corrPfMetType1, process.corrPfMetType2, process.particleFlowPtrs, process.pfCandMETcorr, process.pfCandsNotInJetsForMetCorr, process.pfCandsNotInJetsPtrForMetCorr, process.pfJetsPtrForMetCorr)


process.electronPFIsolationDepositsPATTask = cms.Task(process.elPFIsoDepositChargedAllPAT, process.elPFIsoDepositChargedPAT, process.elPFIsoDepositGammaPAT, process.elPFIsoDepositNeutralPAT, process.elPFIsoDepositPUPAT)


process.electronPFIsolationValuesPATTask = cms.Task(process.elPFIsoValueCharged03NoPFIdPAT, process.elPFIsoValueCharged03PFIdPAT, process.elPFIsoValueCharged04NoPFIdPAT, process.elPFIsoValueCharged04PFIdPAT, process.elPFIsoValueChargedAll03NoPFIdPAT, process.elPFIsoValueChargedAll03PFIdPAT, process.elPFIsoValueChargedAll04NoPFIdPAT, process.elPFIsoValueChargedAll04PFIdPAT, process.elPFIsoValueGamma03NoPFIdPAT, process.elPFIsoValueGamma03PFIdPAT, process.elPFIsoValueGamma04NoPFIdPAT, process.elPFIsoValueGamma04PFIdPAT, process.elPFIsoValueNeutral03NoPFIdPAT, process.elPFIsoValueNeutral03PFIdPAT, process.elPFIsoValueNeutral04NoPFIdPAT, process.elPFIsoValueNeutral04PFIdPAT, process.elPFIsoValuePU03NoPFIdPAT, process.elPFIsoValuePU03PFIdPAT, process.elPFIsoValuePU04NoPFIdPAT, process.elPFIsoValuePU04PFIdPAT)


process.filteredDisplacedMuonsTask = cms.Task(process.filteredDisplacedMuons)


process.genParticlesTask = cms.Task(process.packedGenParticles, process.prunedGenParticles, process.prunedGenParticlesWithStatusOne)


process.hiCleanedGenJetsTask_ = cms.Task(process.ak4HiGenJets, process.ak4HiGenJetsCleaned, process.allPartons, process.cleanedPartons, process.genParticlesForJets)


process.hiGenJetsTask = cms.Task(process.ak4HiGenJets, process.ak4HiSignalGenJets, process.allPartons, process.genParticlesForJets, process.hiSignalGenParticles)


process.makePatDisplacedMuonsTask = cms.Task(process.filteredDisplacedMuonsTask, process.patDisplacedMuons)


process.makePatLowPtElectronsTask = cms.Task(process.lowPtElectronMatch, process.patLowPtElectrons)


process.makePatOOTPhotonsTask = cms.Task(process.ootPhotonMatch, process.patOOTPhotons)


process.muonPFIsolationDepositsPATTask = cms.Task(process.muPFIsoDepositChargedAllPAT, process.muPFIsoDepositChargedPAT, process.muPFIsoDepositGammaPAT, process.muPFIsoDepositNeutralPAT, process.muPFIsoDepositPUPAT)


process.muonPFIsolationValuesPATTask = cms.Task(process.muPFIsoValueCharged03PAT, process.muPFIsoValueCharged04PAT, process.muPFIsoValueChargedAll03PAT, process.muPFIsoValueChargedAll04PAT, process.muPFIsoValueGamma03PAT, process.muPFIsoValueGamma04PAT, process.muPFIsoValueGammaHighThreshold03PAT, process.muPFIsoValueGammaHighThreshold04PAT, process.muPFIsoValueNeutral03PAT, process.muPFIsoValueNeutral04PAT, process.muPFIsoValueNeutralHighThreshold03PAT, process.muPFIsoValueNeutralHighThreshold04PAT, process.muPFIsoValuePU03PAT, process.muPFIsoValuePU04PAT, process.muPFMeanDRIsoValueCharged03PAT, process.muPFMeanDRIsoValueCharged04PAT, process.muPFMeanDRIsoValueChargedAll03PAT, process.muPFMeanDRIsoValueChargedAll04PAT, process.muPFMeanDRIsoValueGamma03PAT, process.muPFMeanDRIsoValueGamma04PAT, process.muPFMeanDRIsoValueGammaHighThreshold03PAT, process.muPFMeanDRIsoValueGammaHighThreshold04PAT, process.muPFMeanDRIsoValueNeutral03PAT, process.muPFMeanDRIsoValueNeutral04PAT, process.muPFMeanDRIsoValueNeutralHighThreshold03PAT, process.muPFMeanDRIsoValueNeutralHighThreshold04PAT, process.muPFMeanDRIsoValuePU03PAT, process.muPFMeanDRIsoValuePU04PAT, process.muPFSumDRIsoValueCharged03PAT, process.muPFSumDRIsoValueCharged04PAT, process.muPFSumDRIsoValueChargedAll03PAT, process.muPFSumDRIsoValueChargedAll04PAT, process.muPFSumDRIsoValueGamma03PAT, process.muPFSumDRIsoValueGamma04PAT, process.muPFSumDRIsoValueGammaHighThreshold03PAT, process.muPFSumDRIsoValueGammaHighThreshold04PAT, process.muPFSumDRIsoValueNeutral03PAT, process.muPFSumDRIsoValueNeutral04PAT, process.muPFSumDRIsoValueNeutralHighThreshold03PAT, process.muPFSumDRIsoValueNeutralHighThreshold04PAT, process.muPFSumDRIsoValuePU03PAT, process.muPFSumDRIsoValuePU04PAT)


process.ootPhotonTask = cms.Task(process.ootPhotonCore, process.ootPhotons, process.ootPhotonsTmp, process.particleFlowClusterOOTECAL, process.particleFlowClusterOOTECALUncorrected, process.particleFlowRecHitOOTECAL, process.particleFlowSuperClusterOOTECAL)


process.packedCandidateToGenAssociationTask = cms.Task(process.lostTracksToGenAssociation, process.packedPFCandidateToGenAssociation)


process.patJetCorrectionsTask = cms.Task(process.patJetCorrFactors)


process.patJetFlavourIdLegacyTask = cms.Task(process.patJetFlavourAssociationLegacy, process.patJetPartonAssociationLegacy, process.patJetPartonsLegacy)


process.patJetFlavourIdTask = cms.Task(process.patJetFlavourAssociation, process.patJetPartons)


process.patMETCorrectionsTask = cms.Task(process.caloMetT1, process.caloMetT1T2, process.correctionTermsCaloMetTask, process.correctionTermsPfMetType1Type2Task, process.pfMetT1, process.pfMetT1T2)


process.patPFTauIsolationTask = cms.Task(process.tauIsoDepositPFCandidates, process.tauIsoDepositPFChargedHadrons, process.tauIsoDepositPFGammas, process.tauIsoDepositPFNeutralHadrons)


process.pfDeepCSVTask = cms.Task(process.pfDeepCMVAJetTags, process.pfDeepCMVATagInfos, process.pfDeepCSVJetTags, process.pfDeepCSVTagInfos)


process.pfElectronIsolationPATTask = cms.Task(process.electronPFIsolationDepositsPATTask, process.electronPFIsolationValuesPATTask)


process.pfNoPileUpIsoPFBRECOTask = cms.Task(process.pfNoPileUpIsoPFBRECO, process.pfPileUpIsoPFBRECO)


process.pfNoPileUpJMETask = cms.Task(process.goodOfflinePrimaryVertices, process.pfNoPileUpJME, process.pfPileUpJME)


process.pfNoPileUpPFBRECOTask = cms.Task(process.pfNoPileUpPFBRECO, process.pfPileUpPFBRECO)


process.pfSortByTypePFBRECOTask = cms.Task(process.pfAllChargedHadronsPFBRECO, process.pfAllChargedParticlesPFBRECO, process.pfAllNeutralHadronsAndPhotonsPFBRECO, process.pfAllNeutralHadronsPFBRECO, process.pfAllPhotonsPFBRECO, process.pfPileUpAllChargedParticlesPFBRECO)


process.photonPFIsolationDepositsPATTask = cms.Task(process.phPFIsoDepositChargedAllPAT, process.phPFIsoDepositChargedPAT, process.phPFIsoDepositGammaPAT, process.phPFIsoDepositNeutralPAT, process.phPFIsoDepositPUPAT)


process.photonPFIsolationValuesPATTask = cms.Task(process.phPFIsoValueCharged03PFIdPAT, process.phPFIsoValueCharged04PFIdPAT, process.phPFIsoValueChargedAll03PFIdPAT, process.phPFIsoValueChargedAll04PFIdPAT, process.phPFIsoValueGamma03PFIdPAT, process.phPFIsoValueGamma04PFIdPAT, process.phPFIsoValueNeutral03PFIdPAT, process.phPFIsoValueNeutral04PFIdPAT, process.phPFIsoValuePU03PFIdPAT, process.phPFIsoValuePU04PFIdPAT)


process.recoGenJetsHIpostAODTask = cms.Task(process.allPartons, process.hiGenJetsTask)


process.recoPFJetsHIpostAODTask = cms.Task(process.PackedPFTowers, process.ak4PFJetsForFlow, process.ak5JetTracksAssociatorAtVertex, process.akCs4PFJets, process.combinedSecondaryVertexV2BJetTags, process.hiFJRhoFlowModulation, process.hiPuRho, process.highPurityGeneralTracks, process.impactParameterTagInfos, process.jetBProbabilityBJetTags, process.jetProbabilityBJetTags, process.patJetCorrFactors, process.pfEmptyCollection, process.secondaryVertexTagInfos, process.simpleSecondaryVertexHighEffBJetTags, process.simpleSecondaryVertexHighPurBJetTags, process.trackCountingHighEffBJetTags, process.trackCountingHighPurBJetTags)


process.selectedPatCandidatesTask = cms.Task(process.selectedPatDisplacedMuons, process.selectedPatElectrons, process.selectedPatJets, process.selectedPatLowPtElectrons, process.selectedPatMuons, process.selectedPatOOTPhotons, process.selectedPatPhotons, process.selectedPatTaus)


process.slimmedLowPtElectronsTask = cms.Task(process.lowPtGsfLinks, process.slimmedLowPtElectrons)


process.updateHPSPFTausTask = cms.Task(process.hpsPFTauBasicDiscriminators)


process.jetCleaning_task = cms.Task(process.cleanedPatJets)


process.getJetCollectionForCorsAndUncs_task = cms.Task(process.basicJetsForMet, process.jetSelectorForMet)


process.patPFMetSmearCorrTask = cms.Task(process.patPFMetT1T2SmearCorr, process.patSmearedJets, process.selectedPatJetsForMetT1T2SmearCorr)


process.patPFMetT1T2CorrTask = cms.Task(process.patPFMetT1T2Corr, process.selectedPatJetsForMetT1T2Corr)


process.patPFMetT2CorrTask = cms.Task(process.patPFMetT2Corr)


process.patPFMetT2SmearCorrTask = cms.Task(process.patPFMetT1T2SmearCorr, process.patPFMetT2SmearCorr, process.patSmearedJets, process.selectedPatJetsForMetT1T2SmearCorr, process.selectedPatJetsForMetT2SmearCorr)


process.patPFMetTxyCorrTask = cms.Task(process.patPFMetTxyCorr)


process.type0PFMEtCorrectionPFCandToVertexAssociationTask = cms.Task(process.particleFlowDisplacedVertex, process.pfCandidateToVertexAssociation, process.selectedPrimaryVertexHighestPtTrackSumForPFMEtCorrType0, process.selectedVerticesForPFMEtCorrType0)


process.type0PFMEtCorrectionTask = cms.Task(process.pfMETcorrType0, process.type0PFMEtCorrectionPFCandToVertexAssociationTask)


process.patShiftedModuleTask = cms.Task()


process.createShiftedModules_task = cms.Task(process.shiftedPatElectronEnDown, process.shiftedPatElectronEnUp, process.shiftedPatJetEnDown, process.shiftedPatJetEnUp, process.shiftedPatJetResDown, process.shiftedPatJetResUp, process.shiftedPatMETCorrElectronEnDown, process.shiftedPatMETCorrElectronEnUp, process.shiftedPatMETCorrJetEnDown, process.shiftedPatMETCorrJetEnUp, process.shiftedPatMETCorrJetResDown, process.shiftedPatMETCorrJetResUp, process.shiftedPatMETCorrMuonEnDown, process.shiftedPatMETCorrMuonEnUp, process.shiftedPatMETCorrPhotonEnDown, process.shiftedPatMETCorrPhotonEnUp, process.shiftedPatMETCorrSmearedJetResDown, process.shiftedPatMETCorrSmearedJetResUp, process.shiftedPatMETCorrTauEnDown, process.shiftedPatMETCorrTauEnUp, process.shiftedPatMETCorrUnclusteredEnDown, process.shiftedPatMETCorrUnclusteredEnUp, process.shiftedPatMuonEnDown, process.shiftedPatMuonEnUp, process.shiftedPatPhotonEnDown, process.shiftedPatPhotonEnUp, process.shiftedPatSmearedJetResDown, process.shiftedPatSmearedJetResUp, process.shiftedPatTauEnDown, process.shiftedPatTauEnUp, process.shiftedPatUnclusteredEnDown, process.shiftedPatUnclusteredEnUp)


process.getMETUncertainties_task = cms.Task(process.patPFMetT1ElectronEnDown, process.patPFMetT1ElectronEnUp, process.patPFMetT1JetEnDown, process.patPFMetT1JetEnUp, process.patPFMetT1JetResDown, process.patPFMetT1JetResUp, process.patPFMetT1MuonEnDown, process.patPFMetT1MuonEnUp, process.patPFMetT1PhotonEnDown, process.patPFMetT1PhotonEnUp, process.patPFMetT1SmearElectronEnDown, process.patPFMetT1SmearElectronEnUp, process.patPFMetT1SmearJetEnDown, process.patPFMetT1SmearJetEnUp, process.patPFMetT1SmearJetResDown, process.patPFMetT1SmearJetResUp, process.patPFMetT1SmearMuonEnDown, process.patPFMetT1SmearMuonEnUp, process.patPFMetT1SmearPhotonEnDown, process.patPFMetT1SmearPhotonEnUp, process.patPFMetT1SmearTauEnDown, process.patPFMetT1SmearTauEnUp, process.patPFMetT1SmearUnclusteredEnDown, process.patPFMetT1SmearUnclusteredEnUp, process.patPFMetT1TauEnDown, process.patPFMetT1TauEnUp, process.patPFMetT1UnclusteredEnDown, process.patPFMetT1UnclusteredEnUp, process.pfCandsForUnclusteredUnc, process.pfCandsNoJets, process.pfCandsNoJetsNoEle, process.pfCandsNoJetsNoEleNoMu, process.pfCandsNoJetsNoEleNoMuNoTau, process.pfElectrons, process.pfMuons, process.pfNoPileUp, process.pfPhotons, process.pfTaus)


process.patMETCorrectionsTaskNoHF = cms.Task(process.ak4CaloL2L3CorrectorNoHF, process.ak4CaloL2L3ResidualCorrectorNoHF, process.ak4CaloL2RelativeCorrectorNoHF, process.ak4CaloL3AbsoluteCorrectorNoHF, process.ak4CaloResidualCorrectorNoHF, process.ak4PFCHSL1FastL2L3CorrectorNoHF, process.ak4PFCHSL1FastL2L3ResidualCorrectorNoHF, process.ak4PFCHSL1FastjetCorrectorNoHF, process.ak4PFCHSL2RelativeCorrectorNoHF, process.ak4PFCHSL3AbsoluteCorrectorNoHF, process.ak4PFCHSResidualCorrectorNoHF, process.caloMetT1NoHF, process.caloMetT1T2NoHF, process.corrCaloMetType1NoHF, process.corrCaloMetType2NoHF, process.corrPfMetType1NoHF, process.corrPfMetType2NoHF, process.muCaloMetCorrNoHF, process.particleFlowPtrsNoHF, process.pfCandMETcorrNoHF, process.pfCandsNotInJetsForMetCorrNoHF, process.pfCandsNotInJetsPtrForMetCorrNoHF, process.pfJetsPtrForMetCorrNoHF, process.pfMetT1NoHF, process.pfMetT1T2NoHF)


process.jetCleaning_taskNoHF = cms.Task(process.cleanedPatJetsNoHF)


process.getJetCollectionForCorsAndUncs_taskNoHF = cms.Task(process.basicJetsForMetNoHF, process.jetSelectorForMetNoHF)


process.producePatPFMETCorrectionsTaskNoHF = cms.Task(process.particleFlowDisplacedVertex, process.patPFMetNoHF, process.patPFMetT0CorrNoHF, process.patPFMetT0pcT1NoHF, process.patPFMetT0pcT1T2NoHF, process.patPFMetT1NoHF, process.patPFMetT1T2CorrNoHF, process.patPFMetT1T2NoHF, process.patPFMetT2CorrNoHF, process.pfCandMETcorrNoHF, process.pfCandidateToVertexAssociation, process.pfCandsNotInJetsForMetCorrNoHF, process.selectedPatJetsForMetT1T2CorrNoHF, process.selectedPatJetsForMetT2CorrNoHF, process.selectedPrimaryVertexHighestPtTrackSumForPFMEtCorrType0NoHF, process.selectedVerticesForPFMEtCorrType0NoHF)


process.produceMET_taskNoHF = cms.Task(process.patPFMetNoHF, process.producePatPFMETCorrectionsTaskNoHF)


process.patPFMetT0CorrTaskNoHF = cms.Task(process.particleFlowDisplacedVertex, process.patPFMetT0CorrNoHF, process.pfCandidateToVertexAssociation, process.selectedPrimaryVertexHighestPtTrackSumForPFMEtCorrType0NoHF, process.selectedVerticesForPFMEtCorrType0NoHF)


process.patPFMetT1T2CorrTaskNoHF = cms.Task(process.patPFMetT1T2CorrNoHF, process.selectedPatJetsForMetT1T2CorrNoHF)


process.patPFMetT2CorrTaskNoHF = cms.Task(process.patPFMetT2CorrNoHF)


process.patPFMetTxyCorrTaskNoHF = cms.Task(process.patPFMetTxyCorrNoHF)


process.patPFMetSmearCorrTaskNoHF = cms.Task(process.patPFMetT1T2SmearCorrNoHF, process.patSmearedJetsNoHF, process.selectedPatJetsForMetT1T2SmearCorrNoHF)


process.patPFMetT2SmearCorrTaskNoHF = cms.Task(process.patPFMetT1T2SmearCorrNoHF, process.patPFMetT2SmearCorrNoHF, process.patSmearedJetsNoHF, process.selectedPatJetsForMetT1T2SmearCorrNoHF, process.selectedPatJetsForMetT2SmearCorrNoHF)


process.getCorrectedMET_taskNoHF = cms.Task(process.patPFMetSmearCorrTaskNoHF, process.patPFMetSmearNoHF, process.patPFMetSmearTxyNoHF, process.patPFMetT0CorrTaskNoHF, process.patPFMetT0pcNoHF, process.patPFMetT0pcSmearNoHF, process.patPFMetT0pcSmearTxyNoHF, process.patPFMetT0pcT1NoHF, process.patPFMetT0pcT1SmearNoHF, process.patPFMetT0pcT1SmearTxyNoHF, process.patPFMetT0pcT1T2NoHF, process.patPFMetT0pcT1T2SmearNoHF, process.patPFMetT0pcT1T2SmearTxyNoHF, process.patPFMetT0pcT1T2TxyNoHF, process.patPFMetT0pcT1TxyNoHF, process.patPFMetT0pcT2NoHF, process.patPFMetT0pcT2SmearNoHF, process.patPFMetT0pcT2SmearTxyNoHF, process.patPFMetT0pcT2TxyNoHF, process.patPFMetT0pcTxyNoHF, process.patPFMetT1NoHF, process.patPFMetT1SmearNoHF, process.patPFMetT1SmearTxyNoHF, process.patPFMetT1T2CorrTaskNoHF, process.patPFMetT1T2NoHF, process.patPFMetT1T2SmearNoHF, process.patPFMetT1T2SmearTxyNoHF, process.patPFMetT1T2TxyNoHF, process.patPFMetT1TxyNoHF, process.patPFMetT2CorrTaskNoHF, process.patPFMetT2NoHF, process.patPFMetT2SmearCorrTaskNoHF, process.patPFMetT2SmearNoHF, process.patPFMetT2SmearTxyNoHF, process.patPFMetT2TxyNoHF, process.patPFMetTxyCorrTaskNoHF, process.patPFMetTxyNoHF)


process.patMetCorrectionTaskNoHF = cms.Task(process.getCorrectedMET_taskNoHF)


process.patShiftedModuleTaskNoHF = cms.Task()


process.createShiftedModules_taskNoHF = cms.Task(process.shiftedPatElectronEnDownNoHF, process.shiftedPatElectronEnUpNoHF, process.shiftedPatJetEnDownNoHF, process.shiftedPatJetEnUpNoHF, process.shiftedPatJetResDownNoHF, process.shiftedPatJetResUpNoHF, process.shiftedPatMETCorrElectronEnDownNoHF, process.shiftedPatMETCorrElectronEnUpNoHF, process.shiftedPatMETCorrJetEnDownNoHF, process.shiftedPatMETCorrJetEnUpNoHF, process.shiftedPatMETCorrJetResDownNoHF, process.shiftedPatMETCorrJetResUpNoHF, process.shiftedPatMETCorrMuonEnDownNoHF, process.shiftedPatMETCorrMuonEnUpNoHF, process.shiftedPatMETCorrPhotonEnDownNoHF, process.shiftedPatMETCorrPhotonEnUpNoHF, process.shiftedPatMETCorrSmearedJetResDownNoHF, process.shiftedPatMETCorrSmearedJetResUpNoHF, process.shiftedPatMETCorrTauEnDownNoHF, process.shiftedPatMETCorrTauEnUpNoHF, process.shiftedPatMETCorrUnclusteredEnDownNoHF, process.shiftedPatMETCorrUnclusteredEnUpNoHF, process.shiftedPatMuonEnDownNoHF, process.shiftedPatMuonEnUpNoHF, process.shiftedPatPhotonEnDownNoHF, process.shiftedPatPhotonEnUpNoHF, process.shiftedPatSmearedJetResDownNoHF, process.shiftedPatSmearedJetResUpNoHF, process.shiftedPatTauEnDownNoHF, process.shiftedPatTauEnUpNoHF, process.shiftedPatUnclusteredEnDownNoHF, process.shiftedPatUnclusteredEnUpNoHF)


process.getMETUncertainties_taskNoHF = cms.Task(process.patPFMetT1ElectronEnDownNoHF, process.patPFMetT1ElectronEnUpNoHF, process.patPFMetT1JetEnDownNoHF, process.patPFMetT1JetEnUpNoHF, process.patPFMetT1JetResDownNoHF, process.patPFMetT1JetResUpNoHF, process.patPFMetT1MuonEnDownNoHF, process.patPFMetT1MuonEnUpNoHF, process.patPFMetT1PhotonEnDownNoHF, process.patPFMetT1PhotonEnUpNoHF, process.patPFMetT1SmearElectronEnDownNoHF, process.patPFMetT1SmearElectronEnUpNoHF, process.patPFMetT1SmearJetEnDownNoHF, process.patPFMetT1SmearJetEnUpNoHF, process.patPFMetT1SmearJetResDownNoHF, process.patPFMetT1SmearJetResUpNoHF, process.patPFMetT1SmearMuonEnDownNoHF, process.patPFMetT1SmearMuonEnUpNoHF, process.patPFMetT1SmearPhotonEnDownNoHF, process.patPFMetT1SmearPhotonEnUpNoHF, process.patPFMetT1SmearTauEnDownNoHF, process.patPFMetT1SmearTauEnUpNoHF, process.patPFMetT1SmearUnclusteredEnDownNoHF, process.patPFMetT1SmearUnclusteredEnUpNoHF, process.patPFMetT1TauEnDownNoHF, process.patPFMetT1TauEnUpNoHF, process.patPFMetT1UnclusteredEnDownNoHF, process.patPFMetT1UnclusteredEnUpNoHF, process.pfCandsForUnclusteredUncNoHF, process.pfCandsNoJetsNoEleNoHF, process.pfCandsNoJetsNoEleNoMuNoHF, process.pfCandsNoJetsNoEleNoMuNoTauNoHF, process.pfCandsNoJetsNoHF, process.pfElectronsNoHF, process.pfMuonsNoHF, process.pfNoPileUpNoHF, process.pfPhotonsNoHF, process.pfTausNoHF)


process.pfNoPileUpJMETaskNoHF = cms.Task(process.goodOfflinePrimaryVerticesNoHF, process.pfNoPileUpJMENoHF, process.pfPileUpJMENoHF)


process.pileUpJetIDTask = cms.Task(process.pileupJetId, process.pileupJetIdCalculator, process.pileupJetIdEvaluator)


process.egmGsfElectronIDTask = cms.Task(process.egmGsfElectronIDs, process.electronMVAValueMapProducer)


process.gedGsfElectronsFrom80XTo106XTask = cms.Task(process.gedGsfElectronsFrom80XTo106X, process.heepIDVarValueMapsAOD)


process.gedGsfElectronsFrom94XTo106XTask = cms.Task(process.gedGsfElectronsFrom94XTo106X, process.heepIDVarValueMapsAOD)


process.egmPhotonIDTask = cms.Task(process.egmPhotonIDs, process.photonMVAValueMapProducer)


process.boostedHPSPFTausTask = cms.Task(process.boostedTauSeeds, process.ca8PFJetsCHSprunedForBoostedTaus, process.pfNoPileUpForBoostedTaus, process.pfPileUpForBoostedTaus)


process.hpsPFTauBasicDiscriminatorsTask = cms.Task(process.hpsPFTauBasicDiscriminators)


process.hpsPFTauBasicDiscriminatorsdR03Task = cms.Task(process.hpsPFTauBasicDiscriminatorsdR03)


process.hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTTask = cms.Task(process.hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLT, process.hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw)


process.hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTTask = cms.Task(process.hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLT, process.hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw)


process.hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTTask = cms.Task(process.hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLT, process.hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw)


process.hpsPFTauMVAIsolation2Task = cms.Task(process.hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTTask, process.hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTTask, process.hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTTask)


process.hpsPFTauVertexAndImpactParametersTask = cms.Task(process.hpsPFTauPrimaryVertexProducer, process.hpsPFTauSecondaryVertexProducer, process.hpsPFTauTransverseImpactParameters)


process.mvaIsolation2TaskRun2 = cms.Task(process.discriminationByIsolationMVArun2v1, process.discriminationByIsolationMVArun2v1raw, process.hpsPFTauBasicDiscriminators)


process.produceHPSPFTausTask = cms.Task(process.hpsPFTauProducer, process.hpsPFTauProducerSansRefs, process.hpsSelectionDiscriminator)


process.recoTauCommonTask = cms.Task(process.ak4PFJetTracksAssociatorAtVertex, process.pfRecoTauTagInfoProducer, process.recoTauAK4PFJets08Region, process.recoTauPileUpVertices)


process.rerunMvaIsolationTaskForMini = cms.Task(process.deepTau2017v2p1ForMini, process.deepTau2018v2p5ForMini, process.slimmedTaus)


process.patMETCorrectionsTaskPuppi = cms.Task(process.ak4CaloL2L3CorrectorPuppi, process.ak4CaloL2L3ResidualCorrectorPuppi, process.ak4CaloL2RelativeCorrectorPuppi, process.ak4CaloL3AbsoluteCorrectorPuppi, process.ak4CaloResidualCorrectorPuppi, process.ak4PFCHSL1FastL2L3CorrectorPuppi, process.ak4PFCHSL1FastL2L3ResidualCorrectorPuppi, process.ak4PFCHSL1FastjetCorrectorPuppi, process.ak4PFCHSL2RelativeCorrectorPuppi, process.ak4PFCHSL3AbsoluteCorrectorPuppi, process.ak4PFCHSResidualCorrectorPuppi, process.caloMetT1Puppi, process.caloMetT1T2Puppi, process.corrCaloMetType1Puppi, process.corrCaloMetType2Puppi, process.corrPfMetType1Puppi, process.corrPfMetType2Puppi, process.muCaloMetCorrPuppi, process.particleFlowPtrsPuppi, process.pfCandMETcorrPuppi, process.pfCandsNotInJetsForMetCorrPuppi, process.pfCandsNotInJetsPtrForMetCorrPuppi, process.pfJetsPtrForMetCorrPuppi, process.pfMetT1Puppi, process.pfMetT1T2Puppi)


process.ak4JetReclustering_taskPuppi = cms.Task()


process.jetCleaning_taskPuppi = cms.Task(process.cleanedPatJetsPuppi)


process.getJetCollectionForCorsAndUncs_taskPuppi = cms.Task(process.basicJetsForMetPuppi, process.jetSelectorForMetPuppi)


process.producePatPFMETCorrectionsTaskPuppi = cms.Task(process.particleFlowDisplacedVertex, process.patPFMetPuppi, process.patPFMetT0CorrPuppi, process.patPFMetT0pcT1Puppi, process.patPFMetT0pcT1T2Puppi, process.patPFMetT1Puppi, process.patPFMetT1T2CorrPuppi, process.patPFMetT1T2Puppi, process.patPFMetT2CorrPuppi, process.pfCandMETcorrPuppi, process.pfCandidateToVertexAssociation, process.pfCandsNotInJetsForMetCorrPuppi, process.selectedPatJetsForMetT1T2CorrPuppi, process.selectedPatJetsForMetT2CorrPuppi, process.selectedPrimaryVertexHighestPtTrackSumForPFMEtCorrType0Puppi, process.selectedVerticesForPFMEtCorrType0Puppi)


process.produceMET_taskPuppi = cms.Task(process.patPFMetPuppi, process.producePatPFMETCorrectionsTaskPuppi)


process.patPFMetT0CorrTaskPuppi = cms.Task(process.particleFlowDisplacedVertex, process.patPFMetT0CorrPuppi, process.pfCandidateToVertexAssociation, process.selectedPrimaryVertexHighestPtTrackSumForPFMEtCorrType0Puppi, process.selectedVerticesForPFMEtCorrType0Puppi)


process.patPFMetT1T2CorrTaskPuppi = cms.Task(process.patPFMetT1T2CorrPuppi, process.selectedPatJetsForMetT1T2CorrPuppi)


process.patPFMetT2CorrTaskPuppi = cms.Task(process.patPFMetT2CorrPuppi)


process.patPFMetTxyCorrTaskPuppi = cms.Task(process.patPFMetTxyCorrPuppi)


process.patPFMetSmearCorrTaskPuppi = cms.Task(process.patPFMetT1T2SmearCorrPuppi, process.patSmearedJetsPuppi, process.selectedPatJetsForMetT1T2SmearCorrPuppi)


process.patPFMetT2SmearCorrTaskPuppi = cms.Task(process.patPFMetT1T2SmearCorrPuppi, process.patPFMetT2SmearCorrPuppi, process.patSmearedJetsPuppi, process.selectedPatJetsForMetT1T2SmearCorrPuppi, process.selectedPatJetsForMetT2SmearCorrPuppi)


process.getCorrectedMET_taskPuppi = cms.Task(process.corrPfMetType1Puppi, process.patPFMetSmearCorrTaskPuppi, process.patPFMetSmearPuppi, process.patPFMetSmearTxyPuppi, process.patPFMetT0CorrTaskPuppi, process.patPFMetT0pcPuppi, process.patPFMetT0pcSmearPuppi, process.patPFMetT0pcSmearTxyPuppi, process.patPFMetT0pcT1Puppi, process.patPFMetT0pcT1SmearPuppi, process.patPFMetT0pcT1SmearTxyPuppi, process.patPFMetT0pcT1T2Puppi, process.patPFMetT0pcT1T2SmearPuppi, process.patPFMetT0pcT1T2SmearTxyPuppi, process.patPFMetT0pcT1T2TxyPuppi, process.patPFMetT0pcT1TxyPuppi, process.patPFMetT0pcT2Puppi, process.patPFMetT0pcT2SmearPuppi, process.patPFMetT0pcT2SmearTxyPuppi, process.patPFMetT0pcT2TxyPuppi, process.patPFMetT0pcTxyPuppi, process.patPFMetT1Puppi, process.patPFMetT1SmearPuppi, process.patPFMetT1SmearTxyPuppi, process.patPFMetT1T2CorrTaskPuppi, process.patPFMetT1T2Puppi, process.patPFMetT1T2SmearPuppi, process.patPFMetT1T2SmearTxyPuppi, process.patPFMetT1T2TxyPuppi, process.patPFMetT1TxyPuppi, process.patPFMetT2CorrTaskPuppi, process.patPFMetT2Puppi, process.patPFMetT2SmearCorrTaskPuppi, process.patPFMetT2SmearPuppi, process.patPFMetT2SmearTxyPuppi, process.patPFMetT2TxyPuppi, process.patPFMetTxyCorrTaskPuppi, process.patPFMetTxyPuppi)


process.patMetCorrectionTaskPuppi = cms.Task(process.getCorrectedMET_taskPuppi)


process.patShiftedModuleTaskPuppi = cms.Task()


process.createShiftedModules_taskPuppi = cms.Task(process.shiftedPatElectronEnDownPuppi, process.shiftedPatElectronEnUpPuppi, process.shiftedPatJetEnDownPuppi, process.shiftedPatJetEnUpPuppi, process.shiftedPatJetResDownPuppi, process.shiftedPatJetResUpPuppi, process.shiftedPatMETCorrElectronEnDownPuppi, process.shiftedPatMETCorrElectronEnUpPuppi, process.shiftedPatMETCorrJetEnDownPuppi, process.shiftedPatMETCorrJetEnUpPuppi, process.shiftedPatMETCorrJetResDownPuppi, process.shiftedPatMETCorrJetResUpPuppi, process.shiftedPatMETCorrMuonEnDownPuppi, process.shiftedPatMETCorrMuonEnUpPuppi, process.shiftedPatMETCorrPhotonEnDownPuppi, process.shiftedPatMETCorrPhotonEnUpPuppi, process.shiftedPatMETCorrSmearedJetResDownPuppi, process.shiftedPatMETCorrSmearedJetResUpPuppi, process.shiftedPatMETCorrTauEnDownPuppi, process.shiftedPatMETCorrTauEnUpPuppi, process.shiftedPatMETCorrUnclusteredEnDownPuppi, process.shiftedPatMETCorrUnclusteredEnUpPuppi, process.shiftedPatMuonEnDownPuppi, process.shiftedPatMuonEnUpPuppi, process.shiftedPatPhotonEnDownPuppi, process.shiftedPatPhotonEnUpPuppi, process.shiftedPatSmearedJetResDownPuppi, process.shiftedPatSmearedJetResUpPuppi, process.shiftedPatTauEnDownPuppi, process.shiftedPatTauEnUpPuppi, process.shiftedPatUnclusteredEnDownPuppi, process.shiftedPatUnclusteredEnUpPuppi)


process.getMETUncertainties_taskPuppi = cms.Task(process.patPFMetT1ElectronEnDownPuppi, process.patPFMetT1ElectronEnUpPuppi, process.patPFMetT1JetEnDownPuppi, process.patPFMetT1JetEnUpPuppi, process.patPFMetT1JetResDownPuppi, process.patPFMetT1JetResUpPuppi, process.patPFMetT1MuonEnDownPuppi, process.patPFMetT1MuonEnUpPuppi, process.patPFMetT1PhotonEnDownPuppi, process.patPFMetT1PhotonEnUpPuppi, process.patPFMetT1SmearElectronEnDownPuppi, process.patPFMetT1SmearElectronEnUpPuppi, process.patPFMetT1SmearJetEnDownPuppi, process.patPFMetT1SmearJetEnUpPuppi, process.patPFMetT1SmearJetResDownPuppi, process.patPFMetT1SmearJetResUpPuppi, process.patPFMetT1SmearMuonEnDownPuppi, process.patPFMetT1SmearMuonEnUpPuppi, process.patPFMetT1SmearPhotonEnDownPuppi, process.patPFMetT1SmearPhotonEnUpPuppi, process.patPFMetT1SmearTauEnDownPuppi, process.patPFMetT1SmearTauEnUpPuppi, process.patPFMetT1SmearUnclusteredEnDownPuppi, process.patPFMetT1SmearUnclusteredEnUpPuppi, process.patPFMetT1TauEnDownPuppi, process.patPFMetT1TauEnUpPuppi, process.patPFMetT1UnclusteredEnDownPuppi, process.patPFMetT1UnclusteredEnUpPuppi, process.pfCandsForUnclusteredUncPuppi, process.pfCandsNoJetsNoEleNoMuNoTauPuppi, process.pfCandsNoJetsNoEleNoMuPuppi, process.pfCandsNoJetsNoElePuppi, process.pfCandsNoJetsPuppi, process.pfElectronsPuppi, process.pfMuonsPuppi, process.pfNoPileUpPuppi, process.pfPhotonsPuppi, process.pfTausPuppi)


process.slimmedElectronsHGCTask = cms.Task(process.cleanedEcalDrivenGsfElectronsHGC, process.hgcElectronID, process.patElectronsHGC, process.selectedPatElectronsHGC, process.slimmedElectronsHGC)


process.slimmedPhotonsHGCTask = cms.Task(process.hgcPhotonID, process.patPhotonsHGC, process.selectedPatPhotonsHGC, process.slimmedPhotonsHGC)


process.ak4JPTL1FastL2L3CorrectorTask = cms.Task(process.ak4JPTL1FastL2L3Corrector, process.ak4JPTL2RelativeCorrector, process.ak4JPTL3AbsoluteCorrector, process.ak4L1JPTFastjetCorrectorTask)


process.ak4JPTL1FastL2L3ResidualCorrectorTask = cms.Task(process.ak4JPTL1FastL2L3ResidualCorrector, process.ak4JPTL2RelativeCorrector, process.ak4JPTL3AbsoluteCorrector, process.ak4JPTResidualCorrector, process.ak4L1JPTFastjetCorrectorTask)


process.ak4JPTL1L2L3CorrectorTask = cms.Task(process.ak4JPTL1L2L3Corrector, process.ak4JPTL2RelativeCorrector, process.ak4JPTL3AbsoluteCorrector, process.ak4L1JPTOffsetCorrectorTask)


process.ak4JPTL1L2L3ResidualCorrectorTask = cms.Task(process.ak4JPTL1L2L3ResidualCorrector, process.ak4JPTL2RelativeCorrector, process.ak4JPTL3AbsoluteCorrector, process.ak4JPTResidualCorrector, process.ak4L1JPTOffsetCorrectorTask)


process.ak4JPTL2L3CorrectorTask = cms.Task(process.ak4JPTL2L3Corrector, process.ak4JPTL2RelativeCorrector, process.ak4JPTL3AbsoluteCorrector, process.ak4L1JPTOffsetCorrectorTask)


process.ak4JPTL2L3ResidualCorrectorTask = cms.Task(process.ak4JPTL2L3ResidualCorrector, process.ak4JPTL2RelativeCorrector, process.ak4JPTL3AbsoluteCorrector, process.ak4JPTResidualCorrector, process.ak4L1JPTOffsetCorrectorTask)


process.jetCorrectorsTask = cms.Task(process.ak4CaloL1FastL2L3CorrectorTask, process.ak4CaloL1FastL2L3L6CorrectorTask, process.ak4CaloL1FastL2L3ResidualCorrectorTask, process.ak4CaloL1L2L3CorrectorTask, process.ak4CaloL1L2L3ResidualCorrectorTask, process.ak4CaloL2L3CorrectorTask, process.ak4CaloL2L3L6CorrectorTask, process.ak4CaloL2L3ResidualCorrectorTask, process.ak4JPTL1FastL2L3CorrectorTask, process.ak4JPTL1FastL2L3ResidualCorrectorTask, process.ak4JPTL1L2L3CorrectorTask, process.ak4JPTL1L2L3ResidualCorrectorTask, process.ak4JPTL2L3CorrectorTask, process.ak4JPTL2L3ResidualCorrectorTask, process.ak4L1JPTFastjetCorrectorTask, process.ak4L1JPTOffsetCorrectorTask, process.ak4PFCHSL1FastL2L3CorrectorTask, process.ak4PFCHSL1FastL2L3ResidualCorrectorTask, process.ak4PFCHSL1L2L3CorrectorTask, process.ak4PFCHSL1L2L3ResidualCorrectorTask, process.ak4PFCHSL2L3CorrectorTask, process.ak4PFCHSL2L3ResidualCorrectorTask, process.ak4PFL1FastL2L3CorrectorTask, process.ak4PFL1FastL2L3L6CorrectorTask, process.ak4PFL1FastL2L3ResidualCorrectorTask, process.ak4PFL1L2L3CorrectorTask, process.ak4PFL1L2L3ResidualCorrectorTask, process.ak4PFL2L3CorrectorTask, process.ak4PFL2L3L6CorrectorTask, process.ak4PFL2L3ResidualCorrectorTask, process.ak4PFPuppiL1FastL2L3CorrectorTask, process.ak4PFPuppiL1FastL2L3ResidualCorrectorTask, process.ak4PFPuppiL1L2L3CorrectorTask, process.ak4PFPuppiL1L2L3ResidualCorrectorTask, process.ak4PFPuppiL2L3CorrectorTask, process.ak4PFPuppiL2L3ResidualCorrectorTask, process.ak4TrackL2L3CorrectorTask)


process.makePatJetsTask = cms.Task(process.patJetCharge, process.patJetCorrectionsTask, process.patJetFlavourIdLegacyTask, process.patJetFlavourIdTask, process.patJetGenJetMatch, process.patJetPartonMatch, process.patJets)


process.makePatMETsTask = cms.Task(process.patMETCorrectionsTask, process.patMETs)


process.muonPFIsolationPATTask = cms.Task(process.muonPFIsolationDepositsPATTask, process.muonPFIsolationValuesPATTask)


process.packedPFCandidatesTask = cms.Task(process.packedPFCandidates, process.pfNoPileUpJMETask, process.pfNoPileUpPFBRECO, process.pfPileUpPFBRECO)


process.patHPSPFTauDiscriminationTask = cms.Task(process.updateHPSPFTausTask)


process.patPFCandidateIsoDepositSelectionTask = cms.Task(process.pfNoPileUpIsoPFBRECOTask, process.pfSortByTypePFBRECOTask)


process.pfParticleSelectionPFBRECOTask = cms.Task(process.pfNoPileUpIsoPFBRECOTask, process.pfNoPileUpPFBRECOTask, process.pfSortByTypePFBRECOTask)


process.pfPhotonIsolationPATTask = cms.Task(process.photonPFIsolationDepositsPATTask, process.photonPFIsolationValuesPATTask)


process.slimmingTask = cms.Task(process.bunchSpacingProducer, process.genParticlesTask, process.isolatedTracks, process.lostTracks, process.metFilterPathsTask, process.offlineSlimmedPrimaryVertices, process.offlineSlimmedPrimaryVerticesWithBS, process.oniaPhotonCandidates, process.packedCandidateToGenAssociationTask, process.packedPFCandidatesTask, process.primaryVertexAssociation, process.primaryVertexWithBSAssociation, process.reducedEgamma, process.selectedPatTrigger, process.slimmedCaloJets, process.slimmedDisplacedMuonTrackExtras, process.slimmedDisplacedMuons, process.slimmedElectrons, process.slimmedGenJets, process.slimmedGenJetsAK8, process.slimmedHcalRecHits, process.slimmedJPTJets, process.slimmedJets, process.slimmedJetsAK8, process.slimmedKshortVertices, process.slimmedLambdaVertices, process.slimmedLowPtElectronsTask, process.slimmedMETs, process.slimmedMuonTrackExtras, process.slimmedMuons, process.slimmedOOTPhotons, process.slimmedPatTrigger, process.slimmedPhotons, process.slimmedSecondaryVertices)


process.patPFMetT0CorrTask = cms.Task(process.patPFMetT0Corr, process.type0PFMEtCorrectionPFCandToVertexAssociationTask)


process.producePatPFMETCorrectionsTask = cms.Task(process.patPFMet, process.patPFMetT0Corr, process.patPFMetT0pcT1, process.patPFMetT0pcT1T2, process.patPFMetT1, process.patPFMetT1T2, process.patPFMetT1T2Corr, process.patPFMetT2Corr, process.pfCandMETcorr, process.pfCandsNotInJetsForMetCorr, process.selectedPatJetsForMetT1T2Corr, process.selectedPatJetsForMetT2Corr, process.type0PFMEtCorrectionPFCandToVertexAssociationTask)


process.producePatPFMETCorrectionsUncTask = cms.Task(process.patPFMet, process.patPFMetT0Corr, process.patPFMetT1T2Corr, process.patPFMetT2Corr, process.pfCandMETcorr, process.pfCandsNotInJetsForMetCorr, process.selectedPatJetsForMetT1T2Corr, process.selectedPatJetsForMetT2Corr, process.type0PFMEtCorrectionPFCandToVertexAssociationTask)


process.produceMET_task = cms.Task(process.jetCorrectorsTask, process.patPFMet, process.patPFMetT2SmearCorrTask, process.patPFMetTxyCorrTask, process.producePatPFMETCorrectionsTask)


process.getCorrectedMET_task = cms.Task(process.patPFMetSmear, process.patPFMetSmearCorrTask, process.patPFMetSmearTxy, process.patPFMetT0CorrTask, process.patPFMetT0pc, process.patPFMetT0pcSmear, process.patPFMetT0pcSmearTxy, process.patPFMetT0pcT1Smear, process.patPFMetT0pcT1SmearTxy, process.patPFMetT0pcT1T2SmearTxy, process.patPFMetT0pcT1T2Txy, process.patPFMetT0pcT1Txy, process.patPFMetT0pcT2, process.patPFMetT0pcT2Smear, process.patPFMetT0pcT2SmearTxy, process.patPFMetT0pcT2Txy, process.patPFMetT0pcTxy, process.patPFMetT1, process.patPFMetT1Smear, process.patPFMetT1SmearTxy, process.patPFMetT1T2CorrTask, process.patPFMetT1T2SmearTxy, process.patPFMetT1T2Txy, process.patPFMetT1Txy, process.patPFMetT2, process.patPFMetT2CorrTask, process.patPFMetT2Smear, process.patPFMetT2SmearCorrTask, process.patPFMetT2SmearTxy, process.patPFMetT2Txy, process.patPFMetTxy, process.patPFMetTxyCorrTask)


process.patMetCorrectionTask = cms.Task(process.getCorrectedMET_task)


process.patMetUncertaintyTask = cms.Task(process.ak4PFCHSL1FastL2L3CorrectorTask, process.ak4PFCHSL1FastL2L3ResidualCorrectorTask, process.createShiftedModules_task, process.getMETUncertainties_task, process.patPFMetT1ElectronEnDown, process.patPFMetT1ElectronEnUp, process.patPFMetT1JetEnDown, process.patPFMetT1JetEnUp, process.patPFMetT1JetResDown, process.patPFMetT1JetResUp, process.patPFMetT1MuonEnDown, process.patPFMetT1MuonEnUp, process.patPFMetT1PhotonEnDown, process.patPFMetT1PhotonEnUp, process.patPFMetT1TauEnDown, process.patPFMetT1TauEnUp, process.patPFMetT1UnclusteredEnDown, process.patPFMetT1UnclusteredEnUp, process.pfCandsForUnclusteredUnc, process.pfCandsNoJets, process.pfCandsNoJetsNoEle, process.pfCandsNoJetsNoEleNoMu, process.pfCandsNoJetsNoEleNoMuNoTau, process.pfElectrons, process.pfMuons, process.pfNoPileUp, process.pfPhotons, process.pfTaus)


process.patMetModuleTask = cms.Task(process.getJetCollectionForCorsAndUncs_task, process.jetCleaning_task, process.pfeGammaToCandidate, process.produceMET_task)


process.fullPatMetTask = cms.Task(process.patMetCorrectionTask, process.patMetModuleTask, process.patMetUncertaintyTask, process.patShiftedModuleTask, process.slimmedMETs)


process.recomputeRawMetFromPfcs_taskNoHF = cms.Task(process.makePatMETsTask, process.patMETCorrectionsTaskNoHF, process.patMETsNoHF, process.pfMetNoHF, process.pfMetT1NoHF)


process.ak4JetReclustering_taskNoHF = cms.Task(process.ak4PFJetsCHSNoHF, process.pfNoPileUpJMETask, process.pfNoPileUpJMETaskNoHF, process.tmpPFCandCollPtrNoHF)


process.patMetUncertaintyTaskNoHF = cms.Task(process.ak4PFCHSL1FastL2L3CorrectorTask, process.ak4PFCHSL1FastL2L3ResidualCorrectorTask, process.createShiftedModules_taskNoHF, process.getMETUncertainties_taskNoHF, process.patPFMetT1ElectronEnDownNoHF, process.patPFMetT1ElectronEnUpNoHF, process.patPFMetT1JetEnDownNoHF, process.patPFMetT1JetEnUpNoHF, process.patPFMetT1JetResDownNoHF, process.patPFMetT1JetResUpNoHF, process.patPFMetT1MuonEnDownNoHF, process.patPFMetT1MuonEnUpNoHF, process.patPFMetT1PhotonEnDownNoHF, process.patPFMetT1PhotonEnUpNoHF, process.patPFMetT1TauEnDownNoHF, process.patPFMetT1TauEnUpNoHF, process.patPFMetT1UnclusteredEnDownNoHF, process.patPFMetT1UnclusteredEnUpNoHF, process.pfCandsForUnclusteredUncNoHF, process.pfCandsNoJetsNoEleNoHF, process.pfCandsNoJetsNoEleNoMuNoHF, process.pfCandsNoJetsNoEleNoMuNoTauNoHF, process.pfCandsNoJetsNoHF, process.pfElectronsNoHF, process.pfMuonsNoHF, process.pfNoPileUpNoHF, process.pfPhotonsNoHF, process.pfTausNoHF)


process.patMetModuleTaskNoHF = cms.Task(process.ak4JetReclustering_taskNoHF, process.getJetCollectionForCorsAndUncs_taskNoHF, process.jetCleaning_taskNoHF, process.pfeGammaToCandidate, process.produceMET_taskNoHF, process.recomputeRawMetFromPfcs_taskNoHF)


process.fullPatMetTaskNoHF = cms.Task(process.patCaloMet, process.patMetCorrectionTaskNoHF, process.patMetModuleTaskNoHF, process.patMetUncertaintyTaskNoHF, process.patShiftedModuleTaskNoHF)


process.produceAndDiscriminateHPSPFTausTask = cms.Task(process.hpsPFTauBasicDiscriminatorsTask, process.hpsPFTauBasicDiscriminatorsdR03Task, process.hpsPFTauDiscriminationByDeadECALElectronRejection, process.hpsPFTauDiscriminationByDecayModeFinding, process.hpsPFTauDiscriminationByDecayModeFindingNewDMs, process.hpsPFTauDiscriminationByDecayModeFindingOldDMs, process.hpsPFTauDiscriminationByMuonRejection3, process.hpsPFTauVertexAndImpactParametersTask, process.produceHPSPFTausTask)


process.recoTauClassicHPSTask = cms.Task(process.ak4PFJetsLegacyHPSPiZeros, process.ak4PFJetsRecoTauChargedHadrons, process.combinatoricRecoTaus, process.produceAndDiscriminateHPSPFTausTask)


process.recomputeRawMetFromPfcs_taskPuppi = cms.Task(process.makePatMETsTask, process.patMETCorrectionsTaskPuppi, process.patMETsPuppi, process.pfMetT1Puppi)


process.patMetUncertaintyTaskPuppi = cms.Task(process.ak4PFPuppiL1FastL2L3CorrectorTask, process.ak4PFPuppiL1FastL2L3ResidualCorrectorTask, process.createShiftedModules_taskPuppi, process.getMETUncertainties_taskPuppi, process.patPFMetT1ElectronEnDownPuppi, process.patPFMetT1ElectronEnUpPuppi, process.patPFMetT1JetEnDownPuppi, process.patPFMetT1JetEnUpPuppi, process.patPFMetT1JetResDownPuppi, process.patPFMetT1JetResUpPuppi, process.patPFMetT1MuonEnDownPuppi, process.patPFMetT1MuonEnUpPuppi, process.patPFMetT1PhotonEnDownPuppi, process.patPFMetT1PhotonEnUpPuppi, process.patPFMetT1TauEnDownPuppi, process.patPFMetT1TauEnUpPuppi, process.patPFMetT1UnclusteredEnDownPuppi, process.patPFMetT1UnclusteredEnUpPuppi, process.pfCandsForUnclusteredUncPuppi, process.pfCandsNoJetsNoEleNoMuNoTauPuppi, process.pfCandsNoJetsNoEleNoMuPuppi, process.pfCandsNoJetsNoElePuppi, process.pfCandsNoJetsPuppi, process.pfElectronsPuppi, process.pfMuonsPuppi, process.pfNoPileUpPuppi, process.pfPhotonsPuppi, process.pfTausPuppi)


process.patMetModuleTaskPuppi = cms.Task(process.ak4JetReclustering_taskPuppi, process.getJetCollectionForCorsAndUncs_taskPuppi, process.jetCleaning_taskPuppi, process.pfeGammaToCandidate, process.produceMET_taskPuppi, process.recomputeRawMetFromPfcs_taskPuppi)


process.fullPatMetTaskPuppi = cms.Task(process.patCaloMet, process.patMetCorrectionTaskPuppi, process.patMetModuleTaskPuppi, process.patMetUncertaintyTaskPuppi, process.patShiftedModuleTaskPuppi)


process.slimmedEgammaHGCTask = cms.Task(process.hgcalRecHitMapProducer, process.slimmedElectronsHGCTask, process.slimmedPhotonsHGCTask)


process.makePatTausTask = cms.Task(process.patPFCandidateIsoDepositSelectionTask, process.patPFTauIsolationTask, process.patTaus, process.tauGenJetMatch, process.tauGenJets, process.tauGenJetsSelectorAllHadrons, process.tauMatch)


process.pfParticleSelectionForIsoTask = cms.Task(process.particleFlowPtrs, process.pfParticleSelectionPFBRECOTask)


process.patAlgosToolsTask = cms.Task(*[process.NjettinessAK8Puppi, process.NjettinessAK8Subjets, process.QGTagger, process.TrkCands, process.ak4CaloL2L3CorrectorPuppi, process.ak4CaloL2L3ResidualCorrectorPuppi, process.ak4CaloL2RelativeCorrectorPuppi, process.ak4CaloL3AbsoluteCorrectorPuppi, process.ak4CaloResidualCorrectorPuppi, process.ak4GenJetFlavourInfos, process.ak4JetReclustering_taskNoHF, process.ak4JetReclustering_taskPuppi, process.ak4PFCHSL1FastL2L3CorrectorPuppi, process.ak4PFCHSL1FastL2L3CorrectorTask, process.ak4PFCHSL1FastL2L3ResidualCorrectorPuppi, process.ak4PFCHSL1FastL2L3ResidualCorrectorTask, process.ak4PFCHSL1FastjetCorrectorPuppi, process.ak4PFCHSL2RelativeCorrectorPuppi, process.ak4PFCHSL3AbsoluteCorrectorPuppi, process.ak4PFCHSResidualCorrectorPuppi, process.ak4PFJetTracksAssociatorAtVertexBoosted, process.ak4PFJetsCHSNoHF, process.ak4PFJetsLegacyHPSPiZerosBoosted, process.ak4PFJetsPuppiTracksAssociatorAtVertex, process.ak4PFJetsRecoTauChargedHadronsBoosted, process.ak4PFPuppiL1FastL2L3CorrectorTask, process.ak4PFPuppiL1FastL2L3ResidualCorrectorTask, process.ak8GenJetsNoNuConstituents, process.ak8GenJetsNoNuSoftDrop, process.ak8PFJetsPuppiTracksAssociatorAtVertex, process.basicJetsForMet, process.basicJetsForMetNoHF, process.basicJetsForMetPuppi, process.boostedHPSPFTausTask, process.caloJetMap, process.caloMetT1Puppi, process.caloMetT1T2Puppi, process.cleanedPatJets, process.cleanedPatJetsNoHF, process.cleanedPatJetsPuppi, process.combinatoricRecoTausBoosted, process.corrCaloMetType1Puppi, process.corrCaloMetType2Puppi, process.corrPfMetType1Puppi, process.corrPfMetType2Puppi, process.createShiftedModules_task, process.createShiftedModules_taskNoHF, process.createShiftedModules_taskPuppi, process.deepMETsResolutionTune, process.deepMETsResponseTune, process.egmElectronPUPPIIsolation, process.egmElectronPUPPINoLeptonsIsolation, process.egmGsfElectronIDTask, process.egmPhotonIDTask, process.egmPhotonPUPPIIsolation, process.fullPatMetTaskPuppi, process.getJetCollectionForCorsAndUncs_task, process.getJetCollectionForCorsAndUncs_taskNoHF, process.hfJetShowerShape, process.hpsPFTauBasicDiscriminatorsBoosted, process.hpsPFTauBasicDiscriminatorsdR03Boosted, process.hpsPFTauDiscriminationByDeadECALElectronRejectionBoosted, process.hpsPFTauDiscriminationByDecayModeFindingBoosted, process.hpsPFTauDiscriminationByDecayModeFindingNewDMsBoosted, process.hpsPFTauDiscriminationByDecayModeFindingOldDMsBoosted, process.hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTBoosted, process.hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTrawBoosted, process.hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTBoosted, process.hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTrawBoosted, process.hpsPFTauDiscriminationByMVA6ElectronRejectionBoosted, process.hpsPFTauDiscriminationByMVA6rawElectronRejectionBoosted, process.hpsPFTauDiscriminationByMuonRejection3Boosted, process.hpsPFTauPrimaryVertexProducerBoosted, process.hpsPFTauProducerBoosted, process.hpsPFTauProducerSansRefsBoosted, process.hpsPFTauSecondaryVertexProducerBoosted, process.hpsPFTauTransverseImpactParametersBoosted, process.hpsSelectionDiscriminatorBoosted, process.jetCleaning_task, process.jetCleaning_taskNoHF, process.jetCorrectorsTask, process.jetSelectorForMet, process.jetSelectorForMetNoHF, process.jetSelectorForMetPuppi, process.makePatMETsTask, process.muCaloMetCorrPuppi, process.muonPUPPIIsolation, process.muonPUPPINoLeptonsIsolation, process.nb1AK8PuppiSoftDrop, process.nb1AK8PuppiSoftDropSubjets, process.nb2AK8PuppiSoftDrop, process.nb2AK8PuppiSoftDropSubjets, process.noHFCands, process.packedPatJetsAK8, process.packedpuppi, process.particleFlowDisplacedVertex, process.particleFlowPtrsPuppi, process.patCHSMet, process.patCaloMet, process.patJetAK8PuppiCharge, process.patJetCorrFactorsAK8PFPuppiSoftDrop, process.patJetCorrFactorsAK8PFPuppiSoftDropSubjets, process.patJetCorrFactorsAK8Puppi, process.patJetCorrFactorsNoHF, process.patJetCorrFactorsPuppi, process.patJetCorrFactorsSlimmedAK8DeepTags, process.patJetCorrFactorsSlimmedDeepFlavour, process.patJetCorrFactorsSlimmedPuppiWithDeepTags, process.patJetCorrFactorsTransientCorrectedSlimmedAK8DeepTags, process.patJetCorrFactorsTransientCorrectedSlimmedDeepFlavour, process.patJetCorrFactorsTransientCorrectedSlimmedPuppiWithDeepTags, process.patJetFlavourAssociationAK8PFPuppiSoftDropSubjets, process.patJetFlavourAssociationAK8Puppi, process.patJetFlavourAssociationLegacyAK8PFPuppiSoftDropSubjets, process.patJetFlavourAssociationLegacyAK8Puppi, process.patJetFlavourAssociationLegacyNoHF, process.patJetFlavourAssociationLegacyPuppi, process.patJetFlavourAssociationNoHF, process.patJetFlavourAssociationPuppi, process.patJetGenJetMatchAK8PFPuppiSoftDrop, process.patJetGenJetMatchAK8PFPuppiSoftDropSubjets, process.patJetGenJetMatchAK8Puppi, process.patJetGenJetMatchNoHF, process.patJetGenJetMatchPuppi, process.patJetPartonAssociationLegacyAK8PFPuppiSoftDropSubjets, process.patJetPartonAssociationLegacyAK8Puppi, process.patJetPartonAssociationLegacyNoHF, process.patJetPartonAssociationLegacyPuppi, process.patJetPartonMatchAK8PFPuppiSoftDrop, process.patJetPartonMatchAK8PFPuppiSoftDropSubjets, process.patJetPartonMatchAK8Puppi, process.patJetPartonMatchNoHF, process.patJetPartonMatchPuppi, process.patJetPartonsLegacyNoHF, process.patJetPartonsNoHF, process.patJetPuppiCharge, process.patJetsAK8PFPuppiSoftDrop, process.patJetsAK8PFPuppiSoftDropSubjets, process.patJetsAK8Puppi, process.patJetsNoHF, process.patJetsPuppi, process.patMETsPuppi, process.patMetCorrectionTask, process.patMetCorrectionTaskNoHF, process.patMetUncertaintyTask, process.patMetUncertaintyTaskNoHF, process.patPFMet, process.patPFMetNoHF, process.patPFMetPuppi, process.patPFMetSmear, process.patPFMetSmearCorrTask, process.patPFMetSmearCorrTaskNoHF, process.patPFMetSmearCorrTaskPuppi, process.patPFMetSmearNoHF, process.patPFMetSmearPuppi, process.patPFMetSmearTxy, process.patPFMetSmearTxyNoHF, process.patPFMetSmearTxyPuppi, process.patPFMetT0Corr, process.patPFMetT0CorrNoHF, process.patPFMetT0CorrPuppi, process.patPFMetT0CorrTask, process.patPFMetT0CorrTaskNoHF, process.patPFMetT0CorrTaskPuppi, process.patPFMetT0pc, process.patPFMetT0pcNoHF, process.patPFMetT0pcPuppi, process.patPFMetT0pcSmear, process.patPFMetT0pcSmearNoHF, process.patPFMetT0pcSmearPuppi, process.patPFMetT0pcSmearTxy, process.patPFMetT0pcSmearTxyNoHF, process.patPFMetT0pcSmearTxyPuppi, process.patPFMetT0pcT1, process.patPFMetT0pcT1NoHF, process.patPFMetT0pcT1Puppi, process.patPFMetT0pcT1Smear, process.patPFMetT0pcT1SmearNoHF, process.patPFMetT0pcT1SmearPuppi, process.patPFMetT0pcT1SmearTxy, process.patPFMetT0pcT1SmearTxyNoHF, process.patPFMetT0pcT1SmearTxyPuppi, process.patPFMetT0pcT1T2, process.patPFMetT0pcT1T2NoHF, process.patPFMetT0pcT1T2Puppi, process.patPFMetT0pcT1T2SmearNoHF, process.patPFMetT0pcT1T2SmearPuppi, process.patPFMetT0pcT1T2SmearTxy, process.patPFMetT0pcT1T2SmearTxyNoHF, process.patPFMetT0pcT1T2SmearTxyPuppi, process.patPFMetT0pcT1T2Txy, process.patPFMetT0pcT1T2TxyNoHF, process.patPFMetT0pcT1T2TxyPuppi, process.patPFMetT0pcT1Txy, process.patPFMetT0pcT1TxyNoHF, process.patPFMetT0pcT1TxyPuppi, process.patPFMetT0pcT2, process.patPFMetT0pcT2NoHF, process.patPFMetT0pcT2Puppi, process.patPFMetT0pcT2Smear, process.patPFMetT0pcT2SmearNoHF, process.patPFMetT0pcT2SmearPuppi, process.patPFMetT0pcT2SmearTxy, process.patPFMetT0pcT2SmearTxyNoHF, process.patPFMetT0pcT2SmearTxyPuppi, process.patPFMetT0pcT2Txy, process.patPFMetT0pcT2TxyNoHF, process.patPFMetT0pcT2TxyPuppi, process.patPFMetT0pcTxy, process.patPFMetT0pcTxyNoHF, process.patPFMetT0pcTxyPuppi, process.patPFMetT1, process.patPFMetT1ElectronEnDown, process.patPFMetT1ElectronEnDownNoHF, process.patPFMetT1ElectronEnDownPuppi, process.patPFMetT1ElectronEnUp, process.patPFMetT1ElectronEnUpNoHF, process.patPFMetT1ElectronEnUpPuppi, process.patPFMetT1JetEnDown, process.patPFMetT1JetEnDownNoHF, process.patPFMetT1JetEnDownPuppi, process.patPFMetT1JetEnUp, process.patPFMetT1JetEnUpNoHF, process.patPFMetT1JetEnUpPuppi, process.patPFMetT1JetResDown, process.patPFMetT1JetResDownNoHF, process.patPFMetT1JetResDownPuppi, process.patPFMetT1JetResUp, process.patPFMetT1JetResUpNoHF, process.patPFMetT1JetResUpPuppi, process.patPFMetT1MuonEnDown, process.patPFMetT1MuonEnDownNoHF, process.patPFMetT1MuonEnDownPuppi, process.patPFMetT1MuonEnUp, process.patPFMetT1MuonEnUpNoHF, process.patPFMetT1MuonEnUpPuppi, process.patPFMetT1NoHF, process.patPFMetT1PhotonEnDown, process.patPFMetT1PhotonEnDownNoHF, process.patPFMetT1PhotonEnDownPuppi, process.patPFMetT1PhotonEnUp, process.patPFMetT1PhotonEnUpNoHF, process.patPFMetT1PhotonEnUpPuppi, process.patPFMetT1Puppi, process.patPFMetT1Smear, process.patPFMetT1SmearNoHF, process.patPFMetT1SmearPuppi, process.patPFMetT1SmearTxy, process.patPFMetT1SmearTxyNoHF, process.patPFMetT1SmearTxyPuppi, process.patPFMetT1T2, process.patPFMetT1T2Corr, process.patPFMetT1T2CorrNoHF, process.patPFMetT1T2CorrPuppi, process.patPFMetT1T2CorrTask, process.patPFMetT1T2CorrTaskNoHF, process.patPFMetT1T2CorrTaskPuppi, process.patPFMetT1T2NoHF, process.patPFMetT1T2Puppi, process.patPFMetT1T2SmearNoHF, process.patPFMetT1T2SmearPuppi, process.patPFMetT1T2SmearTxy, process.patPFMetT1T2SmearTxyNoHF, process.patPFMetT1T2SmearTxyPuppi, process.patPFMetT1T2Txy, process.patPFMetT1T2TxyNoHF, process.patPFMetT1T2TxyPuppi, process.patPFMetT1TauEnDown, process.patPFMetT1TauEnDownNoHF, process.patPFMetT1TauEnDownPuppi, process.patPFMetT1TauEnUp, process.patPFMetT1TauEnUpNoHF, process.patPFMetT1TauEnUpPuppi, process.patPFMetT1Txy, process.patPFMetT1TxyNoHF, process.patPFMetT1TxyPuppi, process.patPFMetT1UnclusteredEnDown, process.patPFMetT1UnclusteredEnDownNoHF, process.patPFMetT1UnclusteredEnDownPuppi, process.patPFMetT1UnclusteredEnUp, process.patPFMetT1UnclusteredEnUpNoHF, process.patPFMetT1UnclusteredEnUpPuppi, process.patPFMetT2, process.patPFMetT2Corr, process.patPFMetT2CorrNoHF, process.patPFMetT2CorrPuppi, process.patPFMetT2CorrTask, process.patPFMetT2CorrTaskNoHF, process.patPFMetT2CorrTaskPuppi, process.patPFMetT2NoHF, process.patPFMetT2Puppi, process.patPFMetT2Smear, process.patPFMetT2SmearCorrTask, process.patPFMetT2SmearCorrTaskNoHF, process.patPFMetT2SmearCorrTaskPuppi, process.patPFMetT2SmearNoHF, process.patPFMetT2SmearPuppi, process.patPFMetT2SmearTxy, process.patPFMetT2SmearTxyNoHF, process.patPFMetT2SmearTxyPuppi, process.patPFMetT2Txy, process.patPFMetT2TxyNoHF, process.patPFMetT2TxyPuppi, process.patPFMetTxy, process.patPFMetTxyCorrTask, process.patPFMetTxyCorrTaskNoHF, process.patPFMetTxyCorrTaskPuppi, process.patPFMetTxyNoHF, process.patPFMetTxyPuppi, process.patShiftedModuleTask, process.patShiftedModuleTaskNoHF, process.patShiftedModuleTaskPuppi, process.patTausBoosted, process.patTrigger, process.patTrkMet, process.pfAllChargedHadronsPFBRECOBoosted, process.pfAllChargedParticlesPFBRECOBoosted, process.pfAllNeutralHadronsAndPhotonsPFBRECOBoosted, process.pfAllNeutralHadronsPFBRECOBoosted, process.pfAllPhotonsPFBRECOBoosted, process.pfBoostedDoubleSVAK8TagInfosAK8Puppi, process.pfBoostedDoubleSVAK8TagInfosSlimmedAK8DeepTags, process.pfBoostedDoubleSecondaryVertexAK8BJetTagsAK8Puppi, process.pfCHS, process.pfCandMETcorr, process.pfCandMETcorrNoHF, process.pfCandMETcorrPuppi, process.pfCandidateToVertexAssociation, process.pfCandsForUnclusteredUnc, process.pfCandsForUnclusteredUncNoHF, process.pfCandsForUnclusteredUncPuppi, process.pfCandsNoJets, process.pfCandsNoJetsNoEle, process.pfCandsNoJetsNoEleNoHF, process.pfCandsNoJetsNoEleNoMu, process.pfCandsNoJetsNoEleNoMuNoHF, process.pfCandsNoJetsNoEleNoMuNoTau, process.pfCandsNoJetsNoEleNoMuNoTauNoHF, process.pfCandsNoJetsNoEleNoMuNoTauPuppi, process.pfCandsNoJetsNoEleNoMuPuppi, process.pfCandsNoJetsNoElePuppi, process.pfCandsNoJetsNoHF, process.pfCandsNoJetsPuppi, process.pfCandsNotInJetsForMetCorr, process.pfCandsNotInJetsForMetCorrNoHF, process.pfCandsNotInJetsForMetCorrPuppi, process.pfCandsNotInJetsPtrForMetCorrPuppi, process.pfCombinedInclusiveSecondaryVertexV2BJetTagsAK8PFPuppiSoftDropSubjets, process.pfCombinedInclusiveSecondaryVertexV2BJetTagsAK8Puppi, process.pfCombinedMVAV2BJetTagsAK8PFPuppiSoftDropSubjets, process.pfCombinedMVAV2BJetTagsAK8Puppi, process.pfCombinedSecondaryVertexV2BJetTagsAK8Puppi, process.pfDeepCSVDiscriminatorsJetTags, process.pfDeepCSVDiscriminatorsJetTagsPuppi, process.pfDeepCSVJetTagsAK8PFPuppiSoftDropSubjets, process.pfDeepCSVJetTagsAK8Puppi, process.pfDeepCSVJetTagsPuppi, process.pfDeepCSVTagInfosAK8PFPuppiSoftDropSubjets, process.pfDeepCSVTagInfosAK8Puppi, process.pfDeepCSVTagInfosPuppi, process.pfDeepCSVTagInfosSlimmedDeepFlavour, process.pfDeepCSVTagInfosSlimmedPuppiWithDeepTags, process.pfDeepDoubleXTagInfosSlimmedAK8DeepTags, process.pfDeepFlavourJetTagsSlimmedDeepFlavour, process.pfDeepFlavourJetTagsSlimmedPuppiWithDeepTags, process.pfDeepFlavourTagInfosSlimmedDeepFlavour, process.pfDeepFlavourTagInfosSlimmedPuppiWithDeepTags, process.pfElectrons, process.pfElectronsNoHF, process.pfElectronsPuppi, process.pfHiggsInteractionNetTagInfosSlimmedAK8DeepTags, process.pfHiggsInteractionNetTagsSlimmedAK8DeepTags, process.pfImpactParameterAK8TagInfosAK8Puppi, process.pfImpactParameterAK8TagInfosSlimmedAK8DeepTags, process.pfImpactParameterTagInfosAK8PFPuppiSoftDropSubjets, process.pfImpactParameterTagInfosAK8Puppi, process.pfImpactParameterTagInfosPuppi, process.pfImpactParameterTagInfosSlimmedDeepFlavour, process.pfImpactParameterTagInfosSlimmedPuppiWithDeepTags, process.pfInclusiveSecondaryVertexFinderAK8TagInfosAK8Puppi, process.pfInclusiveSecondaryVertexFinderAK8TagInfosSlimmedAK8DeepTags, process.pfInclusiveSecondaryVertexFinderTagInfosAK8PFPuppiSoftDropSubjets, process.pfInclusiveSecondaryVertexFinderTagInfosAK8Puppi, process.pfInclusiveSecondaryVertexFinderTagInfosPuppi, process.pfInclusiveSecondaryVertexFinderTagInfosSlimmedDeepFlavour, process.pfInclusiveSecondaryVertexFinderTagInfosSlimmedPuppiWithDeepTags, process.pfJetBProbabilityBJetTagsPuppi, process.pfJetProbabilityBJetTagsPuppi, process.pfJetsPtrForMetCorrPuppi, process.pfMassIndependentDeepDoubleBvLV2JetTagsSlimmedAK8DeepTags, process.pfMassIndependentDeepDoubleCvBV2JetTagsSlimmedAK8DeepTags, process.pfMassIndependentDeepDoubleCvLV2JetTagsSlimmedAK8DeepTags, process.pfMetCHS, process.pfMetT1Puppi, process.pfMetT1T2Puppi, process.pfMetTrk, process.pfMuons, process.pfMuonsNoHF, process.pfMuonsPuppi, process.pfNoPileUp, process.pfNoPileUpIsoPFBRECOBoosted, process.pfNoPileUpJMETask, process.pfNoPileUpJMETaskNoHF, process.pfNoPileUpNoHF, process.pfNoPileUpPuppi, process.pfParticleNetDiscriminatorsJetTagsSlimmedAK8DeepTags, process.pfParticleNetFromMiniAODAK4CHSCentralDiscriminatorsJetTagsSlimmedDeepFlavour, process.pfParticleNetFromMiniAODAK4CHSCentralJetTagsSlimmedDeepFlavour, process.pfParticleNetFromMiniAODAK4CHSCentralTagInfosSlimmedDeepFlavour, process.pfParticleNetFromMiniAODAK4CHSForwardDiscriminatorsJetTagsSlimmedDeepFlavour, process.pfParticleNetFromMiniAODAK4CHSForwardJetTagsSlimmedDeepFlavour, process.pfParticleNetFromMiniAODAK4CHSForwardTagInfosSlimmedDeepFlavour, process.pfParticleNetFromMiniAODAK4PuppiCentralDiscriminatorsJetTagsSlimmedPuppiWithDeepTags, process.pfParticleNetFromMiniAODAK4PuppiCentralJetTagsSlimmedPuppiWithDeepTags, process.pfParticleNetFromMiniAODAK4PuppiCentralTagInfosSlimmedPuppiWithDeepTags, process.pfParticleNetFromMiniAODAK4PuppiForwardDiscriminatorsJetTagsSlimmedPuppiWithDeepTags, process.pfParticleNetFromMiniAODAK4PuppiForwardJetTagsSlimmedPuppiWithDeepTags, process.pfParticleNetFromMiniAODAK4PuppiForwardTagInfosSlimmedPuppiWithDeepTags, process.pfParticleNetFromMiniAODAK8DiscriminatorsJetTagsSlimmedAK8DeepTags, process.pfParticleNetFromMiniAODAK8JetTagsSlimmedAK8DeepTags, process.pfParticleNetFromMiniAODAK8TagInfosSlimmedAK8DeepTags, process.pfParticleNetJetTagsSlimmedAK8DeepTags, process.pfParticleNetTagInfosSlimmedAK8DeepTags, process.pfParticleTransformerAK4DiscriminatorsJetTagsSlimmedDeepFlavour, process.pfParticleTransformerAK4DiscriminatorsJetTagsSlimmedPuppiWithDeepTags, process.pfParticleTransformerAK4JetTagsSlimmedDeepFlavour, process.pfParticleTransformerAK4JetTagsSlimmedPuppiWithDeepTags, process.pfParticleTransformerAK4TagInfosSlimmedDeepFlavour, process.pfParticleTransformerAK4TagInfosSlimmedPuppiWithDeepTags, process.pfPhotons, process.pfPhotonsNoHF, process.pfPhotonsPuppi, process.pfPileUpAllChargedParticlesPFBRECOBoosted, process.pfPileUpIsoPFBRECOBoosted, process.pfRecoTauTagInfoProducerBoosted, process.pfSecondaryVertexTagInfosAK8PFPuppiSoftDropSubjets, process.pfSecondaryVertexTagInfosAK8Puppi, process.pfTaus, process.pfTausNoHF, process.pfTausPuppi, process.pfTrackCountingHighEffBJetTagsPuppi, process.pfeGammaToCandidate, process.pileUpJetIDTask, process.produceMET_task, process.produceMET_taskNoHF, process.produceMET_taskPuppi, process.recoTauAK4PFJets08RegionBoosted, process.recoTauPileUpVerticesBoosted, process.recomputeRawMetFromPfcs_taskNoHF, process.rerunMvaIsolationTaskForMini, process.selectedHadronsAndPartons, process.selectedHadronsAndPartonsForGenJetsFlavourInfos, process.selectedPatJetsAK8PFPuppiSoftDrop, process.selectedPatJetsAK8PFPuppiSoftDropSubjets, process.selectedPatJetsAK8Puppi, process.selectedPatJetsForMetT1T2Corr, process.selectedPatJetsForMetT1T2CorrNoHF, process.selectedPatJetsForMetT1T2CorrPuppi, process.selectedPatJetsForMetT2Corr, process.selectedPatJetsForMetT2CorrNoHF, process.selectedPatJetsForMetT2CorrPuppi, process.selectedPatJetsNoHF, process.selectedPatJetsPuppi, process.selectedPatTausBoosted, process.selectedPrimaryVertexHighestPtTrackSumForPFMEtCorrType0NoHF, process.selectedPrimaryVertexHighestPtTrackSumForPFMEtCorrType0Puppi, process.selectedVerticesForPFMEtCorrType0NoHF, process.selectedVerticesForPFMEtCorrType0Puppi, process.slimmedAddPileupInfo, process.slimmedGenJetsAK8SoftDropSubJets, process.slimmedGenJetsFlavourInfos, process.slimmedJets, process.slimmedJetsAK8, process.slimmedJetsAK8NoDeepTags, process.slimmedJetsAK8PFPuppiSoftDropPacked, process.slimmedJetsAK8PFPuppiSoftDropSubjets, process.slimmedJetsNoDeepFlavour, process.slimmedJetsPuppi, process.slimmedJetsPuppiNoDeepTags, process.slimmedMETs, process.slimmedMETsNoHF, process.slimmedMETsPuppi, process.slimmedTausBoosted, process.slimmedTausNoDeepIDs, process.softPFElectronsTagInfosAK8PFPuppiSoftDropSubjets, process.softPFElectronsTagInfosAK8Puppi, process.softPFMuonsTagInfosAK8PFPuppiSoftDropSubjets, process.softPFMuonsTagInfosAK8Puppi, process.tauGenJetMatchBoosted, process.tauGenJetsBoosted, process.tauGenJetsSelectorAllHadronsBoosted, process.tauIsoDepositPFCandidatesBoosted, process.tauIsoDepositPFChargedHadronsBoosted, process.tauIsoDepositPFGammasBoosted, process.tauIsoDepositPFNeutralHadronsBoosted, process.tauMatchBoosted, process.tmpPFCandCollPtrNoHF, process.type0PFMEtCorrectionPFCandToVertexAssociationTask, process.updatedPatJetsSlimmedAK8DeepTags, process.updatedPatJetsSlimmedDeepFlavour, process.updatedPatJetsSlimmedPuppiWithDeepTags, process.updatedPatJetsTransientCorrectedSlimmedAK8DeepTags, process.updatedPatJetsTransientCorrectedSlimmedDeepFlavour, process.updatedPatJetsTransientCorrectedSlimmedPuppiWithDeepTags])


process.PFTauTask = cms.Task(process.recoTauClassicHPSTask, process.recoTauCommonTask)


process.makePatElectronsTask = cms.Task(process.electronMatch, process.patElectrons, process.pfElectronIsolationPATTask, process.pfParticleSelectionForIsoTask)


process.makePatMuonsTask = cms.Task(process.muonMatch, process.muonPFIsolationPATTask, process.patMuons, process.pfParticleSelectionForIsoTask)


process.makePatPhotonsTask = cms.Task(process.patPhotons, process.pfParticleSelectionForIsoTask, process.pfPhotonIsolationPATTask, process.photonMatch)


process.patCandidatesTask = cms.Task(process.makePatDisplacedMuonsTask, process.makePatElectronsTask, process.makePatJetsTask, process.makePatLowPtElectronsTask, process.makePatMETsTask, process.makePatMuonsTask, process.makePatOOTPhotonsTask, process.makePatPhotonsTask, process.makePatTausTask)


process.patTask = cms.Task(process.bunchSpacingProducer, process.genParticlesTask, process.isolatedTracks, process.lostTracks, process.metFilterPathsTask, process.offlineSlimmedPrimaryVertices, process.offlineSlimmedPrimaryVerticesWithBS, process.oniaPhotonCandidates, process.packedCandidateToGenAssociationTask, process.packedPFCandidatesTask, process.patCandidatesTask, process.primaryVertexAssociation, process.primaryVertexWithBSAssociation, process.reducedEgamma, process.selectedPatCandidatesTask, process.selectedPatTrigger, process.slimmedCaloJets, process.slimmedDisplacedMuonTrackExtras, process.slimmedDisplacedMuons, process.slimmedElectrons, process.slimmedGenJets, process.slimmedGenJetsAK8, process.slimmedHcalRecHits, process.slimmedJPTJets, process.slimmedJets, process.slimmedJetsAK8, process.slimmedKshortVertices, process.slimmedLambdaVertices, process.slimmedLowPtElectronsTask, process.slimmedMETs, process.slimmedMuonTrackExtras, process.slimmedMuons, process.slimmedOOTPhotons, process.slimmedPatTrigger, process.slimmedPhotons, process.slimmedSecondaryVertices)


process.metFilters = cms.Sequence(process.goodVertices+process.globalSuperTightHalo2016Filter+process.HBHENoiseFilterResultProducer+process.HBHENoiseFilter+process.HBHENoiseIsoFilter+process.EcalDeadCellTriggerPrimitiveFilter+process.BadPFMuonFilter+process.BadPFMuonDzFilter+process.hfNoisyHitsFilter+process.eeBadScFilter+process.ecalBadCalibFilter)


process.trkPOGFilters = cms.Sequence(~process.manystripclus53X+~process.toomanystripclus53X+~process.logErrorTooManyClusters)


process.ak4CaloL1FastL2L3CorrectorChain = cms.Sequence(process.ak4CaloL1FastL2L3CorrectorTask)


process.ak4CaloL1FastL2L3L6CorrectorChain = cms.Sequence(process.ak4CaloL1FastL2L3L6CorrectorTask)


process.ak4CaloL1FastL2L3ResidualCorrectorChain = cms.Sequence(process.ak4CaloL1FastL2L3ResidualCorrectorTask)


process.ak4CaloL1L2L3CorrectorChain = cms.Sequence(process.ak4CaloL1L2L3CorrectorTask)


process.ak4CaloL1L2L3ResidualCorrectorChain = cms.Sequence(process.ak4CaloL1L2L3ResidualCorrectorTask)


process.ak4CaloL2L3CorrectorChain = cms.Sequence(process.ak4CaloL2L3CorrectorTask)


process.ak4CaloL2L3L6CorrectorChain = cms.Sequence(process.ak4CaloL2L3L6CorrectorTask)


process.ak4CaloL2L3ResidualCorrectorChain = cms.Sequence(process.ak4CaloL2L3ResidualCorrectorTask)


process.ak4JPTL1FastL2L3CorrectorChain = cms.Sequence(process.ak4JPTL1FastL2L3CorrectorTask)


process.ak4JPTL1FastL2L3ResidualCorrectorChain = cms.Sequence(process.ak4JPTL1FastL2L3ResidualCorrectorTask)


process.ak4JPTL1L2L3CorrectorChain = cms.Sequence(process.ak4JPTL1L2L3CorrectorTask)


process.ak4JPTL1L2L3ResidualCorrectorChain = cms.Sequence(process.ak4JPTL1L2L3ResidualCorrectorTask)


process.ak4JPTL2L3CorrectorChain = cms.Sequence(process.ak4JPTL2L3CorrectorTask)


process.ak4JPTL2L3ResidualCorrectorChain = cms.Sequence(process.ak4JPTL2L3ResidualCorrectorTask)


process.ak4L1JPTFastjetCorrectorChain = cms.Sequence(process.ak4L1JPTFastjetCorrectorTask)


process.ak4L1JPTOffsetCorrectorChain = cms.Sequence(process.ak4L1JPTOffsetCorrectorTask)


process.ak4PFCHSL1FastL2L3CorrectorChain = cms.Sequence(process.ak4PFCHSL1FastL2L3CorrectorTask)


process.ak4PFCHSL1FastL2L3ResidualCorrectorChain = cms.Sequence(process.ak4PFCHSL1FastL2L3ResidualCorrectorTask)


process.ak4PFCHSL1L2L3CorrectorChain = cms.Sequence(process.ak4PFCHSL1L2L3CorrectorTask)


process.ak4PFCHSL1L2L3ResidualCorrectorChain = cms.Sequence(process.ak4PFCHSL1L2L3ResidualCorrectorTask)


process.ak4PFCHSL2L3CorrectorChain = cms.Sequence(process.ak4PFCHSL2L3CorrectorTask)


process.ak4PFCHSL2L3ResidualCorrectorChain = cms.Sequence(process.ak4PFCHSL2L3ResidualCorrectorTask)


process.ak4PFL1FastL2L3CorrectorChain = cms.Sequence(process.ak4PFL1FastL2L3CorrectorTask)


process.ak4PFL1FastL2L3L6CorrectorChain = cms.Sequence(process.ak4PFL1FastL2L3L6CorrectorTask)


process.ak4PFL1FastL2L3ResidualCorrectorChain = cms.Sequence(process.ak4PFL1FastL2L3ResidualCorrectorTask)


process.ak4PFL1L2L3CorrectorChain = cms.Sequence(process.ak4PFL1L2L3CorrectorTask)


process.ak4PFL1L2L3ResidualCorrectorChain = cms.Sequence(process.ak4PFL1L2L3ResidualCorrectorTask)


process.ak4PFL2L3CorrectorChain = cms.Sequence(process.ak4PFL2L3CorrectorTask)


process.ak4PFL2L3L6CorrectorChain = cms.Sequence(process.ak4PFL2L3L6CorrectorTask)


process.ak4PFL2L3ResidualCorrectorChain = cms.Sequence(process.ak4PFL2L3ResidualCorrectorTask)


process.ak4PFPuppiL1FastL2L3CorrectorChain = cms.Sequence(process.ak4PFPuppiL1FastL2L3CorrectorTask)


process.ak4PFPuppiL1FastL2L3ResidualCorrectorChain = cms.Sequence(process.ak4PFPuppiL1FastL2L3ResidualCorrectorTask)


process.ak4PFPuppiL1L2L3CorrectorChain = cms.Sequence(process.ak4PFPuppiL1L2L3CorrectorTask)


process.ak4PFPuppiL1L2L3ResidualCorrectorChain = cms.Sequence(process.ak4PFPuppiL1L2L3ResidualCorrectorTask)


process.ak4PFPuppiL2L3CorrectorChain = cms.Sequence(process.ak4PFPuppiL2L3CorrectorTask)


process.ak4PFPuppiL2L3ResidualCorrectorChain = cms.Sequence(process.ak4PFPuppiL2L3ResidualCorrectorTask)


process.ak4TrackL2L3CorrectorChain = cms.Sequence(process.ak4TrackL2L3CorrectorTask)


process.ak5JTA = cms.Sequence(process.ak5JTATask)


process.ak5JTAExplicit = cms.Sequence(process.ak5JTAExplicitTask)


process.correctionTermsCaloMet = cms.Sequence(process.correctionTermsCaloMetTask)


process.correctionTermsPfMetType1Type2 = cms.Sequence(process.correctionTermsPfMetType1Type2Task)


process.electronPFIsolationDepositsPATSequence = cms.Sequence(process.electronPFIsolationDepositsPATTask)


process.electronPFIsolationValuesPATSequence = cms.Sequence(process.electronPFIsolationValuesPATTask)


process.makePatDisplacedMuons = cms.Sequence(process.makePatDisplacedMuonsTask)


process.makePatElectrons = cms.Sequence(process.makePatElectronsTask)


process.makePatJets = cms.Sequence(process.makePatJetsTask)


process.makePatLowPtElectrons = cms.Sequence(process.makePatLowPtElectronsTask)


process.makePatMETs = cms.Sequence(process.makePatMETsTask)


process.makePatMuons = cms.Sequence(process.makePatMuonsTask)


process.makePatOOTPhotons = cms.Sequence(process.makePatOOTPhotonsTask)


process.makePatPhotons = cms.Sequence(process.makePatPhotonsTask)


process.makePatTaus = cms.Sequence(process.makePatTausTask)


process.miniAOD = cms.Sequence()


process.muonPFIsolationDepositsPATSequence = cms.Sequence(process.muonPFIsolationDepositsPATTask)


process.muonPFIsolationPATSequence = cms.Sequence(process.muonPFIsolationPATTask)


process.muonPFIsolationValuesPATSequence = cms.Sequence(process.muonPFIsolationValuesPATTask)


process.ootPhotonSequence = cms.Sequence(process.ootPhotonTask)


process.patCandidates = cms.Sequence(process.patCandidateSummary, process.patCandidatesTask)


process.patFixedConePFTauDiscrimination = cms.Sequence()


process.patHPSPFTauDiscrimination = cms.Sequence(process.patHPSPFTauDiscriminationTask)


process.patJetCorrections = cms.Sequence(process.patJetCorrectionsTask)


process.patJetFlavourId = cms.Sequence(process.patJetFlavourIdTask)


process.patJetFlavourIdLegacy = cms.Sequence(process.patJetFlavourIdLegacyTask)


process.patMETCorrections = cms.Sequence(process.patMETCorrectionsTask)


process.patPFCandidateIsoDepositSelection = cms.Sequence(process.patPFCandidateIsoDepositSelectionTask)


process.patPFTauIsolation = cms.Sequence(process.patPFTauIsolationTask)


process.patShrinkingConePFTauDiscrimination = cms.Sequence()


process.pfDeepCSV = cms.Sequence(process.pfDeepCSVTask)


process.pfElectronIsolationPATSequence = cms.Sequence(process.pfElectronIsolationPATTask)


process.pfNoPileUpIsoPFBRECOSequence = cms.Sequence(process.pfNoPileUpIsoPFBRECOTask)


process.pfNoPileUpJMESequence = cms.Sequence(process.pfNoPileUpJMETask)


process.pfNoPileUpPFBRECOSequence = cms.Sequence(process.pfNoPileUpPFBRECOTask)


process.pfParticleSelectionForIsoSequence = cms.Sequence(process.pfParticleSelectionForIsoTask)


process.pfParticleSelectionPFBRECOSequence = cms.Sequence(process.pfParticleSelectionPFBRECOTask)


process.pfPhotonIsolationPATSequence = cms.Sequence(process.pfPhotonIsolationPATTask)


process.pfSortByTypePFBRECOSequence = cms.Sequence(process.pfSortByTypePFBRECOTask)


process.photonPFIsolationDepositsPATSequence = cms.Sequence(process.photonPFIsolationDepositsPATTask)


process.photonPFIsolationValuesPATSequence = cms.Sequence(process.photonPFIsolationValuesPATTask)


process.selectedPatCandidates = cms.Sequence(process.selectedPatCandidateSummary, process.selectedPatCandidatesTask)


process.updateHPSPFTaus = cms.Sequence(process.updateHPSPFTausTask)


process.endOfProcess = cms.Sequence(process.MEtoEDMConverter)


process.type0PFMEtCorrection = cms.Sequence(process.type0PFMEtCorrectionTask)


process.type0PFMEtCorrectionPFCandToVertexAssociation = cms.Sequence(process.type0PFMEtCorrectionPFCandToVertexAssociationTask)


process.type0PFMEtCorrectionPFCandToVertexAssociationForValidation = cms.Sequence(process.type0PFMEtCorrectionPFCandToVertexAssociationTask)


process.type0PFMEtCorrectionPFCandToVertexAssociationForValidationMiniAOD = cms.Sequence(process.type0PFMEtCorrectionPFCandToVertexAssociationTask)


process.egmGsfElectronIDSequence = cms.Sequence(process.egmGsfElectronIDTask)


process.egmPhotonIDSequence = cms.Sequence(process.egmPhotonIDTask)


process.PFTau = cms.Sequence(process.PFTauTask)


process.hpsPFTauMVAIsolation2Seq = cms.Sequence(process.hpsPFTauBasicDiscriminatorsTask, process.hpsPFTauBasicDiscriminatorsdR03Task, process.hpsPFTauMVAIsolation2Task)


process.hpsPFTauVertexAndImpactParametersSeq = cms.Sequence(process.hpsPFTauVertexAndImpactParametersTask)


process.mvaIsolation2SeqRun2 = cms.Sequence(process.mvaIsolation2TaskRun2)


process.produceAndDiscriminateHPSPFTaus = cms.Sequence(process.produceAndDiscriminateHPSPFTausTask)


process.produceHPSPFTaus = cms.Sequence(process.produceHPSPFTausTask)


process.recoTauClassicHPSSequence = cms.Sequence(process.recoTauClassicHPSTask)


process.recoTauCommonSequence = cms.Sequence(process.recoTauCommonTask)


process.PFTauMVAIdSequence = cms.Sequence(process.hpsPFTauDiscriminationByMVA6rawElectronRejection+process.hpsPFTauDiscriminationByMVA6ElectronRejection+process.hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw+process.hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLT+process.hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw+process.hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLT)


process.PATTauSequence = cms.Sequence(process.PFTau+process.PFTauMVAIdSequence+process.makePatTaus+process.selectedPatTaus)


process.PATTauSequenceBoosted = cms.Sequence(process.ak4PFJetTracksAssociatorAtVertexBoosted+process.recoTauAK4PFJets08RegionBoosted+process.recoTauPileUpVerticesBoosted+process.pfRecoTauTagInfoProducerBoosted+process.ak4PFJetsLegacyHPSPiZerosBoosted+process.ak4PFJetsRecoTauChargedHadronsBoosted+process.combinatoricRecoTausBoosted+process.hpsSelectionDiscriminatorBoosted+process.hpsPFTauProducerSansRefsBoosted+process.hpsPFTauProducerBoosted+process.hpsPFTauDiscriminationByDecayModeFindingNewDMsBoosted+process.hpsPFTauDiscriminationByDecayModeFindingOldDMsBoosted+process.hpsPFTauDiscriminationByDecayModeFindingBoosted+process.hpsPFTauBasicDiscriminatorsBoosted+process.hpsPFTauBasicDiscriminatorsdR03Boosted+process.hpsPFTauDiscriminationByDeadECALElectronRejectionBoosted+process.hpsPFTauDiscriminationByMuonRejection3Boosted+process.hpsPFTauPrimaryVertexProducerBoosted+process.hpsPFTauSecondaryVertexProducerBoosted+process.hpsPFTauTransverseImpactParametersBoosted+process.hpsPFTauDiscriminationByMVA6rawElectronRejectionBoosted+process.hpsPFTauDiscriminationByMVA6ElectronRejectionBoosted+process.hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTrawBoosted+process.hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTBoosted+process.hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTrawBoosted+process.hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTBoosted+process.pfPileUpIsoPFBRECOBoosted+process.pfNoPileUpIsoPFBRECOBoosted+process.pfAllNeutralHadronsPFBRECOBoosted+process.pfAllChargedHadronsPFBRECOBoosted+process.pfAllPhotonsPFBRECOBoosted+process.pfAllChargedParticlesPFBRECOBoosted+process.pfPileUpAllChargedParticlesPFBRECOBoosted+process.pfAllNeutralHadronsAndPhotonsPFBRECOBoosted+process.tauIsoDepositPFCandidatesBoosted+process.tauIsoDepositPFChargedHadronsBoosted+process.tauIsoDepositPFNeutralHadronsBoosted+process.tauIsoDepositPFGammasBoosted+process.tauMatchBoosted+process.tauGenJetsBoosted+process.tauGenJetsSelectorAllHadronsBoosted+process.tauGenJetMatchBoosted+process.patTausBoosted+process.selectedPatTausBoosted)


process.rerunMvaIsolationSequenceForMini = cms.Sequence(process.deepTau2017v2p1ForMini+process.deepTau2018v2p5ForMini)


process.Flag_BadChargedCandidateFilter = cms.Path(process.BadChargedCandidateFilter)


process.Flag_BadChargedCandidateSummer16Filter = cms.Path(process.BadChargedCandidateSummer16Filter)


process.Flag_BadPFMuonDzFilter = cms.Path(process.BadPFMuonDzFilter)


process.Flag_BadPFMuonFilter = cms.Path(process.BadPFMuonFilter)


process.Flag_BadPFMuonSummer16Filter = cms.Path(process.BadPFMuonSummer16Filter)


process.Flag_CSCTightHalo2015Filter = cms.Path(process.CSCTightHalo2015Filter)


process.Flag_CSCTightHaloFilter = cms.Path(process.CSCTightHaloFilter)


process.Flag_CSCTightHaloTrkMuUnvetoFilter = cms.Path(process.CSCTightHaloTrkMuUnvetoFilter)


process.Flag_EcalDeadCellBoundaryEnergyFilter = cms.Path(process.EcalDeadCellBoundaryEnergyFilter)


process.Flag_EcalDeadCellTriggerPrimitiveFilter = cms.Path(process.EcalDeadCellTriggerPrimitiveFilter)


process.Flag_HBHENoiseFilter = cms.Path(process.HBHENoiseFilterResultProducer+process.HBHENoiseFilter)


process.Flag_HBHENoiseIsoFilter = cms.Path(process.HBHENoiseFilterResultProducer+process.HBHENoiseIsoFilter)


process.Flag_HcalStripHaloFilter = cms.Path(process.HcalStripHaloFilter)


process.Flag_METFilters = cms.Path(process.metFilters)


process.Flag_chargedHadronTrackResolutionFilter = cms.Path(process.chargedHadronTrackResolutionFilter)


process.Flag_ecalBadCalibFilter = cms.Path(process.ecalBadCalibFilter)


process.Flag_ecalLaserCorrFilter = cms.Path(process.ecalLaserCorrFilter)


process.Flag_eeBadScFilter = cms.Path(process.eeBadScFilter)


process.Flag_globalSuperTightHalo2016Filter = cms.Path(process.globalSuperTightHalo2016Filter)


process.Flag_globalTightHalo2016Filter = cms.Path(process.globalTightHalo2016Filter)


process.Flag_goodVertices = cms.Path(process.primaryVertexFilter)


process.Flag_hcalLaserEventFilter = cms.Path(process.hcalLaserEventFilter)


process.Flag_hfNoisyHitsFilter = cms.Path(process.hfNoisyHitsFilter)


process.Flag_muonBadTrackFilter = cms.Path(process.muonBadTrackFilter)


process.Flag_trackingFailureFilter = cms.Path(process.goodVertices+process.trackingFailureFilter)


process.Flag_trkPOGFilters = cms.Path(process.trkPOGFilters)


process.Flag_trkPOG_logErrorTooManyClusters = cms.Path(~process.logErrorTooManyClusters)


process.Flag_trkPOG_manystripclus53X = cms.Path(~process.manystripclus53X)


process.Flag_trkPOG_toomanystripclus53X = cms.Path(~process.toomanystripclus53X)


process.endjob_step = cms.EndPath(process.endOfProcess)


process.MINIAODSIMoutput_step = cms.EndPath(process.MINIAODSIMoutput)


process.simAPVsaturation = cms.EDAlias(
    mix = cms.VPSet(cms.PSet(
        type = cms.string('bool')
    ))
)

process.simCastorDigis = cms.EDAlias(
)

process.simEcalUnsuppressedDigis = cms.EDAlias(
    mix = cms.VPSet(
        cms.PSet(
            type = cms.string('EBDigiCollection')
        ),
        cms.PSet(
            type = cms.string('EEDigiCollection')
        ),
        cms.PSet(
            type = cms.string('ESDigiCollection')
        )
    )
)

process.simHFNoseUnsuppressedDigis = cms.EDAlias(
)

process.simHGCalUnsuppressedDigis = cms.EDAlias(
)

process.simHcalUnsuppressedDigis = cms.EDAlias(
    mix = cms.VPSet(
        cms.PSet(
            type = cms.string('HBHEDataFramesSorted')
        ),
        cms.PSet(
            type = cms.string('HFDataFramesSorted')
        ),
        cms.PSet(
            type = cms.string('HODataFramesSorted')
        ),
        cms.PSet(
            type = cms.string('ZDCDataFramesSorted')
        ),
        cms.PSet(
            type = cms.string('QIE10DataFrameHcalDataFrameContainer')
        ),
        cms.PSet(
            type = cms.string('QIE11DataFrameHcalDataFrameContainer')
        )
    )
)

process.simSiPixelDigis = cms.EDAlias(
    mix = cms.VPSet(
        cms.PSet(
            type = cms.string('PixelDigiedmDetSetVector')
        ),
        cms.PSet(
            type = cms.string('PixelDigiSimLinkedmDetSetVector')
        ),
        cms.PSet(
            type = cms.string('PixelFEDChanneledmNewDetSetVector')
        )
    )
)

process.simSiStripDigis = cms.EDAlias(
    mix = cms.VPSet(
        cms.PSet(
            type = cms.string('SiStripDigiedmDetSetVector')
        ),
        cms.PSet(
            type = cms.string('SiStripRawDigiedmDetSetVector')
        ),
        cms.PSet(
            type = cms.string('StripDigiSimLinkedmDetSetVector')
        )
    )
)

process.schedule = cms.Schedule(*[ process.Flag_HBHENoiseFilter, process.Flag_HBHENoiseIsoFilter, process.Flag_CSCTightHaloFilter, process.Flag_CSCTightHaloTrkMuUnvetoFilter, process.Flag_CSCTightHalo2015Filter, process.Flag_globalTightHalo2016Filter, process.Flag_globalSuperTightHalo2016Filter, process.Flag_HcalStripHaloFilter, process.Flag_hcalLaserEventFilter, process.Flag_EcalDeadCellTriggerPrimitiveFilter, process.Flag_EcalDeadCellBoundaryEnergyFilter, process.Flag_ecalBadCalibFilter, process.Flag_goodVertices, process.Flag_eeBadScFilter, process.Flag_ecalLaserCorrFilter, process.Flag_trkPOGFilters, process.Flag_chargedHadronTrackResolutionFilter, process.Flag_muonBadTrackFilter, process.Flag_BadChargedCandidateFilter, process.Flag_BadPFMuonFilter, process.Flag_BadPFMuonDzFilter, process.Flag_hfNoisyHitsFilter, process.Flag_BadChargedCandidateSummer16Filter, process.Flag_BadPFMuonSummer16Filter, process.Flag_trkPOG_manystripclus53X, process.Flag_trkPOG_toomanystripclus53X, process.Flag_trkPOG_logErrorTooManyClusters, process.Flag_METFilters, process.endjob_step, process.MINIAODSIMoutput_step ], tasks=[process.patAlgosToolsTask, process.patTask])
